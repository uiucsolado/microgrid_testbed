version = 4.2

//
// Saved by sw version: 2020.2
// Save timestamp: 12-Oct-2020 @ 11:32:00 AM
//

model "VF_testModBus" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = auto
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
    }

    component Subsystem Root {
        component src_scada_input freq_error2 {
            def_value = "1.2"
            unit = ""
        }
        [
            position = 10640, 8560
            scale = -1, 1
        ]

        component Subsystem Modbus2 {
            layout = dynamic
            component src_constant Constant3 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7672, 8424
            ]

            component src_constant Constant2 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8680, 8128
            ]

            component src_constant C_u13 {
                execution_rate = "Ts"
                value = "50"
            }
            [
                position = 7920, 7872
            ]

            component gen_c_function "C function3" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7888, 8376
                hide_name = True
                size = 80, 48
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8400, 7920
            ]

            component src_constant C_u12 {
                execution_rate = "Ts"
            }
            [
                position = 7968, 7800
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7664, 8208
            ]

            component "core/ModBus Device" "ModBus Device2 (config2)" {
                configuration = "config2"
                execution_rate = "Ts"
            }
            [
                position = 8192, 7992
                size = 184, 184
            ]

            component gen_probe Probe1 {
            }
            [
                position = 7936, 8080
            ]

            component gen_product Product4 {
            }
            [
                position = 8800, 8344
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "4"
            }
            [
                position = 8328, 8064
            ]

            component gen_product Product3 {
            }
            [
                position = 7776, 8376
            ]

            component gen_c_function "C function1" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7880, 8160
                hide_name = True
                size = 80, 48
            ]

            component gen_c_function "C function4" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8480, 8288
                hide_name = True
                size = 48, 48
            ]

            component src_constant C_u11 {
                execution_rate = "Ts"
            }
            [
                position = 8008, 7720
            ]

            component gen_probe Voltage_diff {
            }
            [
                position = 7896, 8288
            ]

            component gen_probe Probe3 {
            }
            [
                position = 8576, 8392
            ]

            component src_constant Constant4 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8688, 8368
            ]

            component gen_product Product2 {
            }
            [
                position = 8800, 8104
            ]

            component gen_probe Probe2 {
            }
            [
                position = 8576, 8152
            ]

            component gen_bus_join "Bus Join2" {
                inputs = "8"
            }
            [
                position = 8032, 8400
            ]

            component gen_product Product1 {
            }
            [
                position = 7768, 8160
            ]

            component gen_c_function "C function2" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8472, 8048
                hide_name = True
                size = 48, 48
            ]

            component gen_product Product5 {
            }
            [
                position = 7776, 8592
            ]

            component src_constant Constant5 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7672, 8640
            ]

            component gen_c_function "C function5" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7888, 8592
                hide_name = True
                size = 80, 48
            ]

            component gen_probe flow {
            }
            [
                position = 7896, 8504
            ]

            component gen_product Product6 {
            }
            [
                position = 7784, 8776
            ]

            component src_constant Constant6 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7680, 8824
            ]

            component gen_c_function "C function6" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7896, 8776
                hide_name = True
                size = 80, 48
            ]

            component gen_probe Q_level {
            }
            [
                position = 7904, 8688
            ]

            port U1-P1 {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7664, 8112
                rotation = down
                scale = -1, 1
            ]

            port u_P {
                position = top:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8952, 8104
            ]

            port u_Q {
                position = top:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8960, 8344
            ]

            port Vref-V {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7672, 8328
                rotation = down
                scale = -1, 1
            ]

            port "flow flag" {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7672, 8544
                rotation = down
                scale = -1, 1
            ]

            port "Q level" {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7680, 8728
                rotation = down
                scale = -1, 1
            ]

            junction Junction5 sp
            [
                position = 8520, 8048
            ]

            junction Junction6 sp
            [
                position = 7832, 8376
            ]

            junction Junction7 sp
            [
                position = 8528, 8288
            ]

            junction Junction4 sp
            [
                position = 7824, 8160
            ]

            junction Junction10 sp
            [
                position = 7832, 8592
            ]

            junction Junction11 sp
            [
                position = 7840, 8776
            ]

            connect Constant2.out Product2.in1 as Connection100
            connect "C function1.out" "Bus Join2.in" as Connection145
            connect "C function3.out" "Bus Join2.in2" as Connection147
            connect Voltage_diff.in Junction6 as Connection143
            connect "C function1.in" Junction4 as Connection114
            connect Constant3.out Product3.in1 as Connection141
            connect "C function1.sign" "Bus Join2.in1" as Connection146
            connect Constant1.out Product1.in1 as Connection73
            connect "C function4.out" Junction7 as Connection150
            connect "C function3.sign" "Bus Join2.in3" as Connection148
            connect "ModBus Device2 (config2).coil_in" C_u11.out as Connection139
            connect Junction4 Product1.out as Connection115
            connect "ModBus Device2 (config2).holding_out" "Bus Split1.in" as Connection131
            connect U1-P1 Product1.in as Connection83
            connect Probe1.in Junction4 as Connection116
            connect "C function2.out" Junction5 as Connection135
            connect C_u13.out "ModBus Device2 (config2).holding_in" as Connection120
            [
                breakpoints = 7952, 8016; 8080, 8016
            ]
            connect C_u12.out "ModBus Device2 (config2).discrete_in" as Connection121
            [
                breakpoints = 8000, 7968; 8080, 7968
            ]
            connect "Bus Join2.out" "ModBus Device2 (config2).reg_in" as Connection149
            [
                breakpoints = 8072, 8264; 8072, 8064
            ]
            connect Junction6 Product3.out as Connection144
            connect Probe2.in Junction5 as Connection137
            connect Junction7 Product4.in as Connection152
            connect Product4.out u_Q as Connection154
            connect Junction5 Product2.in as Connection136
            connect Constant4.out Product4.in1 as Connection151
            connect "C function3.in" Junction6 as Connection142
            connect Product2.out u_P as Connection96
            connect Probe3.in Junction7 as Connection153
            connect Vref-V Product3.in as Connection140
            connect Termination1.in "ModBus Device2 (config2).coil_out" as Connection127
            connect "C function2.sign" "Bus Split1.out" as Connection132
            connect "Bus Split1.out3" "C function4.in" as Connection156
            [
                breakpoints = 8368, 8296; 8432, 8296; 8432, 8296
            ]
            connect "Bus Split1.out2" "C function4.sign" as Connection155
            [
                breakpoints = 8368, 8072; 8432, 8072
            ]
            connect "Bus Split1.out1" "C function2.in" as Connection133
            connect Junction10 Product5.out as Connection165
            connect "C function5.in" Junction10 as Connection166
            connect flow.in Junction10 as Connection167
            connect "flow flag" Product5.in as Connection168
            connect Constant5.out Product5.in1 as Connection169
            connect Junction11 Product6.out as Connection172
            connect "C function6.in" Junction11 as Connection173
            connect Q_level.in Junction11 as Connection174
            connect "Q level" Product6.in as Connection175
            connect Constant6.out Product6.in1 as Connection176
            connect "C function5.out" "Bus Join2.in4" as Connection177
            [
                breakpoints = 7944, 8584; 7944, 8408
            ]
            connect "C function5.sign" "Bus Join2.in5" as Connection178
            [
                breakpoints = 7952, 8600; 7952, 8424
            ]
            connect "C function6.out" "Bus Join2.in6" as Connection179
            [
                breakpoints = 7952, 8768; 7952, 8440
            ]
            connect "C function6.sign" "Bus Join2.in7" as Connection180
        }
        [
            position = 10368, 8632
            rotation = left
            scale = 1, -1
            size = 120, 112
        ]

        component src_scada_input volt_error2 {
            unit = ""
        }
        [
            position = 10640, 8616
            scale = -1, 1
        ]

        component gen_probe u_Q2 {
        }
        [
            position = 10192, 8592
            scale = -1, 1
        ]

        component gen_probe u_P2 {
        }
        [
            position = 10192, 8672
            scale = -1, 1
        ]

        component src_scada_input freq_error1 {
            def_value = "1.1"
            unit = ""
        }
        [
            position = 10640, 8360
            scale = -1, 1
        ]

        component src_scada_input volt_error1 {
            unit = ""
        }
        [
            position = 10640, 8296
            scale = -1, 1
        ]

        component Subsystem Modbus1 {
            layout = dynamic
            component gen_terminator Termination1 {
            }
            [
                position = 8400, 7920
            ]

            component gen_product Product3 {
            }
            [
                position = 7776, 8376
            ]

            component src_constant C_u12 {
                execution_rate = "Ts"
            }
            [
                position = 7968, 7800
            ]

            component src_constant Constant4 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8688, 8368
            ]

            component gen_probe Voltage_diff {
            }
            [
                position = 7896, 8288
            ]

            component gen_product Product1 {
            }
            [
                position = 7768, 8160
            ]

            component src_constant C_u13 {
                execution_rate = "Ts"
                value = "50"
            }
            [
                position = 7920, 7872
            ]

            component gen_bus_join "Bus Join2" {
                inputs = "8"
            }
            [
                position = 8040, 8392
            ]

            component gen_c_function "C function2" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8472, 8048
                hide_name = True
                size = 48, 48
            ]

            component gen_product Product2 {
            }
            [
                position = 8800, 8104
            ]

            component src_constant C_u11 {
                execution_rate = "Ts"
            }
            [
                position = 8008, 7720
            ]

            component src_constant Constant2 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8680, 8128
            ]

            component gen_c_function "C function3" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7888, 8376
                hide_name = True
                size = 80, 48
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "4"
            }
            [
                position = 8384, 8064
            ]

            component src_constant Constant3 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7672, 8424
            ]

            component gen_probe Probe2 {
            }
            [
                position = 8576, 8152
            ]

            component gen_c_function "C function4" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8480, 8288
                hide_name = True
                size = 48, 48
            ]

            component gen_product Product4 {
            }
            [
                position = 8800, 8344
            ]

            component gen_probe Probe3 {
            }
            [
                position = 8576, 8392
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7664, 8208
            ]

            component gen_c_function "C function1" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7880, 8160
                hide_name = True
                size = 80, 48
            ]

            component "core/ModBus Device" "ModBus Device1 (config1)" {
                execution_rate = "Ts"
            }
            [
                position = 8192, 7992
                size = 184, 184
            ]

            component gen_probe Probe1 {
            }
            [
                position = 7936, 8080
            ]

            component gen_product Product5 {
            }
            [
                position = 7760, 8600
            ]

            component src_constant Constant5 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7656, 8648
            ]

            component gen_c_function "C function5" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7872, 8600
                hide_name = True
                size = 80, 48
            ]

            component gen_probe flow {
            }
            [
                position = 7880, 8512
            ]

            component gen_product Product6 {
            }
            [
                position = 7768, 8784
            ]

            component src_constant Constant6 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7664, 8832
            ]

            component gen_c_function "C function6" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7880, 8784
                hide_name = True
                size = 80, 48
            ]

            component gen_probe Q_level {
            }
            [
                position = 7888, 8696
            ]

            port u_P {
                position = top:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8952, 8104
            ]

            port Vref-V {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7672, 8328
                rotation = down
                scale = -1, 1
            ]

            port u_Q {
                position = top:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8960, 8344
            ]

            port U1-P1 {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7664, 8112
                rotation = down
                scale = -1, 1
            ]

            port "flow flag" {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7656, 8552
                rotation = down
                scale = -1, 1
            ]

            port "Q level" {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7664, 8736
                rotation = down
                scale = -1, 1
            ]

            junction Junction6 sp
            [
                position = 7832, 8376
            ]

            junction Junction4 sp
            [
                position = 7824, 8160
            ]

            junction Junction8 sp
            [
                position = 8440, 8056
            ]

            junction Junction9 sp
            [
                position = 8432, 8296
            ]

            junction Junction10 sp
            [
                position = 7816, 8600
            ]

            junction Junction11 sp
            [
                position = 7824, 8784
            ]

            connect Constant2.out Product2.in1 as Connection100
            connect Junction6 Product3.out as Connection144
            connect "C function3.out" "Bus Join2.in2" as Connection147
            connect Junction4 Product1.out as Connection115
            connect Constant3.out Product3.in1 as Connection141
            connect "C function1.in" Junction4 as Connection114
            connect "ModBus Device1 (config1).holding_out" "Bus Split1.in" as Connection131
            connect "C function3.sign" "Bus Join2.in3" as Connection148
            connect "C function1.sign" "Bus Join2.in1" as Connection146
            connect "ModBus Device1 (config1).coil_in" C_u11.out as Connection139
            connect "C function3.in" Junction6 as Connection142
            connect Vref-V Product3.in as Connection140
            connect Probe1.in Junction4 as Connection116
            connect "C function1.out" "Bus Join2.in" as Connection145
            connect C_u12.out "ModBus Device1 (config1).discrete_in" as Connection121
            [
                breakpoints = 8000, 7968; 8080, 7968
            ]
            connect "Bus Join2.out" "ModBus Device1 (config1).reg_in" as Connection149
            connect U1-P1 Product1.in as Connection83
            connect Termination1.in "ModBus Device1 (config1).coil_out" as Connection127
            connect Constant1.out Product1.in1 as Connection73
            connect Product4.out u_Q as Connection154
            connect Product2.out u_P as Connection96
            connect Voltage_diff.in Junction6 as Connection143
            connect C_u13.out "ModBus Device1 (config1).holding_in" as Connection120
            [
                breakpoints = 7952, 8016; 8080, 8016
            ]
            connect Constant4.out Product4.in1 as Connection151
            connect "Bus Split1.out2" "C function4.sign" as Connection155
            connect "C function2.sign" "Bus Split1.out" as Connection132
            connect "C function2.out" Product2.in as Connection157
            [
                breakpoints = 8520, 8048
            ]
            connect "Bus Split1.out1" Junction8 as Connection158
            connect Junction8 "C function2.in" as Connection159
            connect Probe2.in Junction8 as Connection160
            connect "C function4.out" Product4.in as Connection161
            [
                breakpoints = 8528, 8288
            ]
            connect "Bus Split1.out3" Junction9 as Connection162
            [
                breakpoints = 8432, 8088
            ]
            connect Junction9 "C function4.in" as Connection163
            [
                breakpoints = 8432, 8296
            ]
            connect Probe3.in Junction9 as Connection164
            connect Junction10 Product5.out as Connection165
            connect "C function5.in" Junction10 as Connection166
            connect flow.in Junction10 as Connection167
            connect "flow flag" Product5.in as Connection168
            connect Constant5.out Product5.in1 as Connection169
            connect "Bus Join2.in4" "C function5.out" as Connection170
            connect "Bus Join2.in5" "C function5.sign" as Connection171
            connect Junction11 Product6.out as Connection172
            connect "C function6.in" Junction11 as Connection173
            connect Q_level.in Junction11 as Connection174
            connect "Q level" Product6.in as Connection175
            connect Constant6.out Product6.in1 as Connection176
            connect "C function6.out" "Bus Join2.in6" as Connection177
            connect "C function6.sign" "Bus Join2.in7" as Connection178
        }
        [
            position = 10368, 8392
            rotation = left
            scale = 1, -1
            size = 120, 112
        ]

        component gen_probe u_Q1 {
        }
        [
            position = 10184, 8352
            scale = -1, 1
        ]

        component gen_probe u_P1 {
        }
        [
            position = 10184, 8432
            scale = -1, 1
        ]

        component Subsystem Modbus3 {
            layout = dynamic
            component gen_probe Probe2 {
            }
            [
                position = 8576, 8152
            ]

            component "core/ModBus Device" "ModBus Device3 (config3)" {
                configuration = "config3"
                execution_rate = "Ts"
            }
            [
                position = 8192, 7992
                size = 184, 184
            ]

            component gen_probe Voltage_diff {
            }
            [
                position = 7896, 8288
            ]

            component gen_probe Probe1 {
            }
            [
                position = 7936, 8080
            ]

            component src_constant Constant2 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8680, 8128
            ]

            component src_constant Constant3 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7672, 8424
            ]

            component gen_product Product3 {
            }
            [
                position = 7776, 8376
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "4"
            }
            [
                position = 8328, 8064
            ]

            component gen_probe Probe3 {
            }
            [
                position = 8576, 8392
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8400, 7920
            ]

            component src_constant C_u13 {
                execution_rate = "Ts"
                value = "50"
            }
            [
                position = 7920, 7872
            ]

            component gen_product Product4 {
            }
            [
                position = 8800, 8344
            ]

            component gen_c_function "C function3" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7888, 8376
                hide_name = True
                size = 80, 48
            ]

            component gen_bus_join "Bus Join2" {
                inputs = "8"
            }
            [
                position = 8048, 8408
            ]

            component gen_c_function "C function4" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8480, 8288
                hide_name = True
                size = 48, 48
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7664, 8208
            ]

            component src_constant C_u12 {
                execution_rate = "Ts"
            }
            [
                position = 7968, 7800
            ]

            component gen_c_function "C function2" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8472, 8048
                hide_name = True
                size = 48, 48
            ]

            component gen_product Product1 {
            }
            [
                position = 7768, 8160
            ]

            component gen_c_function "C function1" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7880, 8160
                hide_name = True
                size = 80, 48
            ]

            component gen_product Product2 {
            }
            [
                position = 8800, 8104
            ]

            component src_constant Constant4 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8688, 8368
            ]

            component src_constant C_u11 {
                execution_rate = "Ts"
            }
            [
                position = 8008, 7720
            ]

            component gen_product Product5 {
            }
            [
                position = 7768, 8552
            ]

            component src_constant Constant5 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7664, 8600
            ]

            component gen_c_function "C function5" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7880, 8552
                hide_name = True
                size = 80, 48
            ]

            component gen_probe flow {
            }
            [
                position = 7888, 8464
            ]

            component gen_product Product6 {
            }
            [
                position = 7776, 8736
            ]

            component src_constant Constant6 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7672, 8784
            ]

            component gen_c_function "C function6" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7888, 8736
                hide_name = True
                size = 80, 48
            ]

            component gen_probe Q_level {
            }
            [
                position = 7896, 8648
            ]

            port u_Q {
                position = top:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8960, 8344
            ]

            port Vref-V {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7672, 8328
                rotation = down
                scale = -1, 1
            ]

            port U1-P1 {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7664, 8112
                rotation = down
                scale = -1, 1
            ]

            port u_P {
                position = top:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8952, 8104
            ]

            port "flow flag" {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7664, 8504
                rotation = down
                scale = -1, 1
            ]

            port "Q level" {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7672, 8688
                rotation = down
                scale = -1, 1
            ]

            junction Junction4 sp
            [
                position = 7824, 8160
            ]

            junction Junction6 sp
            [
                position = 7832, 8376
            ]

            junction Junction7 sp
            [
                position = 8528, 8288
            ]

            junction Junction5 sp
            [
                position = 8520, 8048
            ]

            junction Junction10 sp
            [
                position = 7824, 8552
            ]

            junction Junction11 sp
            [
                position = 7832, 8736
            ]

            connect Junction5 Product2.in as Connection136
            connect "C function3.in" Junction6 as Connection142
            connect Termination1.in "ModBus Device3 (config3).coil_out" as Connection127
            connect "C function1.sign" "Bus Join2.in1" as Connection146
            connect Product2.out u_P as Connection96
            connect C_u13.out "ModBus Device3 (config3).holding_in" as Connection120
            [
                breakpoints = 7952, 8016; 8080, 8016
            ]
            connect Product4.out u_Q as Connection154
            connect Vref-V Product3.in as Connection140
            connect C_u12.out "ModBus Device3 (config3).discrete_in" as Connection121
            [
                breakpoints = 8000, 7968; 8080, 7968
            ]
            connect Probe1.in Junction4 as Connection116
            connect Probe2.in Junction5 as Connection137
            connect "C function3.out" "Bus Join2.in2" as Connection147
            connect Constant1.out Product1.in1 as Connection73
            connect "ModBus Device3 (config3).holding_out" "Bus Split1.in" as Connection131
            connect Constant2.out Product2.in1 as Connection100
            connect "C function3.sign" "Bus Join2.in3" as Connection148
            connect Constant3.out Product3.in1 as Connection141
            connect Junction7 Product4.in as Connection152
            connect "Bus Split1.out2" "C function4.sign" as Connection155
            [
                breakpoints = 8368, 8072; 8432, 8072
            ]
            connect "C function4.out" Junction7 as Connection150
            connect Voltage_diff.in Junction6 as Connection143
            connect "C function2.sign" "Bus Split1.out" as Connection132
            connect Probe3.in Junction7 as Connection153
            connect "Bus Join2.out" "ModBus Device3 (config3).reg_in" as Connection149
            [
                breakpoints = 8072, 8264; 8072, 8064
            ]
            connect "C function1.in" Junction4 as Connection114
            connect "C function1.out" "Bus Join2.in" as Connection145
            connect "Bus Split1.out3" "C function4.in" as Connection156
            [
                breakpoints = 8368, 8296; 8432, 8296; 8432, 8296
            ]
            connect U1-P1 Product1.in as Connection83
            connect Constant4.out Product4.in1 as Connection151
            connect "C function2.out" Junction5 as Connection135
            connect "ModBus Device3 (config3).coil_in" C_u11.out as Connection139
            connect Junction4 Product1.out as Connection115
            connect Junction6 Product3.out as Connection144
            connect "Bus Split1.out1" "C function2.in" as Connection133
            connect Junction10 Product5.out as Connection165
            connect "C function5.in" Junction10 as Connection166
            connect flow.in Junction10 as Connection167
            connect "flow flag" Product5.in as Connection168
            connect Constant5.out Product5.in1 as Connection169
            connect Junction11 Product6.out as Connection172
            connect "C function6.in" Junction11 as Connection173
            connect Q_level.in Junction11 as Connection174
            connect "Q level" Product6.in as Connection175
            connect Constant6.out Product6.in1 as Connection176
            connect "C function5.out" "Bus Join2.in4" as Connection177
            [
                breakpoints = 7952, 8544; 7952, 8416
            ]
            connect "Bus Join2.in5" "C function5.sign" as Connection178
            [
                breakpoints = 7960, 8432; 7960, 8560
            ]
            connect "Bus Join2.in6" "C function6.out" as Connection179
            [
                breakpoints = 7976, 8448; 7976, 8728
            ]
            connect "Bus Join2.in7" "C function6.sign" as Connection180
            [
                breakpoints = 8000, 8464; 8000, 8744
            ]
        }
        [
            position = 10368, 8840
            rotation = left
            scale = 1, -1
            size = 120, 112
        ]

        component src_scada_input freq_error3 {
            def_value = "1.3"
            unit = ""
        }
        [
            position = 10544, 8752
            scale = -1, 1
        ]

        component gen_probe u_P3 {
        }
        [
            position = 10192, 8880
            scale = -1, 1
        ]

        component src_scada_input volt_error3 {
            unit = ""
        }
        [
            position = 10552, 8800
            scale = -1, 1
        ]

        component gen_probe u_Q3 {
        }
        [
            position = 10192, 8800
            scale = -1, 1
        ]

        component src_scada_input q_level1 {
            def_value = "1.1"
            unit = ""
        }
        [
            position = 10640, 8488
            scale = -1, 1
        ]

        component src_scada_input flow_flag1 {
            unit = ""
        }
        [
            position = 10640, 8424
            scale = -1, 1
        ]

        component src_scada_input q_level2 {
            def_value = "1.1"
            unit = ""
        }
        [
            position = 10640, 8704
            scale = -1, 1
        ]

        component src_scada_input flow_flag2 {
            unit = ""
        }
        [
            position = 10640, 8648
            scale = -1, 1
        ]

        component src_scada_input q_level3 {
            def_value = "1.1"
            unit = ""
        }
        [
            position = 10552, 8920
            scale = -1, 1
        ]

        component src_scada_input flow_flag3 {
            unit = ""
        }
        [
            position = 10552, 8856
            scale = -1, 1
        ]

        connect volt_error2.out Modbus2.Vref-V as Connection1
        connect freq_error2.out Modbus2.U1-P1 as Connection2
        [
            breakpoints = 10440, 8560; 10440, 8592
        ]
        connect u_Q2.in Modbus2.u_Q as Connection3
        connect u_P2.in Modbus2.u_P as Connection4
        connect u_P1.in Modbus1.u_P as Connection5
        connect u_Q1.in Modbus1.u_Q as Connection6
        connect volt_error1.out Modbus1.Vref-V as Connection8
        connect Modbus1.U1-P1 freq_error1.out as Connection9
        [
            breakpoints = 10440, 8376; 10608, 8376
        ]
        connect u_Q3.in Modbus3.u_Q as Connection12
        connect u_P3.in Modbus3.u_P as Connection13
        connect Modbus3.U1-P1 freq_error3.out as Connection14
        connect Modbus3.Vref-V volt_error3.out as Connection15
        connect q_level1.out "Modbus1.Q level" as Connection17
        connect flow_flag2.out "Modbus2.flow flag" as Connection18
        connect q_level2.out "Modbus2.Q level" as Connection19
        connect flow_flag3.out "Modbus3.flow flag" as Connection20
        connect q_level3.out "Modbus3.Q level" as Connection21
        connect flow_flag1.out "Modbus1.flow flag" as Connection22
        [
            breakpoints = 10608, 8408; 10440, 8408
        ]
    }

    default {
        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/ModBus Device" {
            hil_id = "0"
            configuration = "config1"
            preview = "Configuration preview"
            network_settings_src = "Configuration dictionary"
            ip_addr = "192.168.0.210"
            netmask = "255.255.255.0"
            port = "502"
            gateway = "192.168.0.210"
            gateway_enable = "False"
            ip_address_port = "False"
            request_counter_port = "None"
            defines = ""
            modbus_sunspec = "False"
            logging = "False"
            execution_rate = "100e-6"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        Ts = 100e-6
        
        #scaling constants to handle floating point values
        scale_const=1e4
        scale_back_const=1e-4
        
        #Modbus configuration
        config1 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.69',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 17,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1,2,3',
                                            'input_register_adresses': '0,1,2,3,4,5,6,7'
        }
        
        config2 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.70',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 18,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1,2,3',
                                            'input_register_adresses': '0,1,2,3,4,5,6,7'
        }
        
        config3 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.71',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 19,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1,2,3',
                                            'input_register_adresses': '0,1,2,3,4,5,6,7'
        }
    ENDCODE
}
