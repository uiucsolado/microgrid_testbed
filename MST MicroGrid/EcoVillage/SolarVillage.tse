version = 4.2

//
// Saved by sw version: 2020.1 SP2
// Save timestamp: 05-Sep-2020 @ 10:37:06 AM
//

model "SolarVillage" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 2
        simulation_method = exact
        simulation_time_step = 4e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 5e-05
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
    }

    component Subsystem Root {
        component src_ground gnd2 {
        }
        [
            position = 5840, 7912
            rotation = down
            hide_name = True
            scale = 1, -1
        ]

        component Subsystem Microgrid {
            layout = dynamic
            component Subsystem PV {
                layout = dynamic
                component gen_probe SI {
                }
                [
                    position = 7320, 8144
                    scale = -1, 1
                ]

                component Subsystem "Solar irradiance" {
                    layout = dynamic
                    component gen_c_function "C function2" {
                        global_variables = "real k;"
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "GHI inherit;ETR inherit"
                        in_terminal_labels = "[(\'GHI\', True), (\'ETR\', True)]"
                        in_terminal_properties = "real GHI;real ETR;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "f inherit;Gdh inherit"
                        out_terminal_labels = "[(\'f\', True), (\'Gdh\', True)]"
                        out_terminal_properties = "real f;real Gdh;"
                        output_fnc = "/*Begin code section*/
if (k<=0.21) f = 0.995-0.081*k;
else if (k>0.76) f = 0.18;
else f = 0.724 + 2.738*k - 8.321*k*k + 4.967*k*k*k;
Gdh = f*GHI;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
k = GHI/ETR;
/*End code section*/"
                    }
                    [
                        position = 7480, 7976
                        hide_name = True
                        size = 56, 72
                    ]

                    component src_constant Constant14 {
                        execution_rate = "Ts_pv"
                        value = "rho"
                    }
                    [
                        position = 7024, 8128
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function1" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 7904, 7960
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function2" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 7904, 8016
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                        signs = "+-"
                    }
                    [
                        position = 7792, 7888
                        hide_name = True
                    ]

                    component gen_product Product2 {
                        signs = "**/"
                    }
                    [
                        position = 8040, 7920
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                        signs = "+-"
                    }
                    [
                        position = 7480, 8144
                        hide_name = True
                    ]

                    component gen_product Product3 {
                        signs = "***"
                    }
                    [
                        position = 7632, 8160
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function3" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 7344, 8152
                        hide_name = True
                    ]

                    component src_constant Constant15 {
                        execution_rate = "Ts_pv"
                    }
                    [
                        position = 7336, 8096
                        hide_name = True
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 7984, 8192
                        hide_name = True
                    ]

                    component gen_sum Sum5 {
                        signs = "+-"
                    }
                    [
                        position = 8088, 8168
                        hide_name = True
                    ]

                    component src_constant Constant17 {
                        execution_rate = "Ts_pv"
                    }
                    [
                        position = 7944, 8120
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function4" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 7408, 8400
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "0.5"
                    }
                    [
                        position = 7320, 8400
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function5" {
                    }
                    [
                        position = 7408, 8464
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "0.5"
                    }
                    [
                        position = 7320, 8464
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function6" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 7408, 8528
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function7" {
                    }
                    [
                        position = 7408, 8584
                        hide_name = True
                    ]

                    component gen_c_function "C function3" {
                        in_terminal_dimensions = "1;1;4"
                        in_terminal_dimensions_str = "Gdh 1;fk 1;x 4"
                        in_terminal_labels = "[(\'Gdh\', True), (\'fk\', True), (\'x\', True)]"
                        in_terminal_properties = "real Gdh;real fk;real x;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "1"
                        out_terminal_dimensions_str = "Gd 1"
                        out_terminal_labels = "[(\'Gd\', True)]"
                        out_terminal_properties = "real Gd;"
                        output_fnc = "/*Begin code section*/
Gd = Gdh*0.5*(1+x[0])*(1+fk*x[1]*x[1]*x[1])*(1+fk*x[2]*x[2]*x[3]*x[3]*x[3]);
/*End code section*/"
                    }
                    [
                        position = 7736, 8432
                        hide_name = True
                        size = 104, 128
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "4"
                    }
                    [
                        position = 7544, 8480
                    ]

                    component gen_sum Sum6 {
                        signs = "+++"
                    }
                    [
                        position = 8016, 8416
                        hide_name = True
                    ]

                    component gen_gain Gain3 {
                        gain = "0.5"
                    }
                    [
                        position = 7712, 8160
                        hide_name = True
                    ]

                    component src_scada_input ang_t {
                        def_value = "30"
                        execution_rate = "Ts_pv"
                        unit = "deg"
                    }
                    [
                        position = 6920, 8080
                    ]

                    component gen_gain Gain4 {
                        gain = "np.pi/180"
                    }
                    [
                        position = 7000, 8080
                        hide_name = True
                    ]

                    component gen_gain Gain5 {
                        gain = "np.pi/180"
                    }
                    [
                        position = 7008, 8448
                        hide_name = True
                    ]

                    component gen_sum Sum7 {
                        signs = "+-"
                    }
                    [
                        position = 7024, 8528
                        hide_name = True
                    ]

                    component "core/Rate Transition" "Rate Transition3" {
                        execution_rate = "Ts_pv"
                    }
                    [
                        position = 7080, 8448
                        hide_name = True
                        size = 32, 32
                    ]

                    component gen_c_function "C function4" {
                        execution_rate = "Ts_pv"
                        global_variables = "real k;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "clk inherit"
                        in_terminal_labels = "[(\'clk\', True)]"
                        in_terminal_properties = "real clk;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit"
                        out_terminal_dimensions_str = "GHI inherit;ETR inherit;ang_z inherit"
                        out_terminal_labels = "[(\'GHI\', True), (\'ETR\', True), (\'ang_z\', True)]"
                        out_terminal_properties = "real GHI;real ETR;real ang_z;"
                        output_fnc = "/*Begin code section*/
if (clk<1800){
    GHI = 300;
    ETR = 330;
    ang_z = 2.5;
}
else if (clk<3600){
    GHI = 330;
    ETR = 393;
    ang_z = 2.4;
}
else if (clk<5400){
    GHI = 399;
    ETR = 430;
    ang_z = 2.4;
}
else {
    GHI = 510;
    ETR = 510;
    ang_z = 2.4;
}
/*End code section*/"
                    }
                    [
                        position = 6896, 8368
                        hide_name = True
                        size = 56, 72
                    ]

                    component src_clock Clock1 {
                        execution_rate = "1"
                    }
                    [
                        position = 6816, 8368
                    ]

                    port SI {
                        position = auto:auto
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8176, 8416
                    ]

                    tag From66 {
                        value = "GHI"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 7960
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From67 {
                        value = "ETR"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 7992
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto35 {
                        value = "f"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7608, 7960
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto36 {
                        value = "Gdh"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7608, 7992
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From68 {
                        value = "ang"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 7960
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From69 {
                        value = "ang_z"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8016
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto37 {
                        value = "GHI"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7032, 8336
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto38 {
                        value = "ETR"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7032, 8368
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto39 {
                        value = "ang"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8528
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto40 {
                        value = "ang_z"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7160, 8448
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto41 {
                        value = "ang_t"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8080
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto42 {
                        value = "rho"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8128
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From70 {
                        value = "GHI"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7696, 7880
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From71 {
                        value = "Gdh"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7696, 7912
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto43 {
                        value = "Gb"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8152, 7920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto44 {
                        value = "Gr"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7800, 8160
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From74 {
                        value = "GHI"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8200
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From72 {
                        value = "ang_t"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7224, 8152
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From75 {
                        value = "rho"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8232
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From76 {
                        value = "f"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7864, 8184
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto45 {
                        value = "fk"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8216, 8168
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From78 {
                        value = "ang_t"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7240, 8400
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From79 {
                        value = "ang"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8528
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From80 {
                        value = "ang_z"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8584
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From81 {
                        value = "Gdh"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7544, 8368
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From82 {
                        value = "fk"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7544, 8408
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From83 {
                        value = "Gb"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7920, 8376
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From84 {
                        value = "Gr"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7920, 8416
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From85 {
                        value = "ang_z"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6936, 8544
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From86 {
                        value = "ang_t"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6936, 8512
                        hide_name = True
                        size = 37, 20
                    ]

                    junction Junction1 sp
                    [
                        position = 7920, 8184
                    ]

                    junction Junction2 sp
                    [
                        position = 7272, 8400
                    ]

                    connect From66 "C function2.GHI" as Connection61
                    connect From67 "C function2.ETR" as Connection62
                    connect "C function2.f" Goto35 as Connection63
                    connect "C function2.Gdh" Goto36 as Connection64
                    connect Constant14.out Goto42 as Connection70
                    connect From68 "Trigonometric function1.in" as Connection71
                    connect From69 "Trigonometric function2.in" as Connection72
                    connect From70 Sum3.in as Connection73
                    connect From71 Sum3.in1 as Connection74
                    connect Product2.in Sum3.out as Connection75
                    connect Product2.in1 "Trigonometric function1.out" as Connection76
                    connect "Trigonometric function2.out" Product2.in2 as Connection77
                    connect Product2.out Goto43 as Connection78
                    connect Product3.in Sum4.out as Connection83
                    connect From72 "Trigonometric function3.in" as Connection79
                    connect "Trigonometric function3.out" Sum4.in1 as Connection87
                    connect Constant15.out Sum4.in as Connection88
                    connect From74 Product3.in1 as Connection90
                    [
                        breakpoints = 7528, 8200; 7528, 8160
                    ]
                    connect From75 Product3.in2 as Connection91
                    [
                        breakpoints = 7560, 8232; 7560, 8176
                    ]
                    connect Constant17.out Sum5.in as Connection92
                    connect From76 Junction1 as Connection94
                    connect Junction1 Product4.in as Connection95
                    connect Product4.in1 Junction1 as Connection96
                    connect Product4.out Sum5.in1 as Connection97
                    connect Sum5.out Goto45 as Connection98
                    connect Gain1.out "Trigonometric function4.in" as Connection103
                    connect Gain2.out "Trigonometric function5.in" as Connection104
                    connect From79 "Trigonometric function6.in" as Connection105
                    connect From80 "Trigonometric function7.in" as Connection106
                    connect From78 Junction2 as Connection107
                    connect Junction2 Gain1.in as Connection108
                    connect Gain2.in Junction2 as Connection109
                    connect "Trigonometric function4.out" "Bus Join1.in" as Connection110
                    connect "Trigonometric function5.out" "Bus Join1.in1" as Connection111
                    connect "Trigonometric function6.out" "Bus Join1.in2" as Connection112
                    connect "Trigonometric function7.out" "Bus Join1.in3" as Connection113
                    [
                        breakpoints = 7472, 8584; 7472, 8504
                    ]
                    connect From81 "C function3.Gdh" as Connection114
                    connect From82 "C function3.fk" as Connection115
                    connect "Bus Join1.out" "C function3.x" as Connection116
                    connect "C function3.Gd" Sum6.in2 as Connection117
                    connect From83 Sum6.in as Connection118
                    connect From84 Sum6.in1 as Connection119
                    connect SI Sum6.out as Connection120
                    connect Product3.out Gain3.in as Connection121
                    connect Gain3.out Goto44 as Connection122
                    connect ang_t.out Gain4.in as Connection123
                    connect Gain4.out Goto41 as Connection124
                    connect Sum7.out Goto39 as Connection129
                    connect From85 Sum7.in1 as Connection130
                    connect From86 Sum7.in as Connection131
                    connect Gain5.out "Rate Transition3.in" as Connection136
                    connect "Rate Transition3.out" Goto40 as Connection137
                    connect Clock1.out "C function4.clk" as Connection138
                    connect "C function4.GHI" Goto37 as Connection139
                    connect "C function4.ETR" Goto38 as Connection140
                    connect "C function4.ang_z" Gain5.in as Connection141
                }
                [
                    position = 7136, 8048
                    size = 96, 216
                ]

                component "core/Signal Controlled Current Source" Isp1 {
                }
                [
                    position = 7768, 8048
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_c_function "C function1" {
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "Vdc inherit;SI inherit;Tamb inherit"
                    in_terminal_labels = "[(\'Vdc\', True), (\'SI\', True), (\'Tamb\', True)]"
                    in_terminal_properties = "real Vdc;real SI;real Tamb;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit;inherit"
                    out_terminal_dimensions_str = "Ipv inherit;Ppv inherit"
                    out_terminal_labels = "[(\'Ipv\', True), (\'Ppv\', True)]"
                    out_terminal_properties = "real Ipv;real Ppv;"
                    output_fnc = "/*Begin code section*/
Ppv = SI*0.15*100;
Ipv = Ppv/Vdc;
/*End code section*/"
                }
                [
                    position = 7624, 8048
                    size = 80, 112
                ]

                component src_constant Constant14 {
                    execution_rate = "Ts_pv"
                    value = "30"
                }
                [
                    position = 7488, 8136
                    hide_name = True
                ]

                component gen_probe P {
                }
                [
                    position = 7632, 8152
                    scale = -1, 1
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "Ts_pv"
                }
                [
                    position = 7520, 8000
                    hide_name = True
                    size = 32, 32
                ]

                port + {
                    position = right:1
                    kind = pe
                }
                [
                    position = 7936, 7968
                    scale = -1, 1
                ]

                port - {
                    position = right:2
                    kind = pe
                }
                [
                    position = 7936, 8128
                    scale = -1, 1
                ]

                port Vdc {
                    position = auto:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7456, 8000
                ]

                tag Goto42 {
                    value = "SI"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7464, 7960
                    hide_name = True
                    size = 60, 20
                ]

                junction Junction4 sp
                [
                    position = 7312, 8048
                ]

                junction Junction5 sp
                [
                    position = 7408, 8048
                ]

                connect "Solar irradiance.SI" Junction4 as Connection4356
                connect Goto42 Junction4 as Connection4373
                [
                    breakpoints = 7368, 7960; 7368, 7888; 7312, 7960; 7312, 7960
                ]
                connect Constant14.out "C function1.Tamb" as Connection4374
                connect Junction4 Junction5 as Connection4375
                [
                    breakpoints = 7312, 8048; 7312, 8048
                ]
                connect Junction5 SI.in as Connection4376
                [
                    breakpoints = 7408, 8048
                ]
                connect "C function1.SI" Junction5 as Connection4377
                connect Isp1.in "C function1.Ipv" as Connection4378
                connect Isp1.p_node + as Connection4379
                connect Isp1.n_node - as Connection4380
                connect "C function1.Ppv" P.in as Connection4382
                connect Vdc "Rate Transition1.in" as Connection4383
                connect "Rate Transition1.out" "C function1.Vdc" as Connection4384
            }
            [
                position = 8032, 8144
                size = 56, 64
            ]

            component Subsystem Inverter {
                layout = dynamic
                component "core/Current Measurement" Io {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8440, 7904
                    size = 64, 32
                ]

                component gen_probe V {
                }
                [
                    position = 7976, 8088
                ]

                component Subsystem Controller {
                    layout = dynamic
                    component gen_bus_join "Bus Join1" {
                    }
                    [
                        position = 7200, 7952
                        scale = -1, 1
                    ]

                    component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                        layout = dynamic
                        component gen_gain Gain5 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8560
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_gain Gain6 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8624
                            hide_name = True
                            scale = -1, -1
                        ]

                        component Subsystem "inner current control loop" {
                            layout = dynamic
                            component gen_gain Gain7 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8272, 8592
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 7760, 8048
                                scale = -1, 1
                            ]

                            component gen_sum Sum5 {
                                signs = "+-"
                            }
                            [
                                position = 8024, 8104
                                scale = -1, 1
                            ]

                            component gen_sum Sum7 {
                            }
                            [
                                position = 7760, 8400
                                scale = -1, 1
                            ]

                            component gen_sum Sum6 {
                            }
                            [
                                position = 8032, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8168, 8560
                                scale = -1, 1
                            ]

                            component gen_gain Gain6 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8256, 8240
                                scale = -1, 1
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 8432, 8040
                                scale = -1, 1
                            ]

                            component gen_sum Sum9 {
                                signs = "+-"
                            }
                            [
                                position = 8424, 8360
                                scale = -1, 1
                            ]

                            component gen_gain Gain5 {
                                gain = "[1]"
                            }
                            [
                                position = 7720, 8600
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller1" {
                                controller_type = "PI"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8040
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 8168, 8208
                                scale = -1, 1
                            ]

                            component gen_probe id_err {
                            }
                            [
                                position = 8544, 7960
                            ]

                            component gen_probe iq_err {
                            }
                            [
                                position = 8560, 8272
                            ]

                            component gen_product Product5 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8056
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8408
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller2" {
                                controller_type = "PI"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                kp = "Kp_I/Z_DQ"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8376
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7488, 8056
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 7472, 8408
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 7920, 8600
                                scale = -1, 1
                            ]

                            component gen_limiter Limit3 {
                                lower_limit = "10"
                            }
                            [
                                position = 7840, 8600
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc1 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8128, 8296
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer LPF_dc2 {
                                a_coeff = "[1.0/(2*np.pi*1),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8136, 7920
                                hide_name = True
                                scale = -1, 1
                            ]

                            port Uq1 {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8408
                                rotation = down
                            ]

                            port Iq_meas {
                                label = "Iq_meas"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8400
                                rotation = down
                            ]

                            port Iq_ref {
                                label = "Iq_ref"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8352
                                rotation = down
                            ]

                            port Ud1 {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8056
                                rotation = down
                            ]

                            port Id_ref {
                                label = "Id_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8032
                                rotation = down
                            ]

                            port Id_meas {
                                label = "Id_meas"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8128
                                rotation = down
                            ]

                            tag From23 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8272, 8176
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From24 {
                                value = "Vd"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 7920
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From26 {
                                value = "Vq"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8208, 8296
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From27 {
                                value = "VDC"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8016, 8600
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From25 {
                                value = "w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8288, 8536
                                scale = -1, 1
                                size = 60, 20
                            ]

                            junction Junction177 sp
                            [
                                position = 8504, 8128
                            ]

                            junction Junction176 sp
                            [
                                position = 8504, 8368
                            ]

                            junction Junction181 sp
                            [
                                position = 8288, 8040
                            ]

                            junction Junction182 sp
                            [
                                position = 7640, 8416
                            ]

                            junction Junction183 sp
                            [
                                position = 8288, 8360
                            ]

                            connect From23 Product1.in as Connection1
                            connect Sum5.in1 Product1.out as Connection24
                            connect Gain6.out Product1.in1 as Connection289
                            connect Junction177 Gain7.in as Connection300
                            connect Gain7.out Product2.in1 as Connection293
                            connect Iq_meas Junction176 as Connection290
                            connect Sum6.in1 Product2.out as Connection26
                            connect Junction176 Sum9.in1 as Connection291
                            connect Sum8.in1 Junction177 as Connection301
                            connect From25 Product2.in as Connection2
                            connect Sum8.in Id_ref as Connection297
                            connect Sum9.in Iq_ref as Connection283
                            connect Gain6.in Junction176 as Connection292
                            connect Id_meas Junction177 as Connection299
                            connect Sum8.out Junction181 as Connection313
                            connect Junction181 "PID controller1.in" as Connection314
                            [
                                breakpoints = 8288, 8040; 8240, 8040
                            ]
                            connect id_err.in Junction181 as Connection315
                            connect Sum3.in "PID controller1.out" as Connection316
                            [
                                breakpoints = 7896, 8040; 8160, 8040; 8160, 8040
                            ]
                            connect Product5.in Sum3.out as Connection322
                            connect Product6.in Sum7.out as Connection324
                            connect Sum7.in1 Sum6.out as Connection326
                            connect Sum5.out Sum3.in1 as Connection327
                            connect Gain5.out Junction182 as Connection329
                            connect Junction182 Product6.in1 as Connection330
                            connect Product5.in1 Junction182 as Connection331
                            connect "PID controller2.out" Sum7.in as Connection346
                            connect Sum9.out Junction183 as Connection349
                            connect Junction183 iq_err.in as Connection350
                            [
                                breakpoints = 8288, 8360
                            ]
                            connect "PID controller2.in" Junction183 as Connection351
                            connect Product5.out Limit1.in as Connection352
                            connect Limit1.out Ud1 as Connection353
                            connect Product6.out Limit2.in as Connection354
                            connect Limit2.out Uq1 as Connection355
                            connect From27 LPF_dc.in as Connection356
                            connect LPF_dc.out Limit3.in as Connection357
                            connect Limit3.out Gain5.in as Connection358
                            connect LPF_dc1.in From26 as Connection359
                            connect LPF_dc1.out Sum6.in as Connection360
                            connect LPF_dc2.in From24 as Connection361
                            connect Sum5.in LPF_dc2.out as Connection362
                        }
                        [
                            position = 8176, 8592
                            size = 96, 184
                        ]

                        component gen_probe Id_ref {
                        }
                        [
                            position = 8216, 8416
                            rotation = down
                        ]

                        component gen_probe Iq_ref {
                        }
                        [
                            position = 8256, 8768
                            rotation = down
                        ]

                        component gen_probe Ud {
                        }
                        [
                            position = 7976, 8456
                            scale = -1, 1
                        ]

                        component gen_probe Uq {
                        }
                        [
                            position = 7984, 8672
                            scale = -1, 1
                        ]

                        component Subsystem "outer power loop" {
                            layout = dynamic
                            component sys_signal_switch "Signal switch1" {
                                threshold = "0.5"
                            }
                            [
                                position = 8256, 8328
                                scale = -1, -1
                            ]

                            component gen_comparator Comparator1 {
                            }
                            [
                                position = 8352, 8368
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                                signs = "+-"
                            }
                            [
                                position = 8232, 8072
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8080
                                scale = -1, 1
                            ]

                            component gen_probe Et_sqr_res {
                            }
                            [
                                position = 8224, 8256
                            ]

                            component gen_product Product2 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8168
                                scale = -1, 1
                            ]

                            component gen_product Product4 {
                            }
                            [
                                position = 8440, 8080
                                scale = -1, 1
                            ]

                            component gen_sum Sum4 {
                            }
                            [
                                position = 8232, 8160
                                scale = -1, 1
                            ]

                            component gen_product Product5 {
                            }
                            [
                                position = 8440, 8152
                                scale = -1, 1
                            ]

                            component gen_product Product3 {
                            }
                            [
                                position = 8440, 8008
                                scale = -1, 1
                            ]

                            component src_constant Limit_zero {
                                execution_rate = "Ts"
                                value = "[0.1]"
                            }
                            [
                                position = 8464, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 8440, 8224
                                scale = -1, 1
                            ]

                            component src_constant one {
                                execution_rate = "Ts"
                                value = "[1]"
                            }
                            [
                                position = 8344, 8312
                                scale = -1, 1
                            ]

                            port Q_ref {
                                label = "Q_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8216
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8000
                                rotation = down
                            ]

                            port Iq_r {
                                label = "Iq_r"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8080
                                rotation = down
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = right:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8600, 8360
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8072
                                rotation = down
                            ]

                            port P_ref {
                                label = "P_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8144
                                rotation = down
                            ]

                            port Id_r {
                                label = "Id_r"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8168
                                rotation = down
                            ]

                            junction Junction142 sp
                            [
                                position = 8528, 8072
                            ]

                            junction Junction143 sp
                            [
                                position = 8544, 8000
                            ]

                            junction Junction144 sp
                            [
                                position = 8408, 8360
                            ]

                            junction Junction147 sp
                            [
                                position = 8184, 8328
                            ]

                            junction Junction138 sp
                            [
                                position = 8160, 8176
                            ]

                            junction Junction139 sp
                            [
                                position = 8568, 8144
                            ]

                            junction Junction141 sp
                            [
                                position = 8560, 8216
                            ]

                            connect Product1.in Sum3.out as Connection23
                            connect Product6.in1 Junction143 as Connection36
                            connect Et_sqr_res.in Junction147 as Connection5
                            connect Product2.in1 Junction138 as Connection25
                            connect Product3.out Sum3.in as Connection28
                            connect Junction138 Product1.in1 as Connection9
                            connect Comparator1.in1 Junction144 as Connection1
                            connect Product6.out Sum4.in1 as Connection37
                            connect Product4.in1 Junction141 as Connection29
                            connect Limit_zero.out Comparator1.in2 as Connection19
                            connect Product4.in Junction142 as Connection30
                            connect Comparator1.out "Signal switch1.in2" as Connection2
                            connect Junction141 Q_ref as Connection11
                            connect "Signal switch1.in" Junction144 as Connection38
                            connect Product4.out Sum3.in1 as Connection31
                            connect Junction142 Ed as Connection12
                            connect Eq Junction143 as Connection3
                            connect Junction143 Product3.in as Connection13
                            connect "Signal switch1.out" Junction147 as Connection39
                            connect Product5.in Junction139 as Connection32
                            connect Product5.in1 Junction142 as Connection33
                            connect Product5.out Sum4.in as Connection34
                            connect one.out "Signal switch1.in1" as Connection40
                            connect Product6.in Junction141 as Connection35
                            connect Product2.in Sum4.out as Connection26
                            connect Product3.in1 Junction139 as Connection27
                            connect Junction138 Junction147 as Connection47
                            [
                                breakpoints = 8160, 8176; 8160, 8264
                            ]
                            connect P_ref Junction139 as Connection48
                            [
                                breakpoints = 8600, 8144
                            ]
                            connect Et_p2 Junction144 as Connection49
                            [
                                breakpoints = 8424, 8360
                            ]
                            connect Iq_r Product1.out as Connection270
                            connect Id_r Product2.out as Connection271
                        }
                        [
                            position = 8512, 8568
                            size = 176, 128
                        ]

                        component Subsystem squared_Vt2 {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 8208, 8160
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 8104, 8192
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8208, 8232
                                scale = -1, 1
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8192
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8224
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8152
                                rotation = down
                            ]

                            junction Junction137 sp
                            [
                                position = 8280, 8224
                            ]

                            junction Junction136 sp
                            [
                                position = 8280, 8152
                            ]

                            connect Junction137 Eq as Connection3
                            connect Product2.in Junction137 as Connection6
                            connect Sum3.in Product1.out as Connection8
                            connect Junction136 Ed as Connection1
                            connect Product1.in1 Junction136 as Connection4
                            connect Sum3.in1 Product2.out as Connection9
                            connect Product2.in1 Junction137 as Connection5
                            connect Sum3.out Et_p2 as Connection7
                            connect Junction136 Product1.in as Connection2
                        }
                        [
                            position = 8664, 8632
                            size = 48, 56
                        ]

                        component gen_d_q2alpha_beta "dq to alpha beta" {
                            alignment = "0"
                        }
                        [
                            position = 7912, 8584
                            scale = -1, 1
                        ]

                        component gen_probe ud {
                        }
                        [
                            position = 8152, 8448
                        ]

                        component gen_probe uq {
                        }
                        [
                            position = 8144, 8744
                        ]

                        component gen_probe Edq_sq {
                        }
                        [
                            position = 8664, 8712
                        ]

                        port ma {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8560
                            rotation = down
                        ]

                        port mb {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8624
                            rotation = down
                        ]

                        tag From29 {
                            value = "Id"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8568
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "wt"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8008, 8736
                            hide_name = True
                            scale = -1, 1
                            size = 63, 25
                        ]

                        tag From30 {
                            value = "Iq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8296, 8616
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From20 {
                            value = "Vd"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8824, 8568
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From41 {
                            value = "Vq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8824, 8600
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From42 {
                            value = "Pref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8736, 8512
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From43 {
                            value = "Qref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8736, 8544
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        junction Junction13 sp
                        [
                            position = 8736, 8568
                        ]

                        junction Junction14 sp
                        [
                            position = 8760, 8600
                        ]

                        junction Junction15 sp
                        [
                            position = 8296, 8520
                        ]

                        junction Junction16 sp
                        [
                            position = 8336, 8616
                        ]

                        junction Junction17 sp
                        [
                            position = 8032, 8560
                        ]

                        junction Junction18 sp
                        [
                            position = 8032, 8624
                        ]

                        junction Junction19 sp
                        [
                            position = 8112, 8520
                        ]

                        junction Junction20 sp
                        [
                            position = 8112, 8656
                        ]

                        junction Junction21 sp
                        [
                            position = 8616, 8632
                        ]

                        connect From29 "inner current control loop.Id_meas" as Connection253
                        connect From30 "inner current control loop.Iq_meas" as Connection257
                        connect From42 "outer power loop.P_ref" as Connection431
                        connect From43 "outer power loop.Q_ref" as Connection432
                        connect From20 Junction13 as Connection433
                        connect Junction13 "outer power loop.Ed" as Connection434
                        connect squared_Vt2.Ed Junction13 as Connection435
                        connect From41 Junction14 as Connection436
                        connect Junction14 "outer power loop.Eq" as Connection437
                        [
                            breakpoints = 8760, 8600; 8704, 8600
                        ]
                        connect squared_Vt2.Eq Junction14 as Connection438
                        connect Id_ref.in Junction15 as Connection441
                        [
                            breakpoints = 8296, 8504
                        ]
                        connect Junction15 "inner current control loop.Id_ref" as Connection442
                        [
                            breakpoints = 8296, 8520; 8288, 8520
                        ]
                        connect "outer power loop.Id_r" Junction15 as Connection443
                        connect Iq_ref.in Junction16 as Connection444
                        [
                            breakpoints = 8336, 8632; 8336, 8632
                        ]
                        connect Junction16 "inner current control loop.Iq_ref" as Connection445
                        [
                            breakpoints = 8336, 8616
                        ]
                        connect "outer power loop.Iq_r" Junction16 as Connection446
                        connect Ud.in Junction17 as Connection449
                        connect Junction17 Gain5.out as Connection450
                        connect "dq to alpha beta.d" Junction17 as Connection451
                        connect Uq.in Junction18 as Connection452
                        connect Junction18 Gain6.out as Connection453
                        [
                            breakpoints = 8032, 8624
                        ]
                        connect "dq to alpha beta.q" Junction18 as Connection454
                        connect From1 "dq to alpha beta.wt" as Connection455
                        connect ma "dq to alpha beta.alpha" as Connection456
                        connect mb "dq to alpha beta.beta" as Connection457
                        connect Gain5.in Junction19 as Connection458
                        connect Junction19 "inner current control loop.Ud1" as Connection459
                        [
                            breakpoints = 8112, 8520
                        ]
                        connect ud.in Junction19 as Connection460
                        connect Gain6.in Junction20 as Connection461
                        connect Junction20 "inner current control loop.Uq1" as Connection462
                        [
                            breakpoints = 8112, 8664
                        ]
                        connect uq.in Junction20 as Connection463
                        connect squared_Vt2.Et_p2 Junction21 as Connection464
                        connect Junction21 "outer power loop.Et_p2" as Connection465
                        connect Edq_sq.in Junction21 as Connection466
                    }
                    [
                        position = 7360, 7952
                        size = 128, 152
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 6952, 8104
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_bus_split "Bus Split1" {
                    }
                    [
                        position = 7016, 7952
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain21 {
                        gain = "1000/S"
                    }
                    [
                        position = 7240, 8424
                        hide_name = True
                    ]

                    component gen_gain Gain22 {
                        gain = "1000/S"
                    }
                    [
                        position = 7240, 8328
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        in_terminal_dimensions = "1;1"
                        in_terminal_dimensions_str = "ref 1;charge 1"
                        in_terminal_labels = "[(\'ref\', True), (\'charge\', True)]"
                        in_terminal_properties = "real ref;int charge;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', False)]"
                        output_fnc = "/*Begin code section*/
if (charge>0) out = -1;
else out = ref;
/*End code section*/"
                    }
                    [
                        position = 7152, 8328
                        hide_name = True
                        size = 48, 48
                    ]

                    component gen_c_function "C function2" {
                        in_terminal_dimensions = "1;1"
                        in_terminal_dimensions_str = "ref 1;charge 1"
                        in_terminal_labels = "[(\'ref\', True), (\'charge\', True)]"
                        in_terminal_properties = "real ref;int charge;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', False)]"
                        output_fnc = "/*Begin code section*/
if (charge>0) out = 0;
else out = ref;
/*End code section*/"
                    }
                    [
                        position = 7160, 8424
                        hide_name = True
                        size = 48, 48
                    ]

                    component "core/Rate Transition" "Rate Transition8" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7064, 8360
                        hide_name = True
                        size = 32, 32
                    ]

                    component src_scada_input charge {
                        execution_rate = "Ts"
                        format = "int"
                        max = "1"
                        min = "0"
                        signal_type = "int"
                        unit = ""
                    }
                    [
                        position = 6992, 8360
                    ]

                    component "core/Rate Transition" "Rate Transition9" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7064, 8296
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition10" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 7064, 8416
                        hide_name = True
                        size = 32, 32
                    ]

                    component gen_c_function "C function3" {
                        execution_rate = "1"
                        global_variables = "int k;real t;"
                        in_terminal_labels = "[]"
                        in_terminal_properties = ""
                        init_fnc = "/*Begin code section*/
k = 0; t = 1;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\', \'Pref\', \'Qref\']"
                        out_terminal_dimensions = "1;1"
                        out_terminal_dimensions_str = "Pref 1;Qref 1"
                        out_terminal_labels = "[(\'Pref\', True), (\'Qref\', True)]"
                        out_terminal_properties = "real Pref;real Qref;"
                        output_fnc = "/*Begin code section*/
//float p[10]={0.0,2.0,3.0,10,5,4,3.2,1.4,5.6,7};
//float q[10] = {0,1.5,1.2,1,2,2.6,1.4,3,2.6,4};
if (k>9) k = 0;
if (t>4) t = 0;
    
if (k==0) {Pref = 0;Qref = 0;}
else if (k==1) {Pref = 2;Qref = 1.5;}
else if (k==2) {Pref = 3;Qref = 1.2;}
else if (k==3) {Pref = 1.5;Qref = 1;}
else if (k==4) {Pref = 5;Qref = 2;}
else if (k==5) {Pref = 4;Qref = 2.6;}
else if (k==6) {Pref = 3.2;Qref = 1.4;}
else if(k==7) {Pref = 1.4;Qref = 3;}
else if(k==8) {Pref = 5.6;Qref = 2.6;}
else if(k==9) {Pref =2.9;Qref = 1;}
if (t>=4) k+=1;
t+=1;
/*End code section*/"
                    }
                    [
                        position = 6872, 8320
                        size = 72, 88
                    ]

                    component gen_probe Pref {
                    }
                    [
                        position = 7136, 8192
                    ]

                    component gen_probe Qref {
                    }
                    [
                        position = 7096, 8528
                    ]

                    component gen_gain Gain23 {
                        gain = "1000"
                    }
                    [
                        position = 7040, 8192
                        hide_name = True
                    ]

                    component gen_gain Gain24 {
                        gain = "1000"
                    }
                    [
                        position = 7016, 8528
                        hide_name = True
                    ]

                    component gen_gain Gain20 {
                        gain = "-1"
                    }
                    [
                        position = 6904, 8000
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_z_domain_transfer "Hilbert Transform" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 7000, 8896
                    ]

                    component gen_trigonometric "Trigonometric function1" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 7368, 8656
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function2" {
                    }
                    [
                        position = 7368, 8752
                        hide_name = True
                    ]

                    component gen_c_function "C function4" {
                        execution_rate = "Ts"
                        in_terminal_dimensions = "inherit;inherit;inherit"
                        in_terminal_dimensions_str = "in inherit;pi inherit;Ts inherit"
                        in_terminal_labels = "[(\'in\', False), (\'pi\', False), (\'Ts\', False)]"
                        in_terminal_properties = "real in;inherit pi;inherit Ts;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', False)]"
                        output_fnc = "/*Begin code section*/
out = out + in*Ts;
if (out>=2*pi){
    out = out - 2*pi;
}
/*End code section*/"
                    }
                    [
                        position = 6936, 8704
                        hide_name = True
                        scale = -1, 1
                        size = 48, 64
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "np.pi"
                    }
                    [
                        position = 7160, 8752
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "Ts"
                    }
                    [
                        position = 7040, 8736
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_c_function "C function5" {
                        execution_rate = "Ts"
                        in_terminal_dimensions = "1;1;1;1"
                        in_terminal_dimensions_str = "Valpha 1;Vbeta 1;k1 1;k2 1"
                        in_terminal_labels = "[(\'Valpha\', True), (\'Vbeta\', True), (\'k1\', True), (\'k2\', True)]"
                        in_terminal_properties = "real Valpha;real Vbeta;real k1;real k2;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "1;1"
                        out_terminal_dimensions_str = "Vd 1;Vq 1"
                        out_terminal_labels = "[(\'Vd\', True), (\'Vq\', True)]"
                        out_terminal_properties = "real Vd;real Vq;"
                        output_fnc = "/*Begin code section*/
Vd = Valpha*k1 + Vbeta*k2;
Vq = -Valpha*k2 + Vbeta*k1;
/*End code section*/"
                    }
                    [
                        position = 7432, 8872
                        hide_name = True
                        size = 72, 112
                    ]

                    component gen_probe Vd {
                    }
                    [
                        position = 7656, 8776
                    ]

                    component gen_probe Vq {
                    }
                    [
                        position = 7648, 8960
                    ]

                    component gen_z_domain_transfer "Hilbert Transform1" {
                        a_coeff = "[1/(2*np.pi*60),1]"
                        b_coeff = "[-1/(2*np.pi*60),1]"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 7944, 8872
                    ]

                    component gen_c_function "C function6" {
                        execution_rate = "Ts"
                        in_terminal_dimensions = "1;1;1;1"
                        in_terminal_dimensions_str = "xalpha 1;xbeta 1;k1 1;k2 1"
                        in_terminal_labels = "[(\'xalpha\', True), (\'xbeta\', True), (\'k1\', True), (\'k2\', True)]"
                        in_terminal_properties = "real xalpha;real xbeta;real k1;real k2;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "1;1"
                        out_terminal_dimensions_str = "yd 1;yq 1"
                        out_terminal_labels = "[(\'yd\', True), (\'yq\', True)]"
                        out_terminal_properties = "real yd;real yq;"
                        output_fnc = "/*Begin code section*/
yd = xalpha*k1 + xbeta*k2;
yq = -xalpha*k2 + xbeta*k1;
/*End code section*/"
                    }
                    [
                        position = 8376, 8848
                        hide_name = True
                        size = 72, 112
                    ]

                    component gen_probe Id {
                    }
                    [
                        position = 8616, 8752
                    ]

                    component gen_probe Iq {
                    }
                    [
                        position = 8616, 8952
                    ]

                    component gen_gain Gain28 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7528, 8840
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain29 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7520, 8904
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain30 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8464, 8816
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain31 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 8464, 8880
                        hide_name = True
                        scale = 1, -1
                    ]

                    component "core/Single phase PLL" "Single phase PLL1" {
                        offset_Hz = "60"
                        vd_init = "V_DQ"
                    }
                    [
                        position = 7624, 8240
                        size = 64, 98
                    ]

                    component gen_gain Gain25 {
                        gain = "2*np.pi"
                    }
                    [
                        position = 7752, 8240
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_probe w {
                    }
                    [
                        position = 7896, 8320
                    ]

                    port En {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6840, 8104
                        scale = -1, 1
                    ]

                    port ma {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6872, 7928
                        scale = -1, 1
                    ]

                    port mb {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 6832, 8000
                        scale = -1, 1
                    ]

                    tag Goto55 {
                        value = "Pref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7344, 8328
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto56 {
                        value = "Qref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7344, 8424
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto60 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8848
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From54 {
                        value = "V"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6832, 8848
                        hide_name = True
                    ]

                    tag Goto61 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8896
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From55 {
                        value = "Valpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8824
                        hide_name = True
                    ]

                    tag From56 {
                        value = "Vbeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8856
                        hide_name = True
                    ]

                    tag Goto21 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6816, 8704
                        scale = -1, 1
                    ]

                    tag From57 {
                        value = "wt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7272, 8656
                        hide_name = True
                    ]

                    tag Goto62 {
                        value = "k1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7464, 8656
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto63 {
                        value = "k2"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7464, 8752
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From58 {
                        value = "k1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8888
                        hide_name = True
                    ]

                    tag From59 {
                        value = "k2"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8920
                        hide_name = True
                    ]

                    tag Goto64 {
                        value = "Vd"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7632, 8840
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto65 {
                        value = "Vq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7624, 8904
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto66 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8064, 8824
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From60 {
                        value = "I"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7776, 8824
                        hide_name = True
                    ]

                    tag Goto67 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8064, 8872
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From61 {
                        value = "Ialpha"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8800
                        hide_name = True
                    ]

                    tag From62 {
                        value = "Ibeta"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8832
                        hide_name = True
                    ]

                    tag From63 {
                        value = "k1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8864
                        hide_name = True
                    ]

                    tag From64 {
                        value = "k2"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8896
                        hide_name = True
                    ]

                    tag Goto68 {
                        value = "Id"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8584, 8816
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto69 {
                        value = "Iq"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8584, 8880
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From47 {
                        value = "V"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7504, 8240
                        hide_name = True
                    ]

                    tag Goto57 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7856, 8240
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From65 {
                        value = "w"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7120, 8688
                        hide_name = True
                        scale = -1, 1
                    ]

                    junction Junction276 sp
                    [
                        position = 6976, 7944
                    ]

                    junction Junction376 sp
                    [
                        position = 7112, 8360
                    ]

                    junction Junction377 sp
                    [
                        position = 6968, 8296
                    ]

                    junction Junction378 sp
                    [
                        position = 6960, 8416
                    ]

                    junction Junction386 sp
                    [
                        position = 6912, 8848
                    ]

                    junction Junction387 sp
                    [
                        position = 7320, 8656
                    ]

                    junction Junction392 sp
                    [
                        position = 7856, 8824
                    ]

                    junction Junction379 sp
                    [
                        position = 7800, 8240
                    ]

                    junction Junction398 sp
                    [
                        position = 7568, 8840
                    ]

                    junction Junction399 sp
                    [
                        position = 7560, 8904
                    ]

                    junction Junction400 sp
                    [
                        position = 8512, 8816
                    ]

                    junction Junction401 sp
                    [
                        position = 8520, 8880
                    ]

                    connect En Constant2.out as Connection1061
                    connect ma Junction276 as Connection1064
                    connect Junction276 "Bus Split1.out" as Connection1065
                    connect Gain20.in Junction276 as Connection1066
                    connect Gain20.out mb as Connection1067
                    connect "C function2.out" Gain21.in as Connection4403
                    connect "C function1.out" Gain22.in as Connection4404
                    connect "C function1.charge" Junction376 as Connection4414
                    connect Junction376 "C function2.charge" as Connection4415
                    [
                        breakpoints = 7112, 8376
                    ]
                    connect "Rate Transition8.out" Junction376 as Connection4420
                    connect charge.out "Rate Transition8.in" as Connection4421
                    connect "Rate Transition9.out" "C function1.ref" as Connection4425
                    connect "Rate Transition10.out" "C function2.ref" as Connection4427
                    connect "C function3.Pref" Junction377 as Connection4430
                    connect Junction377 "Rate Transition9.in" as Connection4431
                    connect "Rate Transition10.in" Junction378 as Connection4433
                    connect Junction378 "C function3.Qref" as Connection4434
                    connect Pref.in Gain23.out as Connection4436
                    connect Gain23.in Junction377 as Connection4437
                    connect Qref.in Gain24.out as Connection4438
                    connect Gain24.in Junction378 as Connection4439
                    connect Gain22.out Goto55 as Connection4440
                    connect Gain21.out Goto56 as Connection4441
                    connect "Bus Split1.in" "Bus Join1.out" as Connection4453
                    connect From54 Junction386 as Connection4478
                    connect Junction386 Goto60 as Connection4479
                    connect "Hilbert Transform.in" Junction386 as Connection4480
                    connect "Hilbert Transform.out" Goto61 as Connection4481
                    connect "C function4.out" Goto21 as Connection1023
                    connect Constant3.out "C function4.pi" as Connection1024
                    [
                        breakpoints = 7072, 8752; 7072, 8704
                    ]
                    connect Constant4.out "C function4.Ts" as Connection1025
                    connect From57 Junction387 as Connection4484
                    connect Junction387 "Trigonometric function1.in" as Connection4485
                    connect "Trigonometric function2.in" Junction387 as Connection4486
                    connect Goto63 "Trigonometric function2.out" as Connection4487
                    connect Goto62 "Trigonometric function1.out" as Connection4488
                    connect From55 "C function5.Valpha" as Connection4489
                    connect From56 "C function5.Vbeta" as Connection4490
                    connect From58 "C function5.k1" as Connection4491
                    connect From59 "C function5.k2" as Connection4492
                    connect From60 Junction392 as Connection4503
                    connect Junction392 Goto66 as Connection4504
                    connect "Hilbert Transform1.in" Junction392 as Connection4505
                    connect "Hilbert Transform1.out" Goto67 as Connection4506
                    connect From61 "C function6.xalpha" as Connection4507
                    connect From62 "C function6.xbeta" as Connection4508
                    connect From63 "C function6.k1" as Connection4509
                    connect From64 "C function6.k2" as Connection4510
                    connect "C function5.Vd" Gain28.in as Connection4522
                    connect "C function5.Vq" Gain29.in as Connection4524
                    connect "C function6.yd" Gain30.in as Connection4526
                    connect "C function6.yq" Gain31.in as Connection4528
                    connect From47 "Single phase PLL1.In" as Connection1048
                    connect Gain25.in "Single phase PLL1.f" as Connection4442
                    connect Gain25.out Junction379 as Connection4444
                    connect Junction379 Goto57 as Connection4445
                    connect w.in Junction379 as Connection4446
                    connect Gain28.out Junction398 as Connection4539
                    connect Junction398 Goto64 as Connection4540
                    connect Vd.in Junction398 as Connection4541
                    connect Gain29.out Junction399 as Connection4543
                    connect Junction399 Goto65 as Connection4544
                    connect Vq.in Junction399 as Connection4545
                    connect Gain30.out Junction400 as Connection4548
                    connect Junction400 Goto68 as Connection4549
                    connect Id.in Junction400 as Connection4550
                    connect Gain31.out Junction401 as Connection4551
                    connect Junction401 Goto69 as Connection4552
                    connect Iq.in Junction401 as Connection4553
                    connect "Bus Join1.in" "Outer Voltage Loop + Inner Current Loop.ma" as Connection4554
                    [
                        breakpoints = 7240, 7896
                    ]
                    connect "Outer Voltage Loop + Inner Current Loop.mb" "Bus Join1.in1" as Connection4555
                    [
                        breakpoints = 7256, 7960
                    ]
                    connect From65 "C function4.in" as Connection4556
                }
                [
                    position = 7368, 7776
                    size = 88, 96
                ]

                component pas_inductor L {
                    inductance = "L_i"
                }
                [
                    position = 7888, 7904
                    rotation = down
                ]

                component pas_inductor Lo {
                    inductance = "L_o"
                }
                [
                    position = 8288, 7904
                    rotation = down
                ]

                component "core/Voltage Measurement" E {
                    addr = "7"
                    execution_rate = "Ts"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8024, 8056
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" I {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7984, 7904
                    scale = 1, -1
                    size = 64, 32
                ]

                component pas_capacitor Cs {
                    capacitance = "C_s"
                }
                [
                    position = 8104, 8152
                    rotation = right
                ]

                component gen_probe S {
                }
                [
                    position = 8144, 7656
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe Q {
                }
                [
                    position = 8144, 7592
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe pf {
                }
                [
                    position = 8144, 7720
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe P {
                }
                [
                    position = 8144, 7528
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem Power_Meas {
                    layout = dynamic
                    component gen_gain Gain6 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8232
                        rotation = right
                        hide_name = True
                    ]

                    component gen_gain Gain4 {
                        gain = "S"
                    }
                    [
                        position = 7952, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component gen_gain Gain5 {
                        gain = "S"
                    }
                    [
                        position = 8048, 8056
                        rotation = left
                        hide_name = True
                    ]

                    component Subsystem Power_Meas_DQpu {
                        layout = dynamic
                        component gen_c_function S_and_pf {
                            in_terminal_dimensions = "inherit;inherit"
                            in_terminal_dimensions_str = "P inherit;Q inherit"
                            in_terminal_labels = "False;False;"
                            in_terminal_properties = "real P;inherit Q;"
                            init_fnc = "/*Begin code section*/
P = 0;
Q = 0;
S = 0;
pf = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions = "inherit;inherit"
                            out_terminal_dimensions_str = "S inherit;pf inherit"
                            out_terminal_labels = "False;False;"
                            out_terminal_properties = "inherit S;inherit pf;"
                            output_fnc = "/*Begin code section*/
S = sqrt(P*P+Q*Q);
if(S>0){
    pf = P/S;
}
else{
    pf = 0;
}
/*End code section*/"
                        }
                        [
                            position = 8392, 8192
                            size = 48, 48
                        ]

                        component gen_product Product4 {
                        }
                        [
                            position = 8024, 8232
                            hide_name = True
                        ]

                        component gen_product Product3 {
                        }
                        [
                            position = 8024, 8320
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_Q {
                            a_coeff = "[1.0/(2*np.pi*fc_Q),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8272
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8024, 8064
                            hide_name = True
                        ]

                        component gen_sum Sum1 {
                        }
                        [
                            position = 8128, 8112
                            hide_name = True
                        ]

                        component gen_z_domain_transfer LPF_P {
                            a_coeff = "[1.0/(2*np.pi*fc_P),1]"
                            b_coeff = "1"
                            domain = "S-domain"
                            method = "Bilinear"
                        }
                        [
                            position = 8208, 8112
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8024, 8152
                            hide_name = True
                        ]

                        component gen_sum Sum2 {
                            signs = "+-"
                        }
                        [
                            position = 8128, 8272
                            hide_name = True
                        ]

                        port Vd {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8056
                        ]

                        port Vq {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8144
                        ]

                        port Id {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8240
                        ]

                        port Iq {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7808, 8328
                        ]

                        port P {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8112
                        ]

                        port Q {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8312, 8272
                        ]

                        port S {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8144
                        ]

                        port pf {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8464, 8240
                        ]

                        junction Junction1 sp
                        [
                            position = 7920, 8240
                        ]

                        junction Junction2 sp
                        [
                            position = 7928, 8328
                        ]

                        junction Junction3 sp
                        [
                            position = 7944, 8144
                        ]

                        junction Junction4 sp
                        [
                            position = 7960, 8056
                        ]

                        junction Junction5 sp
                        [
                            position = 8264, 8112
                        ]

                        junction Junction6 sp
                        [
                            position = 8264, 8272
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = Vd*Id+Vq*Iq;</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = Vq*Id-Vd*Iq;</p></body></html> ENDCOMMENT 
                        [
                            position = 8000, 7976
                        ]

                        connect Junction1 Id as Connection49
                        connect Junction1 Product4.in1 as Connection24
                        connect Junction2 Iq as Connection52
                        connect Junction2 Product3.in1 as Connection27
                        connect Junction3 Product2.in as Connection32
                        connect Junction3 Vq as Connection53
                        connect Junction4 Product1.in as Connection35
                        connect Junction4 Vd as Connection50
                        connect Junction5 LPF_P.out as Connection44
                        connect Junction5 P as Connection55
                        connect Junction6 LPF_Q.out as Connection47
                        connect Junction6 Q as Connection56
                        connect LPF_P.in Sum1.out as Connection39
                        connect LPF_Q.in Sum2.out as Connection40
                        connect Product1.in1 Junction1 as Connection25
                        connect Product2.in1 Junction2 as Connection28
                        connect Product3.in Junction4 as Connection36
                        connect Product4.in Junction3 as Connection33
                        connect S_and_pf.P Junction5 as Connection45
                        connect S_and_pf.Q Junction6 as Connection48
                        connect S_and_pf.S S as Connection51
                        connect S_and_pf.pf pf as Connection54
                        connect Sum1.in Product1.out as Connection29
                        connect Sum1.in1 Product2.out as Connection30
                        connect Sum2.in1 Product3.out as Connection38
                        connect Sum2.in Product4.out as Connection37

                        mask {
                            description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Power measurement in DQ frame with inputs and outputs in per unit.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Zero component is not considered in the power calculation, thus this measurement is not suitable for unbalanced systems.</p></body></html>"

                            fc_P {
                                label = "Active power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            fc_Q {
                                label = "Reactive power low pass filter cut-off freq."
                                widget = edit
                                type = generic
                                default_value = "1.0"
                                unit = "Hz"
                            }

                            CODE open
                                from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                            
                                dialog = RegularComponentPropertiesDialog(
                                    component=component,
                                    property_container=component.masks[-1],
                                    current_diagram=current_diagram
                                )
                                dialog.exec_()
                            
                            ENDCODE
                        }
                    }
                    [
                        position = 7864, 8160
                        size = 72, 128
                    ]

                    port Vd {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8048
                        rotation = right
                    ]

                    port Vq {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8048
                        rotation = right
                    ]

                    port Id {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8248
                        rotation = left
                    ]

                    port Iq {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7760, 8248
                        rotation = left
                    ]

                    port P {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7952, 8000
                        rotation = left
                    ]

                    port Q {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8000
                        rotation = left
                    ]

                    port S {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8048, 8288
                        rotation = right
                    ]

                    port pf {
                        position = right:4
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7992, 8288
                        rotation = right
                    ]

                    connect Gain4.out P as Connection10
                    connect Gain4.in Power_Meas_DQpu.P as Connection20
                    connect Gain5.in Power_Meas_DQpu.Q as Connection21
                    connect Gain5.out Q as Connection11
                    connect Gain6.in Power_Meas_DQpu.S as Connection16
                    connect Gain6.out S as Connection13
                    connect Id Power_Meas_DQpu.Id as Connection14
                    connect Iq Power_Meas_DQpu.Iq as Connection17
                    connect Vd Power_Meas_DQpu.Vd as Connection15
                    connect Vq Power_Meas_DQpu.Vq as Connection18
                    connect pf Power_Meas_DQpu.pf as Connection19
                }
                [
                    position = 7952, 7624
                    size = 96, 232
                ]

                component pas_capacitor Cdc {
                    capacitance = "300e-6"
                    initial_voltage = "1000"
                }
                [
                    position = 7376, 8000
                    rotation = right
                ]

                component "core/Rate Transition" "Rate Transition7" {
                    execution_rate = "Ts"
                    init_value = "750"
                }
                [
                    position = 7080, 8008
                    hide_name = True
                    size = 32, 32
                ]

                component "core/Single Phase Inverter" "Single Phase Inverter1" {
                    ctrl_src = "Internal modulator"
                    ref_sig_min_max = "[-1, 1]"
                }
                [
                    position = 7544, 8000
                    size = 127, 256
                ]

                component pas_resistor R {
                    resistance = "R_i"
                }
                [
                    position = 7728, 7904
                    rotation = down
                ]

                component pas_resistor Rs {
                    resistance = "R_s"
                }
                [
                    position = 8104, 8056
                    rotation = right
                    scale = -1, 1
                ]

                component pas_resistor Ro {
                    resistance = "R_o"
                }
                [
                    position = 8176, 7904
                    rotation = down
                ]

                component "core/Voltage RMS" Vrms {
                    feed_forward = "true"
                }
                [
                    position = 8192, 8064
                    rotation = right
                    size = 64, 32
                ]

                port Gnd {
                    label = "Gnd"
                    position = right:2
                    kind = pe
                }
                [
                    position = 8536, 8192
                    scale = -1, 1
                ]

                port A {
                    label = "A"
                    position = right:1
                    kind = pe
                }
                [
                    position = 8536, 7904
                    scale = -1, 1
                ]

                port + {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7184, 7904
                ]

                port - {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7184, 8096
                ]

                port Vdc {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7000, 8008
                ]

                tag Goto35 {
                    value = "I"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7896, 7968
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto41 {
                    value = "V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7880, 8056
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto32 {
                    value = "Iout"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8368, 7816
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto49 {
                    value = "Q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7568
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto50 {
                    value = "P"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7504
                    hide_name = True
                    size = 0, 0
                ]

                tag Goto51 {
                    value = "pf"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7696
                    hide_name = True
                    size = 0, 0
                ]

                tag From31 {
                    value = "Vq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7592
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto52 {
                    value = "S"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8080, 7632
                    hide_name = True
                    size = 0, 0
                ]

                tag From34 {
                    value = "Id"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7656
                    hide_name = True
                    size = 60, 20
                ]

                tag From32 {
                    value = "Vd"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7528
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Iq"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7824, 7720
                    hide_name = True
                    size = 60, 20
                ]

                tag Connect7 {
                    value = "VDC"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7176, 8008
                    hide_name = True
                ]

                junction Junction188 sp
                [
                    position = 8032, 7528
                ]

                junction Junction189 sp
                [
                    position = 8032, 7592
                ]

                junction Junction190 sp
                [
                    position = 8032, 7656
                ]

                junction Junction191 sp
                [
                    position = 8032, 7720
                ]

                junction Junction379 pe
                [
                    position = 7376, 7904
                ]

                junction Junction380 pe
                [
                    position = 7376, 8096
                ]

                junction Junction384 sp
                [
                    position = 7928, 8056
                ]

                junction Junction385 pe
                [
                    position = 8104, 7976
                ]

                junction Junction386 pe
                [
                    position = 8024, 8192
                ]

                junction Junction387 pe
                [
                    position = 8104, 7904
                ]

                junction Junction388 pe
                [
                    position = 8104, 7976
                ]

                junction Junction389 pe
                [
                    position = 8192, 8192
                ]

                connect L.p_node I.p_node as Connection378
                connect From31 Power_Meas.Vq as Connection403
                connect From32 Power_Meas.Vd as Connection402
                connect From34 Power_Meas.Id as Connection404
                connect Goto50 Junction188 as Connection541
                connect Goto49 Junction189 as Connection544
                connect Goto52 Junction190 as Connection547
                connect Goto51 Junction191 as Connection550
                connect Junction188 Power_Meas.P as Connection540
                connect Junction189 Power_Meas.Q as Connection543
                connect Junction190 Power_Meas.S as Connection546
                connect Junction191 Power_Meas.pf as Connection549
                connect P.in Junction188 as Connection539
                connect Power_Meas.Iq From35 as Connection405
                connect Q.in Junction189 as Connection542
                connect S.in Junction190 as Connection545
                connect pf.in Junction191 as Connection548
                connect Vdc "Rate Transition7.in" as Connection4417
                connect "Rate Transition7.out" Connect7 as Connection4418
                connect Cdc.p_node Junction379 as Connection4442
                [
                    breakpoints = 7376, 7944
                ]
                connect Junction379 + as Connection4443
                [
                    breakpoints = 7376, 7904
                ]
                connect "Single Phase Inverter1.pos_out" Junction379 as Connection4444
                connect Cdc.n_node Junction380 as Connection4445
                [
                    breakpoints = 7376, 8040
                ]
                connect Junction380 - as Connection4446
                [
                    breakpoints = 7376, 8096
                ]
                connect "Single Phase Inverter1.neg_out" Junction380 as Connection4447
                connect R.p_node L.n_node as Connection4453
                connect R.n_node "Single Phase Inverter1.a_in" as Connection4454
                connect V.in Junction384 as Connection4468
                connect Junction384 Goto41 as Connection4469
                [
                    breakpoints = 7928, 8056
                ]
                connect E.out Junction384 as Connection4470
                connect Rs.p_node Junction385 as Connection4472
                connect E.p_node Junction385 as Connection4474
                connect Rs.n_node Cs.p_node as Connection4475
                connect "Single Phase Inverter1.b_in" Junction386 as Connection4477
                [
                    breakpoints = 7624, 8192; 7944, 8192
                ]
                connect Junction386 Cs.n_node as Connection4478
                connect E.n_node Junction386 as Connection4479
                connect I.n_node Junction387 as Connection4486
                connect Ro.n_node Junction387 as Connection4488
                connect Ro.p_node Lo.n_node as Connection4489
                connect Io.p_node Lo.p_node as Connection4490
                connect Io.out Goto32 as Connection4491
                connect Io.n_node A as Connection4492
                connect Goto35 I.out as Connection4494
                connect Controller.En "Single Phase Inverter1.En" as Connection4495
                connect Controller.ma "Single Phase Inverter1.InA" as Connection4496
                [
                    breakpoints = 7544, 7816; 7544, 7816
                ]
                connect Junction387 Junction388 as Connection4498
                [
                    breakpoints = 8104, 7904; 8104, 7904
                ]
                connect Junction388 Junction385 as Connection4499
                [
                    breakpoints = 8104, 7976
                ]
                connect Vrms.p_node Junction388 as Connection4500
                connect Gnd Junction389 as Connection4501
                connect Junction389 Cs.n_node as Connection4502
                connect Vrms.n_node Junction389 as Connection4503
                connect Controller.mb "Single Phase Inverter1.InB" as Connection4504

                S = "10e3"
                V_ABC = "120"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A lead acid battery interfaced with a three-phase inverter and LCL filter</p></body></html>"

                    S {
                        label = "Rated Power "
                        widget = edit
                        type = generic
                        default_value = "20e3"
                        unit = "VA"
                        group = "1. Single-phase Inverter"
                    }

                    V_ABC {
                        label = "Rated Phase Voltage (RMS)"
                        widget = edit
                        type = generic
                        default_value = "240"
                        unit = "V"
                        group = "1. Single-phase Inverter"
                    }

                    w_0 {
                        label = "Nominal Frequency"
                        widget = edit
                        type = generic
                        default_value = "2*np.pi*60"
                        unit = "rad/s"
                        group = "1. Single-phase Inverter"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_inv"
                        unit = "s"
                        group = "1. Single-phase Inverter"
                    }

                    R_i {
                        label = "Input Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_i {
                        label = "Input Inductance"
                        widget = edit
                        type = generic
                        default_value = "0.0333"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    R_s {
                        label = "Shunt Resistance"
                        widget = edit
                        type = generic
                        default_value = "2.5872"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    C_s {
                        label = "Shunt Capacitance"
                        widget = edit
                        type = generic
                        default_value = "5e-6"
                        unit = "F"
                        group = "2. LCL filter"
                    }

                    R_o {
                        label = "Output Resistance"
                        widget = edit
                        type = generic
                        default_value = "2e-3 - R"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_o {
                        label = "Output Inductance"
                        widget = edit
                        type = generic
                        default_value = "3.04e-4 - L"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    Kp_I {
                        label = "Inner Loop Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "0.6079*10"
                        group = "3. Cascaded Controller"
                    }

                    Ki_I {
                        label = "Inner Loop Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "4*10"
                        group = "3. Cascaded Controller"
                    }

                    Imax {
                        label = "Inner Loop Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1"
                        group = "3. Cascaded Controller"
                    }

                    Imin {
                        label = "Inner Loop Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1"
                        group = "3. Cascaded Controller"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE

                    CODE define_icon
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        # HEADER STOP
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        
                        S_DQ = 2*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                    ENDCODE
                }
            }
            [
                position = 8200, 8144
                size = 64, 80
            ]

            component Subsystem "Core coupling" {
                layout = dynamic
                component "core/Single Phase Core Coupling" "Core Coupling 1" {
                }
                [
                    position = 8184, 8168
                    size = 12, 256
                ]

                port gnd {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8264
                    rotation = down
                ]

                port Gnd {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8264
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8088, 8072
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8072
                    rotation = down
                ]

                connect A "Core Coupling 1.a_in" as Connection1
                connect Gnd "Core Coupling 1.b_in" as Connection2
                connect "Core Coupling 1.a_out" a as Connection3
                connect gnd "Core Coupling 1.b_out" as Connection4
            }
            [
                position = 8496, 8144
                size = 48, 80
            ]

            component Subsystem Load {
                layout = dynamic
                component pas_inductor L {
                    inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
                }
                [
                    position = 8208, 8144
                    rotation = right
                ]

                component pas_resistor R {
                    resistance = "V**2/S*pf"
                }
                [
                    position = 8144, 8144
                    rotation = right
                ]

                port A {
                    label = "A"
                    position = left:1
                    kind = pe
                }
                [
                    position = 8072, 8048
                ]

                port Gnd {
                    label = "Gnd"
                    position = left:2
                    kind = pe
                }
                [
                    position = 8080, 8224
                ]

                junction Junction1 pe
                [
                    position = 8144, 8048
                ]

                junction Junction2 pe
                [
                    position = 8144, 8224
                ]

                connect R.p_node Junction1 as Connection3
                connect Junction1 A as Connection4
                connect L.p_node Junction1 as Connection5
                connect R.n_node Junction2 as Connection6
                connect Junction2 Gnd as Connection7
                connect L.n_node Junction2 as Connection8

                V = "120"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Constant Impedance Load</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxingle-phase RL load.</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxand L values are calculated using the input parameters:</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    - V: Rated voltage</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxated power</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxf: Rated frequency</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxpf: Rated power factor</p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0pxone of the parameters can be set to 0.</p></body></html>"

                    V {
                        label = "Voltage"
                        widget = edit
                        type = generic
                        default_value = "240"
                        unit = "V"
                        group = "General"
                    }

                    S {
                        label = "Power"
                        widget = edit
                        type = generic
                        default_value = "1e3"
                        unit = "VA"
                        group = "General"
                    }

                    f {
                        label = "Frequency"
                        widget = edit
                        type = generic
                        default_value = "60"
                        unit = "Hz"
                        group = "General"
                    }

                    pf {
                        label = "Power Factor"
                        widget = edit
                        type = generic
                        default_value = "0.9"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8200, 8256
                scale = -1, 1
                size = 48, 72
            ]

            component Subsystem ESS {
                layout = dynamic
                component "core/Signal Controlled Voltage Source" Vess {
                }
                [
                    position = 8224, 8136
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_z_domain_transfer LPF_dc1 {
                    a_coeff = "[1.0/(2*np.pi*1),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8376, 8280
                ]

                component gen_z_domain_transfer LPF_dc2 {
                    a_coeff = "[1.0/(2*np.pi*1),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8080, 8200
                    rotation = right
                ]

                component Subsystem "Lead acid" {
                    layout = dynamic
                    component gen_abs Abs1 {
                    }
                    [
                        position = 7368, 8144
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function1" {
                        mathematical_fn = "power"
                    }
                    [
                        position = 7608, 8160
                        hide_name = True
                    ]

                    component src_constant Constant1 {
                        execution_rate = "Ts"
                        value = "Inom"
                    }
                    [
                        position = 7280, 8184
                        hide_name = True
                    ]

                    component gen_product Product1 {
                        signs = "*/"
                    }
                    [
                        position = 7472, 8152
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "0.9"
                    }
                    [
                        position = 7512, 8208
                        hide_name = True
                    ]

                    component gen_abs Abs2 {
                    }
                    [
                        position = 7368, 8264
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function2" {
                        mathematical_fn = "power"
                    }
                    [
                        position = 7496, 8272
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "0.86"
                    }
                    [
                        position = 7400, 8312
                        hide_name = True
                    ]

                    component gen_abs Abs4 {
                    }
                    [
                        position = 7376, 8616
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function4" {
                        mathematical_fn = "power"
                    }
                    [
                        position = 7504, 8624
                        hide_name = True
                    ]

                    component src_constant Constant5 {
                        execution_rate = "Ts"
                        value = "1.5"
                    }
                    [
                        position = 7408, 8672
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 7352, 8376
                        hide_name = True
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 7272, 8352
                        hide_name = True
                    ]

                    component gen_abs Abs5 {
                    }
                    [
                        position = 7448, 8376
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function5" {
                        mathematical_fn = "power"
                    }
                    [
                        position = 7576, 8384
                        hide_name = True
                    ]

                    component src_constant Constant7 {
                        execution_rate = "Ts"
                        value = "1.2"
                    }
                    [
                        position = 7480, 8432
                        hide_name = True
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "6"
                    }
                    [
                        position = 7792, 8360
                    ]

                    component gen_c_function "C function" {
                        execution_rate = "Ts"
                        global_variables = "real Cbat;real Vbat;"
                        in_terminal_dimensions = "1;6;1;1"
                        in_terminal_dimensions_str = "Ibat 1;x 6;Ceff 1;charge 1"
                        in_terminal_labels = "[(\'Ibat\', True), (\'x\', True), (\'Ceff\', True), (\'charge\', True)]"
                        in_terminal_properties = "real Ibat;real x;real Ceff;int charge;"
                        init_fnc = "/*Begin code section*/
SOC = 0.5;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "1;1;1"
                        out_terminal_dimensions_str = "Vdc 1;SOC 1;Vbtt 1"
                        out_terminal_labels = "[(\'Vdc\', True), (\'SOC\', True), (\'Vbtt\', True)]"
                        out_terminal_properties = "real Vdc;real SOC;real Vbtt;"
                        output_fnc = "/*Begin code section*/
if (Ibat>0){
    Vbat = Nb*(2+0.16*SOC)+Nb*Ibat/Cnom*(6/(1+x[1])+0.48/x[2]+0.036)*(1-0.025*(Tamb-25));
    SOC = SOC +(Ibat/Cbat)*1e-3/3600.0;
}
else{
    Vbat = Nb*(1.965+0.12*SOC)-Nb*x[3]/Cnom*(4/(1+x[4])+0.27/x[5]+0.02)*(1-0.007*(Tamb-25));
    SOC = SOC + (Ibat/Cbat)*1e-3/3600.0;
}
if (SOC<0.001) SOC = 0.001;
if (SOC>1) SOC = 1;
if (Vbat<1) Vbat = 1;  
if (Vbat>1.5e3) Vbat = 1.5e3;
Vbtt = Vbat+Ri*Ibat;
if (charge>0) Vdc = Vch;
else Vdc = Vdisch;
/*End code section*/"
                        parameters = "real Nb;real Cnom;real Inom;real Tamb;real Ts;real Ri;real Vdisch;real Vch;"
                        update_fnc = "/*Begin code section*/
Cbat = 1.67*Cnom*(1+0.005*(Tamb-25))/(1+0.67*x[0]);
/*End code section*/"
                    }
                    [
                        position = 8192, 8328
                        size = 88, 152
                    ]

                    component gen_abs Abs3 {
                    }
                    [
                        position = 7368, 8496
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function3" {
                        mathematical_fn = "power"
                    }
                    [
                        position = 7496, 8504
                        hide_name = True
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "1.3"
                    }
                    [
                        position = 7400, 8552
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "SOC inherit;Ibat inherit"
                        in_terminal_labels = "[(\'SOC\', True), (\'Ibat\', True)]"
                        in_terminal_properties = "real SOC;inherit Ibat;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', False)]"
                        output_fnc = "/*Begin code section*/
if (Ibat>0) out = 20.73*(SOC-1)/(Ibat/Inom+0.55);
else out = 20.73*(SOC-1)/(-Ibat/Inom+0.55);
/*End code section*/"
                        parameters = "real Inom;"
                    }
                    [
                        position = 7816, 8544
                        hide_name = True
                        size = 56, 72
                    ]

                    component gen_math_fnc "Mathematical function6" {
                    }
                    [
                        position = 7936, 8544
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 8024, 8472
                        hide_name = True
                    ]

                    component src_constant Constant8 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 7936, 8464
                        hide_name = True
                    ]

                    component tm_delay "Unit Delay1" {
                        init_value = "0.5"
                    }
                    [
                        position = 8416, 8328
                        hide_name = True
                    ]

                    component gen_probe SOC {
                    }
                    [
                        position = 8392, 8376
                        scale = -1, 1
                    ]

                    component gen_probe Ibat {
                    }
                    [
                        position = 7432, 8936
                        scale = -1, 1
                    ]

                    component gen_c_function "C function2" {
                        in_terminal_dimensions = "1;1;1"
                        in_terminal_dimensions_str = "Idc 1;charge 1;Vbtt 1"
                        in_terminal_labels = "[(\'Idc\', True), (\'charge\', True), (\'Vbtt\', True)]"
                        in_terminal_properties = "real Idc;int charge;real Vbtt;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "1"
                        out_terminal_dimensions_str = "Ibat 1"
                        out_terminal_labels = "[(\'Ibat\', True)]"
                        out_terminal_properties = "real Ibat;"
                        output_fnc = "/*Begin code section*/
if (charge>0) Ibat = Idc*Vch/Vbtt;
else Ibat = Idc*Vdisch/Vbtt;
/*End code section*/"
                        parameters = "real Vdisch;real Vch;"
                    }
                    [
                        position = 7456, 8768
                        size = 72, 64
                    ]

                    component tm_delay "Unit Delay2" {
                        init_value = "0.5"
                    }
                    [
                        position = 8400, 8440
                        hide_name = True
                    ]

                    component gen_digital_probe Charging {
                    }
                    [
                        position = 7304, 8688
                    ]

                    component gen_comparator Comparator1 {
                    }
                    [
                        position = 7192, 8768
                        hide_name = True
                    ]

                    component src_constant Constant9 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 7104, 8808
                        hide_name = True
                    ]

                    component gen_z_domain_transfer LPF_dc {
                        a_coeff = "[1.0/(2*np.pi*1),1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 7512, 8832
                        rotation = right
                    ]

                    component gen_z_domain_transfer LPF_dc1 {
                        a_coeff = "[1.0/(2*np.pi*1),1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8328, 8440
                    ]

                    port Vdc {
                        position = auto:auto
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8320, 8272
                    ]

                    tag From57 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7280, 8144
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From58 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7280, 8264
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From60 {
                        value = "SOC"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8616
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From61 {
                        value = "SOC"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7272, 8408
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From62 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7968, 8280
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto34 {
                        value = "SOC"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8560, 8328
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From59 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7280, 8496
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From64 {
                        value = "SOC"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7736, 8528
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From65 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7736, 8560
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From66 {
                        value = "charge"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7904, 8376
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto46 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 8872
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From67 {
                        value = "Idc"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7080, 8736
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From68 {
                        value = "Vbtt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7304, 8824
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto54 {
                        value = "Vbtt"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8512, 8440
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto55 {
                        value = "charge"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7312, 8792
                        hide_name = True
                        size = 60, 20
                    ]

                    junction Junction1 sp
                    [
                        position = 7424, 8496
                    ]

                    junction Junction366 sp
                    [
                        position = 7512, 8872
                    ]

                    junction Junction367 sp
                    [
                        position = 7232, 8768
                    ]

                    junction Junction368 sp
                    [
                        position = 7232, 8768
                    ]

                    junction Junction369 sp
                    [
                        position = 7152, 8736
                    ]

                    junction Junction370 sp
                    [
                        position = 8448, 8328
                    ]

                    connect From57 Abs1.in as Connection1
                    connect Abs1.out Product1.in as Connection2
                    connect Constant1.out Product1.in1 as Connection3
                    connect Product1.out "Mathematical function1.in" as Connection4
                    connect Constant2.out "Mathematical function1.in1" as Connection5
                    connect From58 Abs2.in as Connection6
                    connect Constant3.out "Mathematical function2.in1" as Connection7
                    connect Abs2.out "Mathematical function2.in" as Connection8
                    connect Constant5.out "Mathematical function4.in1" as Connection12
                    connect Abs4.out "Mathematical function4.in" as Connection13
                    connect From60 Abs4.in as Connection14
                    connect From61 Sum1.in1 as Connection15
                    connect Constant6.out Sum1.in as Connection16
                    connect Constant7.out "Mathematical function5.in1" as Connection17
                    connect Abs5.out "Mathematical function5.in" as Connection18
                    connect Sum1.out Abs5.in as Connection19
                    connect From59 Abs3.in as Connection9
                    connect Constant4.out "Mathematical function3.in1" as Connection10
                    connect "Bus Join1.in" "Mathematical function1.out" as Connection30
                    connect "Bus Join1.in1" "Mathematical function2.out" as Connection31
                    connect "Bus Join1.in2" "Mathematical function5.out" as Connection32
                    connect Abs3.out Junction1 as Connection39
                    connect Junction1 "Mathematical function3.in" as Connection40
                    [
                        breakpoints = 7424, 8496
                    ]
                    connect "Bus Join1.in3" Junction1 as Connection41
                    [
                        breakpoints = 7624, 8368; 7624, 8472
                    ]
                    connect "Mathematical function3.out" "Bus Join1.in4" as Connection42
                    [
                        breakpoints = 7648, 8504; 7648, 8384
                    ]
                    connect "Mathematical function4.out" "Bus Join1.in5" as Connection43
                    [
                        breakpoints = 7672, 8624; 7672, 8400
                    ]
                    connect From64 "C function1.SOC" as Connection45
                    connect From65 "C function1.Ibat" as Connection46
                    connect "C function1.out" "Mathematical function6.in" as Connection47
                    connect Constant8.out Sum2.in as Connection48
                    connect "Mathematical function6.out" Sum2.in1 as Connection49
                    connect "C function.SOC" "Unit Delay1.in" as Connection51
                    connect "C function.Vdc" Vdc as Connection60
                    connect Goto46 Junction366 as Connection4362
                    connect Ibat.in Junction366 as Connection4364
                    connect From68 "C function2.Vbtt" as Connection4373
                    connect Constant9.out Comparator1.in2 as Connection4386
                    connect Comparator1.out Junction367 as Connection4388
                    connect Junction367 "C function2.charge" as Connection4389
                    connect Charging.in Junction368 as Connection4391
                    connect Junction368 Junction367 as Connection4392
                    connect Goto55 Junction368 as Connection4393
                    connect From67 Junction369 as Connection4394
                    connect Junction369 "C function2.Idc" as Connection4395
                    connect Comparator1.in1 Junction369 as Connection4396
                    connect Junction366 LPF_dc.out as Connection4398
                    connect LPF_dc.in "C function2.Ibat" as Connection4399
                    connect "Unit Delay2.in" LPF_dc1.out as Connection4400
                    connect LPF_dc1.in "C function.Vbtt" as Connection4401
                    connect From62 "C function.Ibat" as Connection4402
                    connect "Bus Join1.out" "C function.x" as Connection4403
                    connect From66 "C function.charge" as Connection4404
                    connect Sum2.out "C function.Ceff" as Connection4405
                    connect "Unit Delay1.out" Junction370 as Connection4407
                    connect Junction370 SOC.in as Connection4408
                    [
                        breakpoints = 8448, 8328
                    ]
                    connect Goto34 Junction370 as Connection4409
                    connect "Unit Delay2.out" Goto54 as Connection4410
                }
                [
                    position = 7944, 8136
                    size = 96, 216
                ]

                component "core/Current Measurement" Idc {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8312, 8040
                    scale = -1, -1
                    size = 64, 32
                ]

                component gen_probe VDC {
                }
                [
                    position = 8152, 8344
                ]

                component "core/Rate Transition" "Rate Transition7" {
                    execution_rate = "Ts"
                    init_value = "Vch"
                }
                [
                    position = 8136, 8272
                    hide_name = True
                    size = 32, 32
                ]

                component gen_probe P {
                }
                [
                    position = 8080, 8408
                ]

                component gen_product Product1 {
                }
                [
                    position = 7992, 8408
                    hide_name = True
                ]

                port - {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8448, 8200
                    rotation = down
                ]

                port + {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8448, 8040
                    rotation = down
                ]

                port Vdc {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8240, 8320
                ]

                tag Goto18 {
                    value = "VDC"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8232, 8272
                    size = 60, 20
                ]

                tag Goto54 {
                    value = "Idc"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8472, 8280
                    size = 60, 20
                ]

                tag From67 {
                    value = "VDC"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7896, 8392
                    hide_name = True
                    size = 37, 20
                ]

                tag From68 {
                    value = "Idc"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7896, 8440
                    hide_name = True
                    size = 37, 20
                ]

                junction Junction373 sp
                [
                    position = 8176, 8272
                ]

                junction Junction374 sp
                [
                    position = 8080, 8136
                ]

                junction Junction372 sp
                [
                    position = 8080, 8272
                ]

                connect Idc.p_node + as Connection4397
                connect Vess.n_node - as Connection4396
                connect Goto18 Junction373 as Connection4399
                connect Junction373 "Rate Transition7.out" as Connection4400
                connect Vdc Junction373 as Connection4401
                connect "Lead acid.Vdc" Junction374 as Connection4403
                connect Vess.in Junction374 as Connection4405
                connect Idc.out LPF_dc1.in as Connection4406
                connect LPF_dc1.out Goto54 as Connection4407
                connect Junction374 LPF_dc2.in as Connection4408
                connect LPF_dc2.out Junction372 as Connection4409
                connect Vess.p_node Idc.n_node as Connection4365
                connect VDC.in Junction372 as Connection4389
                connect "Rate Transition7.in" Junction372 as Connection4391
                connect Product1.out P.in as Connection4410
                connect From67 Product1.in as Connection4411
                connect From68 Product1.in1 as Connection4412

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    Nb {
                        label = "Number of cells in battery"
                        widget = edit
                        type = generic
                        default_value = "20"
                    }

                    Inom {
                        label = "Nominal current"
                        widget = edit
                        type = generic
                        default_value = "55"
                        unit = "A"
                    }

                    Ri {
                        label = "Internal resistance"
                        widget = edit
                        type = generic
                        default_value = "0.01"
                        unit = "Ohm"
                    }

                    Tamb {
                        label = "Ambient temperature"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "C"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_ess"
                        unit = "s"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        #Nb = 500;
                        #Inom = 50;
                        Cnom = Inom*10;
                        #Vch = V_ABC*1.8;
                        #Vdisch = V_ABC*2.2;
                        Vch = 1000;
                        Vdisch = 1000;
                        #Tamb = 30;
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        Nb = mdl.get_property_value(mdl.prop(item_handle, "Nb"))
                        Inom = mdl.get_property_value(mdl.prop(item_handle, "Inom"))
                        Ri = mdl.get_property_value(mdl.prop(item_handle, "Ri"))
                        Tamb = mdl.get_property_value(mdl.prop(item_handle, "Tamb"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        # HEADER STOP
                        #Nb = 500;
                        #Inom = 50;
                        Cnom = Inom*10;
                        #Vch = V_ABC*1.8;
                        #Vdisch = V_ABC*2.2;
                        Vch = 1000;
                        Vdisch = 1000;
                        #Tamb = 30;
                    ENDCODE
                }
            }
            [
                position = 8032, 8264
                size = 56, 72
            ]

            component Subsystem Measurement {
                layout = dynamic
                component "core/Voltage RMS" Vrms {
                    feed_forward = "true"
                    frequency = "sys_f"
                }
                [
                    position = 8144, 8152
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                    execution_rate = "Ts_m"
                    sig_output = "True"
                }
                [
                    position = 8192, 8088
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Va {
                    execution_rate = "Ts_m"
                    sig_output = "True"
                }
                [
                    position = 8240, 8152
                    rotation = right
                    size = 64, 32
                ]

                component "core/Single Phase Power Meter" "Single Phase Power Meter1" {
                    frequency = "60.0"
                }
                [
                    position = 8400, 8024
                    hide_name = True
                    size = 48, 48
                ]

                component gen_probe P {
                }
                [
                    position = 8520, 7992
                ]

                component gen_probe Q {
                }
                [
                    position = 8528, 8048
                ]

                port gnd {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8216
                    rotation = down
                ]

                port Gnd {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8216
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8096, 8088
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8088
                    rotation = down
                ]

                junction Junction644 pe
                [
                    position = 8240, 8088
                ]

                junction Junction646 pe
                [
                    position = 8144, 8088
                ]

                junction Junction647 pe
                [
                    position = 8240, 8216
                ]

                junction Junction648 pe
                [
                    position = 8144, 8216
                ]

                connect Junction646 A as Connection4975
                connect Junction644 a as Connection4976
                connect Ia.n_node Junction644 as Connection4955
                connect Va.p_node Junction644 as Connection4957
                connect Junction646 Ia.p_node as Connection4962
                connect Vrms.p_node Junction646 as Connection4963
                connect gnd Junction647 as Connection4978
                connect Junction647 Va.n_node as Connection4979
                [
                    breakpoints = 8240, 8216
                ]
                connect Gnd Junction648 as Connection4981
                connect Junction648 Junction647 as Connection4982
                connect Vrms.n_node Junction648 as Connection4983
                connect "Single Phase Power Meter1.Ia" Ia.out as Connection4984
                connect "Single Phase Power Meter1.Va" Va.out as Connection4985
                [
                    breakpoints = 8336, 8016; 8336, 8152
                ]
                connect "Single Phase Power Meter1.P" P.in as Connection4986
                connect Q.in "Single Phase Power Meter1.Q" as Connection4987
            }
            [
                position = 8384, 8144
                size = 48, 64
            ]

            port gnd {
                position = right:2
                kind = pe
            }
            [
                position = 8584, 8160
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8616, 8128
                rotation = down
            ]

            junction Junction643 sp
            [
                position = 7984, 8144
            ]

            junction Junction636 pe
            [
                position = 8264, 8128
            ]

            junction Junction637 pe
            [
                position = 8280, 8160
            ]

            junction Junction641 pe
            [
                position = 8104, 8128
            ]

            junction Junction642 pe
            [
                position = 8136, 8160
            ]

            connect "Core coupling.a" a as Connection4948
            connect "Core coupling.gnd" gnd as Connection4946
            connect ESS.Vdc Junction643 as Connection4950
            connect Junction643 PV.Vdc as Connection4951
            connect Inverter.Vdc Junction643 as Connection4952
            connect Inverter.A Junction636 as Connection4917
            [
                breakpoints = 8256, 8128
            ]
            connect Load.A Junction636 as Connection4919
            connect Inverter.Gnd Junction637 as Connection4920
            connect Load.Gnd Junction637 as Connection4922
            connect PV.+ Junction641 as Connection4940
            connect Junction641 Inverter.+ as Connection4941
            connect ESS.+ Junction641 as Connection4942
            connect PV.- Junction642 as Connection4943
            connect Junction642 Inverter.- as Connection4944
            connect ESS.- Junction642 as Connection4945
            connect Junction636 Measurement.A as Connection4957
            connect "Core coupling.A" Measurement.a as Connection4958
            connect Junction637 Measurement.Gnd as Connection4954
            [
                breakpoints = 8280, 8160; 8344, 8160
            ]
            connect "Core coupling.Gnd" Measurement.gnd as Connection4953

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6264, 7784
            scale = -1, 1
            size = 48, 64
        ]

        component "core/Signal Controlled Sinusoidal Voltage Source" Vs {
        }
        [
            position = 5840, 7768
            size = 64, 80
        ]

        component src_constant Constant1 {
            value = "120"
        }
        [
            position = 5728, 7728
            hide_name = True
        ]

        component src_constant Constant2 {
            value = "60"
        }
        [
            position = 5680, 7768
            hide_name = True
        ]

        component src_constant Constant3 {
            value = "0"
        }
        [
            position = 5720, 7824
            hide_name = True
        ]

        component pas_inductor L {
            inductance = "L"
        }
        [
            position = 6160, 7704
            rotation = down
        ]

        component pas_resistor R {
            resistance = "R"
        }
        [
            position = 6064, 7704
            rotation = down
        ]

        component Subsystem Measurement {
            layout = dynamic
            component "core/Voltage RMS" Vrms {
                feed_forward = "true"
                frequency = "sys_f"
            }
            [
                position = 8144, 8152
                rotation = right
                size = 64, 32
            ]

            component "core/Current Measurement" Ia {
                execution_rate = "Ts_m"
                sig_output = "True"
            }
            [
                position = 8192, 8088
                size = 64, 32
            ]

            component "core/Voltage Measurement" Va {
                execution_rate = "Ts_m"
                sig_output = "True"
            }
            [
                position = 8240, 8152
                rotation = right
                size = 64, 32
            ]

            component "core/Single Phase Power Meter" "Single Phase Power Meter1" {
                frequency = "60.0"
            }
            [
                position = 8400, 8024
                hide_name = True
                size = 48, 48
            ]

            component gen_probe P {
            }
            [
                position = 8520, 7992
            ]

            component gen_probe Q {
            }
            [
                position = 8528, 8048
            ]

            port gnd {
                position = right:2
                kind = pe
            }
            [
                position = 8288, 8216
                rotation = down
            ]

            port Gnd {
                position = left:2
                kind = pe
            }
            [
                position = 8096, 8216
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8096, 8088
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8288, 8088
                rotation = down
            ]

            junction Junction644 pe
            [
                position = 8240, 8088
            ]

            junction Junction646 pe
            [
                position = 8144, 8088
            ]

            junction Junction647 pe
            [
                position = 8240, 8216
            ]

            junction Junction648 pe
            [
                position = 8144, 8216
            ]

            connect Junction646 A as Connection4975
            connect Junction644 a as Connection4976
            connect Ia.n_node Junction644 as Connection4955
            connect Va.p_node Junction644 as Connection4957
            connect Junction646 Ia.p_node as Connection4962
            connect Vrms.p_node Junction646 as Connection4963
            connect gnd Junction647 as Connection4978
            connect Junction647 Va.n_node as Connection4979
            [
                breakpoints = 8240, 8216
            ]
            connect Gnd Junction648 as Connection4981
            connect Junction648 Junction647 as Connection4982
            connect Vrms.n_node Junction648 as Connection4983
            connect "Single Phase Power Meter1.Ia" Ia.out as Connection4984
            connect "Single Phase Power Meter1.Va" Va.out as Connection4985
            [
                breakpoints = 8336, 8016; 8336, 8152
            ]
            connect "Single Phase Power Meter1.P" P.in as Connection4986
            connect Q.in "Single Phase Power Meter1.Q" as Connection4987
        }
        [
            position = 5944, 7784
            size = 48, 192
        ]

        junction Junction1 pe
        [
            position = 5840, 7864
        ]

        connect Constant1.out Vs.Rms as Connection5039
        connect Constant2.out Vs.f as Connection5040
        connect Constant3.out Vs.Ph as Connection5041
        connect Microgrid.a L.p_node as Connection5049
        connect L.n_node R.p_node as Connection5050
        connect R.n_node Measurement.a as Connection5051
        connect Measurement.A Vs.p as Connection5052
        connect gnd2.node Junction1 as Connection5054
        connect Junction1 Vs.n as Connection5055
        [
            breakpoints = 5840, 7864
        ]
        connect Measurement.Gnd Junction1 as Connection5056
        connect Measurement.gnd Microgrid.gnd as Connection5057
    }

    default {
        gen_abs {
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_d_q2alpha_beta {
            alignment = "-pi/2"
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_math_fnc {
            mathematical_fn = "exponential"
            execution_rate = "inherit"
        }

        gen_pid_controller {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            upper_sat_lim = "1"
            lower_sat_lim = "-1"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_trigonometric {
            trigonometric_fn = "sin"
            execution_rate = "inherit"
        }

        gen_trigonometric {
            trigonometric_fn = "sin"
            execution_rate = "inherit"
        }

        gen_z_domain_transfer {
            domain = "Z-domain"
            method = "Zero-order hold"
            b_coeff = "[1]"
            a_coeff = "[1,-1]"
            init_states = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_z_domain_transfer {
            domain = "Z-domain"
            method = "Zero-order hold"
            b_coeff = "[1]"
            a_coeff = "[1,-1]"
            init_states = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_clock {
            execution_rate = "100e-6"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Rate Transition" {
            init_value = "0.0"
            execution_rate = "100e-6"
        }

        "core/Signal Controlled Current Source" {
            execution_rate = "inherit"
        }

        "core/Signal Controlled Sinusoidal Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Single Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100000.0"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
        }

        "core/Single Phase Inverter" {
            ctrl_src = "Digital input per switch"
            op_mode = "Fixed carrier frequency"
            carrier_freq = "10000.0"
            phase_op_mode = "Fixed carrier phase offset"
            carr_ph_offset = "[0.0, 180.0]"
            d_time = "5e-6"
            ref_sig_min_max = "[-1.0, 1.0]"
            load_mode = "on min"
            execution_rate = "inherit"
            Sa_top = "1"
            Sa_top_logic = "active high"
            Sa_bot = "2"
            Sa_bot_logic = "active high"
            Sb_top = "3"
            Sb_top_logic = "active high"
            Sb_bot = "4"
            Sb_bot_logic = "active high"
            losses_estimation = "False"
            Import_igbt_xml = "not selected"
            Import_diode_xml = "not selected"
            Vce = "1.3"
            Rce = "0"
            Vd = "1.2"
            Rd = "0"
            i_sw = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw = "[0.0, 600.0]"
            temp_sw = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            et_on_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*3.8e-3, 0.4*3.8e-3, 0.8*3.8e-3, 0.68*3.8e-3, 0.9*3.8e-3], [0.65*3.8e-3, 0.9*3.8e-3, 1.2*3.8e-3, 1.5*3.8e-3, 1.7*3.8e-3], [0.9*3.8e-3, 1.3*3.8e-3, 1.7*3.8e-3, 1.9*3.8e-3, 2.25*3.8e-3], [1.1*3.8e-3, 1.7*3.8e-3, 2.1*3.8e-3, 2.3*3.8e-3, 2.5*3.8e-3]]"
            et_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.1e-3, 0.4*2.1e-3, 0.8*2.1e-3, 0.68*2.1e-3, 0.9*2.1e-3], [0.65*2.1e-3, 0.9*2.1e-3, 1.2*2.1e-3, 1.5*2.1e-3, 1.7*2.1e-3], [0.9*2.1e-3, 1.3*2.1e-3, 1.7*2.1e-3, 1.9*2.1e-3, 2.25*2.1e-3], [1.1*2.1e-3, 1.7*2.1e-3, 2.1*2.1e-3, 2.3*2.1e-3, 2.5*2.1e-3]]"
            ed_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            temp_estimation = "False"
            thermal_networks_type = "Foster"
            switch_Rth = "[0.159, 0.133, 0.120, 0.038]"
            switch_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            switch_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            diode_Rth = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            loss_exec_rate = "100e-6"
            show_monitoring = "false"
            FSM_select = "converter"
            _control_property = "all high"
            pwm_enabling = "False"
            pwm_enable_di = "13"
            pwm_enable_inv = "active high"
            dtv_flag_en = "True"
        }

        "core/Single Phase Power Meter" {
            op_mode = "Fixed frequency"
            frequency = "50.0"
            period_timeout = "0.5"
            zero_crossing_calc_filter = "500.0"
            execution_rate = "inherit"
        }

        "core/Single phase PLL" {
            scheduling_mode = "Enable"
            offset_Hz = "55"
            delta_Hz_max = "10"
            vd_init = "200"
            angle_init = "0"
            k_SOGI = "0.4"
            kp_PLL_LOW = "4.81e3"
            kp_PLL_HIGH = "527"
            ki_PLL_LOW = "1.84e4"
            ki_PLL_HIGH = "2.22e3"
            kd_PLL_LOW = "-5.19"
            kd_PLL_HIGH = "-0.519"
            Tf_kd_PLL = "0.00108"
            fc_LPF_vd = "20"
            fc_LPF_wPLL = "100"
            fc_LPF_fPLL = "10"
            execution_rate = "inherit"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Voltage RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Ts = 1e-3
        sys_f = 60.0    # Hz
        sys_w = 2.0*np.pi*sys_f    #rad/s
        Ts_ess = 1e-3
        Ts_pv = 1
        Ts_inv = 20e-6
        Ts_m = 20e-6
        
        # Grid specs
        
        R=1e-3
        L=100e-6
        
        # Solar irradiance model parameters
        ang = 0
        ang_z = 20*np.pi/180
        ang_t = 20*np.pi/180
        rho = 0.2
        GHI = 304
        ETR = 346
        
        # EV charging station
        Ts_ev = 200e-6  #s
        #Tbatt = 200e-6
        T_charging_station = 200e-6
        
        ex_rate=200e-6
        #Tprotection = 200e-6
        
        #base values
        Vb = 400     #V
        Pb = 250e3   #W
        fb = 600     #Hz
        
        #filter parameters
        Lf = 1e-6    #H
        Cf = 2000e-6 #F
        
        #machine parameters
        pms = 2      #number of pole pairs 
        Rs = 9e-3    #Ω
        Rr = 15e-3   #Ω
        Lls = 1e-5   #H
        Llr = 1e-5   #H
        Lm = 8e-3    #H
        
        #maximum torque slip lookup table
        f =  [5,   100, 110,  120,   130,  140,  150,   160,   180 , 200,   225,  250,  275,   300,   350,  400,    450,   500  , 550,   600]
        sp = [0.5, 0.5, 0.6, 0.655, 0.804, 0.76, 0.72, 0.681, 0.616, 0.56, 0.506, 0.46, 0.42, 0.387, 0.334, 0.294, 0.262, 0.236, 0.215, 0.197]
        
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        # RMS, phase and power calculation execuiton rate
        Rshunt_msr = 1e4
        
        
        # -------- Calculating R and L values for load ----------
        # --------- Functions definition ---------
        def calc_R(V,P,S):
            R = V**2*P/S**2
            return R
            
        def calc_L(V,Q,S):
            XL = V**2*Q/S**2
            L = XL/(2*np.pi*freq)
            return L
        
        # Constants
        freq = 60.0
        # Phase 1 load configuration
        P1 = 1800000.0/3.0
        pf1 = 0.9
        S1 = P1/pf1
        Q1 = np.sqrt(S1**2-P1**2)
        # Phase 2 load configuration
        P2 = 1800000.0/3.0
        pf2 = 0.9
        S2 = P2/pf2
        Q2 = np.sqrt(S2**2-P2**2)
        # Phase 3 load configuration
        P3 = 1800000.0/3.0
        pf3 = 0.9
        S3 = P3/pf3
        Q3 = np.sqrt(S3**2-P3**2)
        
        # Voltages measured at node 4
        V1_node4 = 1920.0
        V2_node4 = 2054.0
        V3_node4 = 1986.0
        
        # Calulating R and L values 
        R1 = calc_R(V1_node4, P1, S1)
        R2 = calc_R(V2_node4, P2, S2)
        R3 = calc_R(V3_node4, P3, S3)
        
        L1 = calc_L(V1_node4, Q1, S1)
        L2 = calc_L(V2_node4, Q2, S2)
        L3 = calc_L(V3_node4, Q3, S3)
    ENDCODE
}
