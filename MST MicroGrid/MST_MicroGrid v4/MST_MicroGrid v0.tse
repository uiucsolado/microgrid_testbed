version = 4.2

//
// Saved by sw version: 2020.1 SP2
// Save timestamp: 01-Sep-2020 @ 02:16:55 PM
//

model "MST_MicroGrid v0" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 2
        simulation_method = exact
        simulation_time_step = 4e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 5e-05
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
    }

    component Subsystem Root {
        component src_ground gnd2 {
        }
        [
            position = 6400, 7112
            rotation = down
            hide_name = True
        ]

        component "core/Three Phase Voltage Source" Vs1 {
            init_frequency = "60.0"
        }
        [
            position = 6400, 7240
            rotation = right
            scale = -1, 1
            size = 62, 256
        ]

        component Subsystem PCC {
            layout = dynamic
            component "core/Triple Pole Single Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8136, 8184
                rotation = left
                size = 64, 256
            ]

            component gen_sr_ff "SR Flip Flop1" {
            }
            [
                position = 7712, 8392
            ]

            component src_digital_input "Digital Input Close" {
                addr = "8"
                execution_rate = "Ts"
                invert = "true"
            }
            [
                position = 7592, 8376
            ]

            component src_digital_input "Digital Input Trip" {
                addr = "9"
                execution_rate = "Ts"
                invert = "true"
            }
            [
                position = 7592, 8440
            ]

            component gen_data_type_conversion "Data Type Conversion1" {
            }
            [
                position = 7880, 8184
                hide_name = True
                scale = -1, 1
            ]

            component gen_probe P {
            }
            [
                position = 7536, 7928
                scale = -1, 1
            ]

            component gen_probe Q {
            }
            [
                position = 7536, 7872
                scale = -1, 1
            ]

            component gen_gain Gain3 {
                gain = "100"
            }
            [
                position = 7600, 8024
                hide_name = True
                scale = -1, 1
            ]

            component gen_gain Gain2 {
                gain = "10"
            }
            [
                position = 7624, 8000
                hide_name = True
                scale = -1, 1
            ]

            component gen_gain Gain1 {
                gain = "10"
            }
            [
                position = 7664, 7976
                hide_name = True
                scale = -1, -1
            ]

            component gen_gain "W -> kW" {
                gain = ".001"
            }
            [
                position = 7752, 7976
                scale = -1, 1
            ]

            component gen_gain "var -> kvar" {
                gain = ".001"
            }
            [
                position = 7704, 8000
                scale = -1, 1
            ]

            component gen_gain Gain4 {
                gain = "100"
            }
            [
                position = 7648, 8048
                hide_name = True
                scale = -1, 1
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                port Ground {
                    position = bottom:auto
                    kind = pe
                }
                [
                    position = 7648, 8504
                    rotation = left
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1469 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                connect A Junction1470 as Connection390
                connect B Junction1471 as Connection393
                connect C Junction1472 as Connection396
                connect Ground Junction1469 as Connection384
                connect Junction1421 Junction1469 as Connection382
                connect Junction1469 VC.n_node as Connection383
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
            }
            [
                position = 8136, 8312
                rotation = right
                scale = -1, 1
                size = 112, 232
            ]

            component Subsystem "PCC Measurements" {
                layout = dynamic
                component gen_terminator Termination3 {
                }
                [
                    position = 8008, 8088
                    hide_name = True
                    scale = -1, 1
                ]

                component "core/Three phase PLL" "Three phase PLL1" {
                }
                [
                    position = 8088, 8096
                    scale = -1, 1
                    size = 64, 128
                ]

                component gen_terminator Termination5 {
                }
                [
                    position = 8008, 8136
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_PQ_transform "Power Meter1" {
                }
                [
                    position = 8088, 8360
                    scale = -1, 1
                ]

                component gen_terminator Termination6 {
                }
                [
                    position = 8016, 8352
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_rms_value "RMS value1" {
                }
                [
                    position = 8088, 8192
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 8416, 8256
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_comparator Comparator1 {
                }
                [
                    position = 7912, 8272
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_comparator Comparator2 {
                }
                [
                    position = 7912, 8464
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination7 {
                }
                [
                    position = 7976, 8368
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination4 {
                }
                [
                    position = 7968, 8120
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 7968, 8072
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination8 {
                }
                [
                    position = 8016, 8384
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8008, 8056
                    hide_name = True
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                }
                [
                    position = 8040, 8264
                    hide_name = True
                    scale = -1, 1
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                }
                [
                    position = 8040, 8472
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 8416, 8184
                    hide_name = True
                    scale = -1, 1
                ]

                port f {
                    label = "Frequency"
                    position = left:4
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7920, 8104
                    scale = -1, 1
                ]

                port P {
                    label = "Real Power"
                    position = left:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7976, 8320
                    scale = -1, 1
                ]

                port Q {
                    label = "Reactive Power"
                    position = left:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8336
                    scale = -1, 1
                ]

                port pf {
                    label = "Power Factor"
                    position = left:6
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8400
                    scale = -1, 1
                ]

                port I {
                    label = "I"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8488, 8184
                    rotation = down
                ]

                port Vrms {
                    label = "Voltage"
                    position = left:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7984, 8192
                    scale = -1, 1
                ]

                port V {
                    label = "V"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8488, 8256
                    rotation = down
                ]

                port "P direction" {
                    label = "P Import/Exprot"
                    position = left:9
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7848, 8272
                    scale = -1, 1
                ]

                port "pf lead lag" {
                    label = "pf lead/lag"
                    position = left:10
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7848, 8464
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8184
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto1 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8160
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                tag From1 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8064
                    hide_name = True
                    scale = -1, 1
                ]

                tag From2 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8096
                    hide_name = True
                    scale = -1, 1
                ]

                tag From9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8400
                    hide_name = True
                    scale = -1, 1
                ]

                tag From8 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8384
                    hide_name = True
                    scale = -1, 1
                ]

                tag From3 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8128
                    hide_name = True
                    scale = -1, 1
                ]

                tag From4 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8352
                    hide_name = True
                    scale = -1, 1
                ]

                tag From10 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto6 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8280
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto5 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8256
                    hide_name = True
                    scale = -1, 1
                ]

                tag From5 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8320
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8208
                    hide_name = True
                    scale = -1, 1
                ]

                tag From6 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8336
                    hide_name = True
                    scale = -1, 1
                ]

                tag From7 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8368
                    hide_name = True
                    scale = -1, 1
                ]

                junction Junction1 sp
                [
                    position = 8016, 8320
                ]

                junction Junction2 sp
                [
                    position = 7976, 8400
                ]

                connect "Bus Split1.out" Goto4 as Connection27
                connect "Bus Split1.out1" Goto5 as Connection26
                connect "Bus Split1.out2" Goto6 as Connection28
                connect "Bus Split1.in" V as Connection47
                connect "Bus Split2.out" Goto1 as Connection25
                connect "Bus Split2.out2" Goto3 as Connection24
                connect "Bus Split2.in" I as Connection48
                connect Comparator1.in1 Junction1 as Connection57
                connect Comparator2.in1 Junction2 as Connection60
                connect Constant1.out Comparator1.in2 as Connection54
                connect Constant2.out Comparator2.in2 as Connection61
                connect From1 "Three phase PLL1.va" as Connection29
                connect From10 "RMS value1.in" as Connection46
                connect From2 "Three phase PLL1.vb" as Connection30
                connect From3 "Three phase PLL1.vc" as Connection31
                connect From4 "Power Meter1.vc" as Connection37
                connect From5 "Power Meter1.va" as Connection39
                connect From6 "Power Meter1.vb" as Connection38
                connect From7 "Power Meter1.ia" as Connection41
                connect From9 "Power Meter1.ic" as Connection40
                connect Goto2 "Bus Split2.out1" as Connection23
                connect Junction1 P as Connection56
                connect Junction2 pf as Connection59
                connect "P direction" Comparator1.out as Connection62
                connect "Power Meter1.ib" From8 as Connection42
                connect "Power Meter1.Pdc" Junction1 as Connection55
                connect "Power Meter1.k_factor" Junction2 as Connection58
                connect "Power Meter1.Qdc" Q as Connection53
                connect "RMS value1.out" Vrms as Connection50
                connect Termination1.in "Three phase PLL1.d_axis" as Connection32
                connect Termination2.in "Three phase PLL1.q_axis" as Connection33
                connect Termination3.in "Three phase PLL1.zero_axis" as Connection34
                connect Termination4.in "Three phase PLL1.theta" as Connection35
                connect Termination5.in "Three phase PLL1.sin_theta" as Connection36
                connect Termination6.in "Power Meter1.Pac" as Connection43
                connect Termination7.in "Power Meter1.Qac" as Connection44
                connect Termination8.in "Power Meter1.apparent" as Connection45
                connect "Three phase PLL1.freq" f as Connection52
                connect "pf lead lag" Comparator2.out as Connection63
            }
            [
                position = 7864, 8048
                size = 96, 184
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                    size = 64, 32
                ]

                port Ground {
                    position = bottom:auto
                    kind = pe
                }
                [
                    position = 7648, 8504
                    rotation = left
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1469 pe
                [
                    position = 7648, 8432
                ]

                connect A IA.p_node as Connection379
                connect B IB.p_node as Connection380
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C IC.p_node as Connection381
                connect Ground Junction1469 as Connection384
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1469 as Connection382
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1469 VC.n_node as Connection383
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
            }
            [
                position = 8136, 8048
                rotation = right
                scale = -1, 1
                size = 112, 232
            ]

            component src_scada_input Grid_Connect {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 7672, 8248
            ]

            component gen_logic_op "Logical operator2" {
            }
            [
                position = 7840, 8288
                hide_name = True
            ]

            component src_ground gnd2 {
            }
            [
                position = 8472, 8272
                hide_name = True
            ]

            port A {
                label = "A"
                position = top:1
                kind = pe
            }
            [
                position = 8040, 7944
                rotation = right
            ]

            port B {
                label = "B"
                position = top:2
                kind = pe
            }
            [
                position = 8136, 7944
                rotation = right
            ]

            port C {
                label = "C"
                position = top:3
                kind = pe
            }
            [
                position = 8232, 7944
                rotation = right
            ]

            port a {
                label = "a"
                position = bottom:1
                kind = pe
            }
            [
                position = 8040, 8424
                rotation = left
            ]

            port b {
                label = "b"
                position = bottom:2
                kind = pe
            }
            [
                position = 8136, 8424
                rotation = left
            ]

            port c {
                label = "c"
                position = bottom:3
                kind = pe
            }
            [
                position = 8232, 8424
                rotation = left
            ]

            tag Goto2 {
                value = "Q"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8000
                hide_name = True
                scale = -1, 1
            ]

            tag Goto1 {
                value = "P"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 7976
                hide_name = True
                scale = -1, 1
            ]

            tag Goto5 {
                value = "pf"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8072
                hide_name = True
                scale = -1, 1
            ]

            tag Goto4 {
                value = "f"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8048
                hide_name = True
                scale = -1, 1
            ]

            tag Goto6 {
                value = "P sign"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8096
                hide_name = True
                scale = -1, 1
            ]

            tag Goto8 {
                value = "CB Status"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7800, 8184
                hide_name = True
                scale = -1, 1
            ]

            tag Goto7 {
                value = "pf lead/lag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8120
                hide_name = True
                scale = -1, 1
            ]

            tag Goto3 {
                value = "V"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8024
                hide_name = True
                scale = -1, 1
            ]

            tag Goto9 {
                value = "PCC_status"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 7640, 8320
                hide_name = True
                scale = -1, 1
            ]

            junction Junction1506 sp
            [
                position = 7784, 7976
            ]

            junction Junction1507 sp
            [
                position = 7800, 8000
            ]

            junction Junction1508 sp
            [
                position = 7952, 8184
            ]

            junction Junction1509 sp
            [
                position = 7760, 8248
            ]

            junction Junction1510 pe
            [
                position = 8392, 8184
            ]

            connect A Meas1.A as Connection45
            connect "Digital Input Close.out" "SR Flip Flop1.s_in" as Connection1075
            [
                breakpoints = 7664, 8376
            ]
            connect "Digital Input Trip.out" "SR Flip Flop1.r_in" as Connection1066
            connect Gain1.in "W -> kW.out" as Connection1085
            connect Gain2.in "var -> kvar.out" as Connection1088
            connect Gain3.in "PCC Measurements.Vrms" as Connection1091
            connect Gain4.out Goto4 as Connection1093
            connect Goto1 Gain1.out as Connection1094
            [
                breakpoints = 7472, 7976; 7568, 7976
            ]
            connect Goto2 Gain2.out as Connection1095
            [
                breakpoints = 7472, 8000; 7584, 8000
            ]
            connect Goto3 Gain3.out as Connection1090
            connect Goto5 "PCC Measurements.pf" as Connection27
            connect Goto6 "PCC Measurements.P direction" as Connection28
            connect Goto7 "PCC Measurements.pf lead lag" as Connection29
            connect Goto8 "Data Type Conversion1.out" as Connection1076
            connect Junction1506 "PCC Measurements.P" as Connection1101
            connect Junction1507 "PCC Measurements.Q" as Connection1104
            connect Meas1.B B as Connection44
            connect Meas1.C C as Connection43
            connect Meas1.I "PCC Measurements.I" as Connection52
            connect Meas1.b S1.b_out as Connection41
            connect Meas1.a S1.a_out as Connection40
            connect Meas2.C S1.c_in as Connection48
            connect Meas2.b b as Connection50
            connect Meas2.c c as Connection49
            connect P.in Junction1506 as Connection1102
            connect "PCC Measurements.f" Gain4.in as Connection1092
            connect "PCC Measurements.V" Meas1.V as Connection53
            connect Q.in Junction1507 as Connection1105
            connect S1.c_out Meas1.c as Connection42
            connect S1.b_in Meas2.B as Connection47
            connect S1.a_in Meas2.A as Connection46
            connect "W -> kW.in" Junction1506 as Connection1100
            connect a Meas2.a as Connection51
            connect "var -> kvar.in" Junction1507 as Connection1103
            [
                breakpoints = 7784, 8000
            ]
            connect "SR Flip Flop1.out" "Logical operator2.in1" as Connection1941
            connect "Data Type Conversion1.in" Junction1508 as Connection1942
            connect Junction1508 S1.ctrl_in as Connection1943
            [
                breakpoints = 7944, 8184; 7944, 8184
            ]
            connect "Logical operator2.out" Junction1508 as Connection1944
            connect Grid_Connect.out Junction1509 as Connection1945
            connect Junction1509 "Logical operator2.in" as Connection1946
            connect Goto9 Junction1509 as Connection1947
            connect Meas1.Ground Junction1510 as Connection1949
            connect Junction1510 Meas2.Ground as Connection1950
            [
                breakpoints = 8392, 8192
            ]
            connect gnd2.node Junction1510 as Connection1951
        }
        [
            position = 6400, 7712
            size = 80, 48
        ]

        component "core/Voltage RMS" Vrms_grid {
            feed_forward = "true"
            frequency = "sys_f"
        }
        [
            position = 6336, 7368
            size = 64, 32
        ]

        component "core/RL Section" "RL Section" {
            length_mile = "0.5"
            resistance_per_l_mile = "1e-2"
        }
        [
            position = 6400, 7512
            rotation = left
            scale = -1, 1
            size = 256, 56
        ]

        component "core/RL Section" "RL Section1" {
            inductance_per_l_mile = "L"
            length_mile = "1"
            resistance_per_l_mile = "R"
        }
        [
            position = 6160, 7864
            hide_name = True
            scale = -1, 1
            size = 256, 56
        ]

        component Subsystem Microgrid1 {
            layout = dynamic
            component Subsystem PV {
                layout = dynamic
                component gen_probe SI {
                }
                [
                    position = 7320, 8144
                    scale = -1, 1
                ]

                component Subsystem "Solar irradiance" {
                    layout = dynamic
                    component gen_c_function "C function2" {
                        global_variables = "real k;"
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "GHI inherit;ETR inherit"
                        in_terminal_labels = "[(\'GHI\', True), (\'ETR\', True)]"
                        in_terminal_properties = "real GHI;real ETR;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit"
                        out_terminal_dimensions_str = "f inherit;Gdh inherit"
                        out_terminal_labels = "[(\'f\', True), (\'Gdh\', True)]"
                        out_terminal_properties = "real f;real Gdh;"
                        output_fnc = "/*Begin code section*/
if (k<=0.21) f = 0.995-0.081*k;
else if (k>0.76) f = 0.18;
else f = 0.724 + 2.738*k - 8.321*k*k + 4.967*k*k*k;
Gdh = f*GHI;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
k = GHI/ETR;
/*End code section*/"
                    }
                    [
                        position = 7480, 7976
                        hide_name = True
                        size = 56, 72
                    ]

                    component src_constant Constant14 {
                        execution_rate = "Ts_pv"
                        value = "rho"
                    }
                    [
                        position = 7024, 8128
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function1" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 7904, 7960
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function2" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 7904, 8016
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                        signs = "+-"
                    }
                    [
                        position = 7792, 7888
                        hide_name = True
                    ]

                    component gen_product Product2 {
                        signs = "**/"
                    }
                    [
                        position = 8040, 7920
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                        signs = "+-"
                    }
                    [
                        position = 7480, 8144
                        hide_name = True
                    ]

                    component gen_product Product3 {
                        signs = "***"
                    }
                    [
                        position = 7632, 8160
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function3" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 7344, 8152
                        hide_name = True
                    ]

                    component src_constant Constant15 {
                        execution_rate = "Ts_pv"
                    }
                    [
                        position = 7336, 8096
                        hide_name = True
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 7984, 8192
                        hide_name = True
                    ]

                    component gen_sum Sum5 {
                        signs = "+-"
                    }
                    [
                        position = 8088, 8168
                        hide_name = True
                    ]

                    component src_constant Constant17 {
                        execution_rate = "Ts_pv"
                    }
                    [
                        position = 7944, 8120
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function4" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 7408, 8400
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "0.5"
                    }
                    [
                        position = 7320, 8400
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function5" {
                    }
                    [
                        position = 7408, 8464
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "0.5"
                    }
                    [
                        position = 7320, 8464
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function6" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 7408, 8528
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function7" {
                    }
                    [
                        position = 7408, 8584
                        hide_name = True
                    ]

                    component gen_c_function "C function3" {
                        in_terminal_dimensions = "1;1;4"
                        in_terminal_dimensions_str = "Gdh 1;fk 1;x 4"
                        in_terminal_labels = "[(\'Gdh\', True), (\'fk\', True), (\'x\', True)]"
                        in_terminal_properties = "real Gdh;real fk;real x;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "1"
                        out_terminal_dimensions_str = "Gd 1"
                        out_terminal_labels = "[(\'Gd\', True)]"
                        out_terminal_properties = "real Gd;"
                        output_fnc = "/*Begin code section*/
Gd = Gdh*0.5*(1+x[0])*(1+fk*x[1]*x[1]*x[1])*(1+fk*x[2]*x[2]*x[3]*x[3]*x[3]);
/*End code section*/"
                    }
                    [
                        position = 7736, 8432
                        hide_name = True
                        size = 104, 128
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "4"
                    }
                    [
                        position = 7544, 8480
                    ]

                    component gen_sum Sum6 {
                        signs = "+++"
                    }
                    [
                        position = 8016, 8416
                        hide_name = True
                    ]

                    component gen_gain Gain3 {
                        gain = "0.5"
                    }
                    [
                        position = 7712, 8160
                        hide_name = True
                    ]

                    component src_scada_input ang_t {
                        def_value = "30"
                        execution_rate = "Ts_pv"
                        unit = "deg"
                    }
                    [
                        position = 6920, 8080
                    ]

                    component gen_gain Gain4 {
                        gain = "np.pi/180"
                    }
                    [
                        position = 7000, 8080
                        hide_name = True
                    ]

                    component gen_gain Gain5 {
                        gain = "np.pi/180"
                    }
                    [
                        position = 7008, 8448
                        hide_name = True
                    ]

                    component gen_sum Sum7 {
                        signs = "+-"
                    }
                    [
                        position = 7024, 8528
                        hide_name = True
                    ]

                    component "core/Rate Transition" "Rate Transition3" {
                        execution_rate = "Ts_pv"
                    }
                    [
                        position = 7080, 8448
                        hide_name = True
                        size = 32, 32
                    ]

                    component gen_c_function "C function4" {
                        execution_rate = "Ts_pv"
                        global_variables = "real k;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "clk inherit"
                        in_terminal_labels = "[(\'clk\', True)]"
                        in_terminal_properties = "real clk;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit;inherit;inherit"
                        out_terminal_dimensions_str = "GHI inherit;ETR inherit;ang_z inherit"
                        out_terminal_labels = "[(\'GHI\', True), (\'ETR\', True), (\'ang_z\', True)]"
                        out_terminal_properties = "real GHI;real ETR;real ang_z;"
                        output_fnc = "/*Begin code section*/
if (clk<1800){
    GHI = 300;
    ETR = 330;
    ang_z = 2.5;
}
else if (clk<3600){
    GHI = 330;
    ETR = 393;
    ang_z = 2.4;
}
else if (clk<5400){
    GHI = 399;
    ETR = 430;
    ang_z = 2.4;
}
else {
    GHI = 510;
    ETR = 510;
    ang_z = 2.4;
}
/*End code section*/"
                    }
                    [
                        position = 6896, 8368
                        hide_name = True
                        size = 56, 72
                    ]

                    component src_clock Clock1 {
                        execution_rate = "1"
                    }
                    [
                        position = 6816, 8368
                    ]

                    port SI {
                        position = auto:auto
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8176, 8416
                    ]

                    tag From66 {
                        value = "GHI"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 7960
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From67 {
                        value = "ETR"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 7992
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto35 {
                        value = "f"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7608, 7960
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto36 {
                        value = "Gdh"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7608, 7992
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From68 {
                        value = "ang"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 7960
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From69 {
                        value = "ang_z"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7784, 8016
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto37 {
                        value = "GHI"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7032, 8336
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto38 {
                        value = "ETR"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7032, 8368
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto39 {
                        value = "ang"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8528
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto40 {
                        value = "ang_z"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7160, 8448
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto41 {
                        value = "ang_t"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8080
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto42 {
                        value = "rho"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8128
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From70 {
                        value = "GHI"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7696, 7880
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From71 {
                        value = "Gdh"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7696, 7912
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto43 {
                        value = "Gb"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8152, 7920
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto44 {
                        value = "Gr"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7800, 8160
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From74 {
                        value = "GHI"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8200
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From72 {
                        value = "ang_t"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7224, 8152
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From75 {
                        value = "rho"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8232
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From76 {
                        value = "f"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7864, 8184
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto45 {
                        value = "fk"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8216, 8168
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From78 {
                        value = "ang_t"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7240, 8400
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From79 {
                        value = "ang"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8528
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From80 {
                        value = "ang_z"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8584
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From81 {
                        value = "Gdh"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7544, 8368
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From82 {
                        value = "fk"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7544, 8408
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From83 {
                        value = "Gb"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7920, 8376
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From84 {
                        value = "Gr"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7920, 8416
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From85 {
                        value = "ang_z"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6936, 8544
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From86 {
                        value = "ang_t"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 6936, 8512
                        hide_name = True
                        size = 37, 20
                    ]

                    junction Junction1 sp
                    [
                        position = 7920, 8184
                    ]

                    junction Junction2 sp
                    [
                        position = 7272, 8400
                    ]

                    connect From66 "C function2.GHI" as Connection61
                    connect From67 "C function2.ETR" as Connection62
                    connect "C function2.f" Goto35 as Connection63
                    connect "C function2.Gdh" Goto36 as Connection64
                    connect Constant14.out Goto42 as Connection70
                    connect From68 "Trigonometric function1.in" as Connection71
                    connect From69 "Trigonometric function2.in" as Connection72
                    connect From70 Sum3.in as Connection73
                    connect From71 Sum3.in1 as Connection74
                    connect Product2.in Sum3.out as Connection75
                    connect Product2.in1 "Trigonometric function1.out" as Connection76
                    connect "Trigonometric function2.out" Product2.in2 as Connection77
                    connect Product2.out Goto43 as Connection78
                    connect Product3.in Sum4.out as Connection83
                    connect From72 "Trigonometric function3.in" as Connection79
                    connect "Trigonometric function3.out" Sum4.in1 as Connection87
                    connect Constant15.out Sum4.in as Connection88
                    connect From74 Product3.in1 as Connection90
                    [
                        breakpoints = 7528, 8200; 7528, 8160
                    ]
                    connect From75 Product3.in2 as Connection91
                    [
                        breakpoints = 7560, 8232; 7560, 8176
                    ]
                    connect Constant17.out Sum5.in as Connection92
                    connect From76 Junction1 as Connection94
                    connect Junction1 Product4.in as Connection95
                    connect Product4.in1 Junction1 as Connection96
                    connect Product4.out Sum5.in1 as Connection97
                    connect Sum5.out Goto45 as Connection98
                    connect Gain1.out "Trigonometric function4.in" as Connection103
                    connect Gain2.out "Trigonometric function5.in" as Connection104
                    connect From79 "Trigonometric function6.in" as Connection105
                    connect From80 "Trigonometric function7.in" as Connection106
                    connect From78 Junction2 as Connection107
                    connect Junction2 Gain1.in as Connection108
                    connect Gain2.in Junction2 as Connection109
                    connect "Trigonometric function4.out" "Bus Join1.in" as Connection110
                    connect "Trigonometric function5.out" "Bus Join1.in1" as Connection111
                    connect "Trigonometric function6.out" "Bus Join1.in2" as Connection112
                    connect "Trigonometric function7.out" "Bus Join1.in3" as Connection113
                    [
                        breakpoints = 7472, 8584; 7472, 8504
                    ]
                    connect From81 "C function3.Gdh" as Connection114
                    connect From82 "C function3.fk" as Connection115
                    connect "Bus Join1.out" "C function3.x" as Connection116
                    connect "C function3.Gd" Sum6.in2 as Connection117
                    connect From83 Sum6.in as Connection118
                    connect From84 Sum6.in1 as Connection119
                    connect SI Sum6.out as Connection120
                    connect Product3.out Gain3.in as Connection121
                    connect Gain3.out Goto44 as Connection122
                    connect ang_t.out Gain4.in as Connection123
                    connect Gain4.out Goto41 as Connection124
                    connect Sum7.out Goto39 as Connection129
                    connect From85 Sum7.in1 as Connection130
                    connect From86 Sum7.in as Connection131
                    connect Gain5.out "Rate Transition3.in" as Connection136
                    connect "Rate Transition3.out" Goto40 as Connection137
                    connect Clock1.out "C function4.clk" as Connection138
                    connect "C function4.GHI" Goto37 as Connection139
                    connect "C function4.ETR" Goto38 as Connection140
                    connect "C function4.ang_z" Gain5.in as Connection141
                }
                [
                    position = 7136, 8048
                    size = 96, 216
                ]

                component "core/Signal Controlled Current Source" Isp1 {
                }
                [
                    position = 7768, 8048
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_c_function "C function1" {
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "Vdc inherit;SI inherit;Tamb inherit"
                    in_terminal_labels = "[(\'Vdc\', True), (\'SI\', True), (\'Tamb\', True)]"
                    in_terminal_properties = "real Vdc;real SI;real Tamb;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit;inherit"
                    out_terminal_dimensions_str = "Ipv inherit;Ppv inherit"
                    out_terminal_labels = "[(\'Ipv\', True), (\'Ppv\', True)]"
                    out_terminal_properties = "real Ipv;real Ppv;"
                    output_fnc = "/*Begin code section*/
Ppv = SI*0.15*100;
Ipv = Ppv/Vdc;
/*End code section*/"
                }
                [
                    position = 7624, 8048
                    size = 80, 112
                ]

                component src_constant Constant14 {
                    execution_rate = "Ts_pv"
                    value = "30"
                }
                [
                    position = 7488, 8136
                    hide_name = True
                ]

                component gen_probe P {
                }
                [
                    position = 7632, 8152
                    scale = -1, 1
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "Ts_pv"
                }
                [
                    position = 7520, 8000
                    hide_name = True
                    size = 32, 32
                ]

                port + {
                    position = right:1
                    kind = pe
                }
                [
                    position = 7936, 7968
                    scale = -1, 1
                ]

                port - {
                    position = right:2
                    kind = pe
                }
                [
                    position = 7936, 8128
                    scale = -1, 1
                ]

                port Vdc {
                    position = auto:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7456, 8000
                ]

                tag Goto42 {
                    value = "SI"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7464, 7960
                    hide_name = True
                    size = 60, 20
                ]

                junction Junction4 sp
                [
                    position = 7312, 8048
                ]

                junction Junction5 sp
                [
                    position = 7408, 8048
                ]

                connect "Solar irradiance.SI" Junction4 as Connection4356
                connect Goto42 Junction4 as Connection4373
                [
                    breakpoints = 7368, 7960; 7368, 7888; 7312, 7960; 7312, 7960
                ]
                connect Constant14.out "C function1.Tamb" as Connection4374
                connect Junction4 Junction5 as Connection4375
                [
                    breakpoints = 7312, 8048; 7312, 8048
                ]
                connect Junction5 SI.in as Connection4376
                [
                    breakpoints = 7408, 8048
                ]
                connect "C function1.SI" Junction5 as Connection4377
                connect Isp1.in "C function1.Ipv" as Connection4378
                connect Isp1.p_node + as Connection4379
                connect Isp1.n_node - as Connection4380
                connect "C function1.Ppv" P.in as Connection4382
                connect Vdc "Rate Transition1.in" as Connection4383
                connect "Rate Transition1.out" "C function1.Vdc" as Connection4384
            }
            [
                position = 8032, 8144
                size = 56, 64
            ]

            component Subsystem Inverter {
                layout = dynamic
                component pas_capacitor Cc {
                    capacitance = "C_s"
                }
                [
                    position = 8320, 8352
                    rotation = right
                ]

                component pas_resistor Rsha {
                    resistance = "R_s"
                }
                [
                    position = 8160, 8256
                    rotation = left
                    scale = -1, 1
                ]

                component "core/Current Measurement" Ia1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8984, 7904
                    size = 64, 32
                ]

                component pas_inductor Lb {
                    inductance = "L_i"
                }
                [
                    position = 7888, 8000
                    rotation = down
                ]

                component pas_capacitor Cb {
                    capacitance = "C_s"
                }
                [
                    position = 8240, 8352
                    rotation = right
                ]

                component pas_inductor Lc {
                    inductance = "L_i"
                }
                [
                    position = 7888, 8096
                    rotation = down
                ]

                component pas_inductor La {
                    inductance = "L_i"
                }
                [
                    position = 7888, 7904
                    rotation = down
                ]

                component pas_resistor Rshb {
                    resistance = "R_s"
                }
                [
                    position = 8240, 8256
                    rotation = left
                    scale = -1, 1
                ]

                component pas_inductor La1 {
                    inductance = "L_o"
                }
                [
                    position = 8832, 7904
                    rotation = down
                ]

                component pas_resistor Rshc {
                    resistance = "R_s"
                }
                [
                    position = 8320, 8256
                    rotation = left
                    scale = -1, 1
                ]

                component pas_inductor Lb1 {
                    inductance = "L_o"
                }
                [
                    position = 8832, 8000
                    rotation = down
                ]

                component "core/Current Measurement" Ic1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8984, 8096
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Vb {
                    addr = "9"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8560, 8208
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Va {
                    addr = "7"
                    execution_rate = "Ts"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8496, 8144
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" Ib {
                    addr = "15"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8032, 8000
                    scale = 1, -1
                    size = 64, 32
                ]

                component "core/Current Measurement" Ib1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8984, 8000
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7984, 7904
                    scale = 1, -1
                    size = 64, 32
                ]

                component pas_capacitor Ca {
                    capacitance = "C_s"
                }
                [
                    position = 8160, 8352
                    rotation = right
                ]

                component "core/Voltage Measurement" Vc {
                    addr = "11"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8640, 8272
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" Ic {
                    addr = "16"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8096, 8096
                    scale = 1, -1
                    size = 64, 32
                ]

                component pas_inductor Lc1 {
                    inductance = "L_o"
                }
                [
                    position = 8832, 8096
                    rotation = down
                ]

                component "core/Three Phase Inverter" "Three Phase Inverter" {
                    ctrl_src = "Internal modulator"
                }
                [
                    position = 7616, 8000
                    size = 127, 256
                ]

                component pas_capacitor Cdc {
                    capacitance = "300e-6"
                    initial_voltage = "1000"
                }
                [
                    position = 7464, 8000
                    rotation = right
                ]

                component Subsystem Control {
                    layout = dynamic
                    component Subsystem Controller {
                        layout = dynamic
                        component gen_product Product13 {
                        }
                        [
                            position = 7368, 8464
                            scale = -1, 1
                        ]

                        component gen_gain Gain4 {
                            gain = "1/T_m"
                        }
                        [
                            position = 6992, 8232
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_gain Gain15 {
                            gain = "S"
                        }
                        [
                            position = 7136, 8168
                            rotation = right
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_probe Q1 {
                        }
                        [
                            position = 7072, 8488
                            rotation = down
                        ]

                        component gen_gain Gain6 {
                            gain = "1/I_DQ"
                        }
                        [
                            position = 7856, 7816
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_integrator Integrator2 {
                        }
                        [
                            position = 6896, 8232
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_sum Sum1 {
                        }
                        [
                            position = 7192, 8224
                            scale = -1, 1
                        ]

                        component gen_gain Gain1 {
                            gain = "1/(2*np.pi)"
                        }
                        [
                            position = 8416, 8328
                            scale = -1, 1
                        ]

                        component gen_gain Gain13 {
                            gain = "1/T_m"
                        }
                        [
                            position = 7000, 8376
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_product Product12 {
                        }
                        [
                            position = 7368, 8376
                            scale = -1, 1
                        ]

                        component gen_gain Gain10 {
                            gain = "1/V_DQ"
                        }
                        [
                            position = 7864, 8520
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_gain Gain14 {
                            gain = "S"
                        }
                        [
                            position = 7136, 8456
                            rotation = right
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "3"
                        }
                        [
                            position = 7200, 7952
                            scale = -1, 1
                        ]

                        component gen_gain Gain9 {
                            gain = "1/V_DQ"
                        }
                        [
                            position = 7856, 8392
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_integrator Integrator3 {
                        }
                        [
                            position = 6904, 8376
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_probe E_dREF1 {
                        }
                        [
                            position = 7568, 7848
                        ]

                        component src_constant Constant1 {
                            execution_rate = "Ts"
                            value = "0"
                        }
                        [
                            position = 7912, 8776
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_sum Sum2 {
                            signs = "+-"
                        }
                        [
                            position = 7192, 8368
                            scale = -1, 1
                        ]

                        component gen_product Product10 {
                        }
                        [
                            position = 7368, 8296
                            scale = -1, 1
                        ]

                        component Subsystem Current_abc_to_dq {
                            layout = dynamic
                            component "core/abc to dq" "abc to dq1" {
                            }
                            [
                                position = 7856, 8008
                                size = 48, 80
                            ]

                            component gen_terminator Termination1 {
                            }
                            [
                                position = 7952, 8064
                            ]

                            port Xi_d2 {
                                label = "Xi_d2"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 7976
                            ]

                            port Xi_c2 {
                                label = "Xi_c2"
                                position = right:5
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8040
                            ]

                            port wt2 {
                                label = "wt2"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8088
                            ]

                            port Xi_a2 {
                                label = "Xi_a2"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 7960
                            ]

                            port Xi_q2 {
                                label = "Xi_q2"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8016
                            ]

                            port Xi_b2 {
                                label = "Xi_b2"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8000
                            ]

                            connect Xi_c2 "abc to dq1.vc" as Connection3
                            connect "abc to dq1.q_axis" Xi_q2 as Connection6
                            connect "abc to dq1.d_axis" Xi_d2 as Connection5
                            connect wt2 "abc to dq1.wt" as Connection7
                            connect Xi_a2 "abc to dq1.va" as Connection1
                            connect Xi_b2 "abc to dq1.vb" as Connection2
                            connect Termination1.in "abc to dq1.zero_axis" as Connection4
                        }
                        [
                            position = 7936, 7880
                            size = 80, 168
                        ]

                        component gen_gain Gain7 {
                            gain = "1/I_DQ"
                        }
                        [
                            position = 7856, 7944
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_gain Gain12 {
                            gain = "1/I_DQ"
                        }
                        [
                            position = 7384, 8744
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_product Product111 {
                        }
                        [
                            position = 7368, 8216
                            scale = -1, 1
                        ]

                        component gen_sum Sum4 {
                            signs = "+-"
                        }
                        [
                            position = 7072, 8232
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_gain Gain11 {
                            gain = "1/I_DQ"
                        }
                        [
                            position = 7384, 8616
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_probe E_qREF1 {
                        }
                        [
                            position = 7568, 8056
                        ]

                        component Subsystem Current_abc_to_dq3 {
                            layout = dynamic
                            component gen_terminator Termination1 {
                            }
                            [
                                position = 7952, 8064
                            ]

                            component "core/abc to dq" "abc to dq1" {
                            }
                            [
                                position = 7856, 8008
                                size = 48, 80
                            ]

                            port "^Ec2" {
                                label = "^Ec2"
                                position = right:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8040
                            ]

                            port "^Ed2" {
                                label = "^Ed2"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 7976
                            ]

                            port "^Eb2" {
                                label = "^Eb2"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8000
                            ]

                            port "^Ea2" {
                                label = "^Ea2"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 7960
                            ]

                            port wt2 {
                                label = "wt2"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8088
                            ]

                            port "^Eq2" {
                                label = "^Eq2"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8016
                            ]

                            connect Termination1.in "abc to dq1.zero_axis" as Connection4
                            connect "abc to dq1.q_axis" "^Eq2" as Connection6
                            connect wt2 "abc to dq1.wt" as Connection7
                            connect "abc to dq1.d_axis" "^Ed2" as Connection5
                            connect "^Eb2" "abc to dq1.vb" as Connection2
                            connect "^Ea2" "abc to dq1.va" as Connection1
                            connect "^Ec2" "abc to dq1.vc" as Connection3
                        }
                        [
                            position = 7936, 8456
                            size = 80, 168
                        ]

                        component gen_probe f1 {
                        }
                        [
                            position = 8328, 8328
                            rotation = down
                        ]

                        component Subsystem Current_abc_to_dq4 {
                            layout = dynamic
                            component "core/abc to dq" "abc to dq1" {
                            }
                            [
                                position = 7856, 8008
                                size = 48, 80
                            ]

                            component gen_terminator Termination1 {
                            }
                            [
                                position = 7952, 8064
                            ]

                            port wt2 {
                                label = "wt2"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8088
                            ]

                            port "^Eq2" {
                                label = "^Eq2"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8016
                            ]

                            port "^Ea2" {
                                label = "^Ea2"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 7960
                            ]

                            port "^Eb2" {
                                label = "^Eb2"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8000
                            ]

                            port "^Ec2" {
                                label = "^Ec2"
                                position = right:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8040
                            ]

                            port "^Ed2" {
                                label = "^Ed2"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 7976
                            ]

                            connect "abc to dq1.q_axis" "^Eq2" as Connection6
                            connect wt2 "abc to dq1.wt" as Connection7
                            connect "abc to dq1.d_axis" "^Ed2" as Connection5
                            connect "^Ea2" "abc to dq1.va" as Connection1
                            connect "^Ec2" "abc to dq1.vc" as Connection3
                            connect Termination1.in "abc to dq1.zero_axis" as Connection4
                            connect "^Eb2" "abc to dq1.vb" as Connection2
                        }
                        [
                            position = 7480, 8680
                            size = 80, 168
                        ]

                        component gen_sum Sum5 {
                            signs = "+-"
                        }
                        [
                            position = 7080, 8376
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_probe P1 {
                        }
                        [
                            position = 7080, 8136
                            rotation = down
                        ]

                        component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                            layout = dynamic
                            component Subsystem "Outer voltage control loop" {
                                layout = dynamic
                                component gen_sum Sum12 {
                                    signs = "++"
                                }
                                [
                                    position = 7792, 8512
                                    scale = -1, 1
                                ]

                                component gen_gain Gain4 {
                                    gain = "C_s*Z_DQ"
                                }
                                [
                                    position = 8248, 8352
                                    scale = -1, 1
                                ]

                                component gen_sum Sum8 {
                                    signs = "+-"
                                }
                                [
                                    position = 8376, 8168
                                    scale = -1, 1
                                ]

                                component gen_product Product8 {
                                }
                                [
                                    position = 8144, 8808
                                    scale = -1, 1
                                ]

                                component gen_sum Sum10 {
                                    signs = "+-"
                                }
                                [
                                    position = 7952, 8248
                                    scale = -1, 1
                                ]

                                component gen_product Product6 {
                                }
                                [
                                    position = 8152, 8320
                                    scale = -1, 1
                                ]

                                component gen_sum Sum11 {
                                    signs = "+-"
                                }
                                [
                                    position = 8376, 8504
                                    scale = -1, 1
                                ]

                                component gen_probe Ed_err {
                                }
                                [
                                    position = 8376, 8104
                                ]

                                component gen_gain Gain6 {
                                    gain = "C_s*Z_DQ"
                                }
                                [
                                    position = 8248, 8840
                                    scale = -1, 1
                                ]

                                component gen_pid_controller "PID controller4" {
                                    controller_type = "PI"
                                    enb_anti_windup_out = "True"
                                    enb_output_limit_out = "True"
                                    ki = "Ki_V"
                                    kp = "Kp_V"
                                    lower_sat_lim = "Vmin"
                                    upper_sat_lim = "Vmax"
                                }
                                [
                                    position = 8088, 8504
                                    scale = -1, 1
                                ]

                                component gen_sum Sum13 {
                                    signs = "++"
                                }
                                [
                                    position = 7936, 8712
                                    scale = -1, 1
                                ]

                                component gen_sum Sum9 {
                                    signs = "++"
                                }
                                [
                                    position = 7800, 8176
                                    scale = -1, 1
                                ]

                                component gen_pid_controller "PID controller3" {
                                    controller_type = "PI"
                                    enb_anti_windup_out = "True"
                                    enb_output_limit_out = "True"
                                    execution_rate = "Ts"
                                    ki = "Ki_V"
                                    kp = "Kp_V"
                                    lower_sat_lim = "Vmin"
                                    upper_sat_lim = "Vmax"
                                }
                                [
                                    position = 8112, 8104
                                    scale = -1, 1
                                ]

                                component gen_probe Eq_err {
                                }
                                [
                                    position = 8376, 8440
                                ]

                                component gen_probe ED_ctrl {
                                }
                                [
                                    position = 8040, 8048
                                ]

                                component gen_probe EQ_ctrl {
                                }
                                [
                                    position = 8000, 8456
                                ]

                                component gen_limiter Limit1 {
                                    lower_limit = "[-1]"
                                    upper_limit = "[1]"
                                }
                                [
                                    position = 8200, 8104
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_limiter Limit2 {
                                    lower_limit = "[-1]"
                                    upper_limit = "[1]"
                                }
                                [
                                    position = 8168, 8504
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                port Xi_rd {
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7696, 8176
                                    scale = -1, 1
                                ]

                                port Xi_rq {
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7688, 8512
                                    scale = -1, 1
                                ]

                                port "^E_q_ref" {
                                    label = "^E_q_ref1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8552, 8440
                                    scale = -1, 1
                                ]

                                port "^E_d_ref" {
                                    label = "^E_d_ref1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8544, 8104
                                    scale = -1, 1
                                ]

                                port "^E_q" {
                                    label = "^E_q1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8600, 8512
                                    scale = -1, 1
                                ]

                                port "^E_d" {
                                    label = "^E_d1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8616, 8176
                                    scale = -1, 1
                                ]

                                tag From33 {
                                    value = "w"
                                    scope = masked_subsystem
                                    kind = sp
                                    direction = out
                                }
                                [
                                    position = 8280, 8280
                                    scale = -1, 1
                                ]

                                tag From35 {
                                    value = "w"
                                    scope = masked_subsystem
                                    kind = sp
                                    direction = out
                                }
                                [
                                    position = 8280, 8768
                                    scale = -1, 1
                                ]

                                tag From32 {
                                    value = "Id"
                                    scope = masked_subsystem
                                    kind = sp
                                    direction = out
                                }
                                [
                                    position = 8384, 8240
                                    scale = -1, 1
                                ]

                                tag From36 {
                                    value = "Iq"
                                    scope = masked_subsystem
                                    kind = sp
                                    direction = out
                                }
                                [
                                    position = 8376, 8688
                                    scale = -1, 1
                                ]

                                junction Junction174 sp
                                [
                                    position = 7968, 8104
                                ]

                                junction Junction175 sp
                                [
                                    position = 7960, 8496
                                ]

                                junction Junction176 sp
                                [
                                    position = 8480, 8176
                                ]

                                junction Junction177 sp
                                [
                                    position = 8448, 8512
                                ]

                                junction Junction178 sp
                                [
                                    position = 8336, 8104
                                ]

                                junction Junction179 sp
                                [
                                    position = 8336, 8504
                                ]

                                connect "^E_d_ref" Sum8.in as Connection215
                                connect Sum11.in "^E_q_ref" as Connection217
                                connect Sum13.in1 Product8.out as Connection233
                                connect From32 Sum10.in as Connection259
                                connect Gain6.out Product8.in1 as Connection84
                                connect From33 Product6.in as Connection68
                                connect Sum10.in1 Product6.out as Connection67
                                connect From36 Sum13.in as Connection260
                                connect From35 Product8.in as Connection79
                                connect Gain4.out Product6.in1 as Connection69
                                connect "PID controller3.out" Junction174 as Connection311
                                [
                                    breakpoints = 8072, 8104
                                ]
                                connect Junction174 ED_ctrl.in as Connection312
                                [
                                    breakpoints = 7968, 8104
                                ]
                                connect Sum9.in Junction174 as Connection313
                                connect EQ_ctrl.in Junction175 as Connection320
                                connect Junction175 "PID controller4.out" as Connection321
                                [
                                    breakpoints = 7960, 8504; 7960, 8504; 8024, 8504
                                ]
                                connect Sum12.in Junction175 as Connection322
                                connect "PID controller3.in" Limit1.out as Connection331
                                connect Limit2.out "PID controller4.in" as Connection334
                                connect Gain6.in Junction176 as Connection340
                                connect Junction176 Sum8.in1 as Connection341
                                [
                                    breakpoints = 8480, 8176
                                ]
                                connect "^E_d" Junction176 as Connection342
                                connect Gain4.in Junction177 as Connection344
                                connect Junction177 Sum11.in1 as Connection345
                                [
                                    breakpoints = 8448, 8512
                                ]
                                connect "^E_q" Junction177 as Connection346
                                connect Ed_err.in Junction178 as Connection348
                                connect Junction178 Sum8.out as Connection349
                                [
                                    breakpoints = 8336, 8168; 8336, 8168
                                ]
                                connect Limit1.in Junction178 as Connection350
                                connect Sum11.out Junction179 as Connection352
                                connect Junction179 Eq_err.in as Connection353
                                [
                                    breakpoints = 8336, 8504
                                ]
                                connect Limit2.in Junction179 as Connection354
                                connect Xi_rq Sum12.out as Connection355
                                connect Xi_rd Sum9.out as Connection356
                                connect Sum9.in1 Sum10.out as Connection357
                                connect Sum12.in1 Sum13.out as Connection358
                            }
                            [
                                position = 8808, 8400
                                scale = -1, 1
                                size = 152, 168
                            ]

                            component gen_gain Gain5 {
                                gain = "V_DQ"
                            }
                            [
                                position = 8032, 8560
                                hide_name = True
                                scale = -1, -1
                            ]

                            component gen_sum Sum7 {
                            }
                            [
                                position = 9176, 8552
                                scale = -1, 1
                            ]

                            component gen_sum Sum10 {
                                signs = "+-"
                            }
                            [
                                position = 9416, 8496
                                scale = -1, 1
                            ]

                            component gen_sum Sum11 {
                                signs = "+-"
                            }
                            [
                                position = 9424, 8192
                                scale = -1, 1
                            ]

                            component gen_gain Gain6 {
                                gain = "V_DQ"
                            }
                            [
                                position = 8064, 8624
                                hide_name = True
                                scale = -1, -1
                            ]

                            component gen_gain Gain3 {
                                gain = "R_s/Z_DQ"
                            }
                            [
                                position = 9320, 8496
                                scale = -1, 1
                            ]

                            component gen_sum Sum8 {
                            }
                            [
                                position = 9208, 8232
                                scale = -1, 1
                            ]

                            component Subsystem "dq to abc" {
                                layout = dynamic
                                component src_constant o_ref {
                                    execution_rate = "Ts"
                                    value = "[0]"
                                }
                                [
                                    position = 7520, 8200
                                ]

                                component "core/dq to abc" "dq to abc1" {
                                    execution_rate = "inherit"
                                }
                                [
                                    position = 7744, 8184
                                    size = 48, 80
                                ]

                                port c {
                                    label = "c"
                                    position = left:4
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7864, 8216
                                ]

                                port d {
                                    label = "Ud1"
                                    position = right:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7520, 8136
                                ]

                                port alpha {
                                    label = "alpha1"
                                    position = right:3
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7600, 8232
                                ]

                                port a {
                                    label = "a"
                                    position = left:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7864, 8152
                                ]

                                port q {
                                    label = "Uq1"
                                    position = right:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7472, 8168
                                ]

                                port b {
                                    label = "b"
                                    position = left:3
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7896, 8184
                                ]

                                connect q "dq to abc1.q_input" as Connection6
                                connect d "dq to abc1.d_input" as Connection3
                                connect "dq to abc1.phase_b" b as Connection4
                                connect c "dq to abc1.phase_c" as Connection2
                                connect a "dq to abc1.phase_a" as Connection1
                                connect o_ref.out "dq to abc1.zero_input" as Connection5
                                connect alpha "dq to abc1.wt" as Connection7
                            }
                            [
                                position = 7912, 8624
                                size = 80, 168
                            ]

                            component gen_gain Gain4 {
                                gain = "R_s/Z_DQ"
                            }
                            [
                                position = 9328, 8192
                                scale = -1, 1
                            ]

                            component Subsystem "inner current control loop" {
                                layout = dynamic
                                component gen_gain Gain7 {
                                    gain = "L_i/Z_DQ"
                                }
                                [
                                    position = 8272, 8592
                                    scale = -1, 1
                                ]

                                component gen_sum Sum3 {
                                }
                                [
                                    position = 7760, 8048
                                    scale = -1, 1
                                ]

                                component gen_sum Sum5 {
                                    signs = "+-"
                                }
                                [
                                    position = 8024, 8104
                                    scale = -1, 1
                                ]

                                component gen_sum Sum7 {
                                }
                                [
                                    position = 7760, 8400
                                    scale = -1, 1
                                ]

                                component gen_sum Sum6 {
                                }
                                [
                                    position = 8032, 8408
                                    scale = -1, 1
                                ]

                                component gen_product Product2 {
                                }
                                [
                                    position = 8168, 8560
                                    scale = -1, 1
                                ]

                                component gen_gain Gain6 {
                                    gain = "L_i/Z_DQ"
                                }
                                [
                                    position = 8256, 8240
                                    scale = -1, 1
                                ]

                                component gen_sum Sum8 {
                                    signs = "+-"
                                }
                                [
                                    position = 8432, 8040
                                    scale = -1, 1
                                ]

                                component gen_sum Sum9 {
                                    signs = "+-"
                                }
                                [
                                    position = 8424, 8360
                                    scale = -1, 1
                                ]

                                component gen_gain Gain5 {
                                    gain = "[0.5]"
                                }
                                [
                                    position = 7720, 8600
                                    scale = -1, 1
                                ]

                                component gen_pid_controller "PID controller1" {
                                    controller_type = "PI"
                                    enb_output_limit_out = "True"
                                    ki = "Ki_I/Z_DQ"
                                    kp = "Kp_I/Z_DQ"
                                    lower_sat_lim = "Imin"
                                    upper_sat_lim = "Imax"
                                }
                                [
                                    position = 8200, 8040
                                    scale = -1, 1
                                ]

                                component gen_product Product1 {
                                }
                                [
                                    position = 8168, 8208
                                    scale = -1, 1
                                ]

                                component gen_probe id_err {
                                }
                                [
                                    position = 8544, 7960
                                ]

                                component gen_probe iq_err {
                                }
                                [
                                    position = 8560, 8272
                                ]

                                component gen_z_domain_transfer "Discrete Transfer Function1" {
                                    a_coeff = "[1e-6,1]"
                                    domain = "S-domain"
                                    method = "Bilinear"
                                }
                                [
                                    position = 8144, 7920
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_z_domain_transfer "Discrete Transfer Function2" {
                                    a_coeff = "[1e-6,1]"
                                    domain = "S-domain"
                                    method = "Bilinear"
                                }
                                [
                                    position = 8120, 8296
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_product Product5 {
                                    signs = "*/"
                                }
                                [
                                    position = 7600, 8056
                                    scale = -1, 1
                                ]

                                component gen_product Product6 {
                                    signs = "*/"
                                }
                                [
                                    position = 7600, 8408
                                    scale = -1, 1
                                ]

                                component gen_pid_controller "PID controller2" {
                                    controller_type = "PI"
                                    enb_output_limit_out = "True"
                                    ki = "Ki_I/Z_DQ"
                                    kp = "Kp_I/Z_DQ"
                                    lower_sat_lim = "Imin"
                                    upper_sat_lim = "Imax"
                                }
                                [
                                    position = 8200, 8376
                                    scale = -1, 1
                                ]

                                component gen_limiter Limit1 {
                                    lower_limit = "[-1]"
                                    upper_limit = "[1]"
                                }
                                [
                                    position = 7488, 8056
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_limiter Limit2 {
                                    lower_limit = "[-1]"
                                    upper_limit = "[1]"
                                }
                                [
                                    position = 7472, 8408
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                component gen_z_domain_transfer LPF_dc {
                                    a_coeff = "[1.0/(2*np.pi*1),1]"
                                    b_coeff = "1"
                                    domain = "S-domain"
                                    method = "Bilinear"
                                }
                                [
                                    position = 7920, 8600
                                    scale = -1, 1
                                ]

                                component gen_limiter Limit3 {
                                    lower_limit = "10"
                                }
                                [
                                    position = 7840, 8600
                                    hide_name = True
                                    scale = -1, 1
                                ]

                                port Uq1 {
                                    position = left:2
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7376, 8408
                                    rotation = down
                                ]

                                port Xi_q_meas1 {
                                    label = "Xi_q_meas1"
                                    position = right:4
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8560, 8400
                                    rotation = down
                                ]

                                port Xi_q_ref1 {
                                    label = "Xi_q_ref1"
                                    position = right:3
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8560, 8352
                                    rotation = down
                                ]

                                port Ud1 {
                                    position = left:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7376, 8056
                                    rotation = down
                                ]

                                port Xi_d_ref1 {
                                    label = "Xi_d_ref1"
                                    position = right:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8544, 8032
                                    rotation = down
                                ]

                                port Xi_d_meas1 {
                                    label = "Xi_d_meas1"
                                    position = right:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8544, 8128
                                    rotation = down
                                ]

                                tag From23 {
                                    value = "w"
                                    scope = masked_subsystem
                                    kind = sp
                                    direction = out
                                }
                                [
                                    position = 8272, 8176
                                    scale = -1, 1
                                    size = 60, 20
                                ]

                                tag From24 {
                                    value = "Ed"
                                    scope = masked_subsystem
                                    kind = sp
                                    direction = out
                                }
                                [
                                    position = 8240, 7920
                                    scale = -1, 1
                                    size = 60, 20
                                ]

                                tag From26 {
                                    value = "Eq"
                                    scope = masked_subsystem
                                    kind = sp
                                    direction = out
                                }
                                [
                                    position = 8208, 8296
                                    scale = -1, 1
                                    size = 60, 20
                                ]

                                tag From27 {
                                    value = "VDC"
                                    scope = masked_subsystem
                                    kind = sp
                                    direction = out
                                }
                                [
                                    position = 8016, 8600
                                    scale = -1, 1
                                    size = 60, 20
                                ]

                                tag From25 {
                                    value = "w"
                                    scope = masked_subsystem
                                    kind = sp
                                    direction = out
                                }
                                [
                                    position = 8288, 8536
                                    scale = -1, 1
                                    size = 60, 20
                                ]

                                junction Junction177 sp
                                [
                                    position = 8504, 8128
                                ]

                                junction Junction176 sp
                                [
                                    position = 8504, 8368
                                ]

                                junction Junction181 sp
                                [
                                    position = 8288, 8040
                                ]

                                junction Junction182 sp
                                [
                                    position = 7640, 8416
                                ]

                                junction Junction183 sp
                                [
                                    position = 8288, 8360
                                ]

                                connect From23 Product1.in as Connection1
                                connect Sum5.in1 Product1.out as Connection24
                                connect Gain6.out Product1.in1 as Connection289
                                connect Junction177 Gain7.in as Connection300
                                connect Gain7.out Product2.in1 as Connection293
                                connect Xi_q_meas1 Junction176 as Connection290
                                connect Sum6.in1 Product2.out as Connection26
                                connect Junction176 Sum9.in1 as Connection291
                                connect Sum8.in1 Junction177 as Connection301
                                connect From25 Product2.in as Connection2
                                connect Sum8.in Xi_d_ref1 as Connection297
                                connect Sum9.in Xi_q_ref1 as Connection283
                                connect Gain6.in Junction176 as Connection292
                                connect Xi_d_meas1 Junction177 as Connection299
                                connect Sum8.out Junction181 as Connection313
                                connect Junction181 "PID controller1.in" as Connection314
                                [
                                    breakpoints = 8288, 8040; 8240, 8040
                                ]
                                connect id_err.in Junction181 as Connection315
                                connect Sum3.in "PID controller1.out" as Connection316
                                [
                                    breakpoints = 7896, 8040; 8160, 8040; 8160, 8040
                                ]
                                connect Sum5.in "Discrete Transfer Function1.out" as Connection318
                                [
                                    breakpoints = 8088, 8096; 8088, 7920
                                ]
                                connect "Discrete Transfer Function1.in" From24 as Connection319
                                connect From26 "Discrete Transfer Function2.in" as Connection320
                                connect "Discrete Transfer Function2.out" Sum6.in as Connection321
                                connect Product5.in Sum3.out as Connection322
                                connect Product6.in Sum7.out as Connection324
                                connect Sum7.in1 Sum6.out as Connection326
                                connect Sum5.out Sum3.in1 as Connection327
                                connect Gain5.out Junction182 as Connection329
                                connect Junction182 Product6.in1 as Connection330
                                connect Product5.in1 Junction182 as Connection331
                                connect "PID controller2.out" Sum7.in as Connection346
                                connect Sum9.out Junction183 as Connection349
                                connect Junction183 iq_err.in as Connection350
                                [
                                    breakpoints = 8288, 8360
                                ]
                                connect "PID controller2.in" Junction183 as Connection351
                                connect Product5.out Limit1.in as Connection352
                                connect Limit1.out Ud1 as Connection353
                                connect Product6.out Limit2.in as Connection354
                                connect Limit2.out Uq1 as Connection355
                                connect From27 LPF_dc.in as Connection356
                                connect LPF_dc.out Limit3.in as Connection357
                                connect Limit3.out Gain5.in as Connection358
                            }
                            [
                                position = 8176, 8592
                                size = 96, 184
                            ]

                            component gen_probe Xi_d_ref {
                            }
                            [
                                position = 8216, 8416
                                rotation = down
                            ]

                            component gen_probe Xi_q_ref {
                            }
                            [
                                position = 8256, 8768
                                rotation = down
                            ]

                            component gen_probe Ud {
                            }
                            [
                                position = 7912, 8456
                                scale = -1, 1
                            ]

                            component gen_probe Uq {
                            }
                            [
                                position = 7984, 8672
                                scale = -1, 1
                            ]

                            component gen_probe Eq_ref {
                            }
                            [
                                position = 9032, 8176
                                rotation = down
                            ]

                            component gen_probe Ed_ref {
                            }
                            [
                                position = 9016, 8544
                                rotation = down
                            ]

                            component gen_probe alpha {
                            }
                            [
                                position = 7984, 8768
                                scale = -1, 1
                            ]

                            component Subsystem "outer power loop" {
                                layout = dynamic
                                component sys_signal_switch "Signal switch1" {
                                    threshold = "0.5"
                                }
                                [
                                    position = 8256, 8328
                                    scale = -1, -1
                                ]

                                component gen_comparator Comparator1 {
                                }
                                [
                                    position = 8352, 8368
                                    scale = -1, 1
                                ]

                                component gen_sum Sum3 {
                                    signs = "+-"
                                }
                                [
                                    position = 8232, 8072
                                    scale = -1, 1
                                ]

                                component gen_product Product1 {
                                    signs = "*/"
                                }
                                [
                                    position = 8120, 8080
                                    scale = -1, 1
                                ]

                                component gen_probe Et_sqr_res {
                                }
                                [
                                    position = 8224, 8256
                                ]

                                component gen_product Product2 {
                                    signs = "*/"
                                }
                                [
                                    position = 8120, 8168
                                    scale = -1, 1
                                ]

                                component gen_product Product4 {
                                }
                                [
                                    position = 8440, 8080
                                    scale = -1, 1
                                ]

                                component gen_sum Sum4 {
                                }
                                [
                                    position = 8232, 8160
                                    scale = -1, 1
                                ]

                                component gen_product Product5 {
                                }
                                [
                                    position = 8440, 8152
                                    scale = -1, 1
                                ]

                                component gen_product Product3 {
                                }
                                [
                                    position = 8440, 8008
                                    scale = -1, 1
                                ]

                                component src_constant Limit_zero {
                                    execution_rate = "Ts"
                                    value = "[0.1]"
                                }
                                [
                                    position = 8464, 8408
                                    scale = -1, 1
                                ]

                                component gen_product Product6 {
                                }
                                [
                                    position = 8440, 8224
                                    scale = -1, 1
                                ]

                                component src_constant one {
                                    execution_rate = "Ts"
                                    value = "[1]"
                                }
                                [
                                    position = 8344, 8312
                                    scale = -1, 1
                                ]

                                port Q_ref {
                                    label = "Q_ref"
                                    position = right:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8648, 8216
                                    rotation = down
                                ]

                                port Eq {
                                    label = "Eq"
                                    position = right:4
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8648, 8000
                                    rotation = down
                                ]

                                port Xi_rq {
                                    label = "Xi_rq"
                                    position = left:2
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8008, 8080
                                    rotation = down
                                ]

                                port Et_p2 {
                                    label = "Et^2"
                                    position = right:6
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8600, 8360
                                    rotation = down
                                ]

                                port Ed {
                                    label = "Ed"
                                    position = right:3
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8648, 8072
                                    rotation = down
                                ]

                                port P_ref {
                                    label = "P_ref"
                                    position = right:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8648, 8144
                                    rotation = down
                                ]

                                port Xi_rd {
                                    label = "Xi_rd"
                                    position = left:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8008, 8168
                                    rotation = down
                                ]

                                junction Junction142 sp
                                [
                                    position = 8528, 8072
                                ]

                                junction Junction143 sp
                                [
                                    position = 8544, 8000
                                ]

                                junction Junction144 sp
                                [
                                    position = 8408, 8360
                                ]

                                junction Junction147 sp
                                [
                                    position = 8184, 8328
                                ]

                                junction Junction138 sp
                                [
                                    position = 8160, 8176
                                ]

                                junction Junction139 sp
                                [
                                    position = 8568, 8144
                                ]

                                junction Junction141 sp
                                [
                                    position = 8560, 8216
                                ]

                                connect Product1.in Sum3.out as Connection23
                                connect Product6.in1 Junction143 as Connection36
                                connect Et_sqr_res.in Junction147 as Connection5
                                connect Product2.in1 Junction138 as Connection25
                                connect Product3.out Sum3.in as Connection28
                                connect Junction138 Product1.in1 as Connection9
                                connect Comparator1.in1 Junction144 as Connection1
                                connect Product6.out Sum4.in1 as Connection37
                                connect Product4.in1 Junction141 as Connection29
                                connect Limit_zero.out Comparator1.in2 as Connection19
                                connect Product4.in Junction142 as Connection30
                                connect Comparator1.out "Signal switch1.in2" as Connection2
                                connect Junction141 Q_ref as Connection11
                                connect "Signal switch1.in" Junction144 as Connection38
                                connect Product4.out Sum3.in1 as Connection31
                                connect Junction142 Ed as Connection12
                                connect Eq Junction143 as Connection3
                                connect Junction143 Product3.in as Connection13
                                connect "Signal switch1.out" Junction147 as Connection39
                                connect Product5.in Junction139 as Connection32
                                connect Product5.in1 Junction142 as Connection33
                                connect Product5.out Sum4.in as Connection34
                                connect one.out "Signal switch1.in1" as Connection40
                                connect Product6.in Junction141 as Connection35
                                connect Product2.in Sum4.out as Connection26
                                connect Product3.in1 Junction139 as Connection27
                                connect Junction138 Junction147 as Connection47
                                [
                                    breakpoints = 8160, 8176; 8160, 8264
                                ]
                                connect P_ref Junction139 as Connection48
                                [
                                    breakpoints = 8600, 8144
                                ]
                                connect Et_p2 Junction144 as Connection49
                                [
                                    breakpoints = 8424, 8360
                                ]
                                connect Xi_rq Product1.out as Connection270
                                connect Xi_rd Product2.out as Connection271
                            }
                            [
                                position = 8840, 8784
                                size = 176, 128
                            ]

                            component Subsystem squared_Vt2 {
                                layout = dynamic
                                component gen_product Product1 {
                                }
                                [
                                    position = 8208, 8160
                                    scale = -1, 1
                                ]

                                component gen_sum Sum3 {
                                }
                                [
                                    position = 8104, 8192
                                    scale = -1, 1
                                ]

                                component gen_product Product2 {
                                }
                                [
                                    position = 8208, 8232
                                    scale = -1, 1
                                ]

                                port Et_p2 {
                                    label = "Et^2"
                                    position = left:2
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8192
                                    rotation = down
                                ]

                                port Eq {
                                    label = "Eq"
                                    position = right:3
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8328, 8224
                                    rotation = down
                                ]

                                port Ed {
                                    label = "Ed"
                                    position = right:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8328, 8152
                                    rotation = down
                                ]

                                junction Junction137 sp
                                [
                                    position = 8280, 8224
                                ]

                                junction Junction136 sp
                                [
                                    position = 8280, 8152
                                ]

                                connect Junction137 Eq as Connection3
                                connect Product2.in Junction137 as Connection6
                                connect Sum3.in Product1.out as Connection8
                                connect Junction136 Ed as Connection1
                                connect Product1.in1 Junction136 as Connection4
                                connect Sum3.in1 Product2.out as Connection9
                                connect Product2.in1 Junction137 as Connection5
                                connect Sum3.out Et_p2 as Connection7
                                connect Junction136 Product1.in as Connection2
                            }
                            [
                                position = 8992, 8848
                                size = 48, 56
                            ]

                            component sys_signal_switch "Signal switch2" {
                                criterion = "ctrl != threshold"
                                threshold = "1"
                            }
                            [
                                position = 8496, 8576
                                hide_name = True
                                scale = -1, -1
                            ]

                            component gen_bus_join "Bus Join1" {
                            }
                            [
                                position = 8616, 8400
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_bus_split "Bus Split1" {
                            }
                            [
                                position = 8392, 8576
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_bus_join "Bus Join2" {
                            }
                            [
                                position = 8616, 8776
                                hide_name = True
                                scale = -1, 1
                            ]

                            component src_scada_input GFM_mode {
                                execution_rate = "Ts"
                                format = "int"
                                max = "1"
                                min = "0"
                                signal_type = "int"
                                unit = ""
                            }
                            [
                                position = 8536, 8856
                                rotation = left
                            ]

                            component gen_logic_op "Logical operator1" {
                                operator = "OR"
                            }
                            [
                                position = 8496, 8720
                                rotation = left
                                hide_name = True
                            ]

                            port Ua {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7824, 8560
                                rotation = down
                            ]

                            port E_q_ref1 {
                                label = "E_q_ref1"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 9472, 8304
                                rotation = down
                            ]

                            port Uc {
                                position = left:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7824, 8688
                                rotation = down
                            ]

                            port E_d_ref1 {
                                label = "E_d_ref1"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 9456, 8632
                                rotation = down
                            ]

                            port Ub {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7824, 8624
                                rotation = down
                            ]

                            tag From36 {
                                value = "E_q1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8992, 8416
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From29 {
                                value = "Xi_d1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8288, 8568
                                scale = -1, 1
                            ]

                            tag From40 {
                                value = "Xi_q1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 9536, 8232
                                rotation = down
                            ]

                            tag From38 {
                                value = "Id"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 9536, 8448
                                rotation = down
                                size = 56, 20
                            ]

                            tag From1 {
                                value = "wt"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8176, 8728
                                scale = -1, 1
                                size = 63, 25
                            ]

                            tag From30 {
                                value = "Xi_q1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8288, 8664
                                scale = -1, 1
                            ]

                            tag From31 {
                                value = "Iq"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 9536, 8152
                                rotation = down
                            ]

                            tag From39 {
                                value = "Xi_d1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 9536, 8544
                                rotation = down
                            ]

                            tag From37 {
                                value = "E_d1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8992, 8464
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From20 {
                                value = "Ed"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 9152, 8784
                                hide_name = True
                                scale = -1, 1
                                size = 67, 20
                            ]

                            tag From41 {
                                value = "Eq"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 9152, 8816
                                hide_name = True
                                scale = -1, 1
                                size = 67, 20
                            ]

                            tag From42 {
                                value = "Pref"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 9064, 8728
                                hide_name = True
                                scale = -1, 1
                                size = 67, 20
                            ]

                            tag From43 {
                                value = "Qref"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 9064, 8760
                                hide_name = True
                                scale = -1, 1
                                size = 67, 20
                            ]

                            tag From44 {
                                value = "Island"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8480, 8864
                                rotation = left
                                hide_name = True
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag Goto21 {
                                value = "GFM_mode"
                                scope = masked_subsystem
                                kind = sp
                                direction = in
                            }
                            [
                                position = 8400, 8664
                                scale = -1, 1
                            ]

                            junction Junction3 sp
                            [
                                position = 7984, 8560
                            ]

                            junction Junction4 sp
                            [
                                position = 8032, 8624
                            ]

                            junction Junction7 sp
                            [
                                position = 9112, 8232
                            ]

                            junction Junction9 sp
                            [
                                position = 8080, 8728
                            ]

                            junction Junction10 sp
                            [
                                position = 8296, 8520
                            ]

                            junction Junction11 sp
                            [
                                position = 8336, 8616
                            ]

                            junction Junction12 sp
                            [
                                position = 9136, 8544
                            ]

                            junction Junction13 sp
                            [
                                position = 9064, 8784
                            ]

                            junction Junction14 sp
                            [
                                position = 9088, 8816
                            ]

                            junction Junction15 sp
                            [
                                position = 8496, 8664
                            ]

                            connect Sum11.out Gain4.in as Connection290
                            connect From31 Sum11.in as Connection293
                            connect From29 "inner current control loop.Xi_d_meas1" as Connection253
                            connect Sum7.in1 E_d_ref1 as Connection324
                            connect From30 "inner current control loop.Xi_q_meas1" as Connection257
                            connect Sum10.out Gain3.in as Connection287
                            connect "dq to abc.c" Uc as Connection284
                            connect "dq to abc.b" Ub as Connection282
                            connect Gain6.in "inner current control loop.Uq1" as Connection346
                            [
                                breakpoints = 8112, 8664
                            ]
                            connect From40 Sum11.in1 as Connection294
                            connect From39 Sum10.in1 as Connection286
                            connect E_q_ref1 Sum8.in1 as Connection344
                            connect "dq to abc.a" Ua as Connection283
                            connect Gain5.in "inner current control loop.Ud1" as Connection345
                            [
                                breakpoints = 8112, 8520
                            ]
                            connect Gain3.out Sum7.in as Connection289
                            connect Gain4.out Sum8.in as Connection343
                            connect From38 Sum10.in as Connection285
                            connect "dq to abc.d" Junction3 as Connection374
                            connect Junction3 Gain5.out as Connection375
                            connect Ud.in Junction3 as Connection376
                            connect "dq to abc.q" Junction4 as Connection377
                            connect Junction4 Gain6.out as Connection378
                            connect Uq.in Junction4 as Connection379
                            connect Sum8.out Junction7 as Connection398
                            connect Junction7 "Outer voltage control loop.^E_q_ref" as Connection399
                            [
                                breakpoints = 9112, 8232
                            ]
                            connect Eq_ref.in Junction7 as Connection400
                            connect From36 "Outer voltage control loop.^E_q" as Connection404
                            connect From37 "Outer voltage control loop.^E_d" as Connection405
                            connect "dq to abc.alpha" Junction9 as Connection406
                            [
                                breakpoints = 7968, 8728
                            ]
                            connect Junction9 From1 as Connection407
                            [
                                breakpoints = 8112, 8728
                            ]
                            connect alpha.in Junction9 as Connection408
                            connect squared_Vt2.Et_p2 "outer power loop.Et_p2" as Connection359
                            connect "Bus Join1.in" "Outer voltage control loop.Xi_rd" as Connection412
                            connect "Bus Join1.in1" "Outer voltage control loop.Xi_rq" as Connection413
                            connect Xi_d_ref.in Junction10 as Connection414
                            [
                                breakpoints = 8296, 8504
                            ]
                            connect Junction10 "inner current control loop.Xi_d_ref1" as Connection415
                            [
                                breakpoints = 8288, 8520
                            ]
                            connect "Bus Split1.out" Junction10 as Connection416
                            [
                                breakpoints = 8344, 8568; 8344, 8520
                            ]
                            connect "inner current control loop.Xi_q_ref1" Junction11 as Connection417
                            connect Junction11 Xi_q_ref.in as Connection418
                            [
                                breakpoints = 8336, 8632; 8336, 8632
                            ]
                            connect "Bus Split1.out1" Junction11 as Connection419
                            connect "Bus Join2.in" "outer power loop.Xi_rd" as Connection420
                            connect "Bus Join2.in1" "outer power loop.Xi_rq" as Connection421
                            connect "Signal switch2.in1" "Bus Join1.out" as Connection422
                            connect "Signal switch2.in" "Bus Join2.out" as Connection423
                            connect "Bus Split1.in" "Signal switch2.out" as Connection424
                            connect "Outer voltage control loop.^E_d_ref" Junction12 as Connection426
                            [
                                breakpoints = 9136, 8384; 9136, 8384
                            ]
                            connect Junction12 Sum7.out as Connection427
                            connect Ed_ref.in Junction12 as Connection428
                            connect From42 "outer power loop.P_ref" as Connection431
                            connect From43 "outer power loop.Q_ref" as Connection432
                            connect From20 Junction13 as Connection433
                            connect Junction13 "outer power loop.Ed" as Connection434
                            connect squared_Vt2.Ed Junction13 as Connection435
                            connect From41 Junction14 as Connection436
                            connect Junction14 "outer power loop.Eq" as Connection437
                            [
                                breakpoints = 9088, 8816; 9032, 8816
                            ]
                            connect squared_Vt2.Eq Junction14 as Connection438
                            connect "Logical operator1.in" From44 as Connection440
                            connect "Logical operator1.in1" GFM_mode.out as Connection441
                            connect "Logical operator1.out" Junction15 as Connection442
                            connect Junction15 "Signal switch2.in2" as Connection443
                            connect Goto21 Junction15 as Connection444
                        }
                        [
                            position = 7360, 7952
                            size = 128, 152
                        ]

                        component gen_limiter Limit1 {
                            lower_limit = "[-1]"
                            upper_limit = "[1]"
                        }
                        [
                            position = 7136, 7952
                            hide_name = True
                            scale = -1, 1
                        ]

                        component Subsystem "Frequency droop" {
                            layout = dynamic
                            component gen_sum Sum1 {
                                signs = "+-"
                            }
                            [
                                position = 8160, 8120
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_sum Sum4 {
                                signs = "++"
                            }
                            [
                                position = 7880, 8216
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_gain Gain3 {
                                gain = "1/D_f"
                            }
                            [
                                position = 8088, 8120
                                hide_name = True
                                scale = -1, 1
                            ]

                            component src_clock Clock1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 8112, 8168
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions = "1;1"
                                in_terminal_dimensions_str = "in 1;clk 1"
                                in_terminal_labels = "[(\'in\', True), (\'clk\', True)]"
                                in_terminal_properties = "real in;inherit clk;"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "out inherit"
                                out_terminal_labels = "[(\'out\', False)]"
                                output_fnc = "/*Begin code section*/
if (clk>120){
    out = in;
}
else{out=0;}
out = in;
/*End code section*/"
                            }
                            [
                                position = 8000, 8128
                                hide_name = True
                                scale = -1, 1
                                size = 48, 48
                            ]

                            component gen_c_function "C function2" {
                                global_variables = "real time;int connected;"
                                in_terminal_dimensions = "1;1;1"
                                in_terminal_dimensions_str = "in 1;clk 1;cnt 1"
                                in_terminal_labels = "[(\'in\', True), (\'clk\', True), (\'cnt\', True)]"
                                in_terminal_properties = "real in;inherit clk;inherit cnt;"
                                init_fnc = "/*Begin code section*/
connected = 0;
time = 0;
/*End code section*/"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "out inherit"
                                out_terminal_labels = "[(\'out\', False)]"
                                output_fnc = "/*Begin code section*/
/*
if (connected>0 && clk<time+60){
    out = out + 0.001*(in-out);
}
else{out=in;}
*/
if (cnt>0) out = in;
else out = 2*3.14159265359*60;
/*End code section*/"
                                update_fnc = "/*Begin code section*/
if (connected<1 && cnt>0){
    time = clk;
}
if (cnt>0){connected = 1;}
/*End code section*/"
                            }
                            [
                                position = 7752, 8224
                                hide_name = True
                                scale = -1, 1
                                size = 48, 64
                            ]

                            component src_clock Clock2 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7880, 8272
                                hide_name = True
                                scale = -1, 1
                            ]

                            component "core/Rate Transition" "Rate Transition12" {
                                execution_rate = "Ts"
                                init_value = "0"
                            }
                            [
                                position = 8008, 8264
                                hide_name = True
                                scale = -1, 1
                                size = 32, 32
                            ]

                            component gen_c_function "C function3" {
                                execution_rate = "Tsync"
                                in_terminal_dimensions = "1;1;inherit"
                                in_terminal_dimensions_str = "del_w 1;INV_sync 1;Connect inherit"
                                in_terminal_labels = "[(\'del_w\', True), (\'INV_sync\', True), (\'Connect\', True)]"
                                in_terminal_properties = "real del_w;inherit INV_sync;inherit Connect;"
                                init_fnc = "/*Begin code section*/
wref = w_0;
/*End code section*/"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "wref inherit"
                                out_terminal_labels = "[(\'wref\', False)]"
                                out_terminal_properties = "real wref;"
                                output_fnc = "/*Begin code section*/
if (INV_sync) wref = wref + del_w;
if (Connect) wref = w_0;
/*End code section*/"
                                parameters = "real w_0;"
                            }
                            [
                                position = 8128, 8264
                                hide_name = True
                                scale = -1, 1
                                size = 64, 96
                            ]

                            port w1 {
                                label = "w1"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7680, 8216
                                scale = -1, 1
                            ]

                            port U_P {
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8248, 8096
                                scale = -1, 1
                            ]

                            tag From17 {
                                value = "P1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8248, 8144
                                hide_name = True
                                scale = -1, 1
                            ]

                            tag theta_bus7 {
                                value = "del_w"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8256, 8240
                                hide_name = True
                                scale = -1, 1
                            ]

                            tag MT_ON2 {
                                value = "Connect"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8256, 8288
                                hide_name = True
                                scale = -1, 1
                            ]

                            tag From44 {
                                value = "GFM_mode"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7872, 8328
                                hide_name = True
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag MT_ON3 {
                                value = "INV_sync"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8256, 8264
                                hide_name = True
                                scale = -1, 1
                            ]

                            connect U_P Sum1.in as Connection368
                            connect From17 Sum1.in1 as Connection316
                            connect Gain3.in Sum1.out as Connection392
                            connect Clock1.out "C function1.clk" as Connection413
                            connect Sum4.in "C function1.out" as Connection414
                            connect Gain3.out "C function1.in" as Connection415
                            connect "C function2.in" Sum4.out as Connection416
                            connect "C function2.out" w1 as Connection417
                            connect Clock2.out "C function2.clk" as Connection418
                            [
                                breakpoints = 7832, 8272; 7832, 8224
                            ]
                            connect From44 "C function2.cnt" as Connection423
                            connect "Rate Transition12.out" Sum4.in1 as Connection424
                            connect "C function3.wref" "Rate Transition12.in" as Connection425
                            connect theta_bus7 "C function3.del_w" as Connection426
                            connect MT_ON3 "C function3.INV_sync" as Connection427
                            connect MT_ON2 "C function3.Connect" as Connection428
                        }
                        [
                            position = 8352, 8184
                            size = 96, 120
                        ]

                        component Subsystem "Voltage droop" {
                            layout = dynamic
                            component gen_sum Sum2 {
                                signs = "+-"
                            }
                            [
                                position = 8208, 8104
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_probe E_1 {
                            }
                            [
                                position = 7872, 8104
                            ]

                            component gen_gain Gain3 {
                                gain = "1/D_V"
                            }
                            [
                                position = 8128, 8104
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_sum Sum4 {
                            }
                            [
                                position = 7872, 8208
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_probe dQ {
                            }
                            [
                                position = 8216, 8040
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions = "1;1"
                                in_terminal_dimensions_str = "in 1;clk 1"
                                in_terminal_labels = "[(\'in\', True), (\'clk\', True)]"
                                in_terminal_properties = "real in;inherit clk;"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "out inherit"
                                out_terminal_labels = "[(\'out\', False)]"
                                output_fnc = "/*Begin code section*/
if (clk>120){
    out = in;
}
else{out=0;}
out = in;
/*End code section*/"
                            }
                            [
                                position = 8016, 8112
                                hide_name = True
                                scale = -1, 1
                                size = 48, 48
                            ]

                            component src_clock Clock1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 8128, 8152
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_c_function "C function2" {
                                global_variables = "real time;int connected;"
                                in_terminal_dimensions = "1;1;1"
                                in_terminal_dimensions_str = "in 1;clk 1;GFM 1"
                                in_terminal_labels = "[(\'in\', True), (\'clk\', True), (\'GFM\', True)]"
                                in_terminal_properties = "real in;inherit clk;inherit GFM;"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "out inherit"
                                out_terminal_labels = "[(\'out\', False)]"
                                output_fnc = "/*Begin code section*/
if (GFM>0) out = in;
else out = 1;
/*End code section*/"
                            }
                            [
                                position = 7640, 8224
                                hide_name = True
                                scale = -1, 1
                                size = 48, 64
                            ]

                            component src_clock Clock2 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7776, 8280
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_c_function "C function3" {
                                execution_rate = "Tsync"
                                in_terminal_dimensions = "1;1;inherit"
                                in_terminal_dimensions_str = "del_V 1;INV_sync 1;Connect inherit"
                                in_terminal_labels = "[(\'del_V\', True), (\'INV_sync\', True), (\'Connect\', True)]"
                                in_terminal_properties = "real del_V;inherit INV_sync;inherit Connect;"
                                init_fnc = "/*Begin code section*/
Vref = 1;
/*End code section*/"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "Vref inherit"
                                out_terminal_labels = "[(\'Vref\', False)]"
                                out_terminal_properties = "real Vref;"
                                output_fnc = "/*Begin code section*/
if (INV_sync) Vref = Vref + del_V;
if (Connect) Vref = 1;
/*End code section*/"
                            }
                            [
                                position = 8048, 8280
                                hide_name = True
                                scale = -1, 1
                                size = 64, 96
                            ]

                            component "core/Rate Transition" "Rate Transition13" {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7944, 8216
                                hide_name = True
                                scale = -1, 1
                                size = 32, 32
                            ]

                            port E_magnitude1 {
                                label = "E_magnitude1"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7536, 8224
                                scale = -1, 1
                            ]

                            port Q_ref1 {
                                label = "Q_ref1"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8352, 8080
                                scale = -1, 1
                            ]

                            tag From18 {
                                value = "Q1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8352, 8128
                                hide_name = True
                                scale = -1, 1
                            ]

                            tag MT_ON1 {
                                value = "INV_sync"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8184, 8280
                                hide_name = True
                                scale = -1, 1
                            ]

                            tag From44 {
                                value = "GFM_mode"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7776, 8312
                                hide_name = True
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag MT_ON2 {
                                value = "del_V"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8184, 8256
                                hide_name = True
                                scale = -1, 1
                            ]

                            tag MT_ON3 {
                                value = "Connect"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8184, 8304
                                hide_name = True
                                scale = -1, 1
                            ]

                            junction Junction2 sp
                            [
                                position = 8160, 8104
                            ]

                            junction Junction3 sp
                            [
                                position = 7808, 8208
                            ]

                            connect From18 Sum2.in1 as Connection323
                            connect Q_ref1 Sum2.in as Connection360
                            connect Gain3.in Junction2 as Connection406
                            connect Junction2 Sum2.out as Connection407
                            connect dQ.in Junction2 as Connection408
                            connect Clock1.out "C function1.clk" as Connection413
                            connect Sum4.in "C function1.out" as Connection414
                            connect "C function1.in" Gain3.out as Connection415
                            connect Clock2.out "C function2.clk" as Connection418
                            [
                                breakpoints = 7728, 8280; 7728, 8232
                            ]
                            connect "C function2.out" E_magnitude1 as Connection420
                            connect E_1.in Junction3 as Connection421
                            connect Junction3 Sum4.out as Connection422
                            [
                                breakpoints = 7808, 8208
                            ]
                            connect "C function2.in" Junction3 as Connection423
                            connect From44 "C function2.GFM" as Connection425
                            connect MT_ON2 "C function3.del_V" as Connection427
                            connect MT_ON1 "C function3.INV_sync" as Connection428
                            connect MT_ON3 "C function3.Connect" as Connection429
                            connect "C function3.Vref" "Rate Transition13.in" as Connection430
                            connect "Rate Transition13.out" Sum4.in1 as Connection431
                        }
                        [
                            position = 8352, 7944
                            size = 120, 96
                        ]

                        component Subsystem PLL {
                            layout = dynamic
                            component gen_gain Gain3 {
                                gain = "1/V_DQ"
                            }
                            [
                                position = 8160, 8080
                                rotation = left
                                hide_name = True
                            ]

                            component gen_gain Gain4 {
                                gain = "1/V_DQ"
                            }
                            [
                                position = 8112, 8080
                                rotation = left
                                hide_name = True
                            ]

                            component gen_probe f_meas {
                            }
                            [
                                position = 8520, 8224
                            ]

                            component "core/Three phase PLL" PLL {
                                enable_sin = "False"
                                enable_zero = "False"
                                low_lim = "0"
                                rate_high = "5*60"
                                rate_low = "-5*60"
                                up_lim = "1.4*2*np.pi*60"
                            }
                            [
                                position = 8064, 8184
                                size = 64, 128
                            ]

                            component gen_gain Gain5 {
                                gain = "2*np.pi"
                            }
                            [
                                position = 8208, 8080
                                rotation = left
                                hide_name = True
                            ]

                            port w {
                                position = right:4
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8280, 8016
                            ]

                            port Vd {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8280, 7920
                            ]

                            port B {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 8184
                            ]

                            port Vq {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8280, 7968
                            ]

                            port A {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 8096
                            ]

                            port C {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7880, 8288
                            ]

                            port wt {
                                position = right:5
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8280, 8200
                            ]

                            tag Goto33 {
                                value = "f"
                                scope = masked_subsystem
                                kind = sp
                                direction = in
                            }
                            [
                                position = 8320, 8136
                                hide_name = True
                                size = 0, 0
                            ]

                            tag From1 {
                                value = "f"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8432, 8224
                                hide_name = True
                                size = 0, 0
                            ]

                            junction Junction3 sp
                            [
                                position = 8208, 8136
                            ]

                            connect From1 f_meas.in as Connection73
                            connect Gain3.out Vq as Connection54
                            connect Vd Gain4.out as Connection55
                            connect Gain3.in PLL.q_axis as Connection81
                            connect PLL.theta wt as Connection85
                            connect PLL.d_axis Gain4.in as Connection80
                            connect A PLL.va as Connection89
                            connect B PLL.vb as Connection90
                            connect C PLL.vc as Connection91
                            connect Goto33 Junction3 as Connection93
                            [
                                breakpoints = 8264, 8136
                            ]
                            connect Junction3 PLL.freq as Connection94
                            [
                                breakpoints = 8208, 8136
                            ]
                            connect w Gain5.out as Connection95
                            connect Gain5.in Junction3 as Connection96
                        }
                        [
                            position = 7952, 8184
                            size = 64, 176
                        ]

                        port U_P {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8600, 8144
                            scale = -1, 1
                        ]

                        port U_Q {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 7912
                            scale = -1, 1
                        ]

                        tag Goto29 {
                            value = "E_d1"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7760, 8392
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From6 {
                            value = "Xi_b1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8088, 7856
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag Goto19 {
                            value = "Id"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7304, 8616
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag Goto37 {
                            value = "P1"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 6808, 8232
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From24 {
                            value = "Ib1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7592, 8656
                            scale = -1, 1
                        ]

                        tag Goto47 {
                            value = "E_mag"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8512, 7976
                            hide_name = True
                        ]

                        tag From28 {
                            value = "wt"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8088, 7904
                            scale = -1, 1
                        ]

                        tag From42 {
                            value = "E_qR"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7568, 8008
                            scale = -1, 1
                        ]

                        tag Goto22 {
                            value = "Xi_d1"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7744, 7816
                            scale = -1, 1
                        ]

                        tag From37 {
                            value = "Xi_d1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7568, 8256
                            scale = -1, 1
                        ]

                        tag From7 {
                            value = "Xi_c1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8088, 7944
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag Goto28 {
                            value = "E_q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7760, 8520
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag Goto23 {
                            value = "Xi_q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7744, 7944
                            scale = -1, 1
                        ]

                        tag From34 {
                            value = "E_c1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8064, 8520
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From36 {
                            value = "Ed"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7568, 8208
                            scale = -1, 1
                        ]

                        tag From26 {
                            value = "wt"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7592, 8704
                            scale = -1, 1
                        ]

                        tag From5 {
                            value = "Xi_a1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8088, 7816
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag Goto20 {
                            value = "Iq"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7304, 8744
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From23 {
                            value = "Ia1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7592, 8616
                            scale = -1, 1
                        ]

                        tag From20 {
                            value = "E_dR"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7568, 7896
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag Goto45 {
                            value = "E_dR"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7760, 8648
                            scale = -1, 1
                            size = 64, 20
                        ]

                        tag Goto2 {
                            value = "modulator"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7064, 7952
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From33 {
                            value = "E_a1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8064, 8392
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From25 {
                            value = "Ic1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7592, 8744
                            scale = -1, 1
                        ]

                        tag From43 {
                            value = "E_mag"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7920, 8648
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag Goto36 {
                            value = "Q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 6808, 8376
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From32 {
                            value = "wt"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8064, 8480
                            scale = -1, 1
                        ]

                        tag Goto46 {
                            value = "E_qR"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7784, 8776
                            scale = -1, 1
                        ]

                        tag From35 {
                            value = "E_b1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8064, 8432
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From38 {
                            value = "Xi_q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7568, 8472
                            scale = -1, 1
                        ]

                        tag From39 {
                            value = "Eq"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7568, 8400
                            scale = -1, 1
                        ]

                        tag Goto48 {
                            value = "w_e"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8672, 8328
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto49 {
                            value = "Pref"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8488, 8088
                            scale = -1, 1
                        ]

                        tag Goto50 {
                            value = "Qref"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8400, 7840
                            scale = -1, 1
                        ]

                        tag Goto14 {
                            value = "w"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8200
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto13 {
                            value = "Eq"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8168
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto12 {
                            value = "Ed"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8120
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto15 {
                            value = "wt"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8248
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From44 {
                            value = "Eb1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7760, 8184
                            size = 60, 20
                        ]

                        tag From45 {
                            value = "Ea1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7760, 8144
                            size = 60, 20
                        ]

                        tag From46 {
                            value = "Ec1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7760, 8232
                            size = 60, 20
                        ]

                        junction Junction228 sp
                        [
                            position = 7520, 8400
                        ]

                        junction Junction230 sp
                        [
                            position = 7472, 8472
                        ]

                        junction Junction231 sp
                        [
                            position = 7520, 7896
                        ]

                        junction Junction258 sp
                        [
                            position = 7520, 8008
                        ]

                        junction Junction267 sp
                        [
                            position = 7136, 8368
                        ]

                        junction Junction268 sp
                        [
                            position = 7136, 8224
                        ]

                        junction Junction159 sp
                        [
                            position = 7472, 8208
                        ]

                        junction Junction229 sp
                        [
                            position = 7520, 8256
                        ]

                        junction Junction274 sp
                        [
                            position = 6856, 8376
                        ]

                        junction Junction275 sp
                        [
                            position = 6856, 8232
                        ]

                        junction Junction277 sp
                        [
                            position = 8552, 8144
                        ]

                        junction Junction278 sp
                        [
                            position = 8472, 7912
                        ]

                        junction Junction279 sp
                        [
                            position = 8544, 8328
                        ]

                        connect From25 "Current_abc_to_dq4.^Ec2" as Connection699
                        connect Gain10.in "Current_abc_to_dq3.^Eq2" as Connection875
                        connect Junction231 From20 as Connection728
                        connect Current_abc_to_dq4.wt2 From26 as Connection702
                        connect Product111.in Junction159 as Connection703
                        connect Sum4.in Junction268 as Connection955
                        connect Junction228 From39 as Connection680
                        connect Gain11.out Goto19 as Connection877
                        connect Current_abc_to_dq.Xi_d2 Gain6.in as Connection864
                        connect Gain13.out Integrator3.in as Connection925
                        connect From7 Current_abc_to_dq.Xi_c2 as Connection40
                        connect Sum1.in1 Product13.out as Connection719
                        connect From6 Current_abc_to_dq.Xi_b2 as Connection39
                        connect Junction231 "Outer Voltage Loop + Inner Current Loop.E_d_ref1" as Connection736
                        connect "Current_abc_to_dq4.^Ea2" From23 as Connection701
                        connect "Outer Voltage Loop + Inner Current Loop.Ua" "Bus Join1.in" as Connection839
                        connect Goto23 Gain7.out as Connection962
                        connect Product12.out Sum2.in1 as Connection721
                        connect Sum5.in Junction267 as Connection952
                        connect f1.in Gain1.out as Connection318
                        connect E_dREF1.in Junction231 as Connection729
                        [
                            breakpoints = 7520, 7848; 7520, 7896
                        ]
                        connect E_qREF1.in Junction258 as Connection861
                        connect Product111.out Sum1.in as Connection684
                        connect Product13.in Junction228 as Connection679
                        connect Product12.in Junction159 as Connection720
                        connect "Current_abc_to_dq4.^Eb2" From24 as Connection700
                        connect "Outer Voltage Loop + Inner Current Loop.Uc" "Bus Join1.in2" as Connection840
                        connect From43 Goto45 as Connection881
                        connect Junction159 From36 as Connection698
                        connect P1.in Gain15.out as Connection966
                        connect Product10.out Sum2.in as Connection672
                        connect Gain15.in Junction268 as Connection967
                        connect Sum5.out Gain13.in as Connection926
                        connect Q1.in Gain14.out as Connection968
                        connect Product10.in Junction229 as Connection723
                        connect "Current_abc_to_dq4.^Ed2" Gain11.in as Connection876
                        connect Product12.in1 Junction230 as Connection678
                        connect Junction229 From37 as Connection683
                        connect Gain14.in Junction267 as Connection969
                        connect Current_abc_to_dq.wt2 From28 as Connection247
                        [
                            breakpoints = 8000, 7904; 8040, 7904
                        ]
                        connect Product10.in1 Junction228 as Connection681
                        connect From35 "Current_abc_to_dq3.^Eb2" as Connection276
                        connect "Bus Join1.in1" "Outer Voltage Loop + Inner Current Loop.Ub" as Connection838
                        connect Gain6.out Goto22 as Connection961
                        connect From42 Junction258 as Connection859
                        connect From34 "Current_abc_to_dq3.^Ec2" as Connection279
                        connect "Current_abc_to_dq3.^Ea2" From33 as Connection278
                        connect Junction258 "Outer Voltage Loop + Inner Current Loop.E_q_ref1" as Connection860
                        connect Junction230 From38 as Connection677
                        connect Product13.in1 Junction230 as Connection676
                        connect Sum4.out Gain4.in as Connection330
                        connect Constant1.out Goto46 as Connection882
                        connect From5 Current_abc_to_dq.Xi_a2 as Connection38
                        connect Gain12.in "Current_abc_to_dq4.^Eq2" as Connection879
                        connect Gain4.out Integrator2.in as Connection335
                        connect From32 Current_abc_to_dq3.wt2 as Connection275
                        connect Product111.in1 Junction229 as Connection682
                        connect Goto20 Gain12.out as Connection878
                        connect "Current_abc_to_dq3.^Ed2" Gain9.in as Connection872
                        connect Goto28 Gain10.out as Connection874
                        connect Current_abc_to_dq.Xi_q2 Gain7.in as Connection866
                        connect Integrator3.out Junction274 as Connection1003
                        connect Junction274 Sum5.in1 as Connection1004
                        [
                            breakpoints = 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8424; 7120, 8424
                        ]
                        connect Goto36 Junction274 as Connection1005
                        connect Integrator2.out Junction275 as Connection1006
                        connect Junction275 Sum4.in1 as Connection1007
                        [
                            breakpoints = 6856, 8232; 6856, 8232; 6856, 8232; 6856, 8280; 7112, 8280
                        ]
                        connect Goto37 Junction275 as Connection1008
                        connect Junction267 Sum2.out as Connection1014
                        [
                            breakpoints = 7136, 8368; 7152, 8368
                        ]
                        connect Junction268 Sum1.out as Connection1013
                        [
                            breakpoints = 7136, 8224; 7152, 8224
                        ]
                        connect Goto2 Limit1.out as Connection1017
                        connect Limit1.in "Bus Join1.out" as Connection1018
                        connect "Voltage droop.E_magnitude1" Goto47 as Connection1028
                        connect "Frequency droop.U_P" Junction277 as Connection1033
                        connect Junction277 U_P as Connection1034
                        connect Goto49 Junction277 as Connection1035
                        connect "Voltage droop.Q_ref1" Junction278 as Connection1036
                        connect Junction278 U_Q as Connection1037
                        connect Goto50 Junction278 as Connection1038
                        connect Gain1.in Junction279 as Connection1044
                        connect Junction279 Goto48 as Connection1045
                        [
                            breakpoints = 8624, 8328
                        ]
                        connect "Frequency droop.w1" Junction279 as Connection1046
                        connect Gain9.out Goto29 as Connection1047
                        [
                            breakpoints = 7816, 8392
                        ]
                        connect PLL.Vd Goto12 as Connection553
                        connect Goto13 PLL.Vq as Connection554
                        connect Goto14 PLL.w as Connection556
                        connect PLL.wt Goto15 as Connection557
                        connect From45 PLL.A as Connection1041
                        connect From44 PLL.B as Connection1042
                        connect From46 PLL.C as Connection1043
                    }
                    [
                        position = 8368, 7920
                        size = 152, 144
                    ]

                    component Subsystem "BE1-25A Synchronizer" {
                        layout = dynamic
                        component gen_trigonometric "Trigonometric function2" {
                            trigonometric_fn = "atan2"
                        }
                        [
                            position = 7456, 8088
                            hide_name = True
                        ]

                        component gen_math_fnc "Mathematical function1" {
                            mathematical_fn = "sqrt"
                        }
                        [
                            position = 8312, 8224
                            hide_name = True
                        ]

                        component gen_limiter Limit2 {
                            lower_limit = "1e-12"
                        }
                        [
                            position = 7384, 8104
                            hide_name = True
                        ]

                        component src_constant Constant9 {
                            execution_rate = "Ts"
                            value = "3e-3"
                        }
                        [
                            position = 8456, 8224
                            hide_name = True
                        ]

                        component gen_c_function "BE1-25A Synchronizer1" {
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "dV inherit"
                            in_terminal_labels = "[(\'dV\', True)]"
                            in_terminal_properties = "real dV;"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "del_V inherit"
                            out_terminal_labels = "[(\'del_V\', True)]"
                            out_terminal_properties = "real del_V;"
                            output_fnc = "/*Begin code section*/
del_V =0.01*dV;
/*End code section*/"
                            parameters = "real Ts;real maxV_slip;real minV_slip;real maxV_pds;"
                        }
                        [
                            position = 8488, 8616
                            hide_name = True
                            size = 96, 96
                        ]

                        component gen_abs Abs2 {
                        }
                        [
                            position = 8456, 8192
                            hide_name = True
                        ]

                        component src_scada_input "Connect INV" {
                            def_value = "1"
                            execution_rate = "Tsync"
                            format = "int"
                            max = "1"
                            min = "0"
                            signal_type = "int"
                            unit = ""
                        }
                        [
                            position = 8680, 8184
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 7440, 8600
                            hide_name = True
                        ]

                        component gen_trigonometric "Trigonometric function1" {
                            trigonometric_fn = "atan2"
                        }
                        [
                            position = 7456, 8000
                            hide_name = True
                        ]

                        component gen_c_function "BE1-25A Synchronizer" {
                            in_terminal_dimensions = "inherit;inherit"
                            in_terminal_dimensions_str = "df inherit;dAng inherit"
                            in_terminal_labels = "[(\'df\', True), (\'dAng\', True)]"
                            in_terminal_properties = "real df;real dAng;"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "del_w inherit"
                            out_terminal_labels = "[(\'del_w\', True)]"
                            out_terminal_properties = "real del_w;"
                            output_fnc = "/*Begin code section*/
if (dAng>3.14159265359) dAng -= 2*3.14159265359;
if (dAng<-3.14159265359) dAng += 2*3.14159265359;
del_w = 0.01*dAng/Tsync+df;
if (del_w>0.1) del_w = 0.1;
else if (del_w<-0.1) del_w = -0.1;
/*End code section*/"
                            parameters = "real Ts;real maxw_pds;real maxw_slip;real minw_slip;real Tsync;"
                        }
                        [
                            position = 8184, 8392
                            hide_name = True
                            scale = 1, -1
                            size = 128, 112
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8160, 8192
                            hide_name = True
                        ]

                        component gen_sum Sum4 {
                        }
                        [
                            position = 8240, 8224
                            hide_name = True
                        ]

                        component gen_c_function "confine phase" {
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
if (in > 0)
{
    if (in > (6.283185307179586/2))
        out = in - 6.283185307179586;
    else
        out = in;
}
if (in < 0)
{
    if (in < (-6.283185307179586/2))
        out = in + 6.283185307179586;
    else
        out = in;
}
/*End code section*/"
                        }
                        [
                            position = 7824, 8048
                            size = 56, 48
                        ]

                        component gen_sum Sum5 {
                        }
                        [
                            position = 7344, 8352
                            hide_name = True
                        ]

                        component gen_probe frequency_diff3 {
                        }
                        [
                            position = 7920, 8128
                            scale = -1, 1
                        ]

                        component gen_product Product4 {
                        }
                        [
                            position = 7264, 8384
                            hide_name = True
                        ]

                        component gen_digital_probe "Digital Probe3" {
                            override_signal_name = "True"
                            signal_name = "ang_sync3"
                        }
                        [
                            position = 8616, 8040
                            hide_name = True
                        ]

                        component src_constant Constant7 {
                            execution_rate = "Ts"
                        }
                        [
                            position = 8088, 8112
                            hide_name = True
                        ]

                        component gen_sum Sum1 {
                            signs = "-+"
                        }
                        [
                            position = 7736, 8048
                            hide_name = True
                        ]

                        component gen_c_function "confine phase2" {
                            global_variables = "real x;real floor_in;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        }
                        [
                            position = 7640, 8088
                            hide_name = True
                            size = 56, 48
                        ]

                        component gen_product Product3 {
                        }
                        [
                            position = 7264, 8320
                            hide_name = True
                        ]

                        component tm_delay "Unit Delay2" {
                        }
                        [
                            position = 7608, 8624
                            rotation = right
                            hide_name = True
                        ]

                        component gen_sum Sum2 {
                            signs = "-+"
                        }
                        [
                            position = 7824, 8200
                            hide_name = True
                        ]

                        component gen_rel_op "Relational operator1" {
                            relational_op = ">"
                        }
                        [
                            position = 8160, 8040
                            hide_name = True
                        ]

                        component gen_rel_op "Relational operator4" {
                            relational_op = "<"
                        }
                        [
                            position = 8520, 8208
                            hide_name = True
                        ]

                        component gen_abs Abs4 {
                        }
                        [
                            position = 8056, 8072
                            hide_name = True
                        ]

                        component gen_probe volt_diff3 {
                        }
                        [
                            position = 8448, 8512
                        ]

                        component src_constant Constant6 {
                            execution_rate = "Ts"
                            value = "1e-2"
                        }
                        [
                            position = 8056, 8032
                            hide_name = True
                        ]

                        component gen_digital_probe "Digital Probe1" {
                            override_signal_name = "True"
                            signal_name = "gridconnect2"
                        }
                        [
                            position = 9072, 8184
                            hide_name = True
                        ]

                        component gen_logic_op "Logical operator2" {
                            inputs = "4"
                            operator = "NOT"
                        }
                        [
                            position = 9008, 8224
                            rotation = right
                            hide_name = True
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8160, 8256
                            hide_name = True
                        ]

                        component gen_gain Gain6 {
                            gain = "1/V_DQ"
                        }
                        [
                            position = 7376, 8576
                            hide_name = True
                        ]

                        component gen_digital_probe "Digital Probe4" {
                            override_signal_name = "True"
                            signal_name = "freq_sync3"
                        }
                        [
                            position = 8616, 8008
                            hide_name = True
                        ]

                        component gen_digital_probe "Digital Probe5" {
                            override_signal_name = "True"
                            signal_name = "volt_sync3"
                        }
                        [
                            position = 8616, 8072
                            hide_name = True
                        ]

                        component gen_logic_op "Logical operator1" {
                            inputs = "3"
                        }
                        [
                            position = 8616, 8120
                            hide_name = True
                        ]

                        component gen_abs Abs5 {
                        }
                        [
                            position = 8056, 8128
                            hide_name = True
                        ]

                        component gen_probe angle_diff3 {
                        }
                        [
                            position = 8056, 7952
                        ]

                        component gen_sum Sum3 {
                            signs = "-+"
                        }
                        [
                            position = 8392, 8192
                            hide_name = True
                            scale = 1, -1
                        ]

                        component gen_gain Gain5 {
                            gain = "1/V_DQ"
                        }
                        [
                            position = 7336, 8552
                            hide_name = True
                        ]

                        component gen_rel_op "Relational operator2" {
                            relational_op = ">"
                        }
                        [
                            position = 8160, 8120
                            hide_name = True
                        ]

                        component gen_c_function "confine phase1" {
                            global_variables = "real x;real floor_in;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        }
                        [
                            position = 7640, 8000
                            hide_name = True
                            size = 56, 48
                        ]

                        component Subsystem PLL {
                            layout = dynamic
                            component gen_pid_controller "PID controller1" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                int_init_value = "2*np.pi*60"
                                ki = "2"
                                lower_sat_lim = "2*np.pi*59.5"
                                upper_sat_lim = "2*np.pi*60.5"
                            }
                            [
                                position = 8192, 8152
                                hide_name = True
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real var;"
                                in_terminal_dimensions = "inherit"
                                in_terminal_dimensions_str = "in inherit"
                                in_terminal_labels = "[(\'in\', True)]"
                                init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "out inherit"
                                out_terminal_labels = "[(\'out\', True)]"
                                output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                                parameters = "real Ts;"
                                update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                            }
                            [
                                position = 8304, 8152
                                hide_name = True
                                size = 80, 48
                            ]

                            component gen_c_function "confine phase" {
                                global_variables = "real x;real floor_in;"
                                in_terminal_dimensions = "inherit"
                                in_terminal_dimensions_str = "in inherit"
                                in_terminal_labels = "[(\'in\', True)]"
                                init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                                no_feed_inputs = "[\'\']"
                                no_feed_outputs = "[\'\']"
                                out_terminal_dimensions = "inherit"
                                out_terminal_dimensions_str = "out inherit"
                                out_terminal_labels = "[(\'out\', True)]"
                                output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                            }
                            [
                                position = 8408, 8152
                                size = 56, 48
                            ]

                            port wt {
                                label = "wt"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8496, 8152
                            ]

                            port w {
                                label = "w"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8208
                            ]

                            port q {
                                label = "q"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8152
                            ]

                            junction Junction1 sp
                            [
                                position = 8240, 8152
                            ]

                            connect w Junction1 as Connection19
                            connect "C function1.in" Junction1 as Connection17
                            connect wt "confine phase.out" as Connection14
                            connect "confine phase.in" "C function1.out" as Connection16
                            connect Junction1 "PID controller1.out" as Connection18
                            connect q "PID controller1.in" as Connection20
                        }
                        [
                            position = 7544, 8576
                            scale = 1, -1
                            size = 96, 56
                        ]

                        component gen_limiter Limit1 {
                            lower_limit = "1e-12"
                        }
                        [
                            position = 7384, 8016
                            hide_name = True
                        ]

                        component gen_digital_probe "Digital Probe6" {
                            override_signal_name = "True"
                            signal_name = "griddisconnect2"
                        }
                        [
                            position = 9072, 8256
                            hide_name = True
                        ]

                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 7264, 8576
                            size = 48, 80
                        ]

                        component gen_math_fnc "Mathematical function2" {
                            mathematical_fn = "sqrt"
                        }
                        [
                            position = 7416, 8352
                            hide_name = True
                        ]

                        component gen_probe Vd_G {
                        }
                        [
                            position = 7328, 8480
                            scale = -1, 1
                        ]

                        component gen_probe Vq_G {
                        }
                        [
                            position = 7432, 8472
                            scale = -1, 1
                        ]

                        component gen_probe del_w {
                        }
                        [
                            position = 8744, 8376
                        ]

                        component gen_probe del_V {
                        }
                        [
                            position = 9048, 8584
                        ]

                        component gen_c_function "stay connected1" {
                            global_variables = "real connect;"
                            in_terminal_dimensions = "inherit;inherit"
                            in_terminal_dimensions_str = "ready inherit;connectINV inherit"
                            in_terminal_labels = "[(\'ready\', True), (\'connectINV\', True)]"
                            in_terminal_properties = "inherit ready;inherit connectINV;"
                            init_fnc = "/*Begin code section*/
connect = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            out_terminal_properties = "int out;"
                            output_fnc = "/*Begin code section*/
out = connect;
/*End code section*/"
                            parameters = "real Ts;"
                            update_fnc = "/*Begin code section*/
if ((ready==1)&&(connectINV==1)){
    connect = 1;
}
else if(connectINV==0){
    connect = 0;
}
/*End code section*/"
                        }
                        [
                            position = 8848, 8152
                            hide_name = True
                            size = 160, 104
                        ]

                        component gen_probe "|V|" {
                        }
                        [
                            position = 7512, 8304
                        ]

                        component gen_probe w_G {
                        }
                        [
                            position = 7824, 8160
                            rotation = down
                            scale = -1, 1
                        ]

                        component gen_probe w_bus {
                        }
                        [
                            position = 7824, 8240
                        ]

                        component gen_sum Sum6 {
                            signs = "+-"
                        }
                        [
                            position = 7752, 8336
                            hide_name = True
                        ]

                        component gen_sum Sum7 {
                            signs = "+-"
                        }
                        [
                            position = 7752, 8408
                            hide_name = True
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 7752, 8480
                            hide_name = True
                        ]

                        component gen_probe Ea-Va {
                        }
                        [
                            position = 7848, 8336
                        ]

                        component gen_probe Eb-Vb {
                        }
                        [
                            position = 7848, 8408
                        ]

                        component gen_probe Ec-Vc {
                        }
                        [
                            position = 7848, 8480
                        ]

                        component "core/abc to dq" "abc to dq2" {
                        }
                        [
                            position = 7984, 8592
                            size = 48, 80
                        ]

                        component gen_probe Ed-Vd {
                        }
                        [
                            position = 8072, 8552
                        ]

                        component gen_probe Eq-Vq {
                        }
                        [
                            position = 8120, 8592
                        ]

                        component gen_terminator Termination2 {
                        }
                        [
                            position = 8072, 8632
                            hide_name = True
                        ]

                        component gen_probe E_d {
                        }
                        [
                            position = 7616, 8704
                        ]

                        component gen_probe E_q {
                        }
                        [
                            position = 7616, 8856
                            rotation = down
                            scale = -1, 1
                        ]

                        component gen_gain Gain7 {
                            gain = "1/V_DQ"
                        }
                        [
                            position = 7336, 8736
                            hide_name = True
                        ]

                        component Subsystem Current_abc_to_dq3 {
                            layout = dynamic
                            component "core/abc to dq" "abc to dq1" {
                            }
                            [
                                position = 7856, 8008
                                size = 48, 80
                            ]

                            component gen_terminator Termination {
                            }
                            [
                                position = 7952, 8064
                            ]

                            port wt {
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8088
                            ]

                            port Ec {
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8040
                            ]

                            port Eq {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 8016
                            ]

                            port Ea {
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 7960
                            ]

                            port Ed {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8008, 7976
                            ]

                            port Eb {
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7704, 8000
                            ]

                            connect Termination.in "abc to dq1.zero_axis" as Connection4
                            connect "abc to dq1.q_axis" Eq as Connection6
                            connect Ec "abc to dq1.vc" as Connection3
                            connect Ea "abc to dq1.va" as Connection1
                            connect Eb "abc to dq1.vb" as Connection2
                            connect "abc to dq1.d_axis" Ed as Connection5
                            connect wt "abc to dq1.wt" as Connection7
                        }
                        [
                            position = 7256, 8784
                            hide_name = True
                            scale = -1, 1
                            size = 64, 144
                        ]

                        component gen_gain Gain12 {
                            gain = "1/V_DQ"
                        }
                        [
                            position = 7336, 8832
                            hide_name = True
                        ]

                        component gen_c_function "Hold after connect2" {
                            global_variables = "real var;"
                            in_terminal_dimensions = "inherit;inherit;inherit"
                            in_terminal_dimensions_str = "in inherit;connect inherit;INV_sync inherit"
                            in_terminal_labels = "[(\'in\', True), (\'connect\', True), (\'INV_sync\', True)]"
                            in_terminal_properties = "real in;int connect;inherit INV_sync;"
                            init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                            update_fnc = "/*Begin code section*/
if ((connect==0)&&(INV_sync==1))
    var = in;
else if (connect==1)
    var =0;
/*End code section*/"
                        }
                        [
                            position = 8488, 8432
                            hide_name = True
                            size = 96, 96
                        ]

                        component gen_c_function "Hold after connect3" {
                            global_variables = "real var;"
                            in_terminal_dimensions = "inherit;inherit;inherit"
                            in_terminal_dimensions_str = "in inherit;connect inherit;INV_sync inherit"
                            in_terminal_labels = "[(\'in\', True), (\'connect\', True), (\'INV_sync\', True)]"
                            in_terminal_properties = "real in;int connect;inherit INV_sync;"
                            init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                            update_fnc = "/*Begin code section*/
if ((connect==0)&&(INV_sync==1))
    var = in;
else if (connect==1)
    var =0;
/*End code section*/"
                        }
                        [
                            position = 8784, 8648
                            hide_name = True
                            size = 96, 96
                        ]

                        component gen_probe "|E|" {
                        }
                        [
                            position = 8392, 8248
                        ]

                        component gen_probe Connect {
                        }
                        [
                            position = 9072, 8024
                        ]

                        component "core/Rate Transition" "Rate Transition2" {
                            execution_rate = "Tsync"
                        }
                        [
                            position = 8056, 8360
                            hide_name = True
                            size = 32, 32
                        ]

                        component "core/Rate Transition" "Rate Transition4" {
                            execution_rate = "Tsync"
                        }
                        [
                            position = 8056, 8424
                            hide_name = True
                            size = 32, 32
                        ]

                        component "core/Rate Transition" "Rate Transition6" {
                            execution_rate = "Tsync"
                        }
                        [
                            position = 8320, 8616
                            hide_name = True
                            size = 32, 32
                        ]

                        component "core/Rate Transition" "Rate Transition12" {
                            execution_rate = "Tsync"
                            init_value = "0"
                        }
                        [
                            position = 8704, 8120
                            hide_name = True
                            size = 32, 32
                        ]

                        tag From39 {
                            value = "E_q"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8072, 8264
                            hide_name = True
                        ]

                        tag From43 {
                            value = "Vd_G"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7176, 8312
                            hide_name = True
                        ]

                        tag w_bus1 {
                            value = "w_bus"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7656, 8568
                            hide_name = True
                        ]

                        tag Vb_G1 {
                            value = "VbG"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7176, 8560
                            hide_name = True
                        ]

                        tag "|V|1" {
                            value = "|V| bus"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7512, 8352
                            hide_name = True
                        ]

                        tag theta_bus {
                            value = "theta_bus"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7656, 8656
                            hide_name = True
                        ]

                        tag theta_bus5 {
                            value = "dV"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8240, 8616
                            hide_name = True
                        ]

                        tag Goto2 {
                            value = "del_w"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8744, 8432
                            hide_name = True
                        ]

                        tag From42 {
                            value = "Vq_G"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7176, 8392
                            hide_name = True
                        ]

                        tag Goto32 {
                            value = "Vq_G"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7544, 8536
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto31 {
                            value = "del_V"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 9040, 8648
                            hide_name = True
                        ]

                        tag Connect2 {
                            value = "Connect"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8296, 8432
                            hide_name = True
                            size = 42, 20
                        ]

                        tag From44 {
                            value = "Vd_G"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7320, 8104
                            hide_name = True
                        ]

                        tag From45 {
                            value = "Vq_G"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7320, 8072
                            hide_name = True
                        ]

                        tag Goto30 {
                            value = "dV"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8504, 8160
                            hide_name = True
                        ]

                        tag Goto33 {
                            value = "Vd_G"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7440, 8552
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Vc_G1 {
                            value = "VcG"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7176, 8584
                            hide_name = True
                        ]

                        tag From41 {
                            value = "E_d"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7320, 8016
                            hide_name = True
                        ]

                        tag Va_G1 {
                            value = "VaG"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7176, 8536
                            hide_name = True
                        ]

                        tag From36 {
                            value = "E_d"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8072, 8184
                            hide_name = True
                        ]

                        tag theta_bus2 {
                            value = "w_bus"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7640, 8224
                            hide_name = True
                        ]

                        tag Connect1 {
                            value = "Connect"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 9072, 8152
                            hide_name = True
                        ]

                        tag From1 {
                            value = "|V| bus"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8240, 8152
                            hide_name = True
                        ]

                        tag From40 {
                            value = "E_q"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7320, 7984
                            hide_name = True
                        ]

                        tag w_e7 {
                            value = "w_e"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7640, 8176
                            hide_name = True
                        ]

                        tag From46 {
                            value = "Ec1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7664, 8464
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From37 {
                            value = "Ea1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7664, 8320
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From38 {
                            value = "Eb1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7664, 8392
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Vb_G2 {
                            value = "VbG"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7664, 8424
                            hide_name = True
                        ]

                        tag Vc_G2 {
                            value = "VcG"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7664, 8496
                            hide_name = True
                        ]

                        tag Va_G2 {
                            value = "VaG"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7664, 8352
                            hide_name = True
                        ]

                        tag Goto28 {
                            value = "E_q"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7432, 8832
                            hide_name = True
                            size = 60, 20
                        ]

                        tag Goto29 {
                            value = "E_d"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7432, 8736
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From34 {
                            value = "Ec1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7160, 8800
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From33 {
                            value = "Ea1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7160, 8736
                            hide_name = True
                            size = 60, 20
                        ]

                        tag From35 {
                            value = "Eb1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7160, 8768
                            hide_name = True
                            size = 60, 20
                        ]

                        tag theta_bus1 {
                            value = "theta_bus"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7160, 8832
                            hide_name = True
                        ]

                        tag Connect4 {
                            value = "INV_sync"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8296, 8472
                            hide_name = True
                            size = 42, 20
                        ]

                        tag Connect5 {
                            value = "Connect"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8600, 8656
                            hide_name = True
                            size = 42, 20
                        ]

                        tag Connect6 {
                            value = "INV_sync"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8600, 8704
                            hide_name = True
                            size = 42, 20
                        ]

                        junction Junction41 sp
                        [
                            position = 7480, 8576
                        ]

                        junction Junction38 sp
                        [
                            position = 8304, 8120
                        ]

                        junction Junction26 sp
                        [
                            position = 8112, 8184
                        ]

                        junction Junction42 sp
                        [
                            position = 7216, 8392
                        ]

                        junction Junction43 sp
                        [
                            position = 7216, 8312
                        ]

                        junction Junction28 sp
                        [
                            position = 8112, 8264
                        ]

                        junction Junction45 sp
                        [
                            position = 7608, 8656
                        ]

                        junction Junction49 sp
                        [
                            position = 7872, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 8424, 8192
                        ]

                        junction Junction57 sp
                        [
                            position = 7480, 8536
                        ]

                        junction Junction58 sp
                        [
                            position = 7368, 8552
                        ]

                        junction Junction63 sp
                        [
                            position = 9008, 8152
                        ]

                        junction Junction66 sp
                        [
                            position = 8552, 8136
                        ]

                        junction Junction67 sp
                        [
                            position = 8576, 8040
                        ]

                        junction Junction69 sp
                        [
                            position = 7456, 8352
                        ]

                        junction Junction72 sp
                        [
                            position = 7968, 8200
                        ]

                        junction Junction73 sp
                        [
                            position = 7968, 8128
                        ]

                        junction Junction74 sp
                        [
                            position = 7800, 8336
                        ]

                        junction Junction75 sp
                        [
                            position = 7800, 8480
                        ]

                        junction Junction76 sp
                        [
                            position = 7800, 8408
                        ]

                        junction Junction77 sp
                        [
                            position = 7608, 8656
                        ]

                        junction Junction78 sp
                        [
                            position = 9008, 8184
                        ]

                        junction Junction61 sp
                        [
                            position = 7376, 8736
                        ]

                        junction Junction80 sp
                        [
                            position = 7376, 8832
                        ]

                        junction Junction81 sp
                        [
                            position = 8352, 8224
                        ]

                        junction Junction83 sp
                        [
                            position = 8376, 8616
                        ]

                        junction Junction84 sp
                        [
                            position = 7992, 8048
                        ]

                        junction Junction85 sp
                        [
                            position = 9000, 8152
                        ]

                        junction Junction86 sp
                        [
                            position = 8680, 8432
                        ]

                        junction Junction87 sp
                        [
                            position = 8952, 8648
                        ]

                        junction Junction88 sp
                        [
                            position = 7784, 8176
                        ]

                        junction Junction89 sp
                        [
                            position = 7784, 8224
                        ]

                        connect "Digital Probe4.in" Junction38 as Connection366
                        connect "confine phase2.out" Sum1.in1 as Connection399
                        connect From39 Junction28 as Connection259
                        connect "abc to dq1.q_axis" Gain6.in as Connection319
                        connect From41 Limit1.in as Connection285
                        connect Sum3.in1 From1 as Connection81
                        connect Vc_G1 "abc to dq1.vc" as Connection222
                        connect angle_diff3.in Junction49 as Connection430
                        connect Product2.out Sum4.in1 as Connection251
                        connect Abs2.out "Relational operator4.in" as Connection84
                        connect Goto30 Junction35 as Connection308
                        connect Va_G1 "abc to dq1.va" as Connection224
                        connect theta_bus Junction45 as Connection404
                        connect Termination1.in "abc to dq1.zero_axis" as Connection29
                        connect From45 "Trigonometric function2.in" as Connection401
                        connect Sum4.out "Mathematical function1.in" as Connection252
                        connect Product2.in Junction28 as Connection261
                        connect Junction28 Product2.in1 as Connection260
                        connect Constant7.out "Relational operator2.in" as Connection70
                        connect Abs2.in Junction35 as Connection306
                        connect From44 Limit2.in as Connection402
                        connect "Digital Probe6.in" "Logical operator2.out" as Connection454
                        connect Junction26 From36 as Connection248
                        connect Product1.in Junction26 as Connection247
                        connect Limit2.out "Trigonometric function2.in1" as Connection398
                        connect Product3.out Sum5.in as Connection390
                        connect Junction38 "Relational operator2.out" as Connection365
                        [
                            breakpoints = 8288, 8120; 8288, 8120
                        ]
                        connect Product3.in Junction43 as Connection386
                        connect Limit1.out "Trigonometric function1.in1" as Connection286
                        connect From40 "Trigonometric function1.in" as Connection284
                        connect Vb_G1 "abc to dq1.vb" as Connection223
                        connect "Relational operator2.in1" Abs5.out as Connection357
                        connect From42 Junction42 as Connection384
                        connect Junction43 From43 as Connection389
                        connect Sum5.out "Mathematical function2.in" as Connection387
                        connect Product3.in1 Junction43 as Connection391
                        connect Gain6.out Junction41 as Connection381
                        connect Junction35 Sum3.out as Connection307
                        connect "confine phase.in" Sum1.out as Connection146
                        connect Product4.out Sum5.in1 as Connection388
                        connect "confine phase1.out" Sum1.in as Connection400
                        connect Constant9.out "Relational operator4.in1" as Connection85
                        connect PLL.w w_bus1 as Connection233
                        connect Product4.in Junction42 as Connection385
                        connect "confine phase.out" Junction49 as Connection428
                        connect Junction45 "abc to dq1.wt" as Connection405
                        connect Product1.in1 Junction26 as Connection249
                        connect Junction41 PLL.q as Connection382
                        connect Constant6.out "Relational operator1.in" as Connection69
                        connect Product1.out Sum4.in as Connection250
                        connect Junction42 Product4.in1 as Connection392
                        connect "Logical operator1.in1" Junction38 as Connection364
                        [
                            breakpoints = 8576, 8120
                        ]
                        connect Gain5.in "abc to dq1.d_axis" as Connection318
                        connect Goto32 Junction57 as Connection468
                        connect Junction57 Junction41 as Connection469
                        connect Vq_G.in Junction57 as Connection470
                        connect Goto33 Junction58 as Connection471
                        connect Junction58 Gain5.out as Connection472
                        connect Vd_G.in Junction58 as Connection473
                        connect PLL.wt "Unit Delay2.in" as Connection474
                        connect "Connect INV.out" "stay connected1.connectINV" as Connection504
                        connect Connect1 Junction63 as Connection508
                        connect "Logical operator1.in2" Junction66 as Connection530
                        connect Junction66 "Relational operator4.out" as Connection531
                        connect "Digital Probe5.in" Junction66 as Connection532
                        connect "Relational operator1.out" Junction67 as Connection534
                        connect Junction67 "Logical operator1.in" as Connection535
                        connect "Digital Probe3.in" Junction67 as Connection536
                        connect "Trigonometric function2.out" "confine phase2.in" as Connection542
                        connect "Trigonometric function1.out" "confine phase1.in" as Connection543
                        connect "Mathematical function2.out" Junction69 as Connection544
                        connect Junction69 "|V|1" as Connection545
                        [
                            breakpoints = 7456, 8352
                        ]
                        connect "|V|.in" Junction69 as Connection546
                        connect Sum2.out Junction72 as Connection554
                        connect Abs5.in Junction73 as Connection557
                        connect Junction73 Junction72 as Connection558
                        connect frequency_diff3.in Junction73 as Connection559
                        connect Vc_G2 Sum8.in1 as Connection560
                        connect From46 Sum8.in as Connection561
                        connect Vb_G2 Sum7.in1 as Connection562
                        connect From38 Sum7.in as Connection563
                        connect Va_G2 Sum6.in1 as Connection564
                        connect From37 Sum6.in as Connection565
                        connect Ea-Va.in Junction74 as Connection569
                        connect Junction74 Sum6.out as Connection570
                        connect "abc to dq2.va" Junction74 as Connection571
                        [
                            breakpoints = 7944, 8536; 7944, 8296; 7800, 8296
                        ]
                        connect Ec-Vc.in Junction75 as Connection580
                        connect Junction75 Sum8.out as Connection581
                        connect "abc to dq2.vc" Junction75 as Connection582
                        connect Eb-Vb.in Junction76 as Connection599
                        connect Junction76 Sum7.out as Connection600
                        [
                            breakpoints = 7800, 8408; 7800, 8408; 7800, 8408; 7800, 8408; 7800, 8408
                        ]
                        connect "abc to dq2.vb" Junction76 as Connection601
                        [
                            breakpoints = 7944, 8584; 7904, 8584; 7904, 8384; 7880, 8384; 7880, 8384; 7800, 8384
                        ]
                        connect "Unit Delay2.out" Junction77 as Connection602
                        connect Junction77 Junction45 as Connection603
                        connect "abc to dq2.wt" Junction77 as Connection604
                        [
                            breakpoints = 7944, 8680; 7608, 8680; 7608, 8656
                        ]
                        connect Ed-Vd.in "abc to dq2.d_axis" as Connection605
                        connect Eq-Vq.in "abc to dq2.q_axis" as Connection606
                        connect Termination2.in "abc to dq2.zero_axis" as Connection607
                        connect Junction63 Junction78 as Connection609
                        [
                            breakpoints = 9008, 8152
                        ]
                        connect Junction78 "Logical operator2.in" as Connection610
                        [
                            breakpoints = 9008, 8184
                        ]
                        connect "Digital Probe1.in" Junction78 as Connection611
                        connect From34 Current_abc_to_dq3.Ec as Connection421
                        connect From33 Current_abc_to_dq3.Ea as Connection278
                        connect From35 Current_abc_to_dq3.Eb as Connection422
                        connect Gain7.in Current_abc_to_dq3.Ed as Connection438
                        [
                            breakpoints = 7304, 8736
                        ]
                        connect Current_abc_to_dq3.Eq Gain12.in as Connection439
                        [
                            breakpoints = 7304, 8832
                        ]
                        connect Goto29 Junction61 as Connection444
                        connect Junction61 Gain7.out as Connection445
                        connect Current_abc_to_dq3.wt theta_bus1 as Connection616
                        connect E_d.in Junction61 as Connection618
                        [
                            breakpoints = 7472, 8760; 7376, 8760; 7376, 8736
                        ]
                        connect Goto28 Junction80 as Connection620
                        connect Junction80 Gain12.out as Connection621
                        connect E_q.in Junction80 as Connection622
                        [
                            breakpoints = 7584, 8808; 7376, 8808
                        ]
                        connect "Mathematical function1.out" Junction81 as Connection633
                        connect Junction81 Sum3.in as Connection634
                        connect "|E|.in" Junction81 as Connection635
                        connect Junction72 "Rate Transition4.in" as Connection641
                        connect "Rate Transition4.out" "BE1-25A Synchronizer.df" as Connection642
                        connect "BE1-25A Synchronizer.del_w" "Hold after connect2.in" as Connection649
                        connect theta_bus5 "Rate Transition6.in" as Connection650
                        connect "BE1-25A Synchronizer1.dV" Junction83 as Connection659
                        connect Junction83 volt_diff3.in as Connection660
                        [
                            breakpoints = 8376, 8616; 8376, 8616; 8376, 8512
                        ]
                        connect "Rate Transition6.out" Junction83 as Connection661
                        connect "Logical operator1.out" "Rate Transition12.in" as Connection662
                        connect "Rate Transition12.out" "stay connected1.ready" as Connection663
                        connect "Rate Transition2.out" "BE1-25A Synchronizer.dAng" as Connection664
                        connect "BE1-25A Synchronizer1.del_V" "Hold after connect3.in" as Connection671
                        connect Abs4.out "Relational operator1.in1" as Connection672
                        connect Junction49 Junction84 as Connection673
                        connect Junction84 Abs4.in as Connection674
                        connect "Rate Transition2.in" Junction84 as Connection675
                        connect Connect4 "Hold after connect2.INV_sync" as Connection676
                        connect Connect6 "Hold after connect3.INV_sync" as Connection677
                        connect Junction63 Junction85 as Connection683
                        connect Junction85 Connect.in as Connection684
                        [
                            breakpoints = 9008, 8152; 9000, 8152; 9008, 8152; 9016, 8152
                        ]
                        connect "stay connected1.out" Junction85 as Connection685
                        connect "Hold after connect2.out" Junction86 as Connection691
                        connect Junction86 del_w.in as Connection692
                        [
                            breakpoints = 8680, 8432; 8680, 8432
                        ]
                        connect Goto2 Junction86 as Connection693
                        connect Connect2 "Hold after connect2.connect" as Connection694
                        connect Connect5 "Hold after connect3.connect" as Connection695
                        connect "Hold after connect3.out" Junction87 as Connection701
                        connect Junction87 Goto31 as Connection702
                        [
                            breakpoints = 8992, 8648
                        ]
                        connect del_V.in Junction87 as Connection703
                        connect w_G.in Junction88 as Connection706
                        connect Junction88 Sum2.in as Connection707
                        [
                            breakpoints = 7784, 8176
                        ]
                        connect w_e7 Junction88 as Connection708
                        connect w_bus.in Junction89 as Connection709
                        connect Junction89 Sum2.in1 as Connection710
                        [
                            breakpoints = 7784, 8224
                        ]
                        connect theta_bus2 Junction89 as Connection711
                    }
                    [
                        position = 8000, 8464
                        size = 112, 144
                    ]

                    component gen_logic_op "Logical operator1" {
                        operator = "NOT"
                    }
                    [
                        position = 8256, 8496
                        rotation = right
                        hide_name = True
                    ]

                    component gen_digital_probe "INV_sync OFF" {
                    }
                    [
                        position = 8336, 8528
                    ]

                    component gen_digital_probe "INV_sync ON" {
                    }
                    [
                        position = 8336, 8432
                        rotation = down
                        scale = -1, 1
                    ]

                    component src_scada_input INV_sync {
                        execution_rate = "Tsync"
                        format = "int"
                        max = "1"
                        min = "0"
                        signal_type = "int"
                        unit = ""
                    }
                    [
                        position = 8208, 8464
                    ]

                    component gen_gain Gain17 {
                        gain = "1000/S"
                    }
                    [
                        position = 8224, 7968
                        hide_name = True
                    ]

                    component gen_gain Gain18 {
                        gain = "1000/S"
                    }
                    [
                        position = 8224, 7872
                        hide_name = True
                    ]

                    component gen_logic_op "Logical operator3" {
                        operator = "NOT"
                    }
                    [
                        position = 8416, 8640
                        hide_name = True
                    ]

                    component "core/Rate Transition" "Rate Transition1" {
                        execution_rate = "Ts"
                        init_value = "1"
                    }
                    [
                        position = 8320, 8640
                        hide_name = True
                        size = 32, 32
                    ]

                    component gen_c_function "C function1" {
                        in_terminal_dimensions = "1;1"
                        in_terminal_dimensions_str = "ref 1;charge 1"
                        in_terminal_labels = "[(\'ref\', True), (\'charge\', True)]"
                        in_terminal_properties = "real ref;int charge;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', False)]"
                        output_fnc = "/*Begin code section*/
if (charge>0) out = -1;
else out = ref;
/*End code section*/"
                    }
                    [
                        position = 8128, 7872
                        hide_name = True
                        size = 48, 48
                    ]

                    component gen_c_function "C function2" {
                        in_terminal_dimensions = "1;1"
                        in_terminal_dimensions_str = "ref 1;charge 1"
                        in_terminal_labels = "[(\'ref\', True), (\'charge\', True)]"
                        in_terminal_properties = "real ref;int charge;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', False)]"
                        output_fnc = "/*Begin code section*/
if (charge>0) out = 0;
else out = ref;
/*End code section*/"
                    }
                    [
                        position = 8144, 7968
                        hide_name = True
                        size = 48, 48
                    ]

                    component "core/Rate Transition" "Rate Transition8" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 8048, 7904
                        hide_name = True
                        size = 32, 32
                    ]

                    component src_scada_input charge {
                        execution_rate = "Ts"
                        format = "int"
                        max = "1"
                        min = "0"
                        signal_type = "int"
                        unit = ""
                    }
                    [
                        position = 7968, 7904
                    ]

                    component "core/Rate Transition" "Rate Transition9" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 8048, 7840
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition10" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 8048, 7968
                        hide_name = True
                        size = 32, 32
                    ]

                    component gen_c_function "C function3" {
                        execution_rate = "1"
                        global_variables = "int k;real t;"
                        in_terminal_labels = "[]"
                        in_terminal_properties = ""
                        init_fnc = "/*Begin code section*/
k = 0; t = 1;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\', \'Pref\', \'Qref\']"
                        out_terminal_dimensions = "1;1"
                        out_terminal_dimensions_str = "Pref 1;Qref 1"
                        out_terminal_labels = "[(\'Pref\', True), (\'Qref\', True)]"
                        out_terminal_properties = "real Pref;real Qref;"
                        output_fnc = "/*Begin code section*/
//float p[10]={0.0,2.0,3.0,10,5,4,3.2,1.4,5.6,7};
//float q[10] = {0,1.5,1.2,1,2,2.6,1.4,3,2.6,4};
if (k>9) k = 0;
if (t>4) t = 0;
    
if (k==0) {Pref = 0;Qref = 0;}
else if (k==1) {Pref = 2;Qref = 1.5;}
else if (k==2) {Pref = 3;Qref = 1.2;}
else if (k==3) {Pref = 10;Qref = 1;}
else if (k==4) {Pref = 5;Qref = 2;}
else if (k==5) {Pref = 4;Qref = 2.6;}
else if (k==6) {Pref = 3.2;Qref = 1.4;}
else if(k==7) {Pref = 1.4;Qref = 3;}
else if(k==8) {Pref = 5.6;Qref = 2.6;}
else if(k==9) {Pref =7;Qref = 4;}
if (t>=4) k+=1;
t+=1;
/*End code section*/"
                    }
                    [
                        position = 7856, 7872
                        size = 72, 88
                    ]

                    component gen_probe Pref {
                    }
                    [
                        position = 8112, 7744
                    ]

                    component gen_probe Qref {
                    }
                    [
                        position = 8080, 8080
                    ]

                    component gen_gain Gain19 {
                        gain = "1000"
                    }
                    [
                        position = 8016, 7744
                        hide_name = True
                    ]

                    component gen_gain Gain20 {
                        gain = "1000"
                    }
                    [
                        position = 8000, 8080
                        hide_name = True
                    ]

                    port ma {
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7680, 8128
                    ]

                    port mb {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7680, 8184
                    ]

                    port mc {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7680, 8240
                    ]

                    port En {
                        position = right:5
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7680, 8288
                    ]

                    tag Connect6 {
                        value = "INV_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8336, 8464
                        hide_name = True
                    ]

                    tag Goto45 {
                        value = "Island"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8528, 8640
                        size = 60, 20
                    ]

                    tag From7 {
                        value = "PCC_status"
                        scope = global
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8192, 8640
                        hide_name = True
                    ]

                    junction Junction47 sp
                    [
                        position = 8256, 8464
                    ]

                    junction Junction48 sp
                    [
                        position = 8256, 8464
                    ]

                    junction Junction376 sp
                    [
                        position = 8096, 7904
                    ]

                    junction Junction377 sp
                    [
                        position = 7952, 7840
                    ]

                    junction Junction378 sp
                    [
                        position = 7936, 7968
                    ]

                    connect "INV_sync OFF.in" "Logical operator1.out" as Connection155
                    connect INV_sync.out Junction47 as Connection1299
                    connect Junction47 Connect6 as Connection343
                    connect "Logical operator1.in" Junction48 as Connection345
                    connect Junction48 Junction47 as Connection346
                    connect "INV_sync ON.in" Junction48 as Connection347
                    connect Gain18.out Controller.U_P as Connection1892
                    connect Gain17.out Controller.U_Q as Connection1893
                    connect "Logical operator3.out" Goto45 as Connection1954
                    [
                        breakpoints = 8496, 8640
                    ]
                    connect From7 "Rate Transition1.in" as Connection4333
                    connect "Rate Transition1.out" "Logical operator3.in" as Connection4334
                    connect "C function2.out" Gain17.in as Connection4403
                    connect "C function1.out" Gain18.in as Connection4404
                    connect "C function1.charge" Junction376 as Connection4414
                    connect Junction376 "C function2.charge" as Connection4415
                    [
                        breakpoints = 8096, 7920
                    ]
                    connect "Rate Transition8.out" Junction376 as Connection4420
                    connect charge.out "Rate Transition8.in" as Connection4421
                    connect "Rate Transition9.out" "C function1.ref" as Connection4425
                    connect "Rate Transition10.out" "C function2.ref" as Connection4427
                    connect "C function3.Pref" Junction377 as Connection4430
                    connect Junction377 "Rate Transition9.in" as Connection4431
                    connect "Rate Transition10.in" Junction378 as Connection4433
                    connect Junction378 "C function3.Qref" as Connection4434
                    connect Pref.in Gain19.out as Connection4436
                    connect Gain19.in Junction377 as Connection4437
                    connect Qref.in Gain20.out as Connection4438
                    connect Gain20.in Junction378 as Connection4439
                }
                [
                    position = 7432, 7792
                    size = 96, 104
                ]

                component Subsystem Measurement {
                    layout = dynamic
                    component gen_PQ_transform "Power Meter" {
                        enable_inst_ports = "False"
                        filter_cutoff_Hz = "1"
                    }
                    [
                        position = 8480, 8192
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 8584, 8112
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 8584, 8176
                    ]

                    component gen_probe S {
                    }
                    [
                        position = 8120, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_probe Q1 {
                    }
                    [
                        position = 8120, 8176
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_probe pf {
                    }
                    [
                        position = 8120, 8304
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_probe P1 {
                    }
                    [
                        position = 8120, 8112
                        rotation = down
                        scale = -1, 1
                    ]

                    component Subsystem Power_Meas {
                        layout = dynamic
                        component gen_gain Gain6 {
                            gain = "S"
                        }
                        [
                            position = 8048, 8232
                            rotation = right
                            hide_name = True
                        ]

                        component gen_gain Gain4 {
                            gain = "S"
                        }
                        [
                            position = 7952, 8056
                            rotation = left
                            hide_name = True
                        ]

                        component gen_gain Gain5 {
                            gain = "S"
                        }
                        [
                            position = 8048, 8056
                            rotation = left
                            hide_name = True
                        ]

                        component Subsystem Power_Meas_DQpu {
                            layout = dynamic
                            component gen_c_function S_and_pf {
                                in_terminal_dimensions = "inherit;inherit"
                                in_terminal_dimensions_str = "P inherit;Q inherit"
                                in_terminal_labels = "False;False;"
                                in_terminal_properties = "real P;inherit Q;"
                                init_fnc = "/*Begin code section*/
P = 0;
Q = 0;
S = 0;
pf = 0;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions = "inherit;inherit"
                                out_terminal_dimensions_str = "S inherit;pf inherit"
                                out_terminal_labels = "False;False;"
                                out_terminal_properties = "inherit S;inherit pf;"
                                output_fnc = "/*Begin code section*/
S = sqrt(P*P+Q*Q);
if(S>0){
    pf = P/S;
}
else{
    pf = 0;
}
/*End code section*/"
                            }
                            [
                                position = 8392, 8192
                                size = 0, 0
                            ]

                            component gen_product Product4 {
                            }
                            [
                                position = 8024, 8232
                                hide_name = True
                            ]

                            component gen_product Product3 {
                            }
                            [
                                position = 8024, 8320
                                hide_name = True
                            ]

                            component gen_z_domain_transfer LPF_Q {
                                a_coeff = "[1.0/(2*np.pi*fc_Q),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8208, 8272
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 8024, 8064
                                hide_name = True
                            ]

                            component gen_sum Sum1 {
                            }
                            [
                                position = 8128, 8112
                                hide_name = True
                            ]

                            component gen_z_domain_transfer LPF_P {
                                a_coeff = "[1.0/(2*np.pi*fc_P),1]"
                                b_coeff = "1"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8208, 8112
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8024, 8152
                                hide_name = True
                            ]

                            component gen_sum Sum2 {
                                signs = "+-"
                            }
                            [
                                position = 8128, 8272
                                hide_name = True
                            ]

                            port Vd {
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Vq {
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7808, 8144
                            ]

                            port Id {
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7808, 8240
                            ]

                            port Iq {
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7808, 8328
                            ]

                            port P {
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8312, 8112
                            ]

                            port Q {
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8312, 8272
                            ]

                            port S {
                                position = right:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8464, 8144
                            ]

                            port pf {
                                position = right:4
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8464, 8240
                            ]

                            junction Junction1 sp
                            [
                                position = 7920, 8240
                            ]

                            junction Junction2 sp
                            [
                                position = 7928, 8328
                            ]

                            junction Junction3 sp
                            [
                                position = 7944, 8144
                            ]

                            junction Junction4 sp
                            [
                                position = 7960, 8056
                            ]

                            junction Junction5 sp
                            [
                                position = 8264, 8112
                            ]

                            junction Junction6 sp
                            [
                                position = 8264, 8272
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">P = Vd*Id+Vq*Iq;</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Q = Vq*Id-Vd*Iq;</p></body></html> ENDCOMMENT 
                            [
                                position = 8000, 7976
                            ]

                            connect Junction1 Id as Connection49
                            connect Junction1 Product4.in1 as Connection24
                            connect Junction2 Iq as Connection52
                            connect Junction2 Product3.in1 as Connection27
                            connect Junction3 Product2.in as Connection32
                            connect Junction3 Vq as Connection53
                            connect Junction4 Product1.in as Connection35
                            connect Junction4 Vd as Connection50
                            connect Junction5 LPF_P.out as Connection44
                            connect Junction5 P as Connection55
                            connect Junction6 LPF_Q.out as Connection47
                            connect Junction6 Q as Connection56
                            connect LPF_P.in Sum1.out as Connection39
                            connect LPF_Q.in Sum2.out as Connection40
                            connect Product1.in1 Junction1 as Connection25
                            connect Product2.in1 Junction2 as Connection28
                            connect Product3.in Junction4 as Connection36
                            connect Product4.in Junction3 as Connection33
                            connect S_and_pf.P Junction5 as Connection45
                            connect S_and_pf.Q Junction6 as Connection48
                            connect S_and_pf.S S as Connection51
                            connect S_and_pf.pf pf as Connection54
                            connect Sum1.in Product1.out as Connection29
                            connect Sum1.in1 Product2.out as Connection30
                            connect Sum2.in1 Product3.out as Connection38
                            connect Sum2.in Product4.out as Connection37

                            mask {
                                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Power measurement in DQ frame with inputs and outputs in per unit.</p><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Zero component is not considered in the power calculation, thus this measurement is not suitable for unbalanced systems.</p></body></html>"

                                fc_P {
                                    label = "Active power low pass filter cut-off freq."
                                    widget = edit
                                    type = generic
                                    default_value = "1.0"
                                    unit = "Hz"
                                }

                                fc_Q {
                                    label = "Reactive power low pass filter cut-off freq."
                                    widget = edit
                                    type = generic
                                    default_value = "1.0"
                                    unit = "Hz"
                                }

                                CODE open
                                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                                
                                    dialog = RegularComponentPropertiesDialog(
                                        component=component,
                                        property_container=component.masks[-1],
                                        current_diagram=current_diagram
                                    )
                                    dialog.exec_()
                                
                                ENDCODE
                            }
                        }
                        [
                            position = 7864, 8160
                            size = 72, 128
                        ]

                        port Vd {
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7760, 8048
                            rotation = right
                        ]

                        port Vq {
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7696, 8048
                            rotation = right
                        ]

                        port Id {
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7696, 8248
                            rotation = left
                        ]

                        port Iq {
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7760, 8248
                            rotation = left
                        ]

                        port P {
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8000
                            rotation = left
                        ]

                        port Q {
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8048, 8000
                            rotation = left
                        ]

                        port S {
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8048, 8288
                            rotation = right
                        ]

                        port pf {
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8288
                            rotation = right
                        ]

                        connect Gain4.out P as Connection10
                        connect Gain4.in Power_Meas_DQpu.P as Connection20
                        connect Gain5.in Power_Meas_DQpu.Q as Connection21
                        connect Gain5.out Q as Connection11
                        connect Gain6.in Power_Meas_DQpu.S as Connection16
                        connect Gain6.out S as Connection13
                        connect Id Power_Meas_DQpu.Id as Connection14
                        connect Iq Power_Meas_DQpu.Iq as Connection17
                        connect Vd Power_Meas_DQpu.Vd as Connection15
                        connect Vq Power_Meas_DQpu.Vq as Connection18
                        connect pf Power_Meas_DQpu.pf as Connection19
                    }
                    [
                        position = 7928, 8208
                        size = 96, 232
                    ]

                    tag From58 {
                        value = "Ea1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8344, 8128
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From59 {
                        value = "Eb1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8320, 8144
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From60 {
                        value = "Ec1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8296, 8176
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From61 {
                        value = "Ia1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8296, 8192
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From62 {
                        value = "Ib1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8296, 8224
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From63 {
                        value = "Ic1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8296, 8240
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto49 {
                        value = "Q"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8056, 8144
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto50 {
                        value = "P"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8056, 8080
                        hide_name = True
                        size = 0, 0
                    ]

                    tag Goto51 {
                        value = "pf"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8056, 8272
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From31 {
                        value = "Eq"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7800, 8176
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto52 {
                        value = "S"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8056, 8208
                        hide_name = True
                        size = 0, 0
                    ]

                    tag From34 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7800, 8240
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From32 {
                        value = "Ed"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7800, 8112
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From35 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7800, 8304
                        hide_name = True
                        size = 60, 20
                    ]

                    junction Junction188 sp
                    [
                        position = 8008, 8112
                    ]

                    junction Junction189 sp
                    [
                        position = 8008, 8176
                    ]

                    junction Junction190 sp
                    [
                        position = 8008, 8240
                    ]

                    junction Junction191 sp
                    [
                        position = 8008, 8304
                    ]

                    connect From58 "Power Meter.va" as Connection2022
                    connect From59 "Power Meter.vb" as Connection2023
                    [
                        breakpoints = 8400, 8144; 8400, 8160
                    ]
                    connect From60 "Power Meter.vc" as Connection2024
                    connect From61 "Power Meter.ia" as Connection2025
                    connect From62 "Power Meter.ib" as Connection2026
                    [
                        breakpoints = 8336, 8208; 8432, 8208
                    ]
                    connect From63 "Power Meter.ic" as Connection2027
                    connect P.in "Power Meter.Pdc" as Connection2028
                    connect Q.in "Power Meter.Qdc" as Connection2029
                    connect From31 Power_Meas.Vq as Connection403
                    connect From32 Power_Meas.Vd as Connection402
                    connect From34 Power_Meas.Id as Connection404
                    connect Goto50 Junction188 as Connection541
                    connect Goto49 Junction189 as Connection544
                    connect Goto52 Junction190 as Connection547
                    connect Goto51 Junction191 as Connection550
                    connect Junction188 Power_Meas.P as Connection540
                    connect Junction189 Power_Meas.Q as Connection543
                    connect Junction190 Power_Meas.S as Connection546
                    connect Junction191 Power_Meas.pf as Connection549
                    connect P1.in Junction188 as Connection539
                    connect Power_Meas.Iq From35 as Connection405
                    connect Q1.in Junction189 as Connection542
                    connect S.in Junction190 as Connection545
                    connect pf.in Junction191 as Connection548
                }
                [
                    position = 7616, 8328
                    size = 120, 144
                ]

                component pas_resistor Ra {
                    resistance = "R_i"
                }
                [
                    position = 7792, 7904
                    rotation = down
                    scale = 1, -1
                ]

                component pas_resistor Rb {
                    resistance = "R_i"
                }
                [
                    position = 7792, 8000
                    rotation = down
                    scale = 1, -1
                ]

                component pas_resistor Rc {
                    resistance = "R_i"
                }
                [
                    position = 7792, 8096
                    rotation = down
                    scale = 1, -1
                ]

                component pas_resistor Ra1 {
                    resistance = "R_i"
                }
                [
                    position = 8720, 7904
                    rotation = down
                    scale = 1, -1
                ]

                component pas_resistor Rb1 {
                    resistance = "R_i"
                }
                [
                    position = 8720, 8000
                    rotation = down
                    scale = 1, -1
                ]

                component pas_resistor Rc1 {
                    resistance = "R_i"
                }
                [
                    position = 8720, 8096
                    rotation = down
                    scale = 1, -1
                ]

                port C {
                    label = "C"
                    position = right:3
                    kind = pe
                }
                [
                    position = 9064, 8096
                    scale = -1, 1
                ]

                port B {
                    label = "B"
                    position = right:2
                    kind = pe
                }
                [
                    position = 9064, 8000
                    scale = -1, 1
                ]

                port A {
                    label = "A"
                    position = right:1
                    kind = pe
                }
                [
                    position = 9064, 7904
                    scale = -1, 1
                ]

                port + {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7376, 7904
                ]

                port - {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7376, 8096
                ]

                tag Goto39 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8928, 7968
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto31 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8928, 8064
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto35 {
                    value = "Ia"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 8160
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto41 {
                    value = "Va"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8400, 8144
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto44 {
                    value = "Ib"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 8208
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto30 {
                    value = "Vc"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8416, 8272
                    rotation = down
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto38 {
                    value = "Ic"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 8256
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto32 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8928, 7872
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto40 {
                    value = "Vb"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8408, 8208
                    hide_name = True
                    scale = -1, 1
                    size = 60, 20
                ]

                junction Junction161 pe
                [
                    position = 8160, 7904
                ]

                junction Junction199 pe
                [
                    position = 8240, 8440
                ]

                junction Junction374 pe
                [
                    position = 7464, 7904
                ]

                junction Junction375 pe
                [
                    position = 7464, 8096
                ]

                junction Junction383 pe
                [
                    position = 8560, 8440
                ]

                junction Junction384 pe
                [
                    position = 8496, 8440
                ]

                junction Junction386 pe
                [
                    position = 8240, 8440
                ]

                junction Junction387 pe
                [
                    position = 8240, 8440
                ]

                junction Junction388 pe
                [
                    position = 8320, 8440
                ]

                junction Junction389 pe
                [
                    position = 8496, 7904
                ]

                junction Junction392 pe
                [
                    position = 8240, 8000
                ]

                junction Junction393 pe
                [
                    position = 8560, 8000
                ]

                junction Junction394 pe
                [
                    position = 8320, 8096
                ]

                junction Junction395 pe
                [
                    position = 8640, 8096
                ]

                connect Ib.out Goto44 as Connection374
                connect La1.p_node Ia1.p_node as Connection665
                connect Rsha.n_node Junction161 as Connection366
                connect Ia.n_node Junction161 as Connection314
                connect Goto35 Ia.out as Connection342
                connect Ic.out Goto38 as Connection313
                connect Ic1.out Goto31 as Connection668
                connect Lc1.p_node Ic1.p_node as Connection663
                connect Lc.p_node Ic.p_node as Connection328
                connect Goto39 Ib1.out as Connection669
                connect Lb1.p_node Ib1.p_node as Connection664
                connect La.p_node Ia.p_node as Connection378
                connect Lb.p_node Ib.p_node as Connection372
                connect Ia1.out Goto32 as Connection666
                connect Cdc.p_node Junction374 as Connection4407
                [
                    breakpoints = 7464, 7944
                ]
                connect Junction374 "Three Phase Inverter.pos_out" as Connection4408
                [
                    breakpoints = 7464, 7904; 7464, 7904
                ]
                connect + Junction374 as Connection4409
                connect Cdc.n_node Junction375 as Connection4410
                [
                    breakpoints = 7464, 8040
                ]
                connect Junction375 "Three Phase Inverter.neg_out" as Connection4411
                [
                    breakpoints = 7464, 8096; 7464, 8096
                ]
                connect - Junction375 as Connection4412
                connect Rshb.p_node Cb.p_node as Connection4426
                [
                    breakpoints = 8240, 8304; 8240, 8304; 8240, 8304; 8240, 8304
                ]
                connect Ca.p_node Rsha.p_node as Connection4429
                [
                    breakpoints = 8160, 8296
                ]
                connect Cc.p_node Rshc.p_node as Connection4425
                [
                    breakpoints = 8320, 8304; 8320, 8304; 8320, 8304; 8320, 8312; 8320, 8288
                ]
                connect Vb.n_node Junction383 as Connection4449
                connect Vc.n_node Junction383 as Connection4451
                connect Junction383 Junction384 as Connection4459
                connect Va.n_node Junction384 as Connection4461
                connect Ia1.n_node A as Connection4464
                connect Ib1.n_node B as Connection4465
                connect Ic1.n_node C as Connection4466
                connect Junction199 Junction386 as Connection4471
                connect Ca.n_node Junction387 as Connection4474
                connect Junction387 Junction386 as Connection4475
                connect Cb.n_node Junction387 as Connection4476
                connect Junction386 Junction388 as Connection4477
                [
                    breakpoints = 8240, 8440; 8240, 8440; 8240, 8440; 8240, 8440; 8240, 8440; 8240, 8440; 8240, 8440; 8240, 8440; 8240, 8440; 8240, 8440; 8240, 8440
                ]
                connect Junction388 Junction384 as Connection4478
                connect Cc.n_node Junction388 as Connection4479
                connect Control.En "Three Phase Inverter.En" as Connection4480
                connect Control.ma "Three Phase Inverter.InA" as Connection4481
                [
                    breakpoints = 7608, 7864
                ]
                connect Control.mb "Three Phase Inverter.InB" as Connection4482
                connect Control.mc "Three Phase Inverter.InC" as Connection4483
                connect Ra.p_node La.n_node as Connection4484
                connect "Three Phase Inverter.a_in" Ra.n_node as Connection4485
                connect "Three Phase Inverter.b_in" Rb.n_node as Connection4486
                connect Rb.p_node Lb.n_node as Connection4487
                connect "Three Phase Inverter.c_in" Rc.n_node as Connection4488
                connect Rc.p_node Lc.n_node as Connection4489
                connect Ra1.p_node La1.n_node as Connection4493
                connect Junction161 Junction389 as Connection4494
                [
                    breakpoints = 8160, 7904; 8160, 7904
                ]
                connect Junction389 Va.p_node as Connection4495
                [
                    breakpoints = 8496, 7904; 8496, 7904; 8496, 7904; 8496, 7904; 8496, 7904
                ]
                connect Ra1.n_node Junction389 as Connection4496
                connect Rb1.p_node Lb1.n_node as Connection4497
                connect Rc1.p_node Lc1.n_node as Connection4501
                connect Goto41 Va.out as Connection4505
                connect Goto40 Vb.out as Connection4506
                connect Goto30 Vc.out as Connection4507
                connect Ib.n_node Junction392 as Connection4510
                connect Junction392 Rshb.n_node as Connection4511
                [
                    breakpoints = 8240, 8000
                ]
                connect Rb1.n_node Junction393 as Connection4513
                connect Junction393 Junction392 as Connection4514
                connect Vb.p_node Junction393 as Connection4515
                connect Ic.n_node Junction394 as Connection4518
                connect Junction394 Rshc.n_node as Connection4519
                [
                    breakpoints = 8320, 8096
                ]
                connect Rc1.n_node Junction395 as Connection4521
                connect Junction395 Junction394 as Connection4522
                connect Vc.p_node Junction395 as Connection4523

                Ts = "Ts_inv"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A lead acid battery interfaced with a three-phase inverter and LCL filter</p></body></html>"

                    Nb {
                        label = "Number of cells in series"
                        widget = edit
                        type = generic
                        default_value = "20"
                        group = "1. Battery"
                    }

                    Inom {
                        label = "Nominal current"
                        widget = edit
                        type = generic
                        default_value = "55"
                        unit = "A"
                        group = "1. Battery"
                    }

                    Tamb {
                        label = "Ambient temperature"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "C"
                        group = "1. Battery"
                    }

                    Ri {
                        label = "Internal resistance"
                        widget = edit
                        type = generic
                        default_value = "0.01"
                        unit = "Ohm"
                        group = "1. Battery"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_ess"
                        unit = "s"
                        group = "1. Battery"
                    }

                    S {
                        label = "Rated Power "
                        widget = edit
                        type = generic
                        default_value = "20e3"
                        unit = "VA"
                        group = "2. Three-phase Inverter"
                    }

                    V_ABC {
                        label = "Rated Phase Voltage (RMS)"
                        widget = edit
                        type = generic
                        default_value = "480/np.sqrt(3)"
                        unit = "V"
                        group = "2. Three-phase Inverter"
                    }

                    w_0 {
                        label = "Nominal Frequency"
                        widget = edit
                        type = generic
                        default_value = "2*np.pi*60"
                        unit = "rad/s"
                        group = "2. Three-phase Inverter"
                    }

                    R_i {
                        label = "Input Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-3"
                        unit = "Ω"
                        group = "3. LCL filter"
                    }

                    L_i {
                        label = "Input Inductance"
                        widget = edit
                        type = generic
                        default_value = "0.0333"
                        unit = "H"
                        group = "3. LCL filter"
                    }

                    R_s {
                        label = "Shunt Resistance"
                        widget = edit
                        type = generic
                        default_value = "2.5872"
                        unit = "Ω"
                        group = "3. LCL filter"
                    }

                    C_s {
                        label = "Shunt Capacitance"
                        widget = edit
                        type = generic
                        default_value = "5e-6"
                        unit = "F"
                        group = "3. LCL filter"
                    }

                    R_o {
                        label = "Output Resistance"
                        widget = edit
                        type = generic
                        default_value = "2e-3 - R"
                        unit = "Ω"
                        group = "3. LCL filter"
                    }

                    L_o {
                        label = "Output Inductance"
                        widget = edit
                        type = generic
                        default_value = "3.04e-4 - L"
                        unit = "H"
                        group = "3. LCL filter"
                    }

                    Kp_I {
                        label = "Inner Loop Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "0.6079*10"
                        group = "4. Cascaded Controller"
                    }

                    Ki_I {
                        label = "Inner Loop Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "4*10"
                        group = "4. Cascaded Controller"
                    }

                    Imax {
                        label = "Inner Loop Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1"
                        group = "4. Cascaded Controller"
                    }

                    Imin {
                        label = "Inner Loop Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1"
                        group = "4. Cascaded Controller"
                    }

                    Kp_V {
                        label = "Outer Loop Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "0.0033"
                        group = "4. Cascaded Controller"
                    }

                    Ki_V {
                        label = "Outer Loop Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "0.7493"
                        group = "4. Cascaded Controller"
                    }

                    Vmax {
                        label = "Outer Loop Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1"
                        group = "4. Cascaded Controller"
                    }

                    Vmin {
                        label = "Outer Loop Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1"
                        group = "4. Cascaded Controller"
                    }

                    f_D {
                        label = "Frequency Droop Coefficient"
                        widget = edit
                        type = generic
                        default_value = "3e-3"
                        unit = "%"
                        group = "5. Droop Control"
                    }

                    V_D {
                        label = "Voltage Droop Coefficient"
                        widget = edit
                        type = generic
                        default_value = "5e-3"
                        unit = "%"
                        group = "5. Droop Control"
                    }

                    T_m {
                        label = "Measurement delay"
                        widget = edit
                        type = generic
                        default_value = "0.5"
                        unit = "s"
                        group = "5. Droop Control"
                    }

                    maxV_slip {
                        label = "Maximum slip (voltage)"
                        widget = edit
                        type = generic
                        default_value = "5e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    minV_slip {
                        label = "Minimum slip (voltage)"
                        widget = edit
                        type = generic
                        default_value = "2.5e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    maxw_slip {
                        label = "Maximum slip (frequency)"
                        widget = edit
                        type = generic
                        default_value = "10e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    minw_slip {
                        label = "Minimum slip (frequency)"
                        widget = edit
                        type = generic
                        default_value = "5e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    maxV_pds {
                        label = "Maximum difference signal (voltage)"
                        widget = edit
                        type = generic
                        default_value = "1e-2"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    maxw_pds {
                        label = "Maximum difference signal (frequency)"
                        widget = edit
                        type = generic
                        default_value = "5e-1"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                        Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                        Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                        Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                        f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                        V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                        T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                        
                        
                        Tfast = Ts
                        S_DQ = (2/3)*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                        mP = w_0*(f_D/100)
                        nQ = V_DQ*(V_D/100)
                        D_f = 1/mP
                        D_V = 1/nQ
                        Tsync = 1
                        
                        #Nb = 500;
                        #Inom = 50;
                        Cnom = Inom*10;
                        #Vch = V_ABC*1.8;
                        #Vdisch = V_ABC*2.2;
                        Vch = 750;
                        Vdisch = 750;
                        #Tamb = 30;
                    ENDCODE

                    CODE define_icon
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        Nb = mdl.get_property_value(mdl.prop(item_handle, "Nb"))
                        Inom = mdl.get_property_value(mdl.prop(item_handle, "Inom"))
                        Tamb = mdl.get_property_value(mdl.prop(item_handle, "Tamb"))
                        Ri = mdl.get_property_value(mdl.prop(item_handle, "Ri"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                        Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                        Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                        Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                        f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                        V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                        T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                        maxV_slip = mdl.get_property_value(mdl.prop(item_handle, "maxV_slip"))
                        minV_slip = mdl.get_property_value(mdl.prop(item_handle, "minV_slip"))
                        maxw_slip = mdl.get_property_value(mdl.prop(item_handle, "maxw_slip"))
                        minw_slip = mdl.get_property_value(mdl.prop(item_handle, "minw_slip"))
                        maxV_pds = mdl.get_property_value(mdl.prop(item_handle, "maxV_pds"))
                        maxw_pds = mdl.get_property_value(mdl.prop(item_handle, "maxw_pds"))
                        # HEADER STOP
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        #R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        #L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                        Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                        Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                        Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                        f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                        V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                        T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                        
                        
                        Tfast = Ts
                        S_DQ = (2/3)*S
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S_DQ/V_DQ
                        Z_DQ = V_DQ/I_DQ
                        mP = w_0*(f_D/100)
                        nQ = V_DQ*(V_D/100)
                        D_f = 1/mP
                        D_V = 1/nQ
                        Tsync = 1
                        
                        #Nb = 500;
                        #Inom = 50;
                        Cnom = Inom*10;
                        #Vch = V_ABC*1.8;
                        #Vdisch = V_ABC*2.2;
                        Vch = 750;
                        Vdisch = 750;
                        #Tamb = 30;
                    ENDCODE
                }
            }
            [
                position = 8200, 8144
                size = 64, 80
            ]

            component Subsystem "Core coupling" {
                layout = dynamic
                component "core/Three Phase Core Coupling" "Core Coupling" {
                }
                [
                    position = 8192, 8192
                    size = 12, 256
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8256, 8192
                    rotation = down
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8120, 8192
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8120, 8288
                ]

                port c {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8256, 8288
                    rotation = down
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8120, 8096
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8256, 8096
                    rotation = down
                ]

                connect "Core Coupling.c_out" c as Connection4
                connect "Core Coupling.b_out" b as Connection1
                connect "Core Coupling.a_out" a as Connection6
                connect "Core Coupling.b_in" B as Connection2
                connect "Core Coupling.a_in" A as Connection5
                connect "Core Coupling.c_in" C as Connection3
            }
            [
                position = 8496, 8144
                size = 48, 80
            ]

            component Subsystem Load {
                layout = dynamic
                component pas_inductor La {
                    inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
                }
                [
                    position = 8232, 8136
                ]

                component pas_inductor Lc {
                    inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
                }
                [
                    position = 8232, 8248
                ]

                component pas_resistor Rb {
                    resistance = "V**2/S*pf"
                }
                [
                    position = 8136, 8192
                ]

                component pas_resistor Ra {
                    resistance = "V**2/S*pf"
                }
                [
                    position = 8136, 8136
                ]

                component pas_inductor Lb {
                    inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
                }
                [
                    position = 8232, 8192
                ]

                component pas_resistor Rc {
                    resistance = "V**2/S*pf"
                }
                [
                    position = 8136, 8248
                ]

                port A {
                    label = "A"
                    position = left:1
                    kind = pe
                }
                [
                    position = 8056, 8136
                ]

                port B {
                    label = "B"
                    position = left:2
                    kind = pe
                }
                [
                    position = 8056, 8192
                ]

                port C {
                    label = "C"
                    position = left:3
                    kind = pe
                }
                [
                    position = 8056, 8248
                ]

                junction Junction1 pe
                [
                    position = 8288, 8192
                ]

                connect Junction1 Lc.n_node as Connection17
                connect La.n_node Junction1 as Connection16
                connect Lb.n_node Junction1 as Connection18
                connect Lb.p_node Rb.n_node as Connection13
                connect Ra.p_node A as Connection8
                connect Ra.n_node La.p_node as Connection12
                connect Rb.p_node B as Connection1
                connect Rc.p_node C as Connection10
                connect Rc.n_node Lc.p_node as Connection14

                S = "10e3"

                mask {
                    description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
one of the parameters can be set to 0."

                    V {
                        label = "Voltage"
                        widget = edit
                        type = generic
                        default_value = "480"
                        unit = "V"
                        group = "General"
                    }

                    S {
                        label = "Power"
                        widget = edit
                        type = generic
                        default_value = "1000e3"
                        unit = "VA"
                        group = "General"
                    }

                    f {
                        label = "Frequency"
                        widget = edit
                        type = generic
                        default_value = "60"
                        unit = "Hz"
                        group = "General"
                    }

                    pf {
                        label = "Power Factor"
                        widget = edit
                        type = generic
                        default_value = "0.9"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8200, 8256
                scale = -1, 1
                size = 48, 72
            ]

            component Subsystem ESS {
                layout = dynamic
                component "core/Signal Controlled Voltage Source" Vess {
                }
                [
                    position = 8224, 8136
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_z_domain_transfer LPF_dc1 {
                    a_coeff = "[1.0/(2*np.pi*1),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8376, 8280
                ]

                component gen_z_domain_transfer LPF_dc2 {
                    a_coeff = "[1.0/(2*np.pi*1),1]"
                    b_coeff = "1"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8080, 8200
                    rotation = right
                ]

                component Subsystem "Lead acid" {
                    layout = dynamic
                    component gen_abs Abs1 {
                    }
                    [
                        position = 7368, 8144
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function1" {
                        mathematical_fn = "power"
                    }
                    [
                        position = 7608, 8160
                        hide_name = True
                    ]

                    component src_constant Constant1 {
                        execution_rate = "Ts"
                        value = "Inom"
                    }
                    [
                        position = 7280, 8184
                        hide_name = True
                    ]

                    component gen_product Product1 {
                        signs = "*/"
                    }
                    [
                        position = 7472, 8152
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "0.9"
                    }
                    [
                        position = 7512, 8208
                        hide_name = True
                    ]

                    component gen_abs Abs2 {
                    }
                    [
                        position = 7368, 8264
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function2" {
                        mathematical_fn = "power"
                    }
                    [
                        position = 7496, 8272
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "0.86"
                    }
                    [
                        position = 7400, 8312
                        hide_name = True
                    ]

                    component gen_abs Abs4 {
                    }
                    [
                        position = 7376, 8616
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function4" {
                        mathematical_fn = "power"
                    }
                    [
                        position = 7504, 8624
                        hide_name = True
                    ]

                    component src_constant Constant5 {
                        execution_rate = "Ts"
                        value = "1.5"
                    }
                    [
                        position = 7408, 8672
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 7352, 8376
                        hide_name = True
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 7272, 8352
                        hide_name = True
                    ]

                    component gen_abs Abs5 {
                    }
                    [
                        position = 7448, 8376
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function5" {
                        mathematical_fn = "power"
                    }
                    [
                        position = 7576, 8384
                        hide_name = True
                    ]

                    component src_constant Constant7 {
                        execution_rate = "Ts"
                        value = "1.2"
                    }
                    [
                        position = 7480, 8432
                        hide_name = True
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "6"
                    }
                    [
                        position = 7792, 8360
                    ]

                    component gen_c_function "C function" {
                        execution_rate = "Ts"
                        global_variables = "real Cbat;real Vbat;"
                        in_terminal_dimensions = "1;6;1;1"
                        in_terminal_dimensions_str = "Ibat 1;x 6;Ceff 1;charge 1"
                        in_terminal_labels = "[(\'Ibat\', True), (\'x\', True), (\'Ceff\', True), (\'charge\', True)]"
                        in_terminal_properties = "real Ibat;real x;real Ceff;int charge;"
                        init_fnc = "/*Begin code section*/
SOC = 0.5;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "1;1;1"
                        out_terminal_dimensions_str = "Vdc 1;SOC 1;Vbtt 1"
                        out_terminal_labels = "[(\'Vdc\', True), (\'SOC\', True), (\'Vbtt\', True)]"
                        out_terminal_properties = "real Vdc;real SOC;real Vbtt;"
                        output_fnc = "/*Begin code section*/
if (Ibat>0){
    Vbat = Nb*(2+0.16*SOC)+Nb*Ibat/Cnom*(6/(1+x[1])+0.48/x[2]+0.036)*(1-0.025*(Tamb-25));
    SOC = SOC +(Ibat/Cbat)*1e-3/3600.0;
}
else{
    Vbat = Nb*(1.965+0.12*SOC)-Nb*x[3]/Cnom*(4/(1+x[4])+0.27/x[5]+0.02)*(1-0.007*(Tamb-25));
    SOC = SOC + (Ibat/Cbat)*1e-3/3600.0;
}
if (SOC<0.001) SOC = 0.001;
if (SOC>1) SOC = 1;
if (Vbat<1) Vbat = 1;  
if (Vbat>1.5e3) Vbat = 1.5e3;
Vbtt = Vbat+Ri*Ibat;
if (charge>0) Vdc = Vch;
else Vdc = Vdisch;
/*End code section*/"
                        parameters = "real Nb;real Cnom;real Inom;real Tamb;real Ts;real Ri;real Vdisch;real Vch;"
                        update_fnc = "/*Begin code section*/
Cbat = 1.67*Cnom*(1+0.005*(Tamb-25))/(1+0.67*x[0]);
/*End code section*/"
                    }
                    [
                        position = 8192, 8328
                        size = 88, 152
                    ]

                    component gen_abs Abs3 {
                    }
                    [
                        position = 7368, 8496
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function3" {
                        mathematical_fn = "power"
                    }
                    [
                        position = 7496, 8504
                        hide_name = True
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "1.3"
                    }
                    [
                        position = 7400, 8552
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "SOC inherit;Ibat inherit"
                        in_terminal_labels = "[(\'SOC\', True), (\'Ibat\', True)]"
                        in_terminal_properties = "real SOC;inherit Ibat;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', False)]"
                        output_fnc = "/*Begin code section*/
if (Ibat>0) out = 20.73*(SOC-1)/(Ibat/Inom+0.55);
else out = 20.73*(SOC-1)/(-Ibat/Inom+0.55);
/*End code section*/"
                        parameters = "real Inom;"
                    }
                    [
                        position = 7816, 8544
                        hide_name = True
                        size = 56, 72
                    ]

                    component gen_math_fnc "Mathematical function6" {
                    }
                    [
                        position = 7936, 8544
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 8024, 8472
                        hide_name = True
                    ]

                    component src_constant Constant8 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 7936, 8464
                        hide_name = True
                    ]

                    component tm_delay "Unit Delay1" {
                        init_value = "0.5"
                    }
                    [
                        position = 8416, 8328
                        hide_name = True
                    ]

                    component gen_probe SOC {
                    }
                    [
                        position = 8392, 8376
                        scale = -1, 1
                    ]

                    component gen_probe Ibat {
                    }
                    [
                        position = 7432, 8936
                        scale = -1, 1
                    ]

                    component gen_c_function "C function2" {
                        in_terminal_dimensions = "1;1;1"
                        in_terminal_dimensions_str = "Idc 1;charge 1;Vbtt 1"
                        in_terminal_labels = "[(\'Idc\', True), (\'charge\', True), (\'Vbtt\', True)]"
                        in_terminal_properties = "real Idc;int charge;real Vbtt;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "1"
                        out_terminal_dimensions_str = "Ibat 1"
                        out_terminal_labels = "[(\'Ibat\', True)]"
                        out_terminal_properties = "real Ibat;"
                        output_fnc = "/*Begin code section*/
if (charge>0) Ibat = Idc*Vch/Vbtt;
else Ibat = Idc*Vdisch/Vbtt;
/*End code section*/"
                        parameters = "real Vdisch;real Vch;"
                    }
                    [
                        position = 7456, 8768
                        size = 72, 64
                    ]

                    component tm_delay "Unit Delay2" {
                        init_value = "0.5"
                    }
                    [
                        position = 8400, 8440
                        hide_name = True
                    ]

                    component gen_digital_probe Charging {
                    }
                    [
                        position = 7304, 8688
                    ]

                    component gen_comparator Comparator1 {
                    }
                    [
                        position = 7192, 8768
                        hide_name = True
                    ]

                    component src_constant Constant9 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 7104, 8808
                        hide_name = True
                    ]

                    component gen_z_domain_transfer LPF_dc {
                        a_coeff = "[1.0/(2*np.pi*1),1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 7512, 8832
                        rotation = right
                    ]

                    component gen_z_domain_transfer LPF_dc1 {
                        a_coeff = "[1.0/(2*np.pi*1),1]"
                        b_coeff = "1"
                        domain = "S-domain"
                        method = "Bilinear"
                    }
                    [
                        position = 8328, 8440
                    ]

                    port Vdc {
                        position = auto:auto
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8320, 8272
                    ]

                    tag From57 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7280, 8144
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From58 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7280, 8264
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From60 {
                        value = "SOC"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7288, 8616
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From61 {
                        value = "SOC"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7272, 8408
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From62 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7968, 8280
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto34 {
                        value = "SOC"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8560, 8328
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From59 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7280, 8496
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From64 {
                        value = "SOC"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7736, 8528
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From65 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7736, 8560
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From66 {
                        value = "charge"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7904, 8376
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto46 {
                        value = "Ibat"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 8872
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From67 {
                        value = "Idc"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7080, 8736
                        hide_name = True
                        size = 37, 20
                    ]

                    tag From68 {
                        value = "Vbtt"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7304, 8824
                        hide_name = True
                        size = 37, 20
                    ]

                    tag Goto54 {
                        value = "Vbtt"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8512, 8440
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto55 {
                        value = "charge"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7312, 8792
                        hide_name = True
                        size = 60, 20
                    ]

                    junction Junction1 sp
                    [
                        position = 7424, 8496
                    ]

                    junction Junction366 sp
                    [
                        position = 7512, 8872
                    ]

                    junction Junction367 sp
                    [
                        position = 7232, 8768
                    ]

                    junction Junction368 sp
                    [
                        position = 7232, 8768
                    ]

                    junction Junction369 sp
                    [
                        position = 7152, 8736
                    ]

                    junction Junction370 sp
                    [
                        position = 8448, 8328
                    ]

                    connect From57 Abs1.in as Connection1
                    connect Abs1.out Product1.in as Connection2
                    connect Constant1.out Product1.in1 as Connection3
                    connect Product1.out "Mathematical function1.in" as Connection4
                    connect Constant2.out "Mathematical function1.in1" as Connection5
                    connect From58 Abs2.in as Connection6
                    connect Constant3.out "Mathematical function2.in1" as Connection7
                    connect Abs2.out "Mathematical function2.in" as Connection8
                    connect Constant5.out "Mathematical function4.in1" as Connection12
                    connect Abs4.out "Mathematical function4.in" as Connection13
                    connect From60 Abs4.in as Connection14
                    connect From61 Sum1.in1 as Connection15
                    connect Constant6.out Sum1.in as Connection16
                    connect Constant7.out "Mathematical function5.in1" as Connection17
                    connect Abs5.out "Mathematical function5.in" as Connection18
                    connect Sum1.out Abs5.in as Connection19
                    connect From59 Abs3.in as Connection9
                    connect Constant4.out "Mathematical function3.in1" as Connection10
                    connect "Bus Join1.in" "Mathematical function1.out" as Connection30
                    connect "Bus Join1.in1" "Mathematical function2.out" as Connection31
                    connect "Bus Join1.in2" "Mathematical function5.out" as Connection32
                    connect Abs3.out Junction1 as Connection39
                    connect Junction1 "Mathematical function3.in" as Connection40
                    [
                        breakpoints = 7424, 8496
                    ]
                    connect "Bus Join1.in3" Junction1 as Connection41
                    [
                        breakpoints = 7624, 8368; 7624, 8472
                    ]
                    connect "Mathematical function3.out" "Bus Join1.in4" as Connection42
                    [
                        breakpoints = 7648, 8504; 7648, 8384
                    ]
                    connect "Mathematical function4.out" "Bus Join1.in5" as Connection43
                    [
                        breakpoints = 7672, 8624; 7672, 8400
                    ]
                    connect From64 "C function1.SOC" as Connection45
                    connect From65 "C function1.Ibat" as Connection46
                    connect "C function1.out" "Mathematical function6.in" as Connection47
                    connect Constant8.out Sum2.in as Connection48
                    connect "Mathematical function6.out" Sum2.in1 as Connection49
                    connect "C function.SOC" "Unit Delay1.in" as Connection51
                    connect "C function.Vdc" Vdc as Connection60
                    connect Goto46 Junction366 as Connection4362
                    connect Ibat.in Junction366 as Connection4364
                    connect From68 "C function2.Vbtt" as Connection4373
                    connect Constant9.out Comparator1.in2 as Connection4386
                    connect Comparator1.out Junction367 as Connection4388
                    connect Junction367 "C function2.charge" as Connection4389
                    connect Charging.in Junction368 as Connection4391
                    connect Junction368 Junction367 as Connection4392
                    connect Goto55 Junction368 as Connection4393
                    connect From67 Junction369 as Connection4394
                    connect Junction369 "C function2.Idc" as Connection4395
                    connect Comparator1.in1 Junction369 as Connection4396
                    connect Junction366 LPF_dc.out as Connection4398
                    connect LPF_dc.in "C function2.Ibat" as Connection4399
                    connect "Unit Delay2.in" LPF_dc1.out as Connection4400
                    connect LPF_dc1.in "C function.Vbtt" as Connection4401
                    connect From62 "C function.Ibat" as Connection4402
                    connect "Bus Join1.out" "C function.x" as Connection4403
                    connect From66 "C function.charge" as Connection4404
                    connect Sum2.out "C function.Ceff" as Connection4405
                    connect "Unit Delay1.out" Junction370 as Connection4407
                    connect Junction370 SOC.in as Connection4408
                    [
                        breakpoints = 8448, 8328
                    ]
                    connect Goto34 Junction370 as Connection4409
                    connect "Unit Delay2.out" Goto54 as Connection4410
                }
                [
                    position = 7944, 8136
                    size = 96, 216
                ]

                component "core/Current Measurement" Idc {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8312, 8040
                    scale = -1, -1
                    size = 64, 32
                ]

                component gen_probe VDC {
                }
                [
                    position = 8152, 8344
                ]

                component "core/Rate Transition" "Rate Transition7" {
                    execution_rate = "Ts"
                    init_value = "Vch"
                }
                [
                    position = 8136, 8272
                    hide_name = True
                    size = 32, 32
                ]

                component gen_probe P {
                }
                [
                    position = 8080, 8408
                ]

                component gen_product Product1 {
                }
                [
                    position = 7992, 8408
                    hide_name = True
                ]

                port - {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8448, 8200
                    rotation = down
                ]

                port + {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8448, 8040
                    rotation = down
                ]

                port Vdc {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8240, 8320
                ]

                tag Goto18 {
                    value = "VDC"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8232, 8272
                    size = 60, 20
                ]

                tag Goto54 {
                    value = "Idc"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8472, 8280
                    size = 60, 20
                ]

                tag From67 {
                    value = "VDC"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7896, 8392
                    hide_name = True
                    size = 37, 20
                ]

                tag From68 {
                    value = "Idc"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7896, 8440
                    hide_name = True
                    size = 37, 20
                ]

                junction Junction373 sp
                [
                    position = 8176, 8272
                ]

                junction Junction374 sp
                [
                    position = 8080, 8136
                ]

                junction Junction372 sp
                [
                    position = 8080, 8272
                ]

                connect Idc.p_node + as Connection4397
                connect Vess.n_node - as Connection4396
                connect Goto18 Junction373 as Connection4399
                connect Junction373 "Rate Transition7.out" as Connection4400
                connect Vdc Junction373 as Connection4401
                connect "Lead acid.Vdc" Junction374 as Connection4403
                connect Vess.in Junction374 as Connection4405
                connect Idc.out LPF_dc1.in as Connection4406
                connect LPF_dc1.out Goto54 as Connection4407
                connect Junction374 LPF_dc2.in as Connection4408
                connect LPF_dc2.out Junction372 as Connection4409
                connect Vess.p_node Idc.n_node as Connection4365
                connect VDC.in Junction372 as Connection4389
                connect "Rate Transition7.in" Junction372 as Connection4391
                connect Product1.out P.in as Connection4410
                connect From67 Product1.in as Connection4411
                connect From68 Product1.in1 as Connection4412

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                    Nb {
                        label = "Number of cells in battery"
                        widget = edit
                        type = generic
                        default_value = "20"
                    }

                    Inom {
                        label = "Nominal current"
                        widget = edit
                        type = generic
                        default_value = "55"
                        unit = "A"
                    }

                    Ri {
                        label = "Internal resistance"
                        widget = edit
                        type = generic
                        default_value = "0.01"
                        unit = "Ohm"
                    }

                    Tamb {
                        label = "Ambient temperature"
                        widget = edit
                        type = generic
                        default_value = "30"
                        unit = "C"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_ess"
                        unit = "s"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        #Nb = 500;
                        #Inom = 50;
                        Cnom = Inom*10;
                        #Vch = V_ABC*1.8;
                        #Vdisch = V_ABC*2.2;
                        Vch = 1000;
                        Vdisch = 1000;
                        #Tamb = 30;
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        Nb = mdl.get_property_value(mdl.prop(item_handle, "Nb"))
                        Inom = mdl.get_property_value(mdl.prop(item_handle, "Inom"))
                        Ri = mdl.get_property_value(mdl.prop(item_handle, "Ri"))
                        Tamb = mdl.get_property_value(mdl.prop(item_handle, "Tamb"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        # HEADER STOP
                        #Nb = 500;
                        #Inom = 50;
                        Cnom = Inom*10;
                        #Vch = V_ABC*1.8;
                        #Vdisch = V_ABC*2.2;
                        Vch = 1000;
                        Vdisch = 1000;
                        #Tamb = 30;
                    ENDCODE
                }
            }
            [
                position = 8032, 8264
                size = 56, 72
            ]

            component Subsystem Measurement {
                layout = dynamic
                component "core/Voltage RMS" Vrms {
                    feed_forward = "true"
                    frequency = "sys_f"
                }
                [
                    position = 8144, 8152
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                }
                [
                    position = 8192, 8088
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Vab {
                }
                [
                    position = 8240, 8152
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ic {
                }
                [
                    position = 8176, 8296
                    size = 64, 32
                ]

                component "core/Current Measurement" Ib {
                }
                [
                    position = 8192, 8216
                    size = 64, 32
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8288, 8216
                    rotation = down
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8096, 8216
                ]

                port c {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8256, 8296
                    rotation = down
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8096, 8296
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8096, 8088
                ]

                port a {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8288, 8088
                    rotation = down
                ]

                junction Junction644 pe
                [
                    position = 8240, 8088
                ]

                junction Junction645 pe
                [
                    position = 8240, 8216
                ]

                junction Junction646 pe
                [
                    position = 8144, 8088
                ]

                junction Junction647 pe
                [
                    position = 8144, 8216
                ]

                connect Ic.p_node C as Connection4974
                connect Junction647 B as Connection4972
                connect Ic.n_node c as Connection4973
                connect Junction646 A as Connection4975
                connect Junction644 a as Connection4976
                connect Junction645 b as Connection4971
                connect Ia.n_node Junction644 as Connection4955
                connect Vab.p_node Junction644 as Connection4957
                connect Vab.n_node Junction645 as Connection4960
                connect Junction646 Ia.p_node as Connection4962
                connect Vrms.p_node Junction646 as Connection4963
                connect Vrms.n_node Junction647 as Connection4966
                connect Junction647 Ib.p_node as Connection4969
                connect Ib.n_node Junction645 as Connection4970
            }
            [
                position = 8384, 8144
                size = 48, 64
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8576, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8576, 8192
                rotation = down
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8576, 8088
                rotation = down
            ]

            junction Junction643 sp
            [
                position = 7984, 8144
            ]

            junction Junction636 pe
            [
                position = 8264, 8128
            ]

            junction Junction637 pe
            [
                position = 8280, 8144
            ]

            junction Junction638 pe
            [
                position = 8296, 8160
            ]

            junction Junction641 pe
            [
                position = 8104, 8128
            ]

            junction Junction642 pe
            [
                position = 8136, 8160
            ]

            connect "Core coupling.a" a as Connection4948
            connect "Core coupling.b" b as Connection4946
            connect "Core coupling.c" c as Connection4947
            connect ESS.Vdc Junction643 as Connection4950
            connect Junction643 PV.Vdc as Connection4951
            connect Inverter.A Junction636 as Connection4917
            [
                breakpoints = 8256, 8128
            ]
            connect Load.A Junction636 as Connection4919
            connect Inverter.B Junction637 as Connection4920
            connect Load.B Junction637 as Connection4922
            connect Inverter.C Junction638 as Connection4923
            connect Load.C Junction638 as Connection4925
            connect PV.+ Junction641 as Connection4940
            connect Junction641 Inverter.+ as Connection4941
            connect ESS.+ Junction641 as Connection4942
            connect PV.- Junction642 as Connection4943
            connect Junction642 Inverter.- as Connection4944
            connect ESS.- Junction642 as Connection4945
            connect Junction636 Measurement.A as Connection4957
            connect "Core coupling.A" Measurement.a as Connection4958
            connect Junction637 Measurement.B as Connection4954
            connect "Core coupling.C" Measurement.c as Connection4955
            connect "Core coupling.B" Measurement.b as Connection4953
            connect Junction638 Measurement.C as Connection4956

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 5872, 7864
            size = 48, 64
        ]

        junction Junction615 pe
        [
            position = 6400, 7368
        ]

        junction Junction616 pe
        [
            position = 6304, 7320
        ]

        connect "RL Section.P1" Vs1.c_node as Connection4707
        connect "RL Section.P6" PCC.A as Connection4708
        connect "RL Section.P4" PCC.B as Connection4709
        connect "RL Section.P2" PCC.C as Connection4710
        connect "RL Section.P3" Junction615 as Connection4825
        connect Junction615 Vs1.b_node as Connection4826
        connect Vrms_grid.n_node Junction615 as Connection4827
        connect "RL Section.P5" Junction616 as Connection4828
        connect Junction616 Vs1.a_node as Connection4829
        [
            breakpoints = 6304, 7320; 6304, 7320; 6304, 7320
        ]
        connect Vrms_grid.p_node Junction616 as Connection4830
        connect "RL Section1.P5" Microgrid1.c as Connection4997
        connect gnd2.node Vs1.n_node as Connection5038
        [
            breakpoints = 6400, 7152; 6400, 7152; 6400, 7152; 6400, 7152; 6400, 7152
        ]
        connect Microgrid1.b "RL Section1.P3" as Connection5039
        [
            breakpoints = 6016, 7864
        ]
        connect "RL Section1.P1" Microgrid1.a as Connection5040
        [
            breakpoints = 5984, 7848
        ]
        connect PCC.b "RL Section1.P4" as Connection5056
        [
            breakpoints = 6400, 7856; 6400, 7864; 6400, 7864; 6400, 7864; 6400, 7864; 6400, 7864
        ]
        connect PCC.a "RL Section1.P2" as Connection5057
        [
            breakpoints = 6384, 7832; 6384, 7832; 6384, 7832; 6384, 7840; 6384, 7848; 6384, 7848; 6384, 7848; 6384, 7848; 6384, 7848; 6320, 7848
        ]
        connect PCC.c "RL Section1.P6" as Connection5058
        [
            breakpoints = 6416, 7880; 6416, 7880; 6416, 7880
        ]
    }

    default {
        gen_PQ_transform {
            filter_order = "first order"
            filter_cutoff_Hz = "30"
            initial_filter_input = "0"
            initial_filter_output = "0"
            enable_inst_ports = "True"
            enable_zero_ports = "False"
            execution_rate = "inherit"
        }

        gen_abs {
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_data_type_conversion {
            output_type = "real"
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_math_fnc {
            mathematical_fn = "exponential"
            execution_rate = "inherit"
        }

        gen_pid_controller {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            upper_sat_lim = "1"
            lower_sat_lim = "-1"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_rel_op {
            relational_op = "=="
            execution_rate = "inherit"
        }

        gen_rms_value {
            op_mode = "PLL based"
            frequency = "50"
            period_timeout = "0.5"
            execution_rate = "inherit"
        }

        gen_sr_ff {
            init_value = "0"
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_trigonometric {
            trigonometric_fn = "sin"
            execution_rate = "inherit"
        }

        gen_z_domain_transfer {
            domain = "Z-domain"
            method = "Zero-order hold"
            b_coeff = "[1]"
            a_coeff = "[1,-1]"
            init_states = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_clock {
            execution_rate = "100e-6"
        }

        src_clock {
            execution_rate = "100e-6"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_digital_input {
            addr = "1"
            invert = "false"
            signal_type = "uint"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/RL Section" {
            model_def = "R-L"
            unit_sys = "imperial"
            num_of_phases = "3"
            resistance_per_l = "1"
            resistance_per_l_mile = "1"
            inductance_per_l = "1e-3"
            inductance_per_l_mile = "1e-3"
            length = "1.0"
            length_mile = "1.0"
            power = "500.0"
            voltage = "11.0"
            frequency = "50.0"
            R_value = "21.55"
            L_value = "0.00842"
        }

        "core/Rate Transition" {
            init_value = "0.0"
            execution_rate = "100e-6"
        }

        "core/Signal Controlled Current Source" {
            execution_rate = "inherit"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Three Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100e3"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
            cpl_connection = "star"
        }

        "core/Three Phase Inverter" {
            ctrl_src = "Digital input per switch"
            op_mode = "Fixed carrier frequency"
            carrier_freq = "10000.0"
            carr_ph_offset = "0.0"
            d_time = "5e-6"
            ref_sig_min_max = "[-1.0, 1.0]"
            load_mode = "on min"
            execution_rate = "inherit"
            Sa_top = "1"
            Sa_top_logic = "active high"
            Sa_bot = "2"
            Sa_bot_logic = "active high"
            Sb_top = "3"
            Sb_top_logic = "active high"
            Sb_bot = "4"
            Sb_bot_logic = "active high"
            Sc_top = "5"
            Sc_top_logic = "active high"
            Sc_bot = "6"
            Sc_bot_logic = "active high"
            delay_enabled = "False"
            fixed_delay = "1e-6"
            var_delay_lut = "[-10.0, 1e-6, 10.0, 1e-6]"
            preview_var_delay = "Preview"
            Sa_top_I = "False"
            Sa_bot_I = "False"
            Sb_top_I = "False"
            Sb_bot_I = "False"
            Sc_top_I = "False"
            Sc_bot_I = "False"
            losses_estimation = "False"
            Import_igbt_xml = "not selected"
            Import_diode_xml = "not selected"
            Vce = "1.3"
            Rce = "0"
            Vd = "1.2"
            Rd = "0"
            i_sw = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw = "[0.0, 600.0]"
            temp_sw = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            et_on_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*3.8e-3, 0.4*3.8e-3, 0.8*3.8e-3, 0.68*3.8e-3, 0.9*3.8e-3], [0.65*3.8e-3, 0.9*3.8e-3, 1.2*3.8e-3, 1.5*3.8e-3, 1.7*3.8e-3], [0.9*3.8e-3, 1.3*3.8e-3, 1.7*3.8e-3, 1.9*3.8e-3, 2.25*3.8e-3], [1.1*3.8e-3, 1.7*3.8e-3, 2.1*3.8e-3, 2.3*3.8e-3, 2.5*3.8e-3]]"
            et_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.1e-3, 0.4*2.1e-3, 0.8*2.1e-3, 0.68*2.1e-3, 0.9*2.1e-3], [0.65*2.1e-3, 0.9*2.1e-3, 1.2*2.1e-3, 1.5*2.1e-3, 1.7*2.1e-3], [0.9*2.1e-3, 1.3*2.1e-3, 1.7*2.1e-3, 1.9*2.1e-3, 2.25*2.1e-3], [1.1*2.1e-3, 1.7*2.1e-3, 2.1*2.1e-3, 2.3*2.1e-3, 2.5*2.1e-3]]"
            ed_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            temp_estimation = "False"
            thermal_networks_type = "Foster"
            switch_Rth = "[0.159, 0.133, 0.120, 0.038]"
            switch_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            switch_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            diode_Rth = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            loss_exec_rate = "100e-6"
            vout_cmp_pullup_mode = "False"
            show_cnt_out = "False"
            show_monitoring = "false"
            _control_property = "all high"
            dtv_flag_en = "True"
            pwm_enabling = "False"
            pwm_enable_di = "13"
            pwm_enable_inv = "active high"
        }

        "core/Three Phase Voltage Source" {
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Three phase PLL" {
            initial_filter_output = "60"
            wn = "157.0796"
            zeta = "0.707"
            rate_high = "12"
            rate_low = "-12"
            freq_unit = "Hz"
            kp = "100"
            ki = "3200"
            kd = "1"
            N = "714.2857"
            initial_pid_output = "376.99111843"
            up_lim = "1e4"
            low_lim = "-1e4"
            kb = "1"
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "False"
            wn_LPFdq = "62.83185307"
            execution_rate = "inherit"
            enable_pk = "False"
            enable_zero = "True"
            enable_sin = "True"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Voltage RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }

        "core/abc to dq" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "True"
            initial_filter_output = "0"
            wn_LPFdq = "1000"
            execution_rate = "inherit"
        }

        "core/dq to abc" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            execution_rate = "0"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Ts = 1e-3
        sys_f = 60.0    # Hz
        sys_w = 2.0*np.pi*sys_f    #rad/s
        Ts_ess = 1e-3
        Ts_pv = 1
        Ts_inv = 20e-6
        
        # Grid specs
        
        R=1e-3
        L=100e-6
        
        # Solar irradiance model parameters
        ang = 0
        ang_z = 20*np.pi/180
        ang_t = 20*np.pi/180
        rho = 0.2
        GHI = 304
        ETR = 346
        
        # EV charging station
        Ts_ev = 200e-6  #s
        #Tbatt = 200e-6
        T_charging_station = 200e-6
        
        ex_rate=200e-6
        #Tprotection = 200e-6
        
        #base values
        Vb = 400     #V
        Pb = 250e3   #W
        fb = 600     #Hz
        
        #filter parameters
        Lf = 1e-6    #H
        Cf = 2000e-6 #F
        
        #machine parameters
        pms = 2      #number of pole pairs 
        Rs = 9e-3    #Ω
        Rr = 15e-3   #Ω
        Lls = 1e-5   #H
        Llr = 1e-5   #H
        Lm = 8e-3    #H
        
        #maximum torque slip lookup table
        f =  [5,   100, 110,  120,   130,  140,  150,   160,   180 , 200,   225,  250,  275,   300,   350,  400,    450,   500  , 550,   600]
        sp = [0.5, 0.5, 0.6, 0.655, 0.804, 0.76, 0.72, 0.681, 0.616, 0.56, 0.506, 0.46, 0.42, 0.387, 0.334, 0.294, 0.262, 0.236, 0.215, 0.197]
        
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        # RMS, phase and power calculation execuiton rate
        Rshunt_msr = 1e4
        
        
        # -------- Calculating R and L values for load ----------
        # --------- Functions definition ---------
        def calc_R(V,P,S):
            R = V**2*P/S**2
            return R
            
        def calc_L(V,Q,S):
            XL = V**2*Q/S**2
            L = XL/(2*np.pi*freq)
            return L
        
        # Constants
        freq = 60.0
        # Phase 1 load configuration
        P1 = 1800000.0/3.0
        pf1 = 0.9
        S1 = P1/pf1
        Q1 = np.sqrt(S1**2-P1**2)
        # Phase 2 load configuration
        P2 = 1800000.0/3.0
        pf2 = 0.9
        S2 = P2/pf2
        Q2 = np.sqrt(S2**2-P2**2)
        # Phase 3 load configuration
        P3 = 1800000.0/3.0
        pf3 = 0.9
        S3 = P3/pf3
        Q3 = np.sqrt(S3**2-P3**2)
        
        # Voltages measured at node 4
        V1_node4 = 1920.0
        V2_node4 = 2054.0
        V3_node4 = 1986.0
        
        # Calulating R and L values 
        R1 = calc_R(V1_node4, P1, S1)
        R2 = calc_R(V2_node4, P2, S2)
        R3 = calc_R(V3_node4, P3, S3)
        
        L1 = calc_L(V1_node4, Q1, S1)
        L2 = calc_L(V2_node4, Q2, S2)
        L3 = calc_L(V3_node4, Q3, S3)
    ENDCODE
}
