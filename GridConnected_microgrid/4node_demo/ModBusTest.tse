version = 4.2

//
// Saved by sw version: 2020.2
// Save timestamp: 10-Sep-2020 @ 03:17:27 PM
//

model "ModBusTest" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 2
        simulation_method = trapezoidal
        simulation_time_step = auto
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
    }

    component Subsystem Root {
        component Subsystem Modbus1 {
            layout = dynamic
            component gen_probe Probe2 {
            }
            [
                position = 8712, 8008
            ]

            component src_constant C_u13 {
                value = "50"
            }
            [
                position = 7920, 7872
            ]

            component gen_product Product1 {
            }
            [
                position = 7768, 8160
            ]

            component src_constant C_u11 {
            }
            [
                position = 8008, 7720
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8392, 7944
            ]

            component src_constant Constant1 {
                value = "scale_const"
            }
            [
                position = 7664, 8208
            ]

            component src_constant C_u12 {
            }
            [
                position = 7968, 7800
            ]

            component gen_probe Probe1 {
            }
            [
                position = 7936, 8080
            ]

            component gen_c_function "C function1" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7880, 8160
                size = 80, 48
            ]

            component gen_bus_join "Bus Join1" {
            }
            [
                position = 7984, 8160
            ]

            component "core/ModBus Device" "ModBus Device1" {
                execution_rate = "Ts"
            }
            [
                position = 8192, 7992
                size = 184, 184
            ]

            component gen_c_function "C function3" {
                global_variables = "int temp;"
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "high inherit;low inherit"
                in_terminal_labels = "[(\'high\', True), (\'low\', True)]"
                in_terminal_properties = "real high;real low;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "regD inherit"
                out_terminal_labels = "[(\'regD\', True)]"
                out_terminal_properties = "real regD;"
                output_fnc = "/*Begin code section*/
temp = (((int)high << 16) & -65536) | ((int)low & 65535);

if(temp < 1e7 && temp > -1e7)
    regD = temp;
else if(temp == 1e7)
    regD = 1e7;
else if(temp == -1e7)
    regD = -1e7;
else if(temp > 1e7)
    regD = 2e7;
else if(temp < -1e7)
    regD = -2e7;
/*End code section*/"
            }
            [
                position = 8496, 8056
                size = 48, 48
            ]

            component gen_bus_split "Bus Split2" {
            }
            [
                position = 8384, 8056
            ]

            component gen_probe Probe3 {
            }
            [
                position = 8592, 7952
            ]

            component gen_probe ProbeX {
            }
            [
                position = 8912, 8008
            ]

            component gen_gain Gain1 {
                gain = "scale_back_const"
            }
            [
                position = 8688, 8088
            ]

            port U1-P1 {
                position = right:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7664, 8112
                rotation = down
                scale = -1, 1
            ]

            port u1 {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8896, 8112
            ]

            junction Junction4 sp
            [
                position = 7824, 8160
            ]

            junction Junction6 sp
            [
                position = 8328, 8056
            ]

            junction Junction7 sp
            [
                position = 8536, 8056
            ]

            junction Junction8 sp
            [
                position = 8864, 8088
            ]

            connect U1-P1 Product1.in as Connection83
            connect Constant1.out Product1.in1 as Connection73
            connect "C function1.in" Junction4 as Connection114
            connect Junction4 Product1.out as Connection115
            connect Probe1.in Junction4 as Connection116
            connect "C function1.out" "Bus Join1.in" as Connection117
            connect "C function1.sign" "Bus Join1.in1" as Connection118
            connect C_u13.out "ModBus Device1.holding_in" as Connection120
            [
                breakpoints = 7952, 7968; 8080, 7968
            ]
            connect C_u12.out "ModBus Device1.discrete_in" as Connection121
            [
                breakpoints = 8000, 8016; 8080, 8016
            ]
            connect Termination1.in "ModBus Device1.coil_out" as Connection127
            connect "Bus Join1.out" "ModBus Device1.reg_in" as Connection128
            [
                breakpoints = 8048, 8160; 8048, 7920
            ]
            connect C_u11.out "ModBus Device1.coil_in" as Connection129
            [
                breakpoints = 8072, 7720; 8072, 8064
            ]
            connect "Bus Split2.out1" "C function3.low" as Connection161
            connect "Bus Split2.out" "C function3.high" as Connection160
            connect "Bus Split2.in" Junction6 as Connection167
            connect Junction6 "ModBus Device1.holding_out" as Connection168
            connect Probe3.in Junction6 as Connection169
            connect Gain1.in Junction7 as Connection171
            connect Junction7 "C function3.regD" as Connection172
            connect Probe2.in Junction7 as Connection173
            connect Gain1.out Junction8 as Connection175
            connect Junction8 u1 as Connection176
            connect ProbeX.in Junction8 as Connection177
            [
                breakpoints = 8864, 8008; 8864, 8088
            ]
        }
        [
            position = 8720, 8160
            scale = -1, 1
            size = 64, 80
        ]

        component Subsystem Modbus2 {
            layout = dynamic
            component src_constant C_u13 {
                value = "50"
            }
            [
                position = 7968, 7888
            ]

            component gen_product Product1 {
            }
            [
                position = 7784, 8136
            ]

            component src_constant C_u11 {
            }
            [
                position = 7968, 7728
            ]

            component gen_probe Probe1 {
            }
            [
                position = 8032, 8016
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8488, 7824
            ]

            component src_constant C_u12 {
            }
            [
                position = 7968, 7800
            ]

            component src_constant Constant1 {
                value = "scale_const"
            }
            [
                position = 7656, 8168
            ]

            component gen_bus_join "Bus Join1" {
            }
            [
                position = 8032, 8136
            ]

            component gen_c_function "C function1" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7920, 8136
                size = 80, 48
            ]

            component "core/ModBus Device" "ModBus Device2" {
                configuration = "config2"
                execution_rate = "Ts"
            }
            [
                position = 8288, 7912
                size = 184, 184
            ]

            component gen_probe Probe3 {
            }
            [
                position = 8856, 7936
            ]

            component gen_c_function "C function3" {
                global_variables = "int temp;"
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "high inherit;low inherit"
                in_terminal_labels = "[(\'high\', True), (\'low\', True)]"
                in_terminal_properties = "real high;real low;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "regD inherit"
                out_terminal_labels = "[(\'regD\', True)]"
                out_terminal_properties = "real regD;"
                output_fnc = "/*Begin code section*/
temp = (((int)high << 16) & -65536) | ((int)low & 65535);

if(temp < 1e7 && temp > -1e7)
    regD = temp;
else if(temp == 1e7)
    regD = 1e7;
else if(temp == -1e7)
    regD = -1e7;
else if(temp > 1e7)
    regD = 2e7;
else if(temp < -1e7)
    regD = -2e7;
/*End code section*/"
            }
            [
                position = 8640, 7984
                size = 48, 48
            ]

            component gen_bus_split "Bus Split2" {
            }
            [
                position = 8528, 7984
            ]

            component gen_probe Probe4 {
            }
            [
                position = 8560, 7896
            ]

            component gen_probe ProbeX {
            }
            [
                position = 9016, 7960
            ]

            component gen_gain Gain1 {
                gain = "scale_back_const"
            }
            [
                position = 8816, 8008
            ]

            port U2-P2 {
                position = right:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7656, 8104
                rotation = down
                scale = -1, 1
            ]

            port u2 {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8960, 8040
            ]

            junction Junction2 sp
            [
                position = 7832, 8136
            ]

            junction Junction6 sp
            [
                position = 8440, 7984
            ]

            junction Junction7 sp
            [
                position = 8784, 7984
            ]

            junction Junction8 sp
            [
                position = 8928, 8008
            ]

            connect Constant1.out Product1.in1 as Connection73
            connect U2-P2 Product1.in as Connection87
            connect "C function1.sign" "Bus Join1.in1" as Connection118
            connect "C function1.out" "Bus Join1.in" as Connection119
            connect "C function1.in" Junction2 as Connection122
            connect Junction2 Product1.out as Connection123
            connect Probe1.in Junction2 as Connection124
            connect "Bus Join1.out" "ModBus Device2.reg_in" as Connection125
            [
                breakpoints = 8120, 8136; 8120, 7904
            ]
            connect C_u12.out "ModBus Device2.coil_in" as Connection128
            [
                breakpoints = 8048, 7800; 8048, 7984; 8112, 7984
            ]
            connect "ModBus Device2.holding_in" C_u13.out as Connection130
            connect C_u11.out "ModBus Device2.discrete_in" as Connection131
            [
                breakpoints = 8152, 7728; 8152, 7936
            ]
            connect Termination1.in "ModBus Device2.coil_out" as Connection132
            connect "Bus Split2.out" "C function3.high" as Connection160
            connect "Bus Split2.out1" "C function3.low" as Connection161
            connect "ModBus Device2.holding_out" Junction6 as Connection170
            connect Junction6 "Bus Split2.in" as Connection171
            connect Probe4.in Junction6 as Connection172
            connect Gain1.in Junction7 as Connection174
            connect Junction7 "C function3.regD" as Connection175
            [
                breakpoints = 8784, 7984; 8680, 7984; 8672, 7984
            ]
            connect Probe3.in Junction7 as Connection176
            connect Gain1.out Junction8 as Connection178
            connect Junction8 u2 as Connection179
            connect ProbeX.in Junction8 as Connection180
        }
        [
            position = 8720, 8264
            scale = -1, 1
            size = 56, 80
        ]

        component Subsystem Modbus3 {
            layout = dynamic
            component src_constant C_u13 {
                value = "50"
            }
            [
                position = 7976, 8016
            ]

            component src_constant Constant1 {
                value = "scale_const"
            }
            [
                position = 7528, 8008
            ]

            component gen_probe Probe1 {
            }
            [
                position = 7896, 7904
            ]

            component src_constant C_u11 {
            }
            [
                position = 7528, 7872
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8376, 7992
            ]

            component gen_product Product1 {
            }
            [
                position = 7688, 7960
            ]

            component src_constant C_u12 {
            }
            [
                position = 7528, 7816
            ]

            component gen_bus_join "Bus Join1" {
            }
            [
                position = 7896, 7960
            ]

            component gen_c_function "C function1" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7800, 7960
                size = 80, 48
            ]

            component gen_bus_split "Bus Split2" {
            }
            [
                position = 8416, 7856
            ]

            component gen_probe Probe2 {
            }
            [
                position = 8752, 7808
            ]

            component gen_c_function "C function3" {
                global_variables = "int temp;"
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "high inherit;low inherit"
                in_terminal_labels = "[(\'high\', True), (\'low\', True)]"
                in_terminal_properties = "real high;real low;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "regD inherit"
                out_terminal_labels = "[(\'regD\', True)]"
                out_terminal_properties = "real regD;"
                output_fnc = "/*Begin code section*/
temp = (((int)high << 16) & -65536) | ((int)low & 65535);

if(temp < 1e7 && temp > -1e7)
    regD = temp;
else if(temp == 1e7)
    regD = 1e7;
else if(temp == -1e7)
    regD = -1e7;
else if(temp > 1e7)
    regD = 2e7;
else if(temp < -1e7)
    regD = -2e7;
/*End code section*/"
            }
            [
                position = 8528, 7856
                size = 48, 48
            ]

            component gen_probe Probe3 {
            }
            [
                position = 8504, 7752
            ]

            component "core/ModBus Device" "ModBus Device3" {
                configuration = "config3"
                execution_rate = "Ts"
            }
            [
                position = 8160, 7920
                size = 184, 184
            ]

            component gen_probe ProbeX {
            }
            [
                position = 8840, 7800
            ]

            component gen_gain Gain1 {
                gain = "scale_back_const"
            }
            [
                position = 8752, 7896
            ]

            port u3 {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8840, 7912
            ]

            port U3-P3 {
                position = right:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7528, 7960
                rotation = down
                scale = -1, 1
            ]

            junction Junction3 sp
            [
                position = 7736, 7960
            ]

            junction Junction6 sp
            [
                position = 8344, 7848
            ]

            junction Junction7 sp
            [
                position = 8808, 7896
            ]

            junction Junction8 sp
            [
                position = 8672, 7896
            ]

            connect Constant1.out Product1.in1 as Connection73
            connect Product1.in U3-P3 as Connection83
            connect "C function1.sign" "Bus Join1.in1" as Connection118
            connect "C function1.out" "Bus Join1.in" as Connection119
            connect "C function1.in" Junction3 as Connection122
            connect Junction3 Product1.out as Connection123
            connect Probe1.in Junction3 as Connection124
            connect "Bus Split2.out" "C function3.high" as Connection160
            connect "Bus Split2.out1" "C function3.low" as Connection161
            connect C_u12.out "ModBus Device3.discrete_in" as Connection172
            connect C_u11.out "ModBus Device3.coil_in" as Connection173
            [
                breakpoints = 7864, 7872; 7864, 7872; 8048, 7872; 8048, 7872
            ]
            connect "Bus Join1.out" "ModBus Device3.reg_in" as Connection174
            connect C_u13.out "ModBus Device3.holding_in" as Connection175
            connect Termination1.in "ModBus Device3.coil_out" as Connection176
            connect "ModBus Device3.holding_out" Junction6 as Connection178
            connect Junction6 "Bus Split2.in" as Connection179
            connect Probe3.in Junction6 as Connection180
            connect Gain1.out Junction7 as Connection183
            connect Junction7 u3 as Connection184
            connect ProbeX.in Junction7 as Connection185
            connect Gain1.in Junction8 as Connection186
            connect Junction8 "C function3.regD" as Connection187
            connect Probe2.in Junction8 as Connection188
        }
        [
            position = 8720, 8360
            scale = -1, 1
            size = 56, 72
        ]

        component gen_probe u1 {
        }
        [
            position = 8624, 8208
        ]

        component gen_probe u2 {
        }
        [
            position = 8632, 8312
        ]

        component src_scada_input "Node 1" {
            unit = ""
        }
        [
            position = 8312, 8144
        ]

        component src_scada_input "Node 2" {
            unit = ""
        }
        [
            position = 8312, 8248
        ]

        component src_scada_input "Node 3" {
            unit = ""
        }
        [
            position = 8312, 8344
        ]

        component Subsystem Modbus4 {
            layout = dynamic
            component src_constant C_u12 {
            }
            [
                position = 7968, 7800
            ]

            component gen_c_function "C function1" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7912, 8120
                size = 80, 48
            ]

            component src_constant C_u11 {
            }
            [
                position = 8008, 7720
            ]

            component gen_bus_join "Bus Join1" {
            }
            [
                position = 8008, 8120
            ]

            component "core/ModBus Device" "ModBus Device4" {
                configuration = "config4"
                execution_rate = "Ts"
            }
            [
                position = 8224, 8192
                size = 184, 184
            ]

            component src_constant Constant1 {
                value = "scale_const"
            }
            [
                position = 7640, 8160
            ]

            component src_constant C_u13 {
                value = "50"
            }
            [
                position = 7920, 7872
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8464, 8120
            ]

            component gen_probe Probe1 {
            }
            [
                position = 8000, 8040
            ]

            component gen_product Product1 {
            }
            [
                position = 7792, 8120
            ]

            component gen_bus_split "Bus Split2" {
            }
            [
                position = 8400, 8264
            ]

            component gen_c_function "C function3" {
                global_variables = "int temp;"
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "high inherit;low inherit"
                in_terminal_labels = "[(\'high\', True), (\'low\', True)]"
                in_terminal_properties = "real high;real low;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "regD inherit"
                out_terminal_labels = "[(\'regD\', True)]"
                out_terminal_properties = "real regD;"
                output_fnc = "/*Begin code section*/
temp = (((int)high << 16) & -65536) | ((int)low & 65535);

if(temp < 1e7 && temp > -1e7)
    regD = temp;
else if(temp == 1e7)
    regD = 1e7;
else if(temp == -1e7)
    regD = -1e7;
else if(temp > 1e7)
    regD = 2e7;
else if(temp < -1e7)
    regD = -2e7;
/*End code section*/"
            }
            [
                position = 8512, 8264
                size = 48, 48
            ]

            component gen_probe Probe2 {
            }
            [
                position = 8728, 8216
            ]

            component gen_probe Probe3 {
            }
            [
                position = 8456, 8192
            ]

            component gen_probe ProbeX {
            }
            [
                position = 8840, 8160
            ]

            component gen_gain Gain1 {
                gain = "scale_back_const"
            }
            [
                position = 8704, 8288
            ]

            port u4 {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8840, 8328
            ]

            port U4-P4 {
                position = right:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7640, 8112
                rotation = down
                scale = -1, 1
            ]

            junction Junction3 sp
            [
                position = 7848, 8120
            ]

            junction Junction6 sp
            [
                position = 8344, 8264
            ]

            junction Junction7 sp
            [
                position = 8592, 8264
            ]

            junction Junction8 sp
            [
                position = 8784, 8288
            ]

            connect Termination1.in "ModBus Device4.coil_out" as Connection133
            connect Product1.in U4-P4 as Connection83
            connect Constant1.out Product1.in1 as Connection73
            connect "C function1.sign" "Bus Join1.in1" as Connection118
            connect "C function1.out" "Bus Join1.in" as Connection119
            connect "C function1.in" Junction3 as Connection122
            connect Junction3 Product1.out as Connection123
            connect Probe1.in Junction3 as Connection124
            connect "Bus Join1.out" "ModBus Device4.reg_in" as Connection129
            connect C_u12.out "ModBus Device4.discrete_in" as Connection131
            [
                breakpoints = 8080, 7800; 8080, 8216
            ]
            connect C_u13.out "ModBus Device4.holding_in" as Connection130
            [
                breakpoints = 8104, 7872; 8104, 8160
            ]
            connect C_u11.out "ModBus Device4.coil_in" as Connection132
            [
                breakpoints = 8056, 7720; 8056, 8264
            ]
            connect "Bus Split2.out" "C function3.high" as Connection160
            connect "Bus Split2.out1" "C function3.low" as Connection161
            connect "ModBus Device4.holding_out" Junction6 as Connection169
            connect Junction6 "Bus Split2.in" as Connection170
            connect Probe3.in Junction6 as Connection171
            connect "C function3.regD" Junction7 as Connection185
            connect Junction7 Gain1.in as Connection186
            connect Probe2.in Junction7 as Connection187
            connect Gain1.out Junction8 as Connection189
            connect Junction8 u4 as Connection190
            connect ProbeX.in Junction8 as Connection191
        }
        [
            position = 8728, 8480
            scale = -1, 1
            size = 56, 72
        ]

        component src_scada_input "Node 4" {
            unit = ""
        }
        [
            position = 8320, 8464
        ]

        component gen_probe u4 {
        }
        [
            position = 8624, 8544
        ]

        component gen_probe u3 {
        }
        [
            position = 8624, 8408
        ]

        connect u2.in Modbus2.u2 as Connection1
        connect u1.in Modbus1.u1 as Connection3
        connect "Node 1.out" Modbus1.U1-P1 as Connection4
        connect "Node 2.out" Modbus2.U2-P2 as Connection5
        connect "Node 3.out" Modbus3.U3-P3 as Connection6
        connect "Node 4.out" Modbus4.U4-P4 as Connection8
        connect u4.in Modbus4.u4 as Connection9
        connect u3.in Modbus3.u3 as Connection10
    }

    default {
        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        "core/ModBus Device" {
            hil_id = "0"
            configuration = "config1"
            preview = "Configuration preview"
            network_settings_src = "Configuration dictionary"
            ip_addr = "192.168.0.210"
            netmask = "255.255.255.0"
            port = "502"
            gateway = "192.168.0.210"
            gateway_enable = "False"
            ip_address_port = "False"
            request_counter_port = "None"
            defines = ""
            modbus_sunspec = "False"
            logging = "False"
            execution_rate = "100e-6"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Ts=100e-6
        
        scale_const=1#10e+3
        scale_back_const=1e-7
        
        #Modbus configuration
        config1 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.61',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 17,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1',
                                            'input_register_adresses': '0,1'
        }
        
        config2 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.62',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 18,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1',
                                            'input_register_adresses': '0,1'
        }
        
        config3 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.63',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 19,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1',
                                            'input_register_adresses': '0,1'
        }
        
        config4 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.64',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 20,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1',
                                            'input_register_adresses': '0,1'
        }
    ENDCODE
}
