version = 4.2

//
// Saved by sw version: 2020.1 SP2
// Save timestamp: 25-Jul-2020 @ 10:02:16 AM
//

model "TestCfun" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = 4e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 5e-05
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "double precision"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
    }

    component Subsystem Root {
        component Subsystem ESS {
            layout = dynamic
            component "core/Voltage Measurement" Vb {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8400, 8432
                rotation = right
                size = 64, 32
            ]

            component pas_resistor R17 {
                resistance = "1e4"
            }
            [
                position = 8632, 8480
                rotation = right
            ]

            component "core/Voltage Measurement" Vc {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8472, 8480
                rotation = right
                size = 64, 32
            ]

            component pas_resistor R18 {
                resistance = "1e4"
            }
            [
                position = 8568, 8480
                rotation = right
            ]

            component "core/Voltage Measurement" Va {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8328, 8384
                rotation = right
                size = 64, 32
            ]

            component pas_resistor R16 {
                resistance = "1e4"
            }
            [
                position = 8696, 8480
                rotation = right
            ]

            component "core/Current Measurement" ESS_Ia {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8920, 8056
                size = 64, 32
            ]

            component "core/Current Measurement" ESS_Ic {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8824, 8248
                size = 64, 32
            ]

            component "core/Current Measurement" ESS_Ib {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8872, 8152
                size = 64, 32
            ]

            component src_scada_input P_ref_ess {
                def_value = "50"
                execution_rate = "20e-6"
                unit = "kW"
            }
            [
                position = 7816, 8128
            ]

            component src_scada_input Q_ref_ess {
                def_value = "30"
                execution_rate = "20e-6"
                unit = "kVAr"
            }
            [
                position = 7816, 8272
            ]

            component Subsystem "Grid forming inverter (averaged)" {
                layout = dynamic
                component pas_capacitor Cc1 {
                    capacitance = "C_s"
                }
                [
                    position = 8320, 8352
                    rotation = right
                ]

                component pas_resistor Rt0a1 {
                    resistance = "R_s"
                }
                [
                    position = 8160, 8256
                    rotation = left
                    scale = -1, 1
                ]

                component pas_resistor Ra1 {
                    resistance = "R_o"
                }
                [
                    position = 8920, 7904
                ]

                component "core/Current Measurement" Ia1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9168, 7904
                    size = 64, 32
                ]

                component gen_probe Ea_1 {
                }
                [
                    position = 8496, 8176
                ]

                component pas_inductor L0b1 {
                    inductance = "L_i"
                }
                [
                    position = 7888, 8000
                    rotation = down
                ]

                component "core/Voltage Measurement" Vc2 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8000, 8480
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_capacitor Cb1 {
                    capacitance = "C_s"
                }
                [
                    position = 8240, 8352
                    rotation = right
                ]

                component Subsystem Controller {
                    layout = dynamic
                    component gen_product Product13 {
                    }
                    [
                        position = 7368, 8464
                        scale = -1, 1
                    ]

                    component gen_gain Gain4 {
                        gain = "1/T_m"
                    }
                    [
                        position = 6992, 8232
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain15 {
                        gain = "S*1.5"
                    }
                    [
                        position = 7136, 8168
                        rotation = right
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_probe Q1 {
                    }
                    [
                        position = 7072, 8488
                        rotation = down
                    ]

                    component gen_gain Gain5 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7864, 8120
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain6 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 7856, 7816
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_integrator Integrator2 {
                    }
                    [
                        position = 6896, 8232
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum1 {
                    }
                    [
                        position = 7192, 8224
                        scale = -1, 1
                    ]

                    component Subsystem Current_abc_to_dq2 {
                        layout = dynamic
                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 7856, 8008
                            size = 48, 80
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 7952, 8064
                        ]

                        port Eq2 {
                            label = "Eq2"
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 8016
                        ]

                        port Ed2 {
                            label = "Ed2"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 7976
                        ]

                        port Eb2 {
                            label = "Eb2"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8000
                        ]

                        port wt2 {
                            label = "wt2"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8088
                        ]

                        port Ec2 {
                            label = "Ec2"
                            position = right:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8040
                        ]

                        port Ea2 {
                            label = "Ea2"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 7960
                        ]

                        connect "abc to dq1.q_axis" Eq2 as Connection6
                        connect Termination1.in "abc to dq1.zero_axis" as Connection4
                        connect Ea2 "abc to dq1.va" as Connection1
                        connect Eb2 "abc to dq1.vb" as Connection2
                        connect Ec2 "abc to dq1.vc" as Connection3
                        connect wt2 "abc to dq1.wt" as Connection7
                        connect "abc to dq1.d_axis" Ed2 as Connection5
                    }
                    [
                        position = 7936, 8184
                        size = 80, 168
                    ]

                    component gen_gain Gain8 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7856, 8248
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain1 {
                        gain = "1/(2*np.pi)"
                    }
                    [
                        position = 8336, 8312
                        scale = -1, 1
                    ]

                    component gen_gain Gain13 {
                        gain = "1/T_m"
                    }
                    [
                        position = 7000, 8376
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_product Product12 {
                    }
                    [
                        position = 7368, 8376
                        scale = -1, 1
                    ]

                    component gen_gain Gain10 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7864, 8520
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain14 {
                        gain = "S*1.5"
                    }
                    [
                        position = 7136, 8456
                        rotation = right
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "3"
                    }
                    [
                        position = 7200, 7952
                        scale = -1, 1
                    ]

                    component gen_gain Gain9 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7856, 8392
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_probe E_d1 {
                        addr = "8965"
                    }
                    [
                        position = 7752, 8336
                        scale = -1, 1
                    ]

                    component gen_integrator Integrator3 {
                    }
                    [
                        position = 6904, 8376
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe E_dREF1 {
                    }
                    [
                        position = 7568, 7848
                    ]

                    component src_constant Constant1 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 7912, 8776
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 7192, 8368
                        scale = -1, 1
                    ]

                    component gen_product Product10 {
                    }
                    [
                        position = 7368, 8296
                        scale = -1, 1
                    ]

                    component Subsystem Current_abc_to_dq {
                        layout = dynamic
                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 7856, 8008
                            size = 48, 80
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 7952, 8064
                        ]

                        port Xi_d2 {
                            label = "Xi_d2"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 7976
                        ]

                        port Xi_c2 {
                            label = "Xi_c2"
                            position = right:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8040
                        ]

                        port wt2 {
                            label = "wt2"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8088
                        ]

                        port Xi_a2 {
                            label = "Xi_a2"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 7960
                        ]

                        port Xi_q2 {
                            label = "Xi_q2"
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 8016
                        ]

                        port Xi_b2 {
                            label = "Xi_b2"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8000
                        ]

                        connect Xi_c2 "abc to dq1.vc" as Connection3
                        connect "abc to dq1.q_axis" Xi_q2 as Connection6
                        connect "abc to dq1.d_axis" Xi_d2 as Connection5
                        connect wt2 "abc to dq1.wt" as Connection7
                        connect Xi_a2 "abc to dq1.va" as Connection1
                        connect Xi_b2 "abc to dq1.vb" as Connection2
                        connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    }
                    [
                        position = 7936, 7880
                        size = 80, 168
                    ]

                    component gen_gain Gain7 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 7856, 7944
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain12 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 7384, 8744
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_product Product111 {
                    }
                    [
                        position = 7368, 8216
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "+-"
                    }
                    [
                        position = 7072, 8232
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain11 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 7384, 8616
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_probe E_qREF1 {
                    }
                    [
                        position = 7568, 8056
                    ]

                    component gen_probe E_q1 {
                    }
                    [
                        position = 7752, 8192
                        scale = -1, 1
                    ]

                    component Subsystem Current_abc_to_dq3 {
                        layout = dynamic
                        component gen_terminator Termination1 {
                        }
                        [
                            position = 7952, 8064
                        ]

                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 7856, 8008
                            size = 48, 80
                        ]

                        port "^Ec2" {
                            label = "^Ec2"
                            position = right:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8040
                        ]

                        port "^Ed2" {
                            label = "^Ed2"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 7976
                        ]

                        port "^Eb2" {
                            label = "^Eb2"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8000
                        ]

                        port "^Ea2" {
                            label = "^Ea2"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 7960
                        ]

                        port wt2 {
                            label = "wt2"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8088
                        ]

                        port "^Eq2" {
                            label = "^Eq2"
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 8016
                        ]

                        connect Termination1.in "abc to dq1.zero_axis" as Connection4
                        connect "abc to dq1.q_axis" "^Eq2" as Connection6
                        connect wt2 "abc to dq1.wt" as Connection7
                        connect "abc to dq1.d_axis" "^Ed2" as Connection5
                        connect "^Eb2" "abc to dq1.vb" as Connection2
                        connect "^Ea2" "abc to dq1.va" as Connection1
                        connect "^Ec2" "abc to dq1.vc" as Connection3
                    }
                    [
                        position = 7936, 8456
                        size = 80, 168
                    ]

                    component gen_probe f1 {
                    }
                    [
                        position = 8248, 8312
                        rotation = down
                    ]

                    component Subsystem Current_abc_to_dq4 {
                        layout = dynamic
                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 7856, 8008
                            size = 48, 80
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 7952, 8064
                        ]

                        port wt2 {
                            label = "wt2"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8088
                        ]

                        port "^Eq2" {
                            label = "^Eq2"
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 8016
                        ]

                        port "^Ea2" {
                            label = "^Ea2"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 7960
                        ]

                        port "^Eb2" {
                            label = "^Eb2"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8000
                        ]

                        port "^Ec2" {
                            label = "^Ec2"
                            position = right:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8040
                        ]

                        port "^Ed2" {
                            label = "^Ed2"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 7976
                        ]

                        connect "abc to dq1.q_axis" "^Eq2" as Connection6
                        connect wt2 "abc to dq1.wt" as Connection7
                        connect "abc to dq1.d_axis" "^Ed2" as Connection5
                        connect "^Ea2" "abc to dq1.va" as Connection1
                        connect "^Ec2" "abc to dq1.vc" as Connection3
                        connect Termination1.in "abc to dq1.zero_axis" as Connection4
                        connect "^Eb2" "abc to dq1.vb" as Connection2
                    }
                    [
                        position = 7480, 8680
                        size = 80, 168
                    ]

                    component gen_sum Sum5 {
                        signs = "+-"
                    }
                    [
                        position = 7080, 8376
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe P1 {
                    }
                    [
                        position = 7080, 8136
                        rotation = down
                    ]

                    component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                        layout = dynamic
                        component Subsystem "Outer voltage control loop" {
                            layout = dynamic
                            component gen_sum Sum12 {
                                signs = "++"
                            }
                            [
                                position = 7792, 8512
                                scale = -1, 1
                            ]

                            component gen_gain Gain4 {
                                gain = "C_s*Z_DQ"
                            }
                            [
                                position = 8248, 8352
                                scale = -1, 1
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 8376, 8168
                                scale = -1, 1
                            ]

                            component gen_product Product8 {
                            }
                            [
                                position = 8144, 8808
                                scale = -1, 1
                            ]

                            component gen_sum Sum10 {
                                signs = "+-"
                            }
                            [
                                position = 7952, 8248
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 8152, 8320
                                scale = -1, 1
                            ]

                            component gen_sum Sum11 {
                                signs = "+-"
                            }
                            [
                                position = 8376, 8504
                                scale = -1, 1
                            ]

                            component gen_probe Ed_err {
                            }
                            [
                                position = 8376, 8104
                            ]

                            component gen_gain Gain6 {
                                gain = "C_s*Z_DQ"
                            }
                            [
                                position = 8248, 8840
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller4" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_V"
                                ki_source = "external"
                                kp = "Kp_V"
                                kp_source = "external"
                                lower_sat_lim = "Vmin"
                                upper_sat_lim = "Vmax"
                            }
                            [
                                position = 8088, 8504
                                scale = -1, 1
                            ]

                            component gen_sum Sum13 {
                                signs = "++"
                            }
                            [
                                position = 7936, 8712
                                scale = -1, 1
                            ]

                            component gen_sum Sum9 {
                                signs = "++"
                            }
                            [
                                position = 7800, 8176
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller3" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                execution_rate = "Ts"
                                ki = "Ki_V"
                                ki_source = "external"
                                kp = "Kp_V"
                                kp_source = "external"
                                lower_sat_lim = "Vmin"
                                upper_sat_lim = "Vmax"
                            }
                            [
                                position = 8112, 8104
                                scale = -1, 1
                            ]

                            component gen_probe Eq_err {
                            }
                            [
                                position = 8376, 8440
                            ]

                            component gen_probe ED_ctrl {
                            }
                            [
                                position = 8040, 8048
                            ]

                            component gen_probe EQ_ctrl {
                            }
                            [
                                position = 8000, 8456
                            ]

                            component src_scada_input kp_v_d {
                                def_value = "Kp_V"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8264, 8136
                                scale = -1, 1
                            ]

                            component src_scada_input ki_v_d {
                                def_value = "Ki_V"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8264, 8192
                                scale = -1, 1
                            ]

                            component src_scada_input kp_v_q {
                                def_value = "Kp_V"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8304, 8528
                                scale = -1, 1
                            ]

                            component src_scada_input ki_v_q {
                                def_value = "Ki_V"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8304, 8584
                                scale = -1, 1
                            ]

                            component gen_gain Gain7 {
                                gain = "Z_DQ"
                            }
                            [
                                position = 8200, 8136
                                scale = -1, 1
                            ]

                            component gen_gain Gain8 {
                                gain = "Z_DQ"
                            }
                            [
                                position = 8200, 8192
                                scale = -1, 1
                            ]

                            component gen_gain Gain9 {
                                gain = "Z_DQ"
                            }
                            [
                                position = 8240, 8528
                                scale = -1, 1
                            ]

                            component gen_gain Gain10 {
                                gain = "Z_DQ"
                            }
                            [
                                position = 8240, 8584
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 8200, 8088
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 8168, 8488
                                hide_name = True
                                scale = -1, 1
                            ]

                            port Xi_rd {
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7696, 8176
                                scale = -1, 1
                            ]

                            port Xi_rq {
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7688, 8512
                                scale = -1, 1
                            ]

                            port "^E_q_ref" {
                                label = "^E_q_ref1"
                                position = auto:auto
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8552, 8440
                                scale = -1, 1
                            ]

                            port "^E_d_ref" {
                                label = "^E_d_ref1"
                                position = auto:auto
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8104
                                scale = -1, 1
                            ]

                            port "^E_q" {
                                label = "^E_q1"
                                position = auto:auto
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8600, 8512
                                scale = -1, 1
                            ]

                            port "^E_d" {
                                label = "^E_d1"
                                position = auto:auto
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8616, 8176
                                scale = -1, 1
                            ]

                            tag From33 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8280, 8280
                                scale = -1, 1
                            ]

                            tag From35 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8280, 8768
                                scale = -1, 1
                            ]

                            tag From32 {
                                value = "Id1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8384, 8240
                                scale = -1, 1
                            ]

                            tag From36 {
                                value = "Iq1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8376, 8688
                                scale = -1, 1
                            ]

                            junction Junction174 sp
                            [
                                position = 7968, 8104
                            ]

                            junction Junction175 sp
                            [
                                position = 7960, 8496
                            ]

                            junction Junction176 sp
                            [
                                position = 8480, 8176
                            ]

                            junction Junction177 sp
                            [
                                position = 8448, 8512
                            ]

                            junction Junction178 sp
                            [
                                position = 8336, 8104
                            ]

                            junction Junction179 sp
                            [
                                position = 8336, 8504
                            ]

                            connect "^E_d_ref" Sum8.in as Connection215
                            connect Sum11.in "^E_q_ref" as Connection217
                            connect Sum13.in1 Product8.out as Connection233
                            connect From32 Sum10.in as Connection259
                            connect Gain6.out Product8.in1 as Connection84
                            connect From33 Product6.in as Connection68
                            connect Sum10.in1 Product6.out as Connection67
                            connect From36 Sum13.in as Connection260
                            connect From35 Product8.in as Connection79
                            connect Gain4.out Product6.in1 as Connection69
                            connect "PID controller3.out" Junction174 as Connection311
                            [
                                breakpoints = 8072, 8104
                            ]
                            connect Junction174 ED_ctrl.in as Connection312
                            [
                                breakpoints = 7968, 8104
                            ]
                            connect Sum9.in Junction174 as Connection313
                            connect EQ_ctrl.in Junction175 as Connection320
                            connect Junction175 "PID controller4.out" as Connection321
                            [
                                breakpoints = 7960, 8504; 7960, 8504; 8024, 8504
                            ]
                            connect Sum12.in Junction175 as Connection322
                            connect kp_v_d.out Gain7.in as Connection323
                            connect Gain7.out "PID controller3.kp_in" as Connection324
                            connect Gain8.in ki_v_d.out as Connection325
                            connect Gain8.out "PID controller3.ki_in" as Connection326
                            connect Gain9.in kp_v_q.out as Connection327
                            connect Gain10.in ki_v_q.out as Connection328
                            connect Gain9.out "PID controller4.kp_in" as Connection329
                            connect Gain10.out "PID controller4.ki_in" as Connection330
                            connect "PID controller3.in" Limit1.out as Connection331
                            connect Limit2.out "PID controller4.in" as Connection334
                            connect Gain6.in Junction176 as Connection340
                            connect Junction176 Sum8.in1 as Connection341
                            [
                                breakpoints = 8480, 8176
                            ]
                            connect "^E_d" Junction176 as Connection342
                            connect Gain4.in Junction177 as Connection344
                            connect Junction177 Sum11.in1 as Connection345
                            [
                                breakpoints = 8448, 8512
                            ]
                            connect "^E_q" Junction177 as Connection346
                            connect Ed_err.in Junction178 as Connection348
                            connect Junction178 Sum8.out as Connection349
                            [
                                breakpoints = 8336, 8168; 8336, 8168
                            ]
                            connect Limit1.in Junction178 as Connection350
                            connect Sum11.out Junction179 as Connection352
                            connect Junction179 Eq_err.in as Connection353
                            [
                                breakpoints = 8336, 8504
                            ]
                            connect Limit2.in Junction179 as Connection354
                            connect Xi_rq Sum12.out as Connection355
                            connect Xi_rd Sum9.out as Connection356
                            connect Sum9.in1 Sum10.out as Connection357
                            connect Sum12.in1 Sum13.out as Connection358
                        }
                        [
                            position = 8808, 8400
                            scale = -1, 1
                            size = 152, 168
                        ]

                        component gen_gain Gain5 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8032, 8560
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_sum Sum7 {
                        }
                        [
                            position = 9176, 8552
                            scale = -1, 1
                        ]

                        component gen_sum Sum10 {
                            signs = "+-"
                        }
                        [
                            position = 9416, 8496
                            scale = -1, 1
                        ]

                        component gen_sum Sum11 {
                            signs = "+-"
                        }
                        [
                            position = 9424, 8192
                            scale = -1, 1
                        ]

                        component gen_gain Gain6 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8624
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_gain Gain3 {
                            gain = "R_s/Z_DQ"
                        }
                        [
                            position = 9320, 8496
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                        }
                        [
                            position = 9208, 8232
                            scale = -1, 1
                        ]

                        component Subsystem "dq to abc" {
                            layout = dynamic
                            component src_constant o_ref {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7520, 8200
                            ]

                            component "core/dq to abc" "dq to abc1" {
                                execution_rate = "inherit"
                            }
                            [
                                position = 7744, 8184
                                size = 48, 80
                            ]

                            port c {
                                label = "c"
                                position = left:4
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7864, 8216
                            ]

                            port d {
                                label = "Ud1"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7520, 8136
                            ]

                            port alpha {
                                label = "alpha1"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8232
                            ]

                            port a {
                                label = "a"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7864, 8152
                            ]

                            port q {
                                label = "Uq1"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7472, 8168
                            ]

                            port b {
                                label = "b"
                                position = left:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7896, 8184
                            ]

                            connect q "dq to abc1.q_input" as Connection6
                            connect d "dq to abc1.d_input" as Connection3
                            connect "dq to abc1.phase_b" b as Connection4
                            connect c "dq to abc1.phase_c" as Connection2
                            connect a "dq to abc1.phase_a" as Connection1
                            connect o_ref.out "dq to abc1.zero_input" as Connection5
                            connect alpha "dq to abc1.wt" as Connection7
                        }
                        [
                            position = 7912, 8624
                            size = 80, 168
                        ]

                        component gen_gain Gain4 {
                            gain = "R_s/Z_DQ"
                        }
                        [
                            position = 9328, 8192
                            scale = -1, 1
                        ]

                        component Subsystem "inner current control loop" {
                            layout = dynamic
                            component gen_gain Gain7 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8272, 8592
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 7760, 8048
                                scale = -1, 1
                            ]

                            component gen_sum Sum5 {
                                signs = "+-"
                            }
                            [
                                position = 8024, 8104
                                scale = -1, 1
                            ]

                            component gen_sum Sum7 {
                            }
                            [
                                position = 7760, 8400
                                scale = -1, 1
                            ]

                            component gen_sum Sum6 {
                            }
                            [
                                position = 8032, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8168, 8560
                                scale = -1, 1
                            ]

                            component gen_gain Gain6 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8256, 8240
                                scale = -1, 1
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 8432, 8024
                                scale = -1, 1
                            ]

                            component gen_sum Sum9 {
                                signs = "+-"
                            }
                            [
                                position = 8424, 8360
                                scale = -1, 1
                            ]

                            component gen_gain Gain5 {
                                gain = "[0.5]"
                            }
                            [
                                position = 7720, 8600
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller1" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                ki_source = "external"
                                kp = "Kp_I/Z_DQ"
                                kp_source = "external"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8040
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 8168, 8208
                                scale = -1, 1
                            ]

                            component gen_probe id_err {
                            }
                            [
                                position = 8544, 7944
                            ]

                            component gen_probe iq_err {
                            }
                            [
                                position = 8560, 8272
                            ]

                            component gen_z_domain_transfer "Discrete Transfer Function1" {
                                a_coeff = "[1e-6,1]"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8144, 7920
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer "Discrete Transfer Function2" {
                                a_coeff = "[1e-6,1]"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8120, 8296
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_product Product5 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8056
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8408
                                scale = -1, 1
                            ]

                            component src_scada_input kp_i_d {
                                def_value = "Kp_I"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8368, 8064
                                scale = -1, 1
                            ]

                            component src_scada_input ki_i_d {
                                def_value = "Ki_I"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8368, 8120
                                scale = -1, 1
                            ]

                            component gen_gain Gain8 {
                                gain = "1/Z_DQ"
                            }
                            [
                                position = 8296, 8064
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_gain Gain9 {
                                gain = "1/Z_DQ"
                            }
                            [
                                position = 8296, 8120
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller2" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                ki_source = "external"
                                kp = "Kp_I/Z_DQ"
                                kp_source = "external"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8376
                                scale = -1, 1
                            ]

                            component src_scada_input kp_i_q {
                                def_value = "Kp_I"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8368, 8400
                                scale = -1, 1
                            ]

                            component src_scada_input ki_i_q {
                                def_value = "Ki_I"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8368, 8456
                                scale = -1, 1
                            ]

                            component gen_gain Gain10 {
                                gain = "1/Z_DQ"
                            }
                            [
                                position = 8296, 8400
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_gain Gain11 {
                                gain = "1/Z_DQ"
                            }
                            [
                                position = 8296, 8456
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "[-1.2]"
                                upper_limit = "[1.2]"
                            }
                            [
                                position = 7488, 8056
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "[-1.2]"
                                upper_limit = "[1.2]"
                            }
                            [
                                position = 7472, 8408
                                hide_name = True
                                scale = -1, 1
                            ]

                            port Uq1 {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8408
                                rotation = down
                            ]

                            port Xi_q_meas1 {
                                label = "Xi_q_meas1"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8400
                                rotation = down
                            ]

                            port Xi_q_ref1 {
                                label = "Xi_q_ref1"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8352
                                rotation = down
                            ]

                            port Ud1 {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8056
                                rotation = down
                            ]

                            port Xi_d_ref1 {
                                label = "Xi_d_ref1"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8016
                                rotation = down
                            ]

                            port Xi_d_meas1 {
                                label = "Xi_d_meas1"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8112
                                rotation = down
                            ]

                            tag From23 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8272, 8176
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From24 {
                                value = "Ed1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 7920
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From26 {
                                value = "Eq1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8208, 8296
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From27 {
                                value = "VDC"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7816, 8600
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From25 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8288, 8536
                                scale = -1, 1
                                size = 60, 20
                            ]

                            junction Junction177 sp
                            [
                                position = 8504, 8112
                            ]

                            junction Junction176 sp
                            [
                                position = 8504, 8368
                            ]

                            junction Junction181 sp
                            [
                                position = 8288, 8024
                            ]

                            junction Junction182 sp
                            [
                                position = 7640, 8416
                            ]

                            junction Junction183 sp
                            [
                                position = 8288, 8360
                            ]

                            connect From23 Product1.in as Connection1
                            connect Sum5.in1 Product1.out as Connection24
                            connect Gain6.out Product1.in1 as Connection289
                            connect Junction177 Gain7.in as Connection300
                            connect Gain7.out Product2.in1 as Connection293
                            connect Xi_q_meas1 Junction176 as Connection290
                            connect Sum6.in1 Product2.out as Connection26
                            connect Junction176 Sum9.in1 as Connection291
                            connect Sum8.in1 Junction177 as Connection301
                            connect From25 Product2.in as Connection2
                            connect Sum8.in Xi_d_ref1 as Connection297
                            connect Sum9.in Xi_q_ref1 as Connection283
                            connect Gain6.in Junction176 as Connection292
                            connect Xi_d_meas1 Junction177 as Connection299
                            connect Sum8.out Junction181 as Connection313
                            connect Junction181 "PID controller1.in" as Connection314
                            [
                                breakpoints = 8288, 8024; 8240, 8024
                            ]
                            connect id_err.in Junction181 as Connection315
                            connect Sum3.in "PID controller1.out" as Connection316
                            [
                                breakpoints = 7896, 8040; 8160, 8040; 8160, 8040
                            ]
                            connect Sum5.in "Discrete Transfer Function1.out" as Connection318
                            [
                                breakpoints = 8088, 8096; 8088, 7920
                            ]
                            connect "Discrete Transfer Function1.in" From24 as Connection319
                            connect From26 "Discrete Transfer Function2.in" as Connection320
                            connect "Discrete Transfer Function2.out" Sum6.in as Connection321
                            connect Product5.in Sum3.out as Connection322
                            connect Product6.in Sum7.out as Connection324
                            connect Sum7.in1 Sum6.out as Connection326
                            connect Sum5.out Sum3.in1 as Connection327
                            connect Gain5.out Junction182 as Connection329
                            connect Junction182 Product6.in1 as Connection330
                            connect Product5.in1 Junction182 as Connection331
                            connect From27 Gain5.in as Connection332
                            connect kp_i_d.out Gain8.in as Connection333
                            connect Gain9.in ki_i_d.out as Connection334
                            connect Gain8.out "PID controller1.kp_in" as Connection335
                            connect kp_i_q.out Gain10.in as Connection342
                            connect Gain11.in ki_i_q.out as Connection343
                            connect Gain10.out "PID controller2.kp_in" as Connection344
                            connect "PID controller2.out" Sum7.in as Connection346
                            connect Gain11.out "PID controller2.ki_in" as Connection347
                            [
                                breakpoints = 8248, 8456; 8248, 8392; 8248, 8392
                            ]
                            connect Gain9.out "PID controller1.ki_in" as Connection348
                            connect Sum9.out Junction183 as Connection349
                            connect Junction183 iq_err.in as Connection350
                            [
                                breakpoints = 8288, 8360
                            ]
                            connect "PID controller2.in" Junction183 as Connection351
                            connect Product5.out Limit1.in as Connection352
                            connect Limit1.out Ud1 as Connection353
                            connect Product6.out Limit2.in as Connection354
                            connect Limit2.out Uq1 as Connection355
                        }
                        [
                            position = 8176, 8592
                            size = 96, 184
                        ]

                        component gen_probe Xi_d_ref {
                        }
                        [
                            position = 8216, 8416
                            rotation = down
                        ]

                        component gen_probe Xi_q_ref {
                        }
                        [
                            position = 8256, 8768
                            rotation = down
                        ]

                        component gen_probe Ud {
                        }
                        [
                            position = 7912, 8456
                            scale = -1, 1
                        ]

                        component gen_probe Uq {
                        }
                        [
                            position = 7984, 8672
                            scale = -1, 1
                        ]

                        component gen_probe Eq_ref {
                        }
                        [
                            position = 9032, 8176
                            rotation = down
                        ]

                        component gen_probe Ed_ref {
                        }
                        [
                            position = 9016, 8544
                            rotation = down
                        ]

                        component gen_probe alpha {
                        }
                        [
                            position = 7984, 8768
                            scale = -1, 1
                        ]

                        component Subsystem "outer power loop" {
                            layout = dynamic
                            component sys_signal_switch "Signal switch1" {
                                threshold = "0.5"
                            }
                            [
                                position = 8256, 8328
                                scale = -1, -1
                            ]

                            component gen_comparator Comparator1 {
                            }
                            [
                                position = 8352, 8368
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                                signs = "+-"
                            }
                            [
                                position = 8232, 8072
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8080
                                scale = -1, 1
                            ]

                            component gen_probe Et_sqr_res {
                            }
                            [
                                position = 8224, 8256
                            ]

                            component gen_product Product2 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8168
                                scale = -1, 1
                            ]

                            component gen_product Product4 {
                            }
                            [
                                position = 8440, 8080
                                scale = -1, 1
                            ]

                            component gen_sum Sum4 {
                            }
                            [
                                position = 8232, 8160
                                scale = -1, 1
                            ]

                            component gen_product Product5 {
                            }
                            [
                                position = 8440, 8152
                                scale = -1, 1
                            ]

                            component gen_product Product3 {
                            }
                            [
                                position = 8440, 8008
                                scale = -1, 1
                            ]

                            component src_constant Limit_zero {
                                execution_rate = "Ts"
                                value = "[0.1]"
                            }
                            [
                                position = 8464, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 8440, 8224
                                scale = -1, 1
                            ]

                            component src_constant one {
                                execution_rate = "Ts"
                                value = "[1]"
                            }
                            [
                                position = 8344, 8312
                                scale = -1, 1
                            ]

                            component gen_gain Gain4 {
                                gain = "C_s*Z_DQ"
                            }
                            [
                                position = 8136, 7944
                                scale = -1, 1
                            ]

                            component gen_sum Sum10 {
                                signs = "++"
                            }
                            [
                                position = 7776, 8072
                                scale = -1, 1
                            ]

                            component gen_product Product7 {
                            }
                            [
                                position = 8040, 7912
                                scale = -1, 1
                            ]

                            component gen_gain Gain5 {
                                gain = "C_s*Z_DQ"
                            }
                            [
                                position = 7952, 8352
                                scale = -1, 1
                            ]

                            component gen_product Product8 {
                            }
                            [
                                position = 7856, 8320
                                scale = -1, 1
                            ]

                            component gen_sum Sum11 {
                                signs = "+-"
                            }
                            [
                                position = 7736, 8176
                                scale = -1, 1
                            ]

                            port Q_ref {
                                label = "Q_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8216
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8000
                                rotation = down
                            ]

                            port Xi_rq {
                                label = "Xi_rq"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7648, 8072
                                rotation = down
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = right:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8600, 8360
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8072
                                rotation = down
                            ]

                            port P_ref {
                                label = "P_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8144
                                rotation = down
                            ]

                            port Xi_rd {
                                label = "Xi_rd"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7648, 8176
                                rotation = down
                            ]

                            tag From33 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8168, 7872
                                scale = -1, 1
                            ]

                            tag From38 {
                                value = "E_d1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8264, 7944
                                scale = -1, 1
                            ]

                            tag From39 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7984, 8280
                                scale = -1, 1
                            ]

                            tag From40 {
                                value = "E_q1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8080, 8352
                                scale = -1, 1
                            ]

                            junction Junction142 sp
                            [
                                position = 8528, 8072
                            ]

                            junction Junction143 sp
                            [
                                position = 8544, 8000
                            ]

                            junction Junction144 sp
                            [
                                position = 8408, 8360
                            ]

                            junction Junction147 sp
                            [
                                position = 8184, 8328
                            ]

                            junction Junction138 sp
                            [
                                position = 8160, 8176
                            ]

                            junction Junction139 sp
                            [
                                position = 8568, 8144
                            ]

                            junction Junction141 sp
                            [
                                position = 8560, 8216
                            ]

                            connect Product1.in Sum3.out as Connection23
                            connect Product6.in1 Junction143 as Connection36
                            connect Et_sqr_res.in Junction147 as Connection5
                            connect Product2.in1 Junction138 as Connection25
                            connect Product3.out Sum3.in as Connection28
                            connect Junction138 Product1.in1 as Connection9
                            connect Comparator1.in1 Junction144 as Connection1
                            connect Product6.out Sum4.in1 as Connection37
                            connect Product4.in1 Junction141 as Connection29
                            connect Limit_zero.out Comparator1.in2 as Connection19
                            connect Product4.in Junction142 as Connection30
                            connect Comparator1.out "Signal switch1.in2" as Connection2
                            connect Junction141 Q_ref as Connection11
                            connect "Signal switch1.in" Junction144 as Connection38
                            connect Product4.out Sum3.in1 as Connection31
                            connect Junction142 Ed as Connection12
                            connect Eq Junction143 as Connection3
                            connect Junction143 Product3.in as Connection13
                            connect "Signal switch1.out" Junction147 as Connection39
                            connect Product5.in Junction139 as Connection32
                            connect Product5.in1 Junction142 as Connection33
                            connect Product5.out Sum4.in as Connection34
                            connect one.out "Signal switch1.in1" as Connection40
                            connect Product6.in Junction141 as Connection35
                            connect Product2.in Sum4.out as Connection26
                            connect Product3.in1 Junction139 as Connection27
                            connect Junction138 Junction147 as Connection47
                            [
                                breakpoints = 8160, 8176; 8160, 8264
                            ]
                            connect P_ref Junction139 as Connection48
                            [
                                breakpoints = 8600, 8144
                            ]
                            connect Et_p2 Junction144 as Connection49
                            [
                                breakpoints = 8424, 8360
                            ]
                            connect From33 Product7.in as Connection68
                            connect Gain4.out Product7.in1 as Connection69
                            connect From38 Gain4.in as Connection260
                            connect Sum10.in1 Product1.out as Connection261
                            connect Product7.out Sum10.in as Connection262
                            connect Xi_rq Sum10.out as Connection263
                            connect From39 Product8.in as Connection264
                            connect Gain5.out Product8.in1 as Connection265
                            connect From40 Gain5.in as Connection266
                            connect Sum11.in Product2.out as Connection267
                            connect Product8.out Sum11.in1 as Connection268
                            connect Sum11.out Xi_rd as Connection269
                        }
                        [
                            position = 8840, 8784
                            size = 176, 128
                        ]

                        component Subsystem squared_Vt2 {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 8208, 8160
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 8104, 8192
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8208, 8232
                                scale = -1, 1
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8192
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8224
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8152
                                rotation = down
                            ]

                            junction Junction137 sp
                            [
                                position = 8280, 8224
                            ]

                            junction Junction136 sp
                            [
                                position = 8280, 8152
                            ]

                            connect Junction137 Eq as Connection3
                            connect Product2.in Junction137 as Connection6
                            connect Sum3.in Product1.out as Connection8
                            connect Junction136 Ed as Connection1
                            connect Product1.in1 Junction136 as Connection4
                            connect Sum3.in1 Product2.out as Connection9
                            connect Product2.in1 Junction137 as Connection5
                            connect Sum3.out Et_p2 as Connection7
                            connect Junction136 Product1.in as Connection2
                        }
                        [
                            position = 8992, 8848
                            size = 48, 56
                        ]

                        component sys_signal_switch "Signal switch2" {
                            criterion = "ctrl != threshold"
                            threshold = "1"
                        }
                        [
                            position = 8496, 8576
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_bus_join "Bus Join1" {
                        }
                        [
                            position = 8616, 8400
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_bus_split "Bus Split1" {
                        }
                        [
                            position = 8392, 8576
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_bus_join "Bus Join2" {
                        }
                        [
                            position = 8616, 8776
                            hide_name = True
                            scale = -1, 1
                        ]

                        component src_scada_input GFM_mode {
                            execution_rate = "Ts"
                            format = "int"
                            max = "1"
                            min = "0"
                            signal_type = "int"
                            unit = ""
                        }
                        [
                            position = 8536, 8856
                            rotation = left
                        ]

                        component gen_logic_op "Logical operator1" {
                            operator = "OR"
                        }
                        [
                            position = 8496, 8720
                            rotation = left
                            hide_name = True
                        ]

                        port Ua {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8560
                            rotation = down
                        ]

                        port E_q_ref1 {
                            label = "E_q_ref1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 9472, 8304
                            rotation = down
                        ]

                        port Uc {
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8688
                            rotation = down
                        ]

                        port E_d_ref1 {
                            label = "E_d_ref1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 9456, 8632
                            rotation = down
                        ]

                        port Ub {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8624
                            rotation = down
                        ]

                        tag From36 {
                            value = "E_q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8992, 8416
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From29 {
                            value = "Xi_d1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8568
                            scale = -1, 1
                        ]

                        tag From40 {
                            value = "Xi_q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9536, 8232
                            rotation = down
                        ]

                        tag From38 {
                            value = "Id1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9536, 8448
                            rotation = down
                            size = 56, 20
                        ]

                        tag From1 {
                            value = "alpha1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8176, 8728
                            scale = -1, 1
                            size = 63, 25
                        ]

                        tag From30 {
                            value = "Xi_q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8664
                            scale = -1, 1
                        ]

                        tag From31 {
                            value = "Iq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9536, 8152
                            rotation = down
                        ]

                        tag From39 {
                            value = "Xi_d1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9536, 8544
                            rotation = down
                        ]

                        tag From37 {
                            value = "E_d1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8992, 8464
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From20 {
                            value = "Ed1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9152, 8784
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From41 {
                            value = "Eq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9152, 8816
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From42 {
                            value = "Pref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9064, 8728
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From43 {
                            value = "Qref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9064, 8760
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From44 {
                            value = "Island"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8480, 8864
                            rotation = left
                            hide_name = True
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag Goto21 {
                            value = "GFM_mode"
                            scope = masked_subsystem
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8400, 8664
                            scale = -1, 1
                        ]

                        junction Junction3 sp
                        [
                            position = 7984, 8560
                        ]

                        junction Junction4 sp
                        [
                            position = 8032, 8624
                        ]

                        junction Junction7 sp
                        [
                            position = 9112, 8232
                        ]

                        junction Junction9 sp
                        [
                            position = 8080, 8728
                        ]

                        junction Junction10 sp
                        [
                            position = 8296, 8520
                        ]

                        junction Junction11 sp
                        [
                            position = 8336, 8616
                        ]

                        junction Junction12 sp
                        [
                            position = 9136, 8544
                        ]

                        junction Junction13 sp
                        [
                            position = 9064, 8784
                        ]

                        junction Junction14 sp
                        [
                            position = 9088, 8816
                        ]

                        junction Junction15 sp
                        [
                            position = 8496, 8664
                        ]

                        connect Sum11.out Gain4.in as Connection290
                        connect From31 Sum11.in as Connection293
                        connect From29 "inner current control loop.Xi_d_meas1" as Connection253
                        connect Sum7.in1 E_d_ref1 as Connection324
                        connect From30 "inner current control loop.Xi_q_meas1" as Connection257
                        connect Sum10.out Gain3.in as Connection287
                        connect "dq to abc.c" Uc as Connection284
                        connect "dq to abc.b" Ub as Connection282
                        connect Gain6.in "inner current control loop.Uq1" as Connection346
                        [
                            breakpoints = 8112, 8664
                        ]
                        connect From40 Sum11.in1 as Connection294
                        connect From39 Sum10.in1 as Connection286
                        connect E_q_ref1 Sum8.in1 as Connection344
                        connect "dq to abc.a" Ua as Connection283
                        connect Gain5.in "inner current control loop.Ud1" as Connection345
                        [
                            breakpoints = 8112, 8520
                        ]
                        connect Gain3.out Sum7.in as Connection289
                        connect Gain4.out Sum8.in as Connection343
                        connect From38 Sum10.in as Connection285
                        connect "dq to abc.d" Junction3 as Connection374
                        connect Junction3 Gain5.out as Connection375
                        connect Ud.in Junction3 as Connection376
                        connect "dq to abc.q" Junction4 as Connection377
                        connect Junction4 Gain6.out as Connection378
                        connect Uq.in Junction4 as Connection379
                        connect Sum8.out Junction7 as Connection398
                        connect Junction7 "Outer voltage control loop.^E_q_ref" as Connection399
                        [
                            breakpoints = 9112, 8232
                        ]
                        connect Eq_ref.in Junction7 as Connection400
                        connect From36 "Outer voltage control loop.^E_q" as Connection404
                        connect From37 "Outer voltage control loop.^E_d" as Connection405
                        connect "dq to abc.alpha" Junction9 as Connection406
                        [
                            breakpoints = 7968, 8728
                        ]
                        connect Junction9 From1 as Connection407
                        [
                            breakpoints = 8112, 8728
                        ]
                        connect alpha.in Junction9 as Connection408
                        connect squared_Vt2.Et_p2 "outer power loop.Et_p2" as Connection359
                        connect "Bus Join1.in" "Outer voltage control loop.Xi_rd" as Connection412
                        connect "Bus Join1.in1" "Outer voltage control loop.Xi_rq" as Connection413
                        connect Xi_d_ref.in Junction10 as Connection414
                        [
                            breakpoints = 8296, 8504
                        ]
                        connect Junction10 "inner current control loop.Xi_d_ref1" as Connection415
                        [
                            breakpoints = 8288, 8520
                        ]
                        connect "Bus Split1.out" Junction10 as Connection416
                        [
                            breakpoints = 8344, 8568; 8344, 8520
                        ]
                        connect "inner current control loop.Xi_q_ref1" Junction11 as Connection417
                        connect Junction11 Xi_q_ref.in as Connection418
                        [
                            breakpoints = 8336, 8632; 8336, 8632
                        ]
                        connect "Bus Split1.out1" Junction11 as Connection419
                        connect "Bus Join2.in" "outer power loop.Xi_rd" as Connection420
                        connect "Bus Join2.in1" "outer power loop.Xi_rq" as Connection421
                        connect "Signal switch2.in1" "Bus Join1.out" as Connection422
                        connect "Signal switch2.in" "Bus Join2.out" as Connection423
                        connect "Bus Split1.in" "Signal switch2.out" as Connection424
                        connect "Outer voltage control loop.^E_d_ref" Junction12 as Connection426
                        [
                            breakpoints = 9136, 8384; 9136, 8384
                        ]
                        connect Junction12 Sum7.out as Connection427
                        connect Ed_ref.in Junction12 as Connection428
                        connect From42 "outer power loop.P_ref" as Connection431
                        connect From43 "outer power loop.Q_ref" as Connection432
                        connect From20 Junction13 as Connection433
                        connect Junction13 "outer power loop.Ed" as Connection434
                        connect squared_Vt2.Ed Junction13 as Connection435
                        connect From41 Junction14 as Connection436
                        connect Junction14 "outer power loop.Eq" as Connection437
                        [
                            breakpoints = 9088, 8816; 9032, 8816
                        ]
                        connect squared_Vt2.Eq Junction14 as Connection438
                        connect "Logical operator1.in" From44 as Connection440
                        connect "Logical operator1.in1" GFM_mode.out as Connection441
                        connect "Logical operator1.out" Junction15 as Connection442
                        connect Junction15 "Signal switch2.in2" as Connection443
                        connect Goto21 Junction15 as Connection444
                    }
                    [
                        position = 7360, 7952
                        size = 128, 152
                    ]

                    component gen_limiter Limit1 {
                        lower_limit = "[-1]"
                        upper_limit = "[1]"
                    }
                    [
                        position = 7136, 7952
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_c_function "C function1" {
                        execution_rate = "Ts"
                        in_terminal_dimensions = "inherit;inherit;inherit"
                        in_terminal_dimensions_str = "in inherit;pi inherit;Ts inherit"
                        in_terminal_labels = "[(\'in\', False), (\'pi\', False), (\'Ts\', False)]"
                        in_terminal_properties = "real in;inherit pi;inherit Ts;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', False)]"
                        output_fnc = "/*Begin code section*/
out = out + in*Ts;
if (out>=2*pi){
    out = out - 2*pi;
}
/*End code section*/"
                    }
                    [
                        position = 8456, 8536
                        hide_name = True
                        scale = -1, 1
                        size = 48, 64
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "np.pi"
                    }
                    [
                        position = 8680, 8584
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "Ts"
                    }
                    [
                        position = 8560, 8568
                        hide_name = True
                        scale = -1, 1
                    ]

                    component Subsystem "Frequency droop" {
                        layout = dynamic
                        component gen_sum Sum1 {
                            signs = "+-"
                        }
                        [
                            position = 8160, 8120
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_sum Sum4 {
                            signs = "++"
                        }
                        [
                            position = 7880, 8216
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_gain Gain3 {
                            gain = "1/D_f"
                        }
                        [
                            position = 8088, 8120
                            hide_name = True
                            scale = -1, 1
                        ]

                        component src_clock Clock1 {
                            execution_rate = "Ts"
                        }
                        [
                            position = 8112, 8168
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_c_function "C function1" {
                            in_terminal_dimensions = "1;1"
                            in_terminal_dimensions_str = "in 1;clk 1"
                            in_terminal_labels = "[(\'in\', True), (\'clk\', True)]"
                            in_terminal_properties = "real in;inherit clk;"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', False)]"
                            output_fnc = "/*Begin code section*/
if (clk>120){
    out = in;
}
else{out=0;}
out = in;
/*End code section*/"
                        }
                        [
                            position = 8000, 8128
                            hide_name = True
                            scale = -1, 1
                            size = 48, 48
                        ]

                        component gen_c_function "C function2" {
                            global_variables = "real time;int connected;"
                            in_terminal_dimensions = "1;1;1"
                            in_terminal_dimensions_str = "in 1;clk 1;cnt 1"
                            in_terminal_labels = "[(\'in\', True), (\'clk\', True), (\'cnt\', True)]"
                            in_terminal_properties = "real in;inherit clk;inherit cnt;"
                            init_fnc = "/*Begin code section*/
connected = 0;
time = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', False)]"
                            output_fnc = "/*Begin code section*/
/*
if (connected>0 && clk<time+60){
    out = out + 0.001*(in-out);
}
else{out=in;}
*/
if (cnt>0) out = in;
else out = 2*3.14159265359*60;
/*End code section*/"
                            update_fnc = "/*Begin code section*/
if (connected<1 && cnt>0){
    time = clk;
}
if (cnt>0){connected = 1;}
/*End code section*/"
                        }
                        [
                            position = 7752, 8224
                            hide_name = True
                            scale = -1, 1
                            size = 48, 64
                        ]

                        component src_clock Clock2 {
                            execution_rate = "Ts"
                        }
                        [
                            position = 7880, 8272
                            hide_name = True
                            scale = -1, 1
                        ]

                        component "core/Rate Transition" "Rate Transition12" {
                            execution_rate = "Ts"
                            init_value = "0"
                        }
                        [
                            position = 8008, 8264
                            hide_name = True
                            scale = -1, 1
                            size = 32, 32
                        ]

                        component gen_c_function "C function3" {
                            execution_rate = "Tsync"
                            in_terminal_dimensions = "1;1;inherit"
                            in_terminal_dimensions_str = "del_w 1;INV_sync 1;Connect inherit"
                            in_terminal_labels = "[(\'del_w\', True), (\'INV_sync\', True), (\'Connect\', True)]"
                            in_terminal_properties = "real del_w;inherit INV_sync;inherit Connect;"
                            init_fnc = "/*Begin code section*/
wref = w_0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "wref inherit"
                            out_terminal_labels = "[(\'wref\', False)]"
                            out_terminal_properties = "real wref;"
                            output_fnc = "/*Begin code section*/
if (INV_sync) wref = wref + del_w;
if (Connect) wref = w_0;
/*End code section*/"
                            parameters = "real w_0;"
                        }
                        [
                            position = 8128, 8264
                            hide_name = True
                            scale = -1, 1
                            size = 64, 96
                        ]

                        port w1 {
                            label = "w1"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7680, 8216
                            scale = -1, 1
                        ]

                        port U_P {
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8096
                            scale = -1, 1
                        ]

                        tag From17 {
                            value = "P1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8248, 8144
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag theta_bus7 {
                            value = "del_w"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8256, 8240
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag MT_ON2 {
                            value = "Connect"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8256, 8288
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From44 {
                            value = "GFM_mode"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7872, 8328
                            hide_name = True
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag MT_ON3 {
                            value = "INV_sync"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8256, 8264
                            hide_name = True
                            scale = -1, 1
                        ]

                        connect U_P Sum1.in as Connection368
                        connect From17 Sum1.in1 as Connection316
                        connect Gain3.in Sum1.out as Connection392
                        connect Clock1.out "C function1.clk" as Connection413
                        connect Sum4.in "C function1.out" as Connection414
                        connect Gain3.out "C function1.in" as Connection415
                        connect "C function2.in" Sum4.out as Connection416
                        connect "C function2.out" w1 as Connection417
                        connect Clock2.out "C function2.clk" as Connection418
                        [
                            breakpoints = 7832, 8272; 7832, 8224
                        ]
                        connect From44 "C function2.cnt" as Connection423
                        connect "Rate Transition12.out" Sum4.in1 as Connection424
                        connect "C function3.wref" "Rate Transition12.in" as Connection425
                        connect theta_bus7 "C function3.del_w" as Connection426
                        connect MT_ON3 "C function3.INV_sync" as Connection427
                        connect MT_ON2 "C function3.Connect" as Connection428
                    }
                    [
                        position = 8352, 8184
                        size = 96, 120
                    ]

                    component Subsystem "Voltage droop" {
                        layout = dynamic
                        component gen_sum Sum2 {
                            signs = "+-"
                        }
                        [
                            position = 8208, 8104
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_probe E_1 {
                        }
                        [
                            position = 7872, 8104
                        ]

                        component gen_gain Gain3 {
                            gain = "1/D_V"
                        }
                        [
                            position = 8128, 8104
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_sum Sum4 {
                        }
                        [
                            position = 7872, 8208
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_probe dQ {
                        }
                        [
                            position = 8216, 8040
                        ]

                        component gen_c_function "C function1" {
                            in_terminal_dimensions = "1;1"
                            in_terminal_dimensions_str = "in 1;clk 1"
                            in_terminal_labels = "[(\'in\', True), (\'clk\', True)]"
                            in_terminal_properties = "real in;inherit clk;"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', False)]"
                            output_fnc = "/*Begin code section*/
if (clk>120){
    out = in;
}
else{out=0;}
out = in;
/*End code section*/"
                        }
                        [
                            position = 8016, 8112
                            hide_name = True
                            scale = -1, 1
                            size = 48, 48
                        ]

                        component src_clock Clock1 {
                            execution_rate = "Ts"
                        }
                        [
                            position = 8128, 8152
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_c_function "C function2" {
                            global_variables = "real time;int connected;"
                            in_terminal_dimensions = "1;1;1"
                            in_terminal_dimensions_str = "in 1;clk 1;GFM 1"
                            in_terminal_labels = "[(\'in\', True), (\'clk\', True), (\'GFM\', True)]"
                            in_terminal_properties = "real in;inherit clk;inherit GFM;"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', False)]"
                            output_fnc = "/*Begin code section*/
if (GFM>0) out = in;
else out = 1;
/*End code section*/"
                        }
                        [
                            position = 7640, 8224
                            hide_name = True
                            scale = -1, 1
                            size = 48, 64
                        ]

                        component src_clock Clock2 {
                            execution_rate = "Ts"
                        }
                        [
                            position = 7776, 8280
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_c_function "C function3" {
                            execution_rate = "Tsync"
                            in_terminal_dimensions = "1;1;inherit"
                            in_terminal_dimensions_str = "del_V 1;INV_sync 1;Connect inherit"
                            in_terminal_labels = "[(\'del_V\', True), (\'INV_sync\', True), (\'Connect\', True)]"
                            in_terminal_properties = "real del_V;inherit INV_sync;inherit Connect;"
                            init_fnc = "/*Begin code section*/
Vref = 1;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "Vref inherit"
                            out_terminal_labels = "[(\'Vref\', False)]"
                            out_terminal_properties = "real Vref;"
                            output_fnc = "/*Begin code section*/
if (INV_sync) Vref = Vref + del_V;
if (Connect) Vref = 1;
/*End code section*/"
                        }
                        [
                            position = 8048, 8280
                            hide_name = True
                            scale = -1, 1
                            size = 64, 96
                        ]

                        component "core/Rate Transition" "Rate Transition13" {
                            execution_rate = "Ts"
                        }
                        [
                            position = 7944, 8216
                            hide_name = True
                            scale = -1, 1
                            size = 32, 32
                        ]

                        port E_magnitude1 {
                            label = "E_magnitude1"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7536, 8224
                            scale = -1, 1
                        ]

                        port Q_ref1 {
                            label = "Q_ref1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8352, 8080
                            scale = -1, 1
                        ]

                        tag From18 {
                            value = "Q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8352, 8128
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag MT_ON1 {
                            value = "INV_sync"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8184, 8280
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From44 {
                            value = "GFM_mode"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7776, 8312
                            hide_name = True
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag MT_ON2 {
                            value = "del_V"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8184, 8256
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag MT_ON3 {
                            value = "Connect"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8184, 8304
                            hide_name = True
                            scale = -1, 1
                        ]

                        junction Junction2 sp
                        [
                            position = 8160, 8104
                        ]

                        junction Junction3 sp
                        [
                            position = 7808, 8208
                        ]

                        connect From18 Sum2.in1 as Connection323
                        connect Q_ref1 Sum2.in as Connection360
                        connect Gain3.in Junction2 as Connection406
                        connect Junction2 Sum2.out as Connection407
                        connect dQ.in Junction2 as Connection408
                        connect Clock1.out "C function1.clk" as Connection413
                        connect Sum4.in "C function1.out" as Connection414
                        connect "C function1.in" Gain3.out as Connection415
                        connect Clock2.out "C function2.clk" as Connection418
                        [
                            breakpoints = 7728, 8280; 7728, 8232
                        ]
                        connect "C function2.out" E_magnitude1 as Connection420
                        connect E_1.in Junction3 as Connection421
                        connect Junction3 Sum4.out as Connection422
                        [
                            breakpoints = 7808, 8208
                        ]
                        connect "C function2.in" Junction3 as Connection423
                        connect From44 "C function2.GFM" as Connection425
                        connect MT_ON2 "C function3.del_V" as Connection427
                        connect MT_ON1 "C function3.INV_sync" as Connection428
                        connect MT_ON3 "C function3.Connect" as Connection429
                        connect "C function3.Vref" "Rate Transition13.in" as Connection430
                        connect "Rate Transition13.out" Sum4.in1 as Connection431
                    }
                    [
                        position = 8352, 7944
                        size = 120, 96
                    ]

                    port U_P {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8600, 8144
                        scale = -1, 1
                    ]

                    port U_Q {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8528, 7912
                        scale = -1, 1
                    ]

                    tag Goto29 {
                        value = "E_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7760, 8392
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From6 {
                        value = "Xi_b1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8088, 7856
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto19 {
                        value = "Id1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7304, 8616
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto37 {
                        value = "P1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6808, 8232
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From24 {
                        value = "Ib1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8656
                        scale = -1, 1
                    ]

                    tag Goto47 {
                        value = "E_mag"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8512, 7976
                        hide_name = True
                    ]

                    tag From28 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8088, 7904
                        scale = -1, 1
                    ]

                    tag From42 {
                        value = "E_qR"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8008
                        scale = -1, 1
                    ]

                    tag Goto22 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7744, 7816
                        scale = -1, 1
                    ]

                    tag From37 {
                        value = "Id1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8256
                        scale = -1, 1
                    ]

                    tag From9 {
                        value = "Eb1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8160
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From7 {
                        value = "Xi_c1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8088, 7944
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto28 {
                        value = "E_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7760, 8520
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto23 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7744, 7944
                        scale = -1, 1
                    ]

                    tag Goto3 {
                        value = "Eq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7752, 8248
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From34 {
                        value = "E_c1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8520
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From36 {
                        value = "Ed1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8208
                        scale = -1, 1
                    ]

                    tag From8 {
                        value = "Ea1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8120
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From26 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8704
                        scale = -1, 1
                    ]

                    tag Goto17 {
                        value = "w1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8624, 8224
                        size = 60, 20
                    ]

                    tag From5 {
                        value = "Xi_a1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8088, 7816
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto20 {
                        value = "Iq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7304, 8744
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From23 {
                        value = "Ia1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8616
                        scale = -1, 1
                    ]

                    tag From20 {
                        value = "E_dR"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 7896
                        scale = -1, 1
                        size = 67, 20
                    ]

                    tag From40 {
                        value = "w1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8664, 8520
                        scale = -1, 1
                    ]

                    tag Goto45 {
                        value = "E_dR"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7760, 8648
                        scale = -1, 1
                        size = 64, 20
                    ]

                    tag Goto2 {
                        value = "modulator"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7064, 7952
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From10 {
                        value = "Ec1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8248
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From33 {
                        value = "E_a1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8392
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From25 {
                        value = "Ic1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8744
                        scale = -1, 1
                    ]

                    tag From27 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8208
                        scale = -1, 1
                    ]

                    tag From43 {
                        value = "E_mag"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7920, 8648
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag Goto4 {
                        value = "Ed1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7744, 8120
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto36 {
                        value = "Q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6808, 8376
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From32 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8480
                        scale = -1, 1
                    ]

                    tag Goto21 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8248, 8536
                        scale = -1, 1
                    ]

                    tag Goto46 {
                        value = "E_qR"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7784, 8776
                        scale = -1, 1
                    ]

                    tag From35 {
                        value = "E_b1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8432
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From38 {
                        value = "Iq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8472
                        scale = -1, 1
                    ]

                    tag From39 {
                        value = "Eq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8400
                        scale = -1, 1
                    ]

                    tag Goto48 {
                        value = "w_e"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8592, 8312
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto49 {
                        value = "Pref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8488, 8088
                        scale = -1, 1
                    ]

                    tag Goto50 {
                        value = "Qref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8400, 7840
                        scale = -1, 1
                    ]

                    junction Junction228 sp
                    [
                        position = 7520, 8400
                    ]

                    junction Junction230 sp
                    [
                        position = 7472, 8472
                    ]

                    junction Junction231 sp
                    [
                        position = 7520, 7896
                    ]

                    junction Junction258 sp
                    [
                        position = 7520, 8008
                    ]

                    junction Junction267 sp
                    [
                        position = 7136, 8368
                    ]

                    junction Junction268 sp
                    [
                        position = 7136, 8224
                    ]

                    junction Junction159 sp
                    [
                        position = 7472, 8208
                    ]

                    junction Junction269 sp
                    [
                        position = 7816, 8392
                    ]

                    junction Junction229 sp
                    [
                        position = 7520, 8256
                    ]

                    junction Junction158 sp
                    [
                        position = 7816, 8248
                    ]

                    junction Junction273 sp
                    [
                        position = 8544, 8312
                    ]

                    junction Junction274 sp
                    [
                        position = 6856, 8376
                    ]

                    junction Junction275 sp
                    [
                        position = 6856, 8232
                    ]

                    junction Junction276 sp
                    [
                        position = 8544, 8224
                    ]

                    junction Junction277 sp
                    [
                        position = 8552, 8144
                    ]

                    junction Junction278 sp
                    [
                        position = 8472, 7912
                    ]

                    connect From10 Current_abc_to_dq2.Ec2 as Connection234
                    connect From25 "Current_abc_to_dq4.^Ec2" as Connection699
                    connect Gain10.in "Current_abc_to_dq3.^Eq2" as Connection875
                    connect E_d1.in Junction269 as Connection965
                    connect Junction231 From20 as Connection728
                    connect E_q1.in Junction158 as Connection718
                    connect Current_abc_to_dq4.wt2 From26 as Connection702
                    connect Product111.in Junction159 as Connection703
                    connect Gain5.out Goto4 as Connection959
                    [
                        breakpoints = 7816, 8120
                    ]
                    connect Sum4.in Junction268 as Connection955
                    connect Current_abc_to_dq2.Ed2 Gain5.in as Connection870
                    connect Junction228 From39 as Connection680
                    connect Gain11.out Goto19 as Connection877
                    connect Current_abc_to_dq.Xi_d2 Gain6.in as Connection864
                    connect Gain13.out Integrator3.in as Connection925
                    connect From7 Current_abc_to_dq.Xi_c2 as Connection40
                    connect Junction158 Gain8.out as Connection868
                    connect Sum1.in1 Product13.out as Connection719
                    connect From6 Current_abc_to_dq.Xi_b2 as Connection39
                    connect Junction231 "Outer Voltage Loop + Inner Current Loop.E_d_ref1" as Connection736
                    connect "Current_abc_to_dq4.^Ea2" From23 as Connection701
                    connect From9 Current_abc_to_dq2.Eb2 as Connection235
                    connect "Outer Voltage Loop + Inner Current Loop.Ua" "Bus Join1.in" as Connection839
                    connect Goto23 Gain7.out as Connection962
                    connect Product12.out Sum2.in1 as Connection721
                    connect Sum5.in Junction267 as Connection952
                    connect f1.in Gain1.out as Connection318
                    connect E_dREF1.in Junction231 as Connection729
                    [
                        breakpoints = 7520, 7848; 7520, 7896
                    ]
                    connect E_qREF1.in Junction258 as Connection861
                    connect Product111.out Sum1.in as Connection684
                    connect Product13.in Junction228 as Connection679
                    connect Product12.in Junction159 as Connection720
                    connect "Current_abc_to_dq4.^Eb2" From24 as Connection700
                    connect "Outer Voltage Loop + Inner Current Loop.Uc" "Bus Join1.in2" as Connection840
                    connect From43 Goto45 as Connection881
                    connect Junction159 From36 as Connection698
                    connect P1.in Gain15.out as Connection966
                    connect Product10.out Sum2.in as Connection672
                    connect Gain15.in Junction268 as Connection967
                    connect Sum5.out Gain13.in as Connection926
                    connect Q1.in Gain14.out as Connection968
                    connect Product10.in Junction229 as Connection723
                    connect "Current_abc_to_dq4.^Ed2" Gain11.in as Connection876
                    connect Product12.in1 Junction230 as Connection678
                    connect Junction229 From37 as Connection683
                    connect Gain14.in Junction267 as Connection969
                    connect Current_abc_to_dq.wt2 From28 as Connection247
                    [
                        breakpoints = 8000, 7904; 8040, 7904
                    ]
                    connect Product10.in1 Junction228 as Connection681
                    connect From35 "Current_abc_to_dq3.^Eb2" as Connection276
                    connect Gain8.in Current_abc_to_dq2.Eq2 as Connection869
                    connect "Bus Join1.in1" "Outer Voltage Loop + Inner Current Loop.Ub" as Connection838
                    connect Gain9.out Junction269 as Connection963
                    connect Gain6.out Goto22 as Connection961
                    connect From42 Junction258 as Connection859
                    connect Current_abc_to_dq2.Ea2 From8 as Connection236
                    connect From34 "Current_abc_to_dq3.^Ec2" as Connection279
                    connect "Current_abc_to_dq3.^Ea2" From33 as Connection278
                    connect Junction269 Goto29 as Connection964
                    connect Junction258 "Outer Voltage Loop + Inner Current Loop.E_q_ref1" as Connection860
                    connect Junction230 From38 as Connection677
                    connect Product13.in1 Junction230 as Connection676
                    connect Sum4.out Gain4.in as Connection330
                    connect Constant1.out Goto46 as Connection882
                    connect From5 Current_abc_to_dq.Xi_a2 as Connection38
                    connect Gain12.in "Current_abc_to_dq4.^Eq2" as Connection879
                    connect Gain4.out Integrator2.in as Connection335
                    connect From27 Current_abc_to_dq2.wt2 as Connection246
                    connect From32 Current_abc_to_dq3.wt2 as Connection275
                    connect Product111.in1 Junction229 as Connection682
                    connect Goto20 Gain12.out as Connection878
                    connect "Current_abc_to_dq3.^Ed2" Gain9.in as Connection872
                    connect Goto28 Gain10.out as Connection874
                    connect Goto3 Junction158 as Connection292
                    connect Current_abc_to_dq.Xi_q2 Gain7.in as Connection866
                    connect Gain1.in Junction273 as Connection998
                    connect Goto48 Junction273 as Connection1000
                    connect Integrator3.out Junction274 as Connection1003
                    connect Junction274 Sum5.in1 as Connection1004
                    [
                        breakpoints = 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8424; 7120, 8424
                    ]
                    connect Goto36 Junction274 as Connection1005
                    connect Integrator2.out Junction275 as Connection1006
                    connect Junction275 Sum4.in1 as Connection1007
                    [
                        breakpoints = 6856, 8232; 6856, 8232; 6856, 8232; 6856, 8280; 7112, 8280
                    ]
                    connect Goto37 Junction275 as Connection1008
                    connect Junction267 Sum2.out as Connection1014
                    [
                        breakpoints = 7136, 8368; 7152, 8368
                    ]
                    connect Junction268 Sum1.out as Connection1013
                    [
                        breakpoints = 7136, 8224; 7152, 8224
                    ]
                    connect Goto2 Limit1.out as Connection1017
                    connect Limit1.in "Bus Join1.out" as Connection1018
                    connect "C function1.in" From40 as Connection1022
                    connect "C function1.out" Goto21 as Connection1023
                    connect Constant2.out "C function1.pi" as Connection1024
                    [
                        breakpoints = 8592, 8584; 8592, 8536
                    ]
                    connect Constant3.out "C function1.Ts" as Connection1025
                    connect "Voltage droop.E_magnitude1" Goto47 as Connection1028
                    connect Goto17 Junction276 as Connection1030
                    connect Junction276 Junction273 as Connection1031
                    [
                        breakpoints = 8592, 8224; 8544, 8224
                    ]
                    connect "Frequency droop.w1" Junction276 as Connection1032
                    connect "Frequency droop.U_P" Junction277 as Connection1033
                    connect Junction277 U_P as Connection1034
                    connect Goto49 Junction277 as Connection1035
                    connect "Voltage droop.Q_ref1" Junction278 as Connection1036
                    connect Junction278 U_Q as Connection1037
                    connect Goto50 Junction278 as Connection1038
                }
                [
                    position = 6960, 7568
                    size = 296, 128
                ]

                component "core/Triple Pole Single Throw Contactor" S2 {
                    ctrl_src = "Model"
                }
                [
                    position = 9496, 8000
                    size = 64, 256
                ]

                component pas_inductor L0c1 {
                    inductance = "L_i"
                }
                [
                    position = 7888, 8096
                    rotation = down
                ]

                component pas_inductor L0a1 {
                    inductance = "L_i"
                }
                [
                    position = 7888, 7904
                    rotation = down
                ]

                component "core/Three Phase Two Winding Transformer" Tr1 {
                    L1 = "1e-6"
                    L2 = "1e-6"
                    Lm = "1e6"
                    Poc1 = "344.99999999952564"
                    Psc1 = "1762.5"
                    R1 = "1e-6"
                    R2 = "1e-6"
                    Rm = "1e6"
                    Sn = "5e6"
                    V1 = "277"
                    V2 = "480"
                    current_vals_SCOC = "[0.0024, 1.0]"
                    f = "60.0"
                    input = "SI"
                    ioc1 = "0.6999999999992988"
                    usc1 = "3.9999999999957394"
                }
                [
                    position = 10080, 8000
                    size = 126, 256
                ]

                component pas_resistor Rt0b1 {
                    resistance = "R_s"
                }
                [
                    position = 8240, 8256
                    rotation = left
                    scale = -1, 1
                ]

                component "core/Voltage Measurement" Va2 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7744, 8384
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_inductor La1 {
                    inductance = "L_o"
                }
                [
                    position = 9016, 7904
                    rotation = down
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7312, 7776
                    hide_name = True
                ]

                component gen_probe Ec_1 {
                }
                [
                    position = 8656, 8400
                ]

                component "core/Signal Controlled Voltage Source" Vbat {
                }
                [
                    position = 7152, 8000
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_resistor Rt0c1 {
                    resistance = "R_s"
                }
                [
                    position = 8320, 8256
                    rotation = left
                    scale = -1, 1
                ]

                component pas_resistor R0b1 {
                    resistance = "R_i"
                }
                [
                    position = 7776, 8000
                ]

                component gen_probe Eb_1 {
                }
                [
                    position = 8544, 8288
                ]

                component "core/Voltage Measurement" Vb2 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7872, 8432
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VaG {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9608, 8216
                    rotation = right
                    size = 64, 32
                ]

                component pas_resistor Rc1 {
                    resistance = "R_o"
                }
                [
                    position = 8920, 8096
                ]

                component "core/Voltage Measurement" VbG {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9736, 8288
                    rotation = right
                    size = 64, 32
                ]

                component pas_resistor R0c1 {
                    resistance = "R_i"
                }
                [
                    position = 7776, 8096
                ]

                component pas_inductor Lb1 {
                    inductance = "L_o"
                }
                [
                    position = 9016, 8000
                    rotation = down
                ]

                component pas_resistor R0a1 {
                    resistance = "R_i"
                }
                [
                    position = 7776, 7904
                ]

                component "core/Current Measurement" Ic1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9168, 8096
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Eb1 {
                    addr = "9"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8608, 8208
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Ea1 {
                    addr = "7"
                    execution_rate = "Ts"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8544, 8144
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" Xi_b1 {
                    addr = "15"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8032, 8000
                    scale = 1, -1
                    size = 64, 32
                ]

                component "core/Current Measurement" Ib1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9168, 8000
                    size = 64, 32
                ]

                component "core/Current Measurement" Xi_a1 {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7984, 7904
                    scale = 1, -1
                    size = 64, 32
                ]

                component pas_capacitor Ca1 {
                    capacitance = "C_s"
                }
                [
                    position = 8160, 8352
                    rotation = right
                ]

                component "core/Voltage Measurement" VcG {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9856, 8408
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Ec1 {
                    addr = "11"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8688, 8272
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" Xi_c1 {
                    addr = "16"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8096, 8096
                    scale = 1, -1
                    size = 64, 32
                ]

                component pas_inductor Lc1 {
                    inductance = "L_o"
                }
                [
                    position = 9016, 8096
                    rotation = down
                ]

                component pas_resistor Rb1 {
                    resistance = "R_o"
                }
                [
                    position = 8920, 8000
                ]

                component Subsystem "BE1-25A Synchronizer" {
                    layout = dynamic
                    component gen_trigonometric "Trigonometric function2" {
                        trigonometric_fn = "atan2"
                    }
                    [
                        position = 7456, 8088
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function1" {
                        mathematical_fn = "sqrt"
                    }
                    [
                        position = 8312, 8224
                        hide_name = True
                    ]

                    component gen_limiter Limit2 {
                        lower_limit = "1e-12"
                    }
                    [
                        position = 7384, 8104
                        hide_name = True
                    ]

                    component src_constant Constant9 {
                        execution_rate = "Ts"
                        value = "3e-3"
                    }
                    [
                        position = 8456, 8224
                        hide_name = True
                    ]

                    component gen_c_function "BE1-25A Synchronizer1" {
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "dV inherit"
                        in_terminal_labels = "[(\'dV\', True)]"
                        in_terminal_properties = "real dV;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "del_V inherit"
                        out_terminal_labels = "[(\'del_V\', True)]"
                        out_terminal_properties = "real del_V;"
                        output_fnc = "/*Begin code section*/
del_V =0.01*dV;
/*End code section*/"
                        parameters = "real Ts;real maxV_slip;real minV_slip;real maxV_pds;"
                    }
                    [
                        position = 8488, 8616
                        hide_name = True
                        size = 96, 96
                    ]

                    component gen_abs Abs2 {
                    }
                    [
                        position = 8456, 8192
                        hide_name = True
                    ]

                    component src_scada_input "Connect INV" {
                        def_value = "1"
                        execution_rate = "Tsync"
                        format = "int"
                        max = "1"
                        min = "0"
                        signal_type = "int"
                        unit = ""
                    }
                    [
                        position = 8680, 8184
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7440, 8600
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function1" {
                        trigonometric_fn = "atan2"
                    }
                    [
                        position = 7456, 8000
                        hide_name = True
                    ]

                    component gen_c_function "BE1-25A Synchronizer" {
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "df inherit;dAng inherit"
                        in_terminal_labels = "[(\'df\', True), (\'dAng\', True)]"
                        in_terminal_properties = "real df;real dAng;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "del_w inherit"
                        out_terminal_labels = "[(\'del_w\', True)]"
                        out_terminal_properties = "real del_w;"
                        output_fnc = "/*Begin code section*/
if (dAng>3.14159265359) dAng -= 2*3.14159265359;
if (dAng<-3.14159265359) dAng += 2*3.14159265359;
del_w = 0.01*dAng/Tsync+df;
if (del_w>0.1) del_w = 0.1;
else if (del_w<-0.1) del_w = -0.1;
/*End code section*/"
                        parameters = "real Ts;real maxw_pds;real maxw_slip;real minw_slip;real Tsync;"
                    }
                    [
                        position = 8184, 8392
                        hide_name = True
                        scale = 1, -1
                        size = 128, 112
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8160, 8192
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 8240, 8224
                        hide_name = True
                    ]

                    component gen_c_function "confine phase" {
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
if (in > 0)
{
    if (in > (6.283185307179586/2))
        out = in - 6.283185307179586;
    else
        out = in;
}
if (in < 0)
{
    if (in < (-6.283185307179586/2))
        out = in + 6.283185307179586;
    else
        out = in;
}
/*End code section*/"
                    }
                    [
                        position = 7824, 8048
                        size = 56, 48
                    ]

                    component gen_sum Sum5 {
                    }
                    [
                        position = 7344, 8352
                        hide_name = True
                    ]

                    component gen_probe frequency_diff3 {
                    }
                    [
                        position = 7920, 8128
                        scale = -1, 1
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 7264, 8384
                        hide_name = True
                    ]

                    component gen_digital_probe "Digital Probe3" {
                        override_signal_name = "True"
                        signal_name = "ang_sync3"
                    }
                    [
                        position = 8616, 8040
                        hide_name = True
                    ]

                    component src_constant Constant7 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 8088, 8112
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                        signs = "-+"
                    }
                    [
                        position = 7736, 8048
                        hide_name = True
                    ]

                    component gen_c_function "confine phase2" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 7640, 8088
                        hide_name = True
                        size = 56, 48
                    ]

                    component gen_product Product3 {
                    }
                    [
                        position = 7264, 8320
                        hide_name = True
                    ]

                    component tm_delay "Unit Delay2" {
                    }
                    [
                        position = 7608, 8624
                        rotation = right
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "-+"
                    }
                    [
                        position = 7824, 8200
                        hide_name = True
                    ]

                    component gen_rel_op "Relational operator1" {
                        relational_op = ">"
                    }
                    [
                        position = 8160, 8040
                        hide_name = True
                    ]

                    component gen_rel_op "Relational operator4" {
                        relational_op = "<"
                    }
                    [
                        position = 8520, 8208
                        hide_name = True
                    ]

                    component gen_abs Abs4 {
                    }
                    [
                        position = 8056, 8072
                        hide_name = True
                    ]

                    component gen_probe volt_diff3 {
                    }
                    [
                        position = 8448, 8512
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "1e-2"
                    }
                    [
                        position = 8056, 8032
                        hide_name = True
                    ]

                    component gen_digital_probe "Digital Probe1" {
                        override_signal_name = "True"
                        signal_name = "gridconnect2"
                    }
                    [
                        position = 9072, 8184
                        hide_name = True
                    ]

                    component gen_logic_op "Logical operator2" {
                        inputs = "4"
                        operator = "NOT"
                    }
                    [
                        position = 9008, 8224
                        rotation = right
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8160, 8256
                        hide_name = True
                    ]

                    component gen_gain Gain6 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7376, 8576
                        hide_name = True
                    ]

                    component gen_digital_probe "Digital Probe4" {
                        override_signal_name = "True"
                        signal_name = "freq_sync3"
                    }
                    [
                        position = 8616, 8008
                        hide_name = True
                    ]

                    component gen_digital_probe "Digital Probe5" {
                        override_signal_name = "True"
                        signal_name = "volt_sync3"
                    }
                    [
                        position = 8616, 8072
                        hide_name = True
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "3"
                    }
                    [
                        position = 8616, 8120
                        hide_name = True
                    ]

                    component gen_abs Abs5 {
                    }
                    [
                        position = 8056, 8128
                        hide_name = True
                    ]

                    component gen_probe angle_diff3 {
                    }
                    [
                        position = 8056, 7952
                    ]

                    component gen_sum Sum3 {
                        signs = "-+"
                    }
                    [
                        position = 8392, 8192
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain5 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7336, 8552
                        hide_name = True
                    ]

                    component gen_rel_op "Relational operator2" {
                        relational_op = ">"
                    }
                    [
                        position = 8160, 8120
                        hide_name = True
                    ]

                    component gen_c_function "confine phase1" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 7640, 8000
                        hide_name = True
                        size = 56, 48
                    ]

                    component Subsystem PLL {
                        layout = dynamic
                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            int_init_value = "2*np.pi*60"
                            ki = "2"
                            lower_sat_lim = "2*np.pi*59.5"
                            upper_sat_lim = "2*np.pi*60.5"
                        }
                        [
                            position = 8192, 8152
                            hide_name = True
                        ]

                        component gen_c_function "C function1" {
                            global_variables = "real var;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                            parameters = "real Ts;"
                            update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                        }
                        [
                            position = 8304, 8152
                            hide_name = True
                            size = 80, 48
                        ]

                        component gen_c_function "confine phase" {
                            global_variables = "real x;real floor_in;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        }
                        [
                            position = 8408, 8152
                            size = 56, 48
                        ]

                        port wt {
                            label = "wt"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8496, 8152
                        ]

                        port w {
                            label = "w"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8208
                        ]

                        port q {
                            label = "q"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8064, 8152
                        ]

                        junction Junction1 sp
                        [
                            position = 8240, 8152
                        ]

                        connect w Junction1 as Connection19
                        connect "C function1.in" Junction1 as Connection17
                        connect wt "confine phase.out" as Connection14
                        connect "confine phase.in" "C function1.out" as Connection16
                        connect Junction1 "PID controller1.out" as Connection18
                        connect q "PID controller1.in" as Connection20
                    }
                    [
                        position = 7544, 8576
                        scale = 1, -1
                        size = 96, 56
                    ]

                    component gen_limiter Limit1 {
                        lower_limit = "1e-12"
                    }
                    [
                        position = 7384, 8016
                        hide_name = True
                    ]

                    component gen_digital_probe "Digital Probe6" {
                        override_signal_name = "True"
                        signal_name = "griddisconnect2"
                    }
                    [
                        position = 9072, 8256
                        hide_name = True
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7264, 8576
                        size = 48, 80
                    ]

                    component gen_math_fnc "Mathematical function2" {
                        mathematical_fn = "sqrt"
                    }
                    [
                        position = 7416, 8352
                        hide_name = True
                    ]

                    component gen_probe Vd_G {
                    }
                    [
                        position = 7328, 8480
                        scale = -1, 1
                    ]

                    component gen_probe Vq_G {
                    }
                    [
                        position = 7432, 8472
                        scale = -1, 1
                    ]

                    component gen_probe del_w {
                    }
                    [
                        position = 8744, 8376
                    ]

                    component gen_probe del_V {
                    }
                    [
                        position = 9048, 8584
                    ]

                    component gen_c_function "stay connected1" {
                        global_variables = "real connect;"
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "ready inherit;connectINV inherit"
                        in_terminal_labels = "[(\'ready\', True), (\'connectINV\', True)]"
                        in_terminal_properties = "inherit ready;inherit connectINV;"
                        init_fnc = "/*Begin code section*/
connect = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        out_terminal_properties = "int out;"
                        output_fnc = "/*Begin code section*/
out = connect;
/*End code section*/"
                        parameters = "real Ts;"
                        update_fnc = "/*Begin code section*/
if ((ready==1)&&(connectINV==1)){
    connect = 1;
}
else if(connectINV==0){
    connect = 0;
}
/*End code section*/"
                    }
                    [
                        position = 8848, 8152
                        hide_name = True
                        size = 160, 104
                    ]

                    component gen_probe "|V|" {
                    }
                    [
                        position = 7512, 8304
                    ]

                    component gen_probe w_G {
                    }
                    [
                        position = 7824, 8160
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_probe w_bus {
                    }
                    [
                        position = 7824, 8240
                    ]

                    component gen_sum Sum6 {
                        signs = "+-"
                    }
                    [
                        position = 7752, 8336
                        hide_name = True
                    ]

                    component gen_sum Sum7 {
                        signs = "+-"
                    }
                    [
                        position = 7752, 8408
                        hide_name = True
                    ]

                    component gen_sum Sum8 {
                        signs = "+-"
                    }
                    [
                        position = 7752, 8480
                        hide_name = True
                    ]

                    component gen_probe Ea-Va {
                    }
                    [
                        position = 7848, 8336
                    ]

                    component gen_probe Eb-Vb {
                    }
                    [
                        position = 7848, 8408
                    ]

                    component gen_probe Ec-Vc {
                    }
                    [
                        position = 7848, 8480
                    ]

                    component "core/abc to dq" "abc to dq2" {
                    }
                    [
                        position = 7984, 8592
                        size = 48, 80
                    ]

                    component gen_probe Ed-Vd {
                    }
                    [
                        position = 8072, 8552
                    ]

                    component gen_probe Eq-Vq {
                    }
                    [
                        position = 8120, 8592
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8072, 8632
                        hide_name = True
                    ]

                    component gen_probe E_d {
                    }
                    [
                        position = 7616, 8704
                    ]

                    component gen_probe E_q {
                    }
                    [
                        position = 7616, 8856
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_gain Gain7 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7336, 8736
                        hide_name = True
                    ]

                    component Subsystem Current_abc_to_dq3 {
                        layout = dynamic
                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 7856, 8008
                            size = 48, 80
                        ]

                        component gen_terminator Termination {
                        }
                        [
                            position = 7952, 8064
                        ]

                        port wt {
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8088
                        ]

                        port Ec {
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8040
                        ]

                        port Eq {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 8016
                        ]

                        port Ea {
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 7960
                        ]

                        port Ed {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 7976
                        ]

                        port Eb {
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8000
                        ]

                        connect Termination.in "abc to dq1.zero_axis" as Connection4
                        connect "abc to dq1.q_axis" Eq as Connection6
                        connect Ec "abc to dq1.vc" as Connection3
                        connect Ea "abc to dq1.va" as Connection1
                        connect Eb "abc to dq1.vb" as Connection2
                        connect "abc to dq1.d_axis" Ed as Connection5
                        connect wt "abc to dq1.wt" as Connection7
                    }
                    [
                        position = 7256, 8784
                        hide_name = True
                        scale = -1, 1
                        size = 64, 144
                    ]

                    component gen_gain Gain12 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7336, 8832
                        hide_name = True
                    ]

                    component gen_c_function "Hold after connect2" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit;inherit;inherit"
                        in_terminal_dimensions_str = "in inherit;connect inherit;INV_sync inherit"
                        in_terminal_labels = "[(\'in\', True), (\'connect\', True), (\'INV_sync\', True)]"
                        in_terminal_properties = "real in;int connect;inherit INV_sync;"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
if ((connect==0)&&(INV_sync==1))
    var = in;
else if (connect==1)
    var =0;
/*End code section*/"
                    }
                    [
                        position = 8488, 8432
                        hide_name = True
                        size = 96, 96
                    ]

                    component gen_c_function "Hold after connect3" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit;inherit;inherit"
                        in_terminal_dimensions_str = "in inherit;connect inherit;INV_sync inherit"
                        in_terminal_labels = "[(\'in\', True), (\'connect\', True), (\'INV_sync\', True)]"
                        in_terminal_properties = "real in;int connect;inherit INV_sync;"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
if ((connect==0)&&(INV_sync==1))
    var = in;
else if (connect==1)
    var =0;
/*End code section*/"
                    }
                    [
                        position = 8784, 8648
                        hide_name = True
                        size = 96, 96
                    ]

                    component gen_probe "|E|" {
                    }
                    [
                        position = 8392, 8248
                    ]

                    component gen_probe Connect {
                    }
                    [
                        position = 9072, 8024
                    ]

                    component "core/Rate Transition" "Rate Transition2" {
                        execution_rate = "Tsync"
                    }
                    [
                        position = 8056, 8360
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition4" {
                        execution_rate = "Tsync"
                    }
                    [
                        position = 8056, 8424
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition6" {
                        execution_rate = "Tsync"
                    }
                    [
                        position = 8320, 8616
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition12" {
                        execution_rate = "Tsync"
                        init_value = "0"
                    }
                    [
                        position = 8704, 8120
                        hide_name = True
                        size = 32, 32
                    ]

                    tag From39 {
                        value = "E_q"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8072, 8264
                        hide_name = True
                    ]

                    tag From43 {
                        value = "Vd_G"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7176, 8312
                        hide_name = True
                    ]

                    tag w_bus1 {
                        value = "w_bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7656, 8568
                        hide_name = True
                    ]

                    tag Vb_G1 {
                        value = "VbG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7176, 8560
                        hide_name = True
                    ]

                    tag "|V|1" {
                        value = "|V| bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7512, 8352
                        hide_name = True
                    ]

                    tag theta_bus {
                        value = "theta_bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7656, 8656
                        hide_name = True
                    ]

                    tag theta_bus5 {
                        value = "dV"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8240, 8616
                        hide_name = True
                    ]

                    tag Goto2 {
                        value = "del_w"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8744, 8432
                        hide_name = True
                    ]

                    tag From42 {
                        value = "Vq_G"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7176, 8392
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "Vq_G"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7544, 8536
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto31 {
                        value = "del_V"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9040, 8648
                        hide_name = True
                    ]

                    tag Connect2 {
                        value = "Connect"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8296, 8432
                        hide_name = True
                        size = 42, 20
                    ]

                    tag From44 {
                        value = "Vd_G"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 8104
                        hide_name = True
                    ]

                    tag From45 {
                        value = "Vq_G"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 8072
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "dV"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8504, 8160
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "Vd_G"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 8552
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Vc_G1 {
                        value = "VcG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7176, 8584
                        hide_name = True
                    ]

                    tag From41 {
                        value = "E_d"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 8016
                        hide_name = True
                    ]

                    tag Va_G1 {
                        value = "VaG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7176, 8536
                        hide_name = True
                    ]

                    tag From36 {
                        value = "E_d"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8072, 8184
                        hide_name = True
                    ]

                    tag theta_bus2 {
                        value = "w_bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7640, 8224
                        hide_name = True
                    ]

                    tag Connect1 {
                        value = "Connect"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9072, 8152
                        hide_name = True
                    ]

                    tag From1 {
                        value = "|V| bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8240, 8152
                        hide_name = True
                    ]

                    tag From40 {
                        value = "E_q"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 7984
                        hide_name = True
                    ]

                    tag w_e7 {
                        value = "w_e"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7640, 8176
                        hide_name = True
                    ]

                    tag From46 {
                        value = "Ec1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8464
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From37 {
                        value = "Ea1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8320
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From38 {
                        value = "Eb1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8392
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Vb_G2 {
                        value = "VbG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8424
                        hide_name = True
                    ]

                    tag Vc_G2 {
                        value = "VcG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8496
                        hide_name = True
                    ]

                    tag Va_G2 {
                        value = "VaG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8352
                        hide_name = True
                    ]

                    tag Goto28 {
                        value = "E_q"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 8832
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto29 {
                        value = "E_d"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 8736
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From34 {
                        value = "Ec1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7160, 8800
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From33 {
                        value = "Ea1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7160, 8736
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From35 {
                        value = "Eb1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7160, 8768
                        hide_name = True
                        size = 60, 20
                    ]

                    tag theta_bus1 {
                        value = "theta_bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7160, 8832
                        hide_name = True
                    ]

                    tag Connect4 {
                        value = "INV_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8296, 8472
                        hide_name = True
                        size = 42, 20
                    ]

                    tag Connect5 {
                        value = "Connect"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8600, 8656
                        hide_name = True
                        size = 42, 20
                    ]

                    tag Connect6 {
                        value = "INV_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8600, 8704
                        hide_name = True
                        size = 42, 20
                    ]

                    junction Junction41 sp
                    [
                        position = 7480, 8576
                    ]

                    junction Junction38 sp
                    [
                        position = 8304, 8120
                    ]

                    junction Junction26 sp
                    [
                        position = 8112, 8184
                    ]

                    junction Junction42 sp
                    [
                        position = 7216, 8392
                    ]

                    junction Junction43 sp
                    [
                        position = 7216, 8312
                    ]

                    junction Junction28 sp
                    [
                        position = 8112, 8264
                    ]

                    junction Junction45 sp
                    [
                        position = 7608, 8656
                    ]

                    junction Junction49 sp
                    [
                        position = 7872, 8048
                    ]

                    junction Junction35 sp
                    [
                        position = 8424, 8192
                    ]

                    junction Junction57 sp
                    [
                        position = 7480, 8536
                    ]

                    junction Junction58 sp
                    [
                        position = 7368, 8552
                    ]

                    junction Junction63 sp
                    [
                        position = 9008, 8152
                    ]

                    junction Junction66 sp
                    [
                        position = 8552, 8136
                    ]

                    junction Junction67 sp
                    [
                        position = 8576, 8040
                    ]

                    junction Junction69 sp
                    [
                        position = 7456, 8352
                    ]

                    junction Junction72 sp
                    [
                        position = 7968, 8200
                    ]

                    junction Junction73 sp
                    [
                        position = 7968, 8128
                    ]

                    junction Junction74 sp
                    [
                        position = 7800, 8336
                    ]

                    junction Junction75 sp
                    [
                        position = 7800, 8480
                    ]

                    junction Junction76 sp
                    [
                        position = 7800, 8408
                    ]

                    junction Junction77 sp
                    [
                        position = 7608, 8656
                    ]

                    junction Junction78 sp
                    [
                        position = 9008, 8184
                    ]

                    junction Junction61 sp
                    [
                        position = 7376, 8736
                    ]

                    junction Junction80 sp
                    [
                        position = 7376, 8832
                    ]

                    junction Junction81 sp
                    [
                        position = 8352, 8224
                    ]

                    junction Junction83 sp
                    [
                        position = 8376, 8616
                    ]

                    junction Junction84 sp
                    [
                        position = 7992, 8048
                    ]

                    junction Junction85 sp
                    [
                        position = 9000, 8152
                    ]

                    junction Junction86 sp
                    [
                        position = 8680, 8432
                    ]

                    junction Junction87 sp
                    [
                        position = 8952, 8648
                    ]

                    junction Junction88 sp
                    [
                        position = 7784, 8176
                    ]

                    junction Junction89 sp
                    [
                        position = 7784, 8224
                    ]

                    connect "Digital Probe4.in" Junction38 as Connection366
                    connect "confine phase2.out" Sum1.in1 as Connection399
                    connect From39 Junction28 as Connection259
                    connect "abc to dq1.q_axis" Gain6.in as Connection319
                    connect From41 Limit1.in as Connection285
                    connect Sum3.in1 From1 as Connection81
                    connect Vc_G1 "abc to dq1.vc" as Connection222
                    connect angle_diff3.in Junction49 as Connection430
                    connect Product2.out Sum4.in1 as Connection251
                    connect Abs2.out "Relational operator4.in" as Connection84
                    connect Goto30 Junction35 as Connection308
                    connect Va_G1 "abc to dq1.va" as Connection224
                    connect theta_bus Junction45 as Connection404
                    connect Termination1.in "abc to dq1.zero_axis" as Connection29
                    connect From45 "Trigonometric function2.in" as Connection401
                    connect Sum4.out "Mathematical function1.in" as Connection252
                    connect Product2.in Junction28 as Connection261
                    connect Junction28 Product2.in1 as Connection260
                    connect Constant7.out "Relational operator2.in" as Connection70
                    connect Abs2.in Junction35 as Connection306
                    connect From44 Limit2.in as Connection402
                    connect "Digital Probe6.in" "Logical operator2.out" as Connection454
                    connect Junction26 From36 as Connection248
                    connect Product1.in Junction26 as Connection247
                    connect Limit2.out "Trigonometric function2.in1" as Connection398
                    connect Product3.out Sum5.in as Connection390
                    connect Junction38 "Relational operator2.out" as Connection365
                    [
                        breakpoints = 8288, 8120; 8288, 8120
                    ]
                    connect Product3.in Junction43 as Connection386
                    connect Limit1.out "Trigonometric function1.in1" as Connection286
                    connect From40 "Trigonometric function1.in" as Connection284
                    connect Vb_G1 "abc to dq1.vb" as Connection223
                    connect "Relational operator2.in1" Abs5.out as Connection357
                    connect From42 Junction42 as Connection384
                    connect Junction43 From43 as Connection389
                    connect Sum5.out "Mathematical function2.in" as Connection387
                    connect Product3.in1 Junction43 as Connection391
                    connect Gain6.out Junction41 as Connection381
                    connect Junction35 Sum3.out as Connection307
                    connect "confine phase.in" Sum1.out as Connection146
                    connect Product4.out Sum5.in1 as Connection388
                    connect "confine phase1.out" Sum1.in as Connection400
                    connect Constant9.out "Relational operator4.in1" as Connection85
                    connect PLL.w w_bus1 as Connection233
                    connect Product4.in Junction42 as Connection385
                    connect "confine phase.out" Junction49 as Connection428
                    connect Junction45 "abc to dq1.wt" as Connection405
                    connect Product1.in1 Junction26 as Connection249
                    connect Junction41 PLL.q as Connection382
                    connect Constant6.out "Relational operator1.in" as Connection69
                    connect Product1.out Sum4.in as Connection250
                    connect Junction42 Product4.in1 as Connection392
                    connect "Logical operator1.in1" Junction38 as Connection364
                    [
                        breakpoints = 8576, 8120
                    ]
                    connect Gain5.in "abc to dq1.d_axis" as Connection318
                    connect Goto32 Junction57 as Connection468
                    connect Junction57 Junction41 as Connection469
                    connect Vq_G.in Junction57 as Connection470
                    connect Goto33 Junction58 as Connection471
                    connect Junction58 Gain5.out as Connection472
                    connect Vd_G.in Junction58 as Connection473
                    connect PLL.wt "Unit Delay2.in" as Connection474
                    connect "Connect INV.out" "stay connected1.connectINV" as Connection504
                    connect Connect1 Junction63 as Connection508
                    connect "Logical operator1.in2" Junction66 as Connection530
                    connect Junction66 "Relational operator4.out" as Connection531
                    connect "Digital Probe5.in" Junction66 as Connection532
                    connect "Relational operator1.out" Junction67 as Connection534
                    connect Junction67 "Logical operator1.in" as Connection535
                    connect "Digital Probe3.in" Junction67 as Connection536
                    connect "Trigonometric function2.out" "confine phase2.in" as Connection542
                    connect "Trigonometric function1.out" "confine phase1.in" as Connection543
                    connect "Mathematical function2.out" Junction69 as Connection544
                    connect Junction69 "|V|1" as Connection545
                    [
                        breakpoints = 7456, 8352
                    ]
                    connect "|V|.in" Junction69 as Connection546
                    connect Sum2.out Junction72 as Connection554
                    connect Abs5.in Junction73 as Connection557
                    connect Junction73 Junction72 as Connection558
                    connect frequency_diff3.in Junction73 as Connection559
                    connect Vc_G2 Sum8.in1 as Connection560
                    connect From46 Sum8.in as Connection561
                    connect Vb_G2 Sum7.in1 as Connection562
                    connect From38 Sum7.in as Connection563
                    connect Va_G2 Sum6.in1 as Connection564
                    connect From37 Sum6.in as Connection565
                    connect Ea-Va.in Junction74 as Connection569
                    connect Junction74 Sum6.out as Connection570
                    connect "abc to dq2.va" Junction74 as Connection571
                    [
                        breakpoints = 7944, 8536; 7944, 8296; 7800, 8296
                    ]
                    connect Ec-Vc.in Junction75 as Connection580
                    connect Junction75 Sum8.out as Connection581
                    connect "abc to dq2.vc" Junction75 as Connection582
                    connect Eb-Vb.in Junction76 as Connection599
                    connect Junction76 Sum7.out as Connection600
                    [
                        breakpoints = 7800, 8408; 7800, 8408; 7800, 8408; 7800, 8408; 7800, 8408
                    ]
                    connect "abc to dq2.vb" Junction76 as Connection601
                    [
                        breakpoints = 7944, 8584; 7904, 8584; 7904, 8384; 7880, 8384; 7880, 8384; 7800, 8384
                    ]
                    connect "Unit Delay2.out" Junction77 as Connection602
                    connect Junction77 Junction45 as Connection603
                    connect "abc to dq2.wt" Junction77 as Connection604
                    [
                        breakpoints = 7944, 8680; 7608, 8680; 7608, 8656
                    ]
                    connect Ed-Vd.in "abc to dq2.d_axis" as Connection605
                    connect Eq-Vq.in "abc to dq2.q_axis" as Connection606
                    connect Termination2.in "abc to dq2.zero_axis" as Connection607
                    connect Junction63 Junction78 as Connection609
                    [
                        breakpoints = 9008, 8152
                    ]
                    connect Junction78 "Logical operator2.in" as Connection610
                    [
                        breakpoints = 9008, 8184
                    ]
                    connect "Digital Probe1.in" Junction78 as Connection611
                    connect From34 Current_abc_to_dq3.Ec as Connection421
                    connect From33 Current_abc_to_dq3.Ea as Connection278
                    connect From35 Current_abc_to_dq3.Eb as Connection422
                    connect Gain7.in Current_abc_to_dq3.Ed as Connection438
                    [
                        breakpoints = 7304, 8736
                    ]
                    connect Current_abc_to_dq3.Eq Gain12.in as Connection439
                    [
                        breakpoints = 7304, 8832
                    ]
                    connect Goto29 Junction61 as Connection444
                    connect Junction61 Gain7.out as Connection445
                    connect Current_abc_to_dq3.wt theta_bus1 as Connection616
                    connect E_d.in Junction61 as Connection618
                    [
                        breakpoints = 7472, 8760; 7376, 8760; 7376, 8736
                    ]
                    connect Goto28 Junction80 as Connection620
                    connect Junction80 Gain12.out as Connection621
                    connect E_q.in Junction80 as Connection622
                    [
                        breakpoints = 7584, 8808; 7376, 8808
                    ]
                    connect "Mathematical function1.out" Junction81 as Connection633
                    connect Junction81 Sum3.in as Connection634
                    connect "|E|.in" Junction81 as Connection635
                    connect Junction72 "Rate Transition4.in" as Connection641
                    connect "Rate Transition4.out" "BE1-25A Synchronizer.df" as Connection642
                    connect "BE1-25A Synchronizer.del_w" "Hold after connect2.in" as Connection649
                    connect theta_bus5 "Rate Transition6.in" as Connection650
                    connect "BE1-25A Synchronizer1.dV" Junction83 as Connection659
                    connect Junction83 volt_diff3.in as Connection660
                    [
                        breakpoints = 8376, 8616; 8376, 8616; 8376, 8512
                    ]
                    connect "Rate Transition6.out" Junction83 as Connection661
                    connect "Logical operator1.out" "Rate Transition12.in" as Connection662
                    connect "Rate Transition12.out" "stay connected1.ready" as Connection663
                    connect "Rate Transition2.out" "BE1-25A Synchronizer.dAng" as Connection664
                    connect "BE1-25A Synchronizer1.del_V" "Hold after connect3.in" as Connection671
                    connect Abs4.out "Relational operator1.in1" as Connection672
                    connect Junction49 Junction84 as Connection673
                    connect Junction84 Abs4.in as Connection674
                    connect "Rate Transition2.in" Junction84 as Connection675
                    connect Connect4 "Hold after connect2.INV_sync" as Connection676
                    connect Connect6 "Hold after connect3.INV_sync" as Connection677
                    connect Junction63 Junction85 as Connection683
                    connect Junction85 Connect.in as Connection684
                    [
                        breakpoints = 9008, 8152; 9000, 8152; 9008, 8152; 9016, 8152
                    ]
                    connect "stay connected1.out" Junction85 as Connection685
                    connect "Hold after connect2.out" Junction86 as Connection691
                    connect Junction86 del_w.in as Connection692
                    [
                        breakpoints = 8680, 8432; 8680, 8432
                    ]
                    connect Goto2 Junction86 as Connection693
                    connect Connect2 "Hold after connect2.connect" as Connection694
                    connect Connect5 "Hold after connect3.connect" as Connection695
                    connect "Hold after connect3.out" Junction87 as Connection701
                    connect Junction87 Goto31 as Connection702
                    [
                        breakpoints = 8992, 8648
                    ]
                    connect del_V.in Junction87 as Connection703
                    connect w_G.in Junction88 as Connection706
                    connect Junction88 Sum2.in as Connection707
                    [
                        breakpoints = 7784, 8176
                    ]
                    connect w_e7 Junction88 as Connection708
                    connect w_bus.in Junction89 as Connection709
                    connect Junction89 Sum2.in1 as Connection710
                    [
                        breakpoints = 7784, 8224
                    ]
                    connect theta_bus2 Junction89 as Connection711
                }
                [
                    position = 7600, 7552
                    size = 112, 144
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "NOT"
                }
                [
                    position = 7864, 7592
                    rotation = right
                    hide_name = True
                ]

                component gen_digital_probe "INV_sync OFF" {
                }
                [
                    position = 7936, 7624
                ]

                component gen_digital_probe "INV_sync ON" {
                }
                [
                    position = 7936, 7520
                    rotation = down
                    scale = -1, 1
                ]

                component src_scada_input INV_sync {
                    execution_rate = "Tsync"
                    format = "int"
                    max = "1"
                    min = "0"
                    signal_type = "int"
                    unit = ""
                }
                [
                    position = 7808, 7552
                ]

                component gen_bus_join "Bus Join4" {
                }
                [
                    position = 6624, 7208
                    hide_name = True
                ]

                component gen_bus_join "Bus Join5" {
                }
                [
                    position = 6624, 7368
                    hide_name = True
                ]

                component gen_probe Pref_probe {
                }
                [
                    position = 6824, 7312
                ]

                component gen_probe Qref_probe {
                }
                [
                    position = 6872, 7136
                ]

                component gen_gain Gain17 {
                    gain = "1/S/1.5"
                }
                [
                    position = 6912, 7208
                    hide_name = True
                ]

                component gen_gain Gain18 {
                    gain = "1/S/1.5"
                }
                [
                    position = 6832, 7408
                    rotation = right
                    hide_name = True
                ]

                component gen_gain Gain19 {
                    gain = "1.5*S"
                }
                [
                    position = 6536, 7216
                    hide_name = True
                ]

                component gen_gain Gain20 {
                    gain = "1.5*S"
                }
                [
                    position = 6528, 7376
                    hide_name = True
                ]

                component gen_c_function "C function6" {
                    global_variables = "real prev;"
                    in_terminal_dimensions = "2"
                    in_terminal_dimensions_str = "in 2"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
prev = 50;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "1"
                    out_terminal_dimensions_str = "out 1"
                    out_terminal_labels = "[(\'out\', False)]"
                    output_fnc = "/*Begin code section*/
out = 1000*prev;
/*
if (out>in[1]+1000){
    out = in[1]+1000;
}
if (out<in[1]-1000){
    out = in[1]-1000;
}
*/
/*End code section*/"
                    update_fnc = "/*Begin code section*/
prev = prev + 3e-6*(in[0]-prev);
/*
if (out-in[1]<40 && out-in[1]>-40){ 
    prev = prev + 1e-2*(in[0]-prev);
}
*/
/*End code section*/"
                }
                [
                    position = 6720, 7368
                    hide_name = True
                    size = 48, 48
                ]

                component gen_c_function "C function7" {
                    global_variables = "real prev;"
                    in_terminal_dimensions = "2"
                    in_terminal_dimensions_str = "in 2"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
prev = 50;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "1"
                    out_terminal_dimensions_str = "out 1"
                    out_terminal_labels = "[(\'out\', False)]"
                    output_fnc = "/*Begin code section*/
out = 1000*prev;
/*
if (out>in[1]+1000){
    out = in[1]+1000;
}
if (out<in[1]-1000){
    out = in[1]-1000;
}
*/
/*End code section*/"
                    update_fnc = "/*Begin code section*/
prev = prev + 3e-6*(in[0]-prev);
/*
if (out-in[1]<40 && out-in[1]>-40){ 
    prev = prev + 1e-2*(in[0]-prev);
}
*/
/*End code section*/"
                }
                [
                    position = 6720, 7208
                    hide_name = True
                    size = 48, 48
                ]

                component src_scada_input CONNECT {
                    execution_rate = "Ts"
                    format = "int"
                    max = "1"
                    min = "0"
                    signal_type = "int"
                    unit = ""
                }
                [
                    position = 9288, 7736
                ]

                component gen_logic_op "Logical operator2" {
                    operator = "OR"
                }
                [
                    position = 9416, 7776
                    hide_name = True
                ]

                component "core/Voltage RMS" Vrms {
                    frequency = "sys_f"
                }
                [
                    position = 9696, 7952
                    rotation = right
                    size = 64, 32
                ]

                component gen_logic_op "Logical operator3" {
                    operator = "NOT"
                }
                [
                    position = 6768, 8336
                    hide_name = True
                ]

                component "core/Rate Transition" "Rate Transition6" {
                    execution_rate = "Ts"
                }
                [
                    position = 9336, 7808
                    hide_name = True
                    size = 32, 32
                ]

                component gen_probe Eam {
                }
                [
                    position = 6920, 8112
                    scale = -1, 1
                ]

                component "core/Voltage Measurement" Ea {
                    addr = "7"
                    execution_rate = "Ts"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 7024, 8112
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Three Phase Inverter" "Three Phase Inverter" {
                    ctrl_src = "Internal modulator"
                }
                [
                    position = 7448, 8000
                    size = 127, 256
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                }
                [
                    position = 7312, 7832
                    hide_name = True
                ]

                component gen_c_function "C function8" {
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "Vbat inherit;Ibat inherit"
                    in_terminal_labels = "[(\'Vbat\', True), (\'Ibat\', True)]"
                    in_terminal_properties = "real Vbat;inherit Ibat;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "Vdc inherit"
                    out_terminal_labels = "[(\'Vdc\', True)]"
                    out_terminal_properties = "real Vdc;"
                    output_fnc = "/*Begin code section*/
Vdc = 900;
/*End code section*/"
                }
                [
                    position = 6752, 8000
                    hide_name = True
                    size = 72, 72
                ]

                component "core/Current Measurement" Ibat {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7264, 7904
                    scale = 1, -1
                    size = 64, 32
                ]

                component "core/Four Phase Core Coupling" "Core Coupling" {
                }
                [
                    position = 9344, 8048
                    size = 12, 352
                ]

                component gen_PQ_transform "Power Meter" {
                }
                [
                    position = 9048, 8288
                ]

                component gen_probe P {
                }
                [
                    position = 9152, 8216
                ]

                component gen_probe Q {
                }
                [
                    position = 9152, 8272
                ]

                port Vc {
                    label = "Vc"
                    position = top:3
                    kind = pe
                }
                [
                    position = 10224, 8096
                    scale = -1, 1
                ]

                port Vb {
                    label = "Vb"
                    position = top:2
                    kind = pe
                }
                [
                    position = 10224, 8000
                    scale = -1, 1
                ]

                port Ground {
                    label = "Ground"
                    position = bottom:4
                    kind = pe
                }
                [
                    position = 10240, 8688
                    scale = -1, 1
                ]

                port Va {
                    label = "Va"
                    position = top:1
                    kind = pe
                }
                [
                    position = 10224, 7904
                    scale = -1, 1
                ]

                port setpoint_P {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6464, 7320
                ]

                port setpoint_Q {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6472, 7152
                ]

                port PCC_status {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6688, 8336
                ]

                tag Goto39 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9112, 7968
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto18 {
                    value = "VDC"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6928, 7936
                    size = 60, 20
                ]

                tag Connect2 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 9272, 7808
                    hide_name = True
                ]

                tag Goto31 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9112, 8064
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto35 {
                    value = "Xi_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 8160
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Vb_G {
                    value = "VbG"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9808, 8288
                ]

                tag Goto41 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8400, 8144
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto44 {
                    value = "Xi_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 8208
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto30 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8496, 8352
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Vc_G {
                    value = "VcG"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9928, 8408
                ]

                tag From2 {
                    value = "modulator"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7200, 7776
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto38 {
                    value = "Xi_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 8256
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto33 {
                    value = "E_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7920, 8480
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Va_G {
                    value = "VaG"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9688, 8216
                ]

                tag Goto32 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9112, 7872
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto40 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8464, 8256
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto42 {
                    value = "E_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7792, 8432
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto34 {
                    value = "E_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7648, 8384
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Connect6 {
                    value = "INV_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7936, 7552
                    hide_name = True
                ]

                tag From54 {
                    value = "P1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 6464, 7376
                    size = 60, 20
                ]

                tag From55 {
                    value = "Q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 6472, 7216
                    size = 60, 20
                ]

                tag Goto45 {
                    value = "Island"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6880, 8336
                    size = 60, 20
                ]

                tag Goto46 {
                    value = "Ibat"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7200, 7968
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto47 {
                    value = "Vbat"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6864, 8216
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From56 {
                    value = "Vbat"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 6640, 7984
                    hide_name = True
                    size = 37, 20
                ]

                tag From57 {
                    value = "Ibat"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 6632, 8016
                    hide_name = True
                    size = 37, 20
                ]

                tag From58 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8912, 8224
                    hide_name = True
                    size = 37, 20
                ]

                tag From59 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8888, 8248
                    hide_name = True
                    size = 37, 20
                ]

                tag From60 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8864, 8272
                    hide_name = True
                    size = 37, 20
                ]

                tag From61 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8864, 8296
                    hide_name = True
                    size = 37, 20
                ]

                tag From62 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8864, 8320
                    hide_name = True
                    size = 37, 20
                ]

                tag From63 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8864, 8344
                    hide_name = True
                    size = 37, 20
                ]

                junction Junction173 pe
                [
                    position = 8320, 8096
                ]

                junction Junction160 pe
                [
                    position = 8240, 8000
                ]

                junction Junction207 pe
                [
                    position = 8240, 8688
                ]

                junction Junction192 pe
                [
                    position = 8240, 8688
                ]

                junction Junction198 pe
                [
                    position = 8240, 8688
                ]

                junction Junction216 pe
                [
                    position = 8320, 8312
                ]

                junction Junction302 pe
                [
                    position = 9856, 8688
                ]

                junction Junction284 sp
                [
                    position = 8624, 8352
                ]

                junction Junction195 pe
                [
                    position = 8240, 8688
                ]

                junction Junction215 pe
                [
                    position = 8240, 8688
                ]

                junction Junction161 pe
                [
                    position = 8160, 7904
                ]

                junction Junction292 pe
                [
                    position = 8240, 8688
                ]

                junction Junction306 pe
                [
                    position = 9608, 7904
                ]

                junction Junction307 pe
                [
                    position = 9736, 8000
                ]

                junction Junction283 sp
                [
                    position = 8512, 8256
                ]

                junction Junction308 pe
                [
                    position = 9856, 8096
                ]

                junction Junction212 pe
                [
                    position = 8240, 8688
                ]

                junction Junction310 pe
                [
                    position = 10112, 8688
                ]

                junction Junction309 pe
                [
                    position = 10048, 8688
                ]

                junction Junction194 pe
                [
                    position = 8240, 8688
                ]

                junction Junction213 pe
                [
                    position = 8240, 8304
                ]

                junction Junction199 pe
                [
                    position = 8240, 8688
                ]

                junction Junction289 pe
                [
                    position = 7744, 8688
                ]

                junction Junction303 pe
                [
                    position = 9736, 8688
                ]

                junction Junction311 sp
                [
                    position = 8448, 8144
                ]

                junction Junction312 pe
                [
                    position = 8160, 8296
                ]

                junction Junction47 sp
                [
                    position = 7864, 7552
                ]

                junction Junction48 sp
                [
                    position = 7864, 7552
                ]

                junction Junction319 sp
                [
                    position = 6768, 7368
                ]

                junction Junction320 pe
                [
                    position = 8544, 7904
                ]

                junction Junction321 pe
                [
                    position = 8608, 8000
                ]

                junction Junction322 pe
                [
                    position = 8688, 8096
                ]

                junction Junction325 sp
                [
                    position = 6792, 7208
                ]

                junction Junction332 pe
                [
                    position = 9696, 7904
                ]

                junction Junction333 pe
                [
                    position = 9696, 8000
                ]

                junction Junction335 pe
                [
                    position = 7152, 8280
                ]

                junction Junction336 pe
                [
                    position = 7152, 7904
                ]

                junction Junction337 pe
                [
                    position = 7152, 8096
                ]

                junction Junction338 sp
                [
                    position = 6840, 8000
                ]

                junction Junction339 sp
                [
                    position = 6968, 8112
                ]

                junction Junction340 pe
                [
                    position = 9608, 8688
                ]

                junction Junction341 pe
                [
                    position = 8688, 8688
                ]

                connect Ea1.n_node Junction292 as Connection1069
                [
                    breakpoints = 8544, 8224; 8384, 8224; 8384, 8304; 8384, 8688
                ]
                connect Xi_b1.out Goto44 as Connection374
                connect Junction309 Junction310 as Connection1285
                [
                    breakpoints = 10056, 8688
                ]
                connect La1.p_node Ia1.p_node as Connection665
                connect Tr1.n2 Junction310 as Connection1287
                connect Eb_1.in Junction283 as Connection952
                connect S2.a_out Junction306 as Connection1268
                connect Rt0a1.n_node Junction161 as Connection366
                connect Va2.n_node Junction289 as Connection1057
                connect R0b1.n_node L0b1.n_node as Connection385
                connect Junction207 Junction215 as Connection1222
                [
                    breakpoints = 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8688
                ]
                connect Xi_a1.n_node Junction161 as Connection314
                connect Xi_b1.n_node Junction160 as Connection388
                connect Goto35 Xi_a1.out as Connection342
                connect VbG.n_node Junction303 as Connection1225
                connect Xi_c1.out Goto38 as Connection313
                connect Junction283 Eb1.out as Connection951
                connect Junction192 Junction194 as Connection459
                connect Junction302 Junction303 as Connection1223
                connect Vc2.out Goto33 as Connection617
                [
                    breakpoints = 7984, 8480; 7968, 8480
                ]
                connect Junction213 Cb1.p_node as Connection613
                [
                    breakpoints = 8240, 8304; 8240, 8304; 8240, 8304
                ]
                connect Ic1.out Goto31 as Connection668
                connect Tr1.n1 Junction309 as Connection1284
                connect Lc1.p_node Ic1.p_node as Connection663
                connect Rt0b1.n_node Junction160 as Connection351
                connect Junction194 Ca1.n_node as Connection597
                [
                    breakpoints = 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8544; 8160, 8544
                ]
                connect L0c1.p_node Xi_c1.p_node as Connection328
                connect Va2.out Goto34 as Connection624
                connect VbG.p_node Junction307 as Connection1271
                connect Vb Tr1.sec_2 as Connection1278
                connect Junction306 VaG.p_node as Connection1269
                [
                    breakpoints = 9608, 7904
                ]
                connect R0c1.n_node L0c1.n_node as Connection330
                connect Junction195 Junction194 as Connection463
                connect Junction207 Junction198 as Connection574
                [
                    breakpoints = 8240, 8688
                ]
                connect Cb1.n_node Junction212 as Connection602
                connect VbG.out Vb_G as Connection1126
                connect S2.c_out Junction308 as Connection1274
                connect Vb2.p_node Junction213 as Connection614
                [
                    breakpoints = 8064, 8304; 8240, 8304
                ]
                connect Tr1.prm_2 Junction307 as Connection1279
                connect Eb1.n_node Junction195 as Connection462
                connect Goto39 Ib1.out as Connection669
                connect Vc2.p_node Junction216 as Connection627
                connect Va Tr1.sec_1 as Connection1280
                connect VcG.n_node Junction302 as Connection1221
                connect Lb1.p_node Ib1.p_node as Connection664
                connect Vc2.n_node Junction215 as Connection623
                connect Rc1.n_node Lc1.n_node as Connection399
                connect Goto40 Junction283 as Connection950
                connect L0a1.p_node Xi_a1.p_node as Connection378
                connect Vc Tr1.sec_3 as Connection1276
                connect Junction198 Junction199 as Connection537
                [
                    breakpoints = 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8688
                ]
                connect Vb2.out Goto42 as Connection616
                connect Xi_c1.n_node Junction173 as Connection304
                connect Junction212 Junction192 as Connection603
                connect Rt0c1.p_node Junction216 as Connection625
                [
                    breakpoints = 8320, 8288
                ]
                connect Ec_1.in Junction284 as Connection956
                [
                    breakpoints = 8624, 8384; 8624, 8352
                ]
                connect La1.n_node Ra1.n_node as Connection401
                connect L0b1.p_node Xi_b1.p_node as Connection372
                connect Junction308 VcG.p_node as Connection1275
                [
                    breakpoints = 9856, 8096
                ]
                connect L0a1.n_node R0a1.n_node as Connection355
                connect Ia1.out Goto32 as Connection666
                connect Junction289 Junction212 as Connection1058
                [
                    breakpoints = 7744, 8688; 8240, 8688
                ]
                connect Rt0b1.p_node Junction213 as Connection612
                connect Rb1.n_node Lb1.n_node as Connection354
                connect Junction302 Junction309 as Connection1282
                [
                    breakpoints = 9856, 8688
                ]
                connect Junction192 Junction292 as Connection1067
                connect Vb2.n_node Junction215 as Connection621
                connect Junction284 Ec1.out as Connection955
                [
                    breakpoints = 8624, 8352; 8624, 8272
                ]
                connect Junction292 Cc1.n_node as Connection1068
                [
                    breakpoints = 8240, 8688; 8240, 8688; 8240, 8544; 8320, 8544
                ]
                connect Goto30 Junction284 as Connection954
                connect Junction310 Ground as Connection1286
                [
                    breakpoints = 10120, 8688
                ]
                connect Junction216 Cc1.p_node as Connection626
                [
                    breakpoints = 8320, 8304; 8320, 8304; 8320, 8304
                ]
                connect Vc_G VcG.out as Connection1127
                connect Rt0c1.n_node Junction173 as Connection327
                connect Junction198 Junction195 as Connection477
                [
                    breakpoints = 8240, 8688; 8240, 8688
                ]
                connect Tr1.prm_3 Junction308 as Connection1277
                connect Goto41 Junction311 as Connection1292
                connect Junction311 Ea1.out as Connection1293
                connect Ea_1.in Junction311 as Connection1294
                connect Rt0a1.p_node Junction312 as Connection1296
                connect Junction312 Ca1.p_node as Connection1297
                connect Va2.p_node Junction312 as Connection1298
                connect "INV_sync OFF.in" "Logical operator1.out" as Connection155
                connect INV_sync.out Junction47 as Connection1299
                connect Junction47 Connect6 as Connection343
                connect "Logical operator1.in" Junction48 as Connection345
                connect Junction48 Junction47 as Connection346
                connect "INV_sync ON.in" Junction48 as Connection347
                connect From55 Gain19.in as Connection1847
                connect Gain19.out "Bus Join4.in1" as Connection1848
                connect From54 Gain20.in as Connection1849
                connect Gain20.out "Bus Join5.in1" as Connection1850
                connect Gain18.in Junction319 as Connection1886
                connect Junction319 Pref_probe.in as Connection1887
                [
                    breakpoints = 6768, 7368
                ]
                connect "C function6.out" Junction319 as Connection1888
                connect "C function6.in" "Bus Join5.out" as Connection1889
                connect setpoint_P "Bus Join5.in" as Connection1890
                connect setpoint_Q "Bus Join4.in" as Connection1891
                connect Gain18.out Controller.U_P as Connection1892
                connect Gain17.out Controller.U_Q as Connection1893
                connect Junction161 Junction320 as Connection1899
                [
                    breakpoints = 8160, 7904
                ]
                connect Junction320 Ea1.p_node as Connection1900
                [
                    breakpoints = 8544, 7904; 8544, 7904; 8544, 7904
                ]
                connect Eb1.p_node Junction321 as Connection1902
                connect Junction321 Junction160 as Connection1903
                [
                    breakpoints = 8608, 8000
                ]
                connect Rb1.p_node Junction321 as Connection1904
                connect Junction173 Junction322 as Connection1905
                [
                    breakpoints = 8320, 8096
                ]
                connect Junction322 Ec1.p_node as Connection1906
                [
                    breakpoints = 8688, 8272; 8688, 8272; 8688, 8096
                ]
                connect Rc1.p_node Junction322 as Connection1907
                connect "Bus Join4.out" "C function7.in" as Connection1915
                connect Gain17.in Junction325 as Connection1916
                connect Junction325 Qref_probe.in as Connection1917
                [
                    breakpoints = 6792, 7208
                ]
                connect "C function7.out" Junction325 as Connection1918
                connect VaG.out Va_G as Connection1919
                connect "Logical operator2.out" S2.ctrl_in as Connection1938
                connect CONNECT.out "Logical operator2.in" as Connection1939
                connect Junction320 Ra1.p_node as Connection1941
                [
                    breakpoints = 8544, 7904; 8800, 7904
                ]
                connect Tr1.prm_1 Junction332 as Connection1943
                connect Junction332 Junction306 as Connection1944
                connect Vrms.p_node Junction332 as Connection1945
                connect Junction307 Junction333 as Connection1946
                [
                    breakpoints = 9736, 8000
                ]
                connect Junction333 S2.b_out as Connection1947
                connect Vrms.n_node Junction333 as Connection1948
                connect PCC_status "Logical operator3.in" as Connection1953
                connect "Logical operator3.out" Goto45 as Connection1954
                [
                    breakpoints = 6840, 8336
                ]
                connect Connect2 "Rate Transition6.in" as Connection1955
                connect "Rate Transition6.out" "Logical operator2.in1" as Connection1956
                connect Ea.n_node Junction335 as Connection1965
                connect Junction289 Junction335 as Connection1968
                [
                    breakpoints = 7744, 8688; 7744, 8688; 7312, 8688; 7312, 8688; 7312, 8688; 7232, 8688; 7232, 8688; 7232, 8688; 7152, 8688
                ]
                connect Ea.p_node Junction336 as Connection1972
                connect Junction336 Vbat.p_node as Connection1973
                [
                    breakpoints = 7152, 7904
                ]
                connect Vbat.n_node Junction337 as Connection1975
                connect Junction337 Junction335 as Connection1976
                connect "Three Phase Inverter.neg_out" Junction337 as Connection1977
                connect From2 "Bus Split1.in" as Connection1978
                connect "Bus Split1.out" "Three Phase Inverter.InA" as Connection1979
                connect "Bus Split1.out1" "Three Phase Inverter.InB" as Connection1980
                connect "Bus Split1.out2" "Three Phase Inverter.InC" as Connection1981
                connect Constant2.out "Three Phase Inverter.En" as Connection1982
                connect "C function8.Vdc" Junction338 as Connection1988
                connect Junction338 Vbat.in as Connection1989
                connect Goto18 Junction338 as Connection1990
                connect "Three Phase Inverter.pos_out" Ibat.n_node as Connection1991
                connect Ibat.p_node Junction336 as Connection1992
                connect Goto46 Ibat.out as Connection1993
                connect Eam.in Junction339 as Connection1994
                connect Junction339 Ea.out as Connection1995
                connect Goto47 Junction339 as Connection1996
                connect From56 "C function8.Vbat" as Connection2005
                connect From57 "C function8.Ibat" as Connection2006
                connect Ia1.n_node "Core Coupling.a_in" as Connection2007
                connect "Core Coupling.a_out" S2.a_in as Connection2008
                connect Ib1.n_node "Core Coupling.b_in" as Connection2009
                connect "Core Coupling.b_out" S2.b_in as Connection2010
                connect Ic1.n_node "Core Coupling.c_in" as Connection2011
                connect "Core Coupling.c_out" S2.c_in as Connection2012
                connect Junction303 Junction340 as Connection2013
                [
                    breakpoints = 9736, 8688; 9736, 8688
                ]
                connect Junction340 VaG.n_node as Connection2014
                [
                    breakpoints = 9608, 8688; 9608, 8688
                ]
                connect "Core Coupling.d_out" Junction340 as Connection2015
                [
                    breakpoints = 9368, 8688; 9576, 8688
                ]
                connect Ec1.n_node Junction341 as Connection2016
                [
                    breakpoints = 8688, 8536
                ]
                connect Junction341 Junction207 as Connection2017
                [
                    breakpoints = 8688, 8688; 8688, 8688; 8688, 8688; 8688, 8688; 8688, 8688; 8240, 8688; 8240, 8688
                ]
                connect "Core Coupling.d_in" Junction341 as Connection2018
                [
                    breakpoints = 9320, 8688; 8720, 8688
                ]
                connect "Three Phase Inverter.a_in" R0a1.p_node as Connection2019
                connect "Three Phase Inverter.b_in" R0b1.p_node as Connection2020
                connect "Three Phase Inverter.c_in" R0c1.p_node as Connection2021
                connect From58 "Power Meter.va" as Connection2022
                connect From59 "Power Meter.vb" as Connection2023
                [
                    breakpoints = 8968, 8248; 8968, 8264
                ]
                connect From60 "Power Meter.vc" as Connection2024
                connect From61 "Power Meter.ia" as Connection2025
                connect From62 "Power Meter.ib" as Connection2026
                [
                    breakpoints = 8904, 8312; 9000, 8312
                ]
                connect From63 "Power Meter.ic" as Connection2027
                connect P.in "Power Meter.Pdc" as Connection2028
                connect Q.in "Power Meter.Qdc" as Connection2029

                C_s = "150e-6"
                L = "100e-6"
                L_i = "6e-3"
                L_o = "0.3e-3"
                R = "1e-3"
                R_i = "0.1"
                R_o = "0.03"
                R_s = "15e-3"
                S = "200e3"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A grid-forming three-phase inverter with a frequency and voltage droop controller</p></body></html>"

                    S {
                        label = "Rated Power "
                        widget = edit
                        type = generic
                        default_value = "5e6"
                        unit = "VA"
                        group = "1. Three-phase Inverter"
                    }

                    V_ABC {
                        label = "Rated Phase Voltage (RMS)"
                        widget = edit
                        type = generic
                        default_value = "277/np.sqrt(3)"
                        unit = "V"
                        group = "1. Three-phase Inverter"
                    }

                    w_0 {
                        label = "Nominal Frequency"
                        widget = edit
                        type = generic
                        default_value = "2*np.pi*60"
                        unit = "rad/s"
                        group = "1. Three-phase Inverter"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_ess"
                        unit = "s"
                        group = "1. Three-phase Inverter"
                    }

                    R_i {
                        label = "Input Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-6"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_i {
                        label = "Input Inductance"
                        widget = edit
                        type = generic
                        default_value = "100e-6*0.02"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    R_s {
                        label = "Shunt Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-6"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    C_s {
                        label = "Shunt Capacitance"
                        widget = edit
                        type = generic
                        default_value = "300e-6*50"
                        unit = "F"
                        group = "2. LCL filter"
                    }

                    R_o {
                        label = "Output Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-6"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_o {
                        label = "Output Inductance"
                        widget = edit
                        type = generic
                        default_value = "100e-6*0.02"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    R {
                        label = "Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-6"
                        unit = "Ω"
                        group = "3. Electrical Line"
                    }

                    L {
                        label = "Inductance"
                        widget = edit
                        type = generic
                        default_value = "1e-6"
                        unit = "H"
                        group = "3. Electrical Line"
                    }

                    Kp_I {
                        label = "Inner Loop Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "1.2"
                        group = "4. Cascaded Controller"
                    }

                    Ki_I {
                        label = "Inner Loop Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "2"
                        group = "4. Cascaded Controller"
                    }

                    Imax {
                        label = "Inner Loop Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1"
                        group = "4. Cascaded Controller"
                    }

                    Imin {
                        label = "Inner Loop Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1"
                        group = "4. Cascaded Controller"
                    }

                    Kp_V {
                        label = "Outer Loop Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "0.01"
                        group = "4. Cascaded Controller"
                    }

                    Ki_V {
                        label = "Outer Loop Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "2.2478"
                        group = "4. Cascaded Controller"
                    }

                    Vmax {
                        label = "Outer Loop Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1"
                        group = "4. Cascaded Controller"
                    }

                    Vmin {
                        label = "Outer Loop Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1"
                        group = "4. Cascaded Controller"
                    }

                    f_D {
                        label = "Frequency Droop Coefficient"
                        widget = edit
                        type = generic
                        default_value = "3e-3"
                        unit = "%"
                        group = "5. Droop Control"
                    }

                    V_D {
                        label = "Voltage Droop Coefficient"
                        widget = edit
                        type = generic
                        default_value = "5e-3"
                        unit = "%"
                        group = "5. Droop Control"
                    }

                    T_m {
                        label = "Measurement delay"
                        widget = edit
                        type = generic
                        default_value = "0.5"
                        unit = "s"
                        group = "5. Droop Control"
                    }

                    maxV_slip {
                        label = "Maximum slip (voltage)"
                        widget = edit
                        type = generic
                        default_value = "5e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    minV_slip {
                        label = "Minimum slip (voltage)"
                        widget = edit
                        type = generic
                        default_value = "2.5e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    maxw_slip {
                        label = "Maximum slip (frequency)"
                        widget = edit
                        type = generic
                        default_value = "10e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    minw_slip {
                        label = "Minimum slip (frequency)"
                        widget = edit
                        type = generic
                        default_value = "5e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    maxV_pds {
                        label = "Maximum difference signal (voltage)"
                        widget = edit
                        type = generic
                        default_value = "1e-2"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    maxw_pds {
                        label = "Maximum difference signal (frequency)"
                        widget = edit
                        type = generic
                        default_value = "5e-1"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                        Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                        Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                        Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                        f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                        V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                        T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                        
                        
                        Tfast = Ts
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S/V_DQ
                        Z_DQ = V_DQ/I_DQ
                        mP = w_0*(f_D/100)
                        nQ = V_DQ*(V_D/100)
                        D_f = 1/mP
                        D_V = 1/nQ
                        Tsync = 1
                    ENDCODE

                    CODE define_icon
                        mdl.set_component_icon_image(item_handle, 'grid_forming_inverter.svg')
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                        Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                        Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                        Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                        f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                        V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                        T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                        maxV_slip = mdl.get_property_value(mdl.prop(item_handle, "maxV_slip"))
                        minV_slip = mdl.get_property_value(mdl.prop(item_handle, "minV_slip"))
                        maxw_slip = mdl.get_property_value(mdl.prop(item_handle, "maxw_slip"))
                        minw_slip = mdl.get_property_value(mdl.prop(item_handle, "minw_slip"))
                        maxV_pds = mdl.get_property_value(mdl.prop(item_handle, "maxV_pds"))
                        maxw_pds = mdl.get_property_value(mdl.prop(item_handle, "maxw_pds"))
                        # HEADER STOP
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                        Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                        Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                        Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                        f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                        V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                        T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                        
                        
                        Tfast = Ts
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S/V_DQ
                        Z_DQ = V_DQ/I_DQ
                        mP = w_0*(f_D/100)
                        nQ = V_DQ*(V_D/100)
                        D_f = 1/mP
                        D_V = 1/nQ
                        Tsync = 1
                    ENDCODE
                }
            }
            [
                position = 8040, 8200
                scale = -1, 1
                size = 240, 184
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "Ts_ess"
                init_value = "1"
            }
            [
                position = 7784, 8200
                hide_name = True
                size = 32, 32
            ]

            port EPC_A {
                position = top:1
                kind = pe
            }
            [
                position = 9088, 8056
                scale = -1, 1
            ]

            port EPC_B {
                position = top:2
                kind = pe
            }
            [
                position = 9088, 8152
                scale = -1, 1
            ]

            port EPC_C {
                position = top:3
                kind = pe
            }
            [
                position = 9088, 8248
                scale = -1, 1
            ]

            tag Goto2 {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8368, 8304
                rotation = left
                hide_name = True
            ]

            tag Goto3 {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8440, 8304
                rotation = left
                hide_name = True
            ]

            tag Goto4 {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8512, 8304
                rotation = left
                hide_name = True
            ]

            tag Goto5 {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8920, 7976
                rotation = left
                hide_name = True
            ]

            tag Goto6 {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8872, 7976
                rotation = left
                hide_name = True
            ]

            tag Goto7 {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8824, 7976
                rotation = left
                hide_name = True
            ]

            tag From7 {
                value = "PCC_status"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7656, 8200
                hide_name = True
            ]

            junction Junction108 pe
            [
                position = 8400, 8528
            ]

            junction Junction112 pe
            [
                position = 8472, 8528
            ]

            junction Junction113 pe
            [
                position = 8632, 8528
            ]

            junction Junction114 pe
            [
                position = 8568, 8528
            ]

            junction Junction161 pe
            [
                position = 8568, 8056
            ]

            junction Junction162 pe
            [
                position = 8632, 8152
            ]

            junction Junction163 pe
            [
                position = 8696, 8248
            ]

            junction Junction452 pe
            [
                position = 8328, 8056
            ]

            junction Junction453 pe
            [
                position = 8400, 8152
            ]

            junction Junction454 pe
            [
                position = 8472, 8248
            ]

            junction Junction455 pe
            [
                position = 8304, 8528
            ]

            comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Standalone (UPS) load</p></body></html> ENDCOMMENT 
            [
                position = 8216, 8544
            ]

            connect EPC_A ESS_Ia.n_node as Connection1352
            connect EPC_B ESS_Ib.n_node as Connection1354
            connect EPC_C ESS_Ic.n_node as Connection1356
            connect ESS_Ia.p_node Junction161 as Connection1353
            connect ESS_Ib.p_node Junction162 as Connection1355
            connect ESS_Ic.p_node Junction163 as Connection1357
            connect Goto2 Va.out as Connection1358
            connect Goto3 Vb.out as Connection1359
            connect Goto4 Vc.out as Connection1360
            connect Goto5 ESS_Ia.out as Connection1361
            connect Goto6 ESS_Ib.out as Connection1362
            connect Goto7 ESS_Ic.out as Connection1363
            connect Junction112 Junction108 as Connection918
            connect Junction113 Junction114 as Connection923
            connect Junction114 Junction112 as Connection924
            connect Junction163 R16.p_node as Connection1350
            [
                breakpoints = 8696, 8248
            ]
            connect R16.n_node Junction113 as Connection920
            connect R17.n_node Junction113 as Connection922
            connect R17.p_node Junction162 as Connection1346
            connect R18.n_node Junction114 as Connection925
            connect R18.p_node Junction161 as Connection1343
            connect Vb.n_node Junction108 as Connection901
            connect Vc.n_node Junction112 as Connection917
            connect P_ref_ess.out "Grid forming inverter (averaged).setpoint_P" as Connection4319
            connect Q_ref_ess.out "Grid forming inverter (averaged).setpoint_Q" as Connection4320
            connect Va.p_node Junction452 as Connection4321
            [
                breakpoints = 8328, 8080
            ]
            connect Junction452 Junction161 as Connection4322
            [
                breakpoints = 8328, 8056; 8328, 8056; 8568, 8056; 8568, 8056
            ]
            connect "Grid forming inverter (averaged).Va" Junction452 as Connection4323
            connect Vb.p_node Junction453 as Connection4324
            connect Junction453 Junction162 as Connection4325
            [
                breakpoints = 8400, 8152; 8400, 8160; 8400, 8152; 8632, 8152
            ]
            connect "Grid forming inverter (averaged).Vb" Junction453 as Connection4326
            [
                breakpoints = 8040, 8016; 8400, 8016
            ]
            connect Junction163 Junction454 as Connection4327
            [
                breakpoints = 8696, 8248; 8696, 8248
            ]
            connect Junction454 Vc.p_node as Connection4328
            [
                breakpoints = 8472, 8248; 8472, 8248; 8472, 8248; 8472, 8248; 8472, 8248; 8472, 8440
            ]
            connect "Grid forming inverter (averaged).Vc" Junction454 as Connection4329
            [
                breakpoints = 7944, 7976; 8472, 7976
            ]
            connect Junction108 Junction455 as Connection4330
            [
                breakpoints = 8400, 8528; 8400, 8528
            ]
            connect Junction455 Va.n_node as Connection4331
            [
                breakpoints = 8312, 8528; 8320, 8528; 8312, 8528; 8328, 8528
            ]
            connect "Grid forming inverter (averaged).Ground" Junction455 as Connection4332
            connect From7 "Rate Transition1.in" as Connection4333
            connect "Rate Transition1.out" "Grid forming inverter (averaged).PCC_status" as Connection4334
        }
        [
            position = 5840, 7888
            rotation = right
            size = 144, 56
        ]

        component Subsystem Load {
            layout = dynamic
            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            S = "10e3"

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "1000e3"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = "0.9"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6648, 7984
            size = 48, 72
        ]

        component "core/Voltage RMS" Vrms_ess {
            feed_forward = "true"
            frequency = "sys_f"
        }
        [
            position = 6000, 7784
            size = 64, 32
        ]

        component src_ground gnd2 {
        }
        [
            position = 6400, 7112
            rotation = down
            hide_name = True
        ]

        component "core/Three Phase Voltage Source" Vs1 {
            init_frequency = "60.0"
        }
        [
            position = 6400, 7240
            rotation = right
            scale = -1, 1
            size = 62, 256
        ]

        component "core/Transmission Line" F2_line {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable13"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_U_L3"
            R_sequence_imperial = "R_cable13"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 6400, 7496
            rotation = left
            size = 256, 72
        ]

        component Subsystem PCC {
            layout = dynamic
            component "core/Triple Pole Single Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8136, 8184
                rotation = left
                size = 64, 256
            ]

            component gen_sr_ff "SR Flip Flop1" {
            }
            [
                position = 7712, 8392
            ]

            component src_digital_input "Digital Input Close" {
                addr = "8"
                execution_rate = "Ts"
                invert = "true"
            }
            [
                position = 7592, 8376
            ]

            component src_digital_input "Digital Input Trip" {
                addr = "9"
                execution_rate = "Ts"
                invert = "true"
            }
            [
                position = 7592, 8440
            ]

            component gen_data_type_conversion "Data Type Conversion1" {
            }
            [
                position = 7880, 8184
                hide_name = True
                scale = -1, 1
            ]

            component gen_probe P {
            }
            [
                position = 7536, 7928
                scale = -1, 1
            ]

            component gen_probe Q {
            }
            [
                position = 7536, 7872
                scale = -1, 1
            ]

            component gen_gain Gain3 {
                gain = "100"
            }
            [
                position = 7600, 8024
                hide_name = True
                scale = -1, 1
            ]

            component gen_gain Gain2 {
                gain = "10"
            }
            [
                position = 7624, 8000
                hide_name = True
                scale = -1, 1
            ]

            component gen_gain Gain1 {
                gain = "10"
            }
            [
                position = 7664, 7976
                hide_name = True
                scale = -1, -1
            ]

            component gen_gain "W -> kW" {
                gain = ".001"
            }
            [
                position = 7752, 7976
                scale = -1, 1
            ]

            component gen_gain "var -> kvar" {
                gain = ".001"
            }
            [
                position = 7704, 8000
                scale = -1, 1
            ]

            component gen_gain Gain4 {
                gain = "100"
            }
            [
                position = 7648, 8048
                hide_name = True
                scale = -1, 1
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                port Ground {
                    position = bottom:auto
                    kind = pe
                }
                [
                    position = 7648, 8504
                    rotation = left
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1469 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                connect A Junction1470 as Connection390
                connect B Junction1471 as Connection393
                connect C Junction1472 as Connection396
                connect Ground Junction1469 as Connection384
                connect Junction1421 Junction1469 as Connection382
                connect Junction1469 VC.n_node as Connection383
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
            }
            [
                position = 8136, 8312
                rotation = right
                scale = -1, 1
                size = 112, 232
            ]

            component Subsystem "PCC Measurements" {
                layout = dynamic
                component gen_terminator Termination3 {
                }
                [
                    position = 8008, 8088
                    hide_name = True
                    scale = -1, 1
                ]

                component "core/Three phase PLL" "Three phase PLL1" {
                }
                [
                    position = 8088, 8096
                    scale = -1, 1
                    size = 64, 128
                ]

                component gen_terminator Termination5 {
                }
                [
                    position = 8008, 8136
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_PQ_transform "Power Meter1" {
                }
                [
                    position = 8088, 8360
                    scale = -1, 1
                ]

                component gen_terminator Termination6 {
                }
                [
                    position = 8016, 8352
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_rms_value "RMS value1" {
                }
                [
                    position = 8088, 8192
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 8416, 8256
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_comparator Comparator1 {
                }
                [
                    position = 7912, 8272
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_comparator Comparator2 {
                }
                [
                    position = 7912, 8464
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination7 {
                }
                [
                    position = 7976, 8368
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination4 {
                }
                [
                    position = 7968, 8120
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 7968, 8072
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination8 {
                }
                [
                    position = 8016, 8384
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8008, 8056
                    hide_name = True
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                }
                [
                    position = 8040, 8264
                    hide_name = True
                    scale = -1, 1
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                }
                [
                    position = 8040, 8472
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 8416, 8184
                    hide_name = True
                    scale = -1, 1
                ]

                port f {
                    label = "Frequency"
                    position = left:4
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7920, 8104
                    scale = -1, 1
                ]

                port P {
                    label = "Real Power"
                    position = left:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7976, 8320
                    scale = -1, 1
                ]

                port Q {
                    label = "Reactive Power"
                    position = left:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8336
                    scale = -1, 1
                ]

                port pf {
                    label = "Power Factor"
                    position = left:6
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8400
                    scale = -1, 1
                ]

                port I {
                    label = "I"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8488, 8184
                    rotation = down
                ]

                port Vrms {
                    label = "Voltage"
                    position = left:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7984, 8192
                    scale = -1, 1
                ]

                port V {
                    label = "V"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8488, 8256
                    rotation = down
                ]

                port "P direction" {
                    label = "P Import/Exprot"
                    position = left:9
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7848, 8272
                    scale = -1, 1
                ]

                port "pf lead lag" {
                    label = "pf lead/lag"
                    position = left:10
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7848, 8464
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8184
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto1 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8160
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                tag From1 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8064
                    hide_name = True
                    scale = -1, 1
                ]

                tag From2 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8096
                    hide_name = True
                    scale = -1, 1
                ]

                tag From9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8400
                    hide_name = True
                    scale = -1, 1
                ]

                tag From8 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8384
                    hide_name = True
                    scale = -1, 1
                ]

                tag From3 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8128
                    hide_name = True
                    scale = -1, 1
                ]

                tag From4 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8352
                    hide_name = True
                    scale = -1, 1
                ]

                tag From10 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto6 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8280
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto5 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8256
                    hide_name = True
                    scale = -1, 1
                ]

                tag From5 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8320
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8208
                    hide_name = True
                    scale = -1, 1
                ]

                tag From6 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8336
                    hide_name = True
                    scale = -1, 1
                ]

                tag From7 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8368
                    hide_name = True
                    scale = -1, 1
                ]

                junction Junction1 sp
                [
                    position = 8016, 8320
                ]

                junction Junction2 sp
                [
                    position = 7976, 8400
                ]

                connect "Bus Split1.out" Goto4 as Connection27
                connect "Bus Split1.out1" Goto5 as Connection26
                connect "Bus Split1.out2" Goto6 as Connection28
                connect "Bus Split1.in" V as Connection47
                connect "Bus Split2.out" Goto1 as Connection25
                connect "Bus Split2.out2" Goto3 as Connection24
                connect "Bus Split2.in" I as Connection48
                connect Comparator1.in1 Junction1 as Connection57
                connect Comparator2.in1 Junction2 as Connection60
                connect Constant1.out Comparator1.in2 as Connection54
                connect Constant2.out Comparator2.in2 as Connection61
                connect From1 "Three phase PLL1.va" as Connection29
                connect From10 "RMS value1.in" as Connection46
                connect From2 "Three phase PLL1.vb" as Connection30
                connect From3 "Three phase PLL1.vc" as Connection31
                connect From4 "Power Meter1.vc" as Connection37
                connect From5 "Power Meter1.va" as Connection39
                connect From6 "Power Meter1.vb" as Connection38
                connect From7 "Power Meter1.ia" as Connection41
                connect From9 "Power Meter1.ic" as Connection40
                connect Goto2 "Bus Split2.out1" as Connection23
                connect Junction1 P as Connection56
                connect Junction2 pf as Connection59
                connect "P direction" Comparator1.out as Connection62
                connect "Power Meter1.ib" From8 as Connection42
                connect "Power Meter1.Pdc" Junction1 as Connection55
                connect "Power Meter1.k_factor" Junction2 as Connection58
                connect "Power Meter1.Qdc" Q as Connection53
                connect "RMS value1.out" Vrms as Connection50
                connect Termination1.in "Three phase PLL1.d_axis" as Connection32
                connect Termination2.in "Three phase PLL1.q_axis" as Connection33
                connect Termination3.in "Three phase PLL1.zero_axis" as Connection34
                connect Termination4.in "Three phase PLL1.theta" as Connection35
                connect Termination5.in "Three phase PLL1.sin_theta" as Connection36
                connect Termination6.in "Power Meter1.Pac" as Connection43
                connect Termination7.in "Power Meter1.Qac" as Connection44
                connect Termination8.in "Power Meter1.apparent" as Connection45
                connect "Three phase PLL1.freq" f as Connection52
                connect "pf lead lag" Comparator2.out as Connection63
            }
            [
                position = 7864, 8048
                size = 96, 184
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                port Ground {
                    position = bottom:auto
                    kind = pe
                }
                [
                    position = 7648, 8504
                    rotation = left
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1469 pe
                [
                    position = 7648, 8432
                ]

                connect A IA.p_node as Connection379
                connect B IB.p_node as Connection380
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C IC.p_node as Connection381
                connect Ground Junction1469 as Connection384
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1469 as Connection382
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1469 VC.n_node as Connection383
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
            }
            [
                position = 8136, 8048
                rotation = right
                scale = -1, 1
                size = 112, 232
            ]

            component src_scada_input Grid_Connect {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 7672, 8248
            ]

            component gen_logic_op "Logical operator2" {
            }
            [
                position = 7840, 8288
                hide_name = True
            ]

            port A {
                label = "A"
                position = top:1
                kind = pe
            }
            [
                position = 8040, 7944
                rotation = right
            ]

            port B {
                label = "B"
                position = top:2
                kind = pe
            }
            [
                position = 8136, 7944
                rotation = right
            ]

            port C {
                label = "C"
                position = top:3
                kind = pe
            }
            [
                position = 8232, 7944
                rotation = right
            ]

            port a {
                label = "a"
                position = bottom:1
                kind = pe
            }
            [
                position = 8040, 8424
                rotation = left
            ]

            port b {
                label = "b"
                position = bottom:2
                kind = pe
            }
            [
                position = 8136, 8424
                rotation = left
            ]

            port c {
                label = "c"
                position = bottom:3
                kind = pe
            }
            [
                position = 8232, 8424
                rotation = left
            ]

            port G {
                label = "G"
                position = right:1
                kind = pe
            }
            [
                position = 8424, 8192
                rotation = down
            ]

            tag Goto2 {
                value = "Q"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8000
                hide_name = True
                scale = -1, 1
            ]

            tag Goto1 {
                value = "P"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 7976
                hide_name = True
                scale = -1, 1
            ]

            tag Goto5 {
                value = "pf"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8072
                hide_name = True
                scale = -1, 1
            ]

            tag Goto4 {
                value = "f"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8048
                hide_name = True
                scale = -1, 1
            ]

            tag Goto6 {
                value = "P sign"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8096
                hide_name = True
                scale = -1, 1
            ]

            tag Goto8 {
                value = "CB Status"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7800, 8184
                hide_name = True
                scale = -1, 1
            ]

            tag Goto7 {
                value = "pf lead/lag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8120
                hide_name = True
                scale = -1, 1
            ]

            tag Goto3 {
                value = "V"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8024
                hide_name = True
                scale = -1, 1
            ]

            tag Goto9 {
                value = "PCC_status"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 7640, 8320
                hide_name = True
                scale = -1, 1
            ]

            junction Junction1 pe
            [
                position = 8392, 8192
            ]

            junction Junction1506 sp
            [
                position = 7784, 7976
            ]

            junction Junction1507 sp
            [
                position = 7800, 8000
            ]

            junction Junction1508 sp
            [
                position = 7952, 8184
            ]

            junction Junction1509 sp
            [
                position = 7760, 8248
            ]

            connect A Meas1.A as Connection45
            connect "Digital Input Close.out" "SR Flip Flop1.s_in" as Connection1075
            [
                breakpoints = 7664, 8376
            ]
            connect "Digital Input Trip.out" "SR Flip Flop1.r_in" as Connection1066
            connect Gain1.in "W -> kW.out" as Connection1085
            connect Gain2.in "var -> kvar.out" as Connection1088
            connect Gain3.in "PCC Measurements.Vrms" as Connection1091
            connect Gain4.out Goto4 as Connection1093
            connect Goto1 Gain1.out as Connection1094
            [
                breakpoints = 7472, 7976; 7568, 7976
            ]
            connect Goto2 Gain2.out as Connection1095
            [
                breakpoints = 7472, 8000; 7584, 8000
            ]
            connect Goto3 Gain3.out as Connection1090
            connect Goto5 "PCC Measurements.pf" as Connection27
            connect Goto6 "PCC Measurements.P direction" as Connection28
            connect Goto7 "PCC Measurements.pf lead lag" as Connection29
            connect Goto8 "Data Type Conversion1.out" as Connection1076
            connect Junction1 G as Connection19
            connect Junction1506 "PCC Measurements.P" as Connection1101
            connect Junction1507 "PCC Measurements.Q" as Connection1104
            connect Meas1.B B as Connection44
            connect Meas1.C C as Connection43
            connect Meas1.Ground Junction1 as Connection20
            connect Meas1.I "PCC Measurements.I" as Connection52
            connect Meas1.b S1.b_out as Connection41
            connect Meas1.a S1.a_out as Connection40
            connect Meas2.Ground Junction1 as Connection18
            connect Meas2.C S1.c_in as Connection48
            connect Meas2.b b as Connection50
            connect Meas2.c c as Connection49
            connect P.in Junction1506 as Connection1102
            connect "PCC Measurements.f" Gain4.in as Connection1092
            connect "PCC Measurements.V" Meas1.V as Connection53
            connect Q.in Junction1507 as Connection1105
            connect S1.c_out Meas1.c as Connection42
            connect S1.b_in Meas2.B as Connection47
            connect S1.a_in Meas2.A as Connection46
            connect "W -> kW.in" Junction1506 as Connection1100
            connect a Meas2.a as Connection51
            connect "var -> kvar.in" Junction1507 as Connection1103
            [
                breakpoints = 7784, 8000
            ]
            connect "SR Flip Flop1.out" "Logical operator2.in1" as Connection1941
            connect "Data Type Conversion1.in" Junction1508 as Connection1942
            connect Junction1508 S1.ctrl_in as Connection1943
            [
                breakpoints = 7944, 8184; 7944, 8184
            ]
            connect "Logical operator2.out" Junction1508 as Connection1944
            connect Grid_Connect.out Junction1509 as Connection1945
            connect Junction1509 "Logical operator2.in" as Connection1946
            connect Goto9 Junction1509 as Connection1947
        }
        [
            position = 6400, 7712
            size = 80, 48
        ]

        component "core/Voltage RMS" Vrms_grid {
            feed_forward = "true"
            frequency = "sys_f"
        }
        [
            position = 6216, 7448
            size = 64, 32
        ]

        component pas_resistor Rb {
            resistance = "R"
        }
        [
            position = 6248, 7888
        ]

        component pas_inductor La {
            inductance = "L"
        }
        [
            position = 6144, 7832
            rotation = down
        ]

        component pas_resistor Ra {
            resistance = "R"
        }
        [
            position = 6248, 7832
        ]

        component pas_resistor Rc {
            resistance = "R"
        }
        [
            position = 6248, 7944
        ]

        component pas_inductor Lc {
            inductance = "L"
        }
        [
            position = 6144, 7944
            rotation = down
        ]

        component pas_inductor Lb {
            inductance = "L"
        }
        [
            position = 6144, 7888
            rotation = down
        ]

        component Subsystem PV {
            layout = dynamic
            component "core/Voltage Measurement" Vb {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8400, 8432
                rotation = right
                size = 64, 32
            ]

            component pas_resistor R17 {
                resistance = "1e4"
            }
            [
                position = 8632, 8480
                rotation = right
            ]

            component "core/Voltage Measurement" Vc {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8472, 8480
                rotation = right
                size = 64, 32
            ]

            component pas_resistor R18 {
                resistance = "1e4"
            }
            [
                position = 8568, 8480
                rotation = right
            ]

            component "core/Voltage Measurement" Va {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8328, 8384
                rotation = right
                size = 64, 32
            ]

            component pas_resistor R16 {
                resistance = "1e4"
            }
            [
                position = 8696, 8480
                rotation = right
            ]

            component "core/Current Measurement" PV_Ia {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8920, 8056
                size = 64, 32
            ]

            component "core/Current Measurement" PV_Ic {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8824, 8248
                size = 64, 32
            ]

            component "core/Current Measurement" PV_Ib {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8872, 8152
                size = 64, 32
            ]

            component src_scada_input P_ref_PV {
                def_value = "50"
                execution_rate = "20e-6"
                unit = "kW"
            }
            [
                position = 7816, 8128
            ]

            component src_scada_input Q_ref_PV {
                def_value = "30"
                execution_rate = "20e-6"
                unit = "kVAr"
            }
            [
                position = 7816, 8272
            ]

            component Subsystem "Grid following inverter (averaged)" {
                layout = dynamic
                component pas_capacitor Cc1 {
                    capacitance = "C_s"
                }
                [
                    position = 8320, 8352
                    rotation = right
                ]

                component pas_resistor Rgridb_1 {
                    resistance = "R"
                }
                [
                    position = 9504, 8000
                ]

                component "core/Signal Controlled Voltage Source" Vc_inv {
                }
                [
                    position = 7312, 8136
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_resistor Rt0a1 {
                    resistance = "R_s"
                }
                [
                    position = 8160, 8256
                    rotation = left
                    scale = -1, 1
                ]

                component pas_resistor Ra1 {
                    resistance = "R_o"
                }
                [
                    position = 8920, 7904
                ]

                component "core/Current Measurement" Ia1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9168, 7904
                    size = 64, 32
                ]

                component gen_probe Ea_1 {
                }
                [
                    position = 8496, 8176
                ]

                component pas_inductor L0b1 {
                    inductance = "L_i"
                }
                [
                    position = 7888, 8000
                    rotation = down
                ]

                component "core/Voltage Measurement" Vc2 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8000, 8480
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_capacitor Cb1 {
                    capacitance = "C_s"
                }
                [
                    position = 8240, 8352
                    rotation = right
                ]

                component Subsystem Controller {
                    layout = dynamic
                    component gen_product Product13 {
                    }
                    [
                        position = 7368, 8464
                        scale = -1, 1
                    ]

                    component gen_gain Gain4 {
                        gain = "1/T_m"
                    }
                    [
                        position = 6992, 8232
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain15 {
                        gain = "S*1.5"
                    }
                    [
                        position = 7136, 8168
                        rotation = right
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_probe Q1 {
                    }
                    [
                        position = 7072, 8488
                        rotation = down
                    ]

                    component gen_gain Gain5 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7864, 8120
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain6 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 7856, 7816
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_integrator Integrator2 {
                    }
                    [
                        position = 6896, 8232
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum1 {
                    }
                    [
                        position = 7192, 8224
                        scale = -1, 1
                    ]

                    component Subsystem Current_abc_to_dq2 {
                        layout = dynamic
                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 7856, 8008
                            size = 48, 80
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 7952, 8064
                        ]

                        port Eq2 {
                            label = "Eq2"
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 8016
                        ]

                        port Ed2 {
                            label = "Ed2"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 7976
                        ]

                        port Eb2 {
                            label = "Eb2"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8000
                        ]

                        port wt2 {
                            label = "wt2"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8088
                        ]

                        port Ec2 {
                            label = "Ec2"
                            position = right:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8040
                        ]

                        port Ea2 {
                            label = "Ea2"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 7960
                        ]

                        connect "abc to dq1.q_axis" Eq2 as Connection6
                        connect Termination1.in "abc to dq1.zero_axis" as Connection4
                        connect Ea2 "abc to dq1.va" as Connection1
                        connect Eb2 "abc to dq1.vb" as Connection2
                        connect Ec2 "abc to dq1.vc" as Connection3
                        connect wt2 "abc to dq1.wt" as Connection7
                        connect "abc to dq1.d_axis" Ed2 as Connection5
                    }
                    [
                        position = 7936, 8184
                        size = 80, 168
                    ]

                    component gen_gain Gain8 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7856, 8248
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain1 {
                        gain = "1/(2*np.pi)"
                    }
                    [
                        position = 8336, 8312
                        scale = -1, 1
                    ]

                    component gen_gain Gain13 {
                        gain = "1/T_m"
                    }
                    [
                        position = 7000, 8376
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_product Product12 {
                    }
                    [
                        position = 7368, 8376
                        scale = -1, 1
                    ]

                    component gen_gain Gain10 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7864, 8520
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain14 {
                        gain = "S*1.5"
                    }
                    [
                        position = 7136, 8456
                        rotation = right
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "3"
                    }
                    [
                        position = 7200, 7952
                        scale = -1, 1
                    ]

                    component gen_gain Gain9 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7856, 8392
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_probe E_d1 {
                        addr = "8965"
                    }
                    [
                        position = 7752, 8336
                        scale = -1, 1
                    ]

                    component gen_integrator Integrator3 {
                    }
                    [
                        position = 6904, 8376
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe E_dREF1 {
                    }
                    [
                        position = 7568, 7848
                    ]

                    component src_constant Constant1 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 7912, 8776
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 7192, 8368
                        scale = -1, 1
                    ]

                    component gen_product Product10 {
                    }
                    [
                        position = 7368, 8296
                        scale = -1, 1
                    ]

                    component Subsystem Current_abc_to_dq {
                        layout = dynamic
                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 7856, 8008
                            size = 48, 80
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 7952, 8064
                        ]

                        port Xi_d2 {
                            label = "Xi_d2"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 7976
                        ]

                        port Xi_c2 {
                            label = "Xi_c2"
                            position = right:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8040
                        ]

                        port wt2 {
                            label = "wt2"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8088
                        ]

                        port Xi_a2 {
                            label = "Xi_a2"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 7960
                        ]

                        port Xi_q2 {
                            label = "Xi_q2"
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 8016
                        ]

                        port Xi_b2 {
                            label = "Xi_b2"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8000
                        ]

                        connect Xi_c2 "abc to dq1.vc" as Connection3
                        connect "abc to dq1.q_axis" Xi_q2 as Connection6
                        connect "abc to dq1.d_axis" Xi_d2 as Connection5
                        connect wt2 "abc to dq1.wt" as Connection7
                        connect Xi_a2 "abc to dq1.va" as Connection1
                        connect Xi_b2 "abc to dq1.vb" as Connection2
                        connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    }
                    [
                        position = 7936, 7880
                        size = 80, 168
                    ]

                    component gen_gain Gain7 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 7856, 7944
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain12 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 7384, 8744
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_product Product111 {
                    }
                    [
                        position = 7368, 8216
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "+-"
                    }
                    [
                        position = 7072, 8232
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain11 {
                        gain = "1/I_DQ"
                    }
                    [
                        position = 7384, 8616
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_probe E_qREF1 {
                    }
                    [
                        position = 7568, 8056
                    ]

                    component gen_probe E_q1 {
                    }
                    [
                        position = 7752, 8192
                        scale = -1, 1
                    ]

                    component Subsystem Current_abc_to_dq3 {
                        layout = dynamic
                        component gen_terminator Termination1 {
                        }
                        [
                            position = 7952, 8064
                        ]

                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 7856, 8008
                            size = 48, 80
                        ]

                        port "^Ec2" {
                            label = "^Ec2"
                            position = right:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8040
                        ]

                        port "^Ed2" {
                            label = "^Ed2"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 7976
                        ]

                        port "^Eb2" {
                            label = "^Eb2"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8000
                        ]

                        port "^Ea2" {
                            label = "^Ea2"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 7960
                        ]

                        port wt2 {
                            label = "wt2"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8088
                        ]

                        port "^Eq2" {
                            label = "^Eq2"
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 8016
                        ]

                        connect Termination1.in "abc to dq1.zero_axis" as Connection4
                        connect "abc to dq1.q_axis" "^Eq2" as Connection6
                        connect wt2 "abc to dq1.wt" as Connection7
                        connect "abc to dq1.d_axis" "^Ed2" as Connection5
                        connect "^Eb2" "abc to dq1.vb" as Connection2
                        connect "^Ea2" "abc to dq1.va" as Connection1
                        connect "^Ec2" "abc to dq1.vc" as Connection3
                    }
                    [
                        position = 7936, 8456
                        size = 80, 168
                    ]

                    component gen_probe f1 {
                    }
                    [
                        position = 8248, 8312
                        rotation = down
                    ]

                    component Subsystem Current_abc_to_dq4 {
                        layout = dynamic
                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 7856, 8008
                            size = 48, 80
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 7952, 8064
                        ]

                        port wt2 {
                            label = "wt2"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8088
                        ]

                        port "^Eq2" {
                            label = "^Eq2"
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 8016
                        ]

                        port "^Ea2" {
                            label = "^Ea2"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 7960
                        ]

                        port "^Eb2" {
                            label = "^Eb2"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8000
                        ]

                        port "^Ec2" {
                            label = "^Ec2"
                            position = right:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8040
                        ]

                        port "^Ed2" {
                            label = "^Ed2"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 7976
                        ]

                        connect "abc to dq1.q_axis" "^Eq2" as Connection6
                        connect wt2 "abc to dq1.wt" as Connection7
                        connect "abc to dq1.d_axis" "^Ed2" as Connection5
                        connect "^Ea2" "abc to dq1.va" as Connection1
                        connect "^Ec2" "abc to dq1.vc" as Connection3
                        connect Termination1.in "abc to dq1.zero_axis" as Connection4
                        connect "^Eb2" "abc to dq1.vb" as Connection2
                    }
                    [
                        position = 7480, 8680
                        size = 80, 168
                    ]

                    component gen_sum Sum5 {
                        signs = "+-"
                    }
                    [
                        position = 7080, 8376
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe P1 {
                    }
                    [
                        position = 7080, 8136
                        rotation = down
                    ]

                    component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                        layout = dynamic
                        component Subsystem "Outer voltage control loop" {
                            layout = dynamic
                            component gen_sum Sum12 {
                                signs = "++"
                            }
                            [
                                position = 7792, 8512
                                scale = -1, 1
                            ]

                            component gen_gain Gain4 {
                                gain = "C_s*Z_DQ"
                            }
                            [
                                position = 8248, 8352
                                scale = -1, 1
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 8376, 8168
                                scale = -1, 1
                            ]

                            component gen_product Product8 {
                            }
                            [
                                position = 8144, 8808
                                scale = -1, 1
                            ]

                            component gen_sum Sum10 {
                                signs = "+-"
                            }
                            [
                                position = 7952, 8248
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 8152, 8320
                                scale = -1, 1
                            ]

                            component gen_sum Sum11 {
                                signs = "+-"
                            }
                            [
                                position = 8376, 8504
                                scale = -1, 1
                            ]

                            component gen_probe Ed_err {
                            }
                            [
                                position = 8376, 8104
                            ]

                            component gen_gain Gain6 {
                                gain = "C_s*Z_DQ"
                            }
                            [
                                position = 8248, 8840
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller4" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_V"
                                ki_source = "external"
                                kp = "Kp_V"
                                kp_source = "external"
                                lower_sat_lim = "Vmin"
                                upper_sat_lim = "Vmax"
                            }
                            [
                                position = 8088, 8504
                                scale = -1, 1
                            ]

                            component gen_sum Sum13 {
                                signs = "++"
                            }
                            [
                                position = 7936, 8712
                                scale = -1, 1
                            ]

                            component gen_sum Sum9 {
                                signs = "++"
                            }
                            [
                                position = 7800, 8176
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller3" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                execution_rate = "Ts"
                                ki = "Ki_V"
                                ki_source = "external"
                                kp = "Kp_V"
                                kp_source = "external"
                                lower_sat_lim = "Vmin"
                                upper_sat_lim = "Vmax"
                            }
                            [
                                position = 8112, 8104
                                scale = -1, 1
                            ]

                            component gen_probe Eq_err {
                            }
                            [
                                position = 8376, 8440
                            ]

                            component gen_probe ED_ctrl {
                            }
                            [
                                position = 8040, 8048
                            ]

                            component gen_probe EQ_ctrl {
                            }
                            [
                                position = 8000, 8456
                            ]

                            component src_scada_input kp_v_d {
                                def_value = "Kp_V"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8264, 8136
                                scale = -1, 1
                            ]

                            component src_scada_input ki_v_d {
                                def_value = "Ki_V"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8264, 8192
                                scale = -1, 1
                            ]

                            component src_scada_input kp_v_q {
                                def_value = "Kp_V"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8304, 8528
                                scale = -1, 1
                            ]

                            component src_scada_input ki_v_q {
                                def_value = "Ki_V"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8304, 8584
                                scale = -1, 1
                            ]

                            component gen_gain Gain7 {
                                gain = "Z_DQ"
                            }
                            [
                                position = 8200, 8136
                                scale = -1, 1
                            ]

                            component gen_gain Gain8 {
                                gain = "Z_DQ"
                            }
                            [
                                position = 8200, 8192
                                scale = -1, 1
                            ]

                            component gen_gain Gain9 {
                                gain = "Z_DQ"
                            }
                            [
                                position = 8240, 8528
                                scale = -1, 1
                            ]

                            component gen_gain Gain10 {
                                gain = "Z_DQ"
                            }
                            [
                                position = 8240, 8584
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 8200, 8088
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "[-1]"
                                upper_limit = "[1]"
                            }
                            [
                                position = 8168, 8488
                                hide_name = True
                                scale = -1, 1
                            ]

                            port Xi_rd {
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7696, 8176
                                scale = -1, 1
                            ]

                            port Xi_rq {
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7688, 8512
                                scale = -1, 1
                            ]

                            port "^E_q_ref" {
                                label = "^E_q_ref1"
                                position = auto:auto
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8552, 8440
                                scale = -1, 1
                            ]

                            port "^E_d_ref" {
                                label = "^E_d_ref1"
                                position = auto:auto
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8104
                                scale = -1, 1
                            ]

                            port "^E_q" {
                                label = "^E_q1"
                                position = auto:auto
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8600, 8512
                                scale = -1, 1
                            ]

                            port "^E_d" {
                                label = "^E_d1"
                                position = auto:auto
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8616, 8176
                                scale = -1, 1
                            ]

                            tag From33 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8280, 8280
                                scale = -1, 1
                            ]

                            tag From35 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8280, 8768
                                scale = -1, 1
                            ]

                            tag From32 {
                                value = "Id1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8384, 8240
                                scale = -1, 1
                            ]

                            tag From36 {
                                value = "Iq1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8376, 8688
                                scale = -1, 1
                            ]

                            junction Junction174 sp
                            [
                                position = 7968, 8104
                            ]

                            junction Junction175 sp
                            [
                                position = 7960, 8496
                            ]

                            junction Junction176 sp
                            [
                                position = 8480, 8176
                            ]

                            junction Junction177 sp
                            [
                                position = 8448, 8512
                            ]

                            junction Junction178 sp
                            [
                                position = 8336, 8104
                            ]

                            junction Junction179 sp
                            [
                                position = 8336, 8504
                            ]

                            connect "^E_d_ref" Sum8.in as Connection215
                            connect Sum11.in "^E_q_ref" as Connection217
                            connect Sum13.in1 Product8.out as Connection233
                            connect From32 Sum10.in as Connection259
                            connect Gain6.out Product8.in1 as Connection84
                            connect From33 Product6.in as Connection68
                            connect Sum10.in1 Product6.out as Connection67
                            connect From36 Sum13.in as Connection260
                            connect From35 Product8.in as Connection79
                            connect Gain4.out Product6.in1 as Connection69
                            connect "PID controller3.out" Junction174 as Connection311
                            [
                                breakpoints = 8072, 8104
                            ]
                            connect Junction174 ED_ctrl.in as Connection312
                            [
                                breakpoints = 7968, 8104
                            ]
                            connect Sum9.in Junction174 as Connection313
                            connect EQ_ctrl.in Junction175 as Connection320
                            connect Junction175 "PID controller4.out" as Connection321
                            [
                                breakpoints = 7960, 8504; 7960, 8504; 8024, 8504
                            ]
                            connect Sum12.in Junction175 as Connection322
                            connect kp_v_d.out Gain7.in as Connection323
                            connect Gain7.out "PID controller3.kp_in" as Connection324
                            connect Gain8.in ki_v_d.out as Connection325
                            connect Gain8.out "PID controller3.ki_in" as Connection326
                            connect Gain9.in kp_v_q.out as Connection327
                            connect Gain10.in ki_v_q.out as Connection328
                            connect Gain9.out "PID controller4.kp_in" as Connection329
                            connect Gain10.out "PID controller4.ki_in" as Connection330
                            connect "PID controller3.in" Limit1.out as Connection331
                            connect Limit2.out "PID controller4.in" as Connection334
                            connect Gain6.in Junction176 as Connection340
                            connect Junction176 Sum8.in1 as Connection341
                            [
                                breakpoints = 8480, 8176
                            ]
                            connect "^E_d" Junction176 as Connection342
                            connect Gain4.in Junction177 as Connection344
                            connect Junction177 Sum11.in1 as Connection345
                            [
                                breakpoints = 8448, 8512
                            ]
                            connect "^E_q" Junction177 as Connection346
                            connect Ed_err.in Junction178 as Connection348
                            connect Junction178 Sum8.out as Connection349
                            [
                                breakpoints = 8336, 8168; 8336, 8168
                            ]
                            connect Limit1.in Junction178 as Connection350
                            connect Sum11.out Junction179 as Connection352
                            connect Junction179 Eq_err.in as Connection353
                            [
                                breakpoints = 8336, 8504
                            ]
                            connect Limit2.in Junction179 as Connection354
                            connect Xi_rq Sum12.out as Connection355
                            connect Xi_rd Sum9.out as Connection356
                            connect Sum9.in1 Sum10.out as Connection357
                            connect Sum12.in1 Sum13.out as Connection358
                        }
                        [
                            position = 8808, 8400
                            scale = -1, 1
                            size = 152, 168
                        ]

                        component gen_gain Gain5 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8032, 8560
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_sum Sum7 {
                        }
                        [
                            position = 9176, 8552
                            scale = -1, 1
                        ]

                        component gen_sum Sum10 {
                            signs = "+-"
                        }
                        [
                            position = 9416, 8496
                            scale = -1, 1
                        ]

                        component gen_sum Sum11 {
                            signs = "+-"
                        }
                        [
                            position = 9424, 8192
                            scale = -1, 1
                        ]

                        component gen_gain Gain6 {
                            gain = "V_DQ"
                        }
                        [
                            position = 8064, 8624
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_gain Gain3 {
                            gain = "R_s/Z_DQ"
                        }
                        [
                            position = 9320, 8496
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                        }
                        [
                            position = 9208, 8232
                            scale = -1, 1
                        ]

                        component Subsystem "dq to abc" {
                            layout = dynamic
                            component src_constant o_ref {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7520, 8200
                            ]

                            component "core/dq to abc" "dq to abc1" {
                                execution_rate = "inherit"
                            }
                            [
                                position = 7744, 8184
                                size = 48, 80
                            ]

                            port c {
                                label = "c"
                                position = left:4
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7864, 8216
                            ]

                            port d {
                                label = "Ud1"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7520, 8136
                            ]

                            port alpha {
                                label = "alpha1"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8232
                            ]

                            port a {
                                label = "a"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7864, 8152
                            ]

                            port q {
                                label = "Uq1"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7472, 8168
                            ]

                            port b {
                                label = "b"
                                position = left:3
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7896, 8184
                            ]

                            connect q "dq to abc1.q_input" as Connection6
                            connect d "dq to abc1.d_input" as Connection3
                            connect "dq to abc1.phase_b" b as Connection4
                            connect c "dq to abc1.phase_c" as Connection2
                            connect a "dq to abc1.phase_a" as Connection1
                            connect o_ref.out "dq to abc1.zero_input" as Connection5
                            connect alpha "dq to abc1.wt" as Connection7
                        }
                        [
                            position = 7912, 8624
                            size = 80, 168
                        ]

                        component gen_gain Gain4 {
                            gain = "R_s/Z_DQ"
                        }
                        [
                            position = 9328, 8192
                            scale = -1, 1
                        ]

                        component Subsystem "inner current control loop" {
                            layout = dynamic
                            component gen_gain Gain7 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8272, 8592
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 7760, 8048
                                scale = -1, 1
                            ]

                            component gen_sum Sum5 {
                                signs = "+-"
                            }
                            [
                                position = 8024, 8104
                                scale = -1, 1
                            ]

                            component gen_sum Sum7 {
                            }
                            [
                                position = 7760, 8400
                                scale = -1, 1
                            ]

                            component gen_sum Sum6 {
                            }
                            [
                                position = 8032, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8168, 8560
                                scale = -1, 1
                            ]

                            component gen_gain Gain6 {
                                gain = "L_i/Z_DQ"
                            }
                            [
                                position = 8256, 8240
                                scale = -1, 1
                            ]

                            component gen_sum Sum8 {
                                signs = "+-"
                            }
                            [
                                position = 8432, 8024
                                scale = -1, 1
                            ]

                            component gen_sum Sum9 {
                                signs = "+-"
                            }
                            [
                                position = 8424, 8360
                                scale = -1, 1
                            ]

                            component gen_gain Gain5 {
                                gain = "[0.5]"
                            }
                            [
                                position = 7720, 8600
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller1" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                ki_source = "external"
                                kp = "Kp_I/Z_DQ"
                                kp_source = "external"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8040
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 8168, 8208
                                scale = -1, 1
                            ]

                            component gen_probe id_err {
                            }
                            [
                                position = 8544, 7944
                            ]

                            component gen_probe iq_err {
                            }
                            [
                                position = 8560, 8272
                            ]

                            component gen_z_domain_transfer "Discrete Transfer Function1" {
                                a_coeff = "[1e-6,1]"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8144, 7920
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_z_domain_transfer "Discrete Transfer Function2" {
                                a_coeff = "[1e-6,1]"
                                domain = "S-domain"
                                method = "Bilinear"
                            }
                            [
                                position = 8120, 8296
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_product Product5 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8056
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                                signs = "*/"
                            }
                            [
                                position = 7600, 8408
                                scale = -1, 1
                            ]

                            component src_scada_input kp_i_d {
                                def_value = "Kp_I"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8368, 8064
                                scale = -1, 1
                            ]

                            component src_scada_input ki_i_d {
                                def_value = "Ki_I"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8368, 8120
                                scale = -1, 1
                            ]

                            component gen_gain Gain8 {
                                gain = "1/Z_DQ"
                            }
                            [
                                position = 8296, 8064
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_gain Gain9 {
                                gain = "1/Z_DQ"
                            }
                            [
                                position = 8296, 8120
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_pid_controller "PID controller2" {
                                controller_type = "PI"
                                enb_anti_windup_out = "True"
                                enb_output_limit_out = "True"
                                ki = "Ki_I/Z_DQ"
                                ki_source = "external"
                                kp = "Kp_I/Z_DQ"
                                kp_source = "external"
                                lower_sat_lim = "Imin"
                                upper_sat_lim = "Imax"
                            }
                            [
                                position = 8200, 8376
                                scale = -1, 1
                            ]

                            component src_scada_input kp_i_q {
                                def_value = "Kp_I"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8368, 8400
                                scale = -1, 1
                            ]

                            component src_scada_input ki_i_q {
                                def_value = "Ki_I"
                                execution_rate = "Ts"
                                unit = ""
                            }
                            [
                                position = 8368, 8456
                                scale = -1, 1
                            ]

                            component gen_gain Gain10 {
                                gain = "1/Z_DQ"
                            }
                            [
                                position = 8296, 8400
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_gain Gain11 {
                                gain = "1/Z_DQ"
                            }
                            [
                                position = 8296, 8456
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit1 {
                                lower_limit = "[-1.2]"
                                upper_limit = "[1.2]"
                            }
                            [
                                position = 7488, 8056
                                hide_name = True
                                scale = -1, 1
                            ]

                            component gen_limiter Limit2 {
                                lower_limit = "[-1.2]"
                                upper_limit = "[1.2]"
                            }
                            [
                                position = 7472, 8408
                                hide_name = True
                                scale = -1, 1
                            ]

                            port Uq1 {
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8408
                                rotation = down
                            ]

                            port Xi_q_meas1 {
                                label = "Xi_q_meas1"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8400
                                rotation = down
                            ]

                            port Xi_q_ref1 {
                                label = "Xi_q_ref1"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8560, 8352
                                rotation = down
                            ]

                            port Ud1 {
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8056
                                rotation = down
                            ]

                            port Xi_d_ref1 {
                                label = "Xi_d_ref1"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8016
                                rotation = down
                            ]

                            port Xi_d_meas1 {
                                label = "Xi_d_meas1"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8544, 8112
                                rotation = down
                            ]

                            tag From23 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8272, 8176
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From24 {
                                value = "Ed1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8240, 7920
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From26 {
                                value = "Eq1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8208, 8296
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From27 {
                                value = "VDC1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7816, 8600
                                scale = -1, 1
                                size = 60, 20
                            ]

                            tag From25 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8288, 8536
                                scale = -1, 1
                                size = 60, 20
                            ]

                            junction Junction177 sp
                            [
                                position = 8504, 8112
                            ]

                            junction Junction176 sp
                            [
                                position = 8504, 8368
                            ]

                            junction Junction181 sp
                            [
                                position = 8288, 8024
                            ]

                            junction Junction182 sp
                            [
                                position = 7640, 8416
                            ]

                            junction Junction183 sp
                            [
                                position = 8288, 8360
                            ]

                            connect From23 Product1.in as Connection1
                            connect Sum5.in1 Product1.out as Connection24
                            connect Gain6.out Product1.in1 as Connection289
                            connect Junction177 Gain7.in as Connection300
                            connect Gain7.out Product2.in1 as Connection293
                            connect Xi_q_meas1 Junction176 as Connection290
                            connect Sum6.in1 Product2.out as Connection26
                            connect Junction176 Sum9.in1 as Connection291
                            connect Sum8.in1 Junction177 as Connection301
                            connect From25 Product2.in as Connection2
                            connect Sum8.in Xi_d_ref1 as Connection297
                            connect Sum9.in Xi_q_ref1 as Connection283
                            connect Gain6.in Junction176 as Connection292
                            connect Xi_d_meas1 Junction177 as Connection299
                            connect Sum8.out Junction181 as Connection313
                            connect Junction181 "PID controller1.in" as Connection314
                            [
                                breakpoints = 8288, 8024; 8240, 8024
                            ]
                            connect id_err.in Junction181 as Connection315
                            connect Sum3.in "PID controller1.out" as Connection316
                            [
                                breakpoints = 7896, 8040; 8160, 8040; 8160, 8040
                            ]
                            connect Sum5.in "Discrete Transfer Function1.out" as Connection318
                            [
                                breakpoints = 8088, 8096; 8088, 7920
                            ]
                            connect "Discrete Transfer Function1.in" From24 as Connection319
                            connect From26 "Discrete Transfer Function2.in" as Connection320
                            connect "Discrete Transfer Function2.out" Sum6.in as Connection321
                            connect Product5.in Sum3.out as Connection322
                            connect Product6.in Sum7.out as Connection324
                            connect Sum7.in1 Sum6.out as Connection326
                            connect Sum5.out Sum3.in1 as Connection327
                            connect Gain5.out Junction182 as Connection329
                            connect Junction182 Product6.in1 as Connection330
                            connect Product5.in1 Junction182 as Connection331
                            connect From27 Gain5.in as Connection332
                            connect kp_i_d.out Gain8.in as Connection333
                            connect Gain9.in ki_i_d.out as Connection334
                            connect Gain8.out "PID controller1.kp_in" as Connection335
                            connect kp_i_q.out Gain10.in as Connection342
                            connect Gain11.in ki_i_q.out as Connection343
                            connect Gain10.out "PID controller2.kp_in" as Connection344
                            connect "PID controller2.out" Sum7.in as Connection346
                            connect Gain11.out "PID controller2.ki_in" as Connection347
                            [
                                breakpoints = 8248, 8456; 8248, 8392; 8248, 8392
                            ]
                            connect Gain9.out "PID controller1.ki_in" as Connection348
                            connect Sum9.out Junction183 as Connection349
                            connect Junction183 iq_err.in as Connection350
                            [
                                breakpoints = 8288, 8360
                            ]
                            connect "PID controller2.in" Junction183 as Connection351
                            connect Product5.out Limit1.in as Connection352
                            connect Limit1.out Ud1 as Connection353
                            connect Product6.out Limit2.in as Connection354
                            connect Limit2.out Uq1 as Connection355
                        }
                        [
                            position = 8176, 8592
                            size = 96, 184
                        ]

                        component gen_probe Xi_d_ref {
                        }
                        [
                            position = 8216, 8416
                            rotation = down
                        ]

                        component gen_probe Xi_q_ref {
                        }
                        [
                            position = 8256, 8768
                            rotation = down
                        ]

                        component gen_probe Ud {
                        }
                        [
                            position = 7912, 8456
                            scale = -1, 1
                        ]

                        component gen_probe Uq {
                        }
                        [
                            position = 7984, 8672
                            scale = -1, 1
                        ]

                        component gen_probe Eq_ref {
                        }
                        [
                            position = 9032, 8176
                            rotation = down
                        ]

                        component gen_probe Ed_ref {
                        }
                        [
                            position = 9016, 8544
                            rotation = down
                        ]

                        component gen_probe alpha {
                        }
                        [
                            position = 7984, 8768
                            scale = -1, 1
                        ]

                        component Subsystem "outer power loop" {
                            layout = dynamic
                            component sys_signal_switch "Signal switch1" {
                                threshold = "0.5"
                            }
                            [
                                position = 8256, 8328
                                scale = -1, -1
                            ]

                            component gen_comparator Comparator1 {
                            }
                            [
                                position = 8352, 8368
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                                signs = "+-"
                            }
                            [
                                position = 8232, 8072
                                scale = -1, 1
                            ]

                            component gen_product Product1 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8080
                                scale = -1, 1
                            ]

                            component gen_probe Et_sqr_res {
                            }
                            [
                                position = 8224, 8256
                            ]

                            component gen_product Product2 {
                                signs = "*/"
                            }
                            [
                                position = 8120, 8168
                                scale = -1, 1
                            ]

                            component gen_product Product4 {
                            }
                            [
                                position = 8440, 8080
                                scale = -1, 1
                            ]

                            component gen_sum Sum4 {
                            }
                            [
                                position = 8232, 8160
                                scale = -1, 1
                            ]

                            component gen_product Product5 {
                            }
                            [
                                position = 8440, 8152
                                scale = -1, 1
                            ]

                            component gen_product Product3 {
                            }
                            [
                                position = 8440, 8008
                                scale = -1, 1
                            ]

                            component src_constant Limit_zero {
                                execution_rate = "Ts"
                                value = "[0.1]"
                            }
                            [
                                position = 8464, 8408
                                scale = -1, 1
                            ]

                            component gen_product Product6 {
                            }
                            [
                                position = 8440, 8224
                                scale = -1, 1
                            ]

                            component src_constant one {
                                execution_rate = "Ts"
                                value = "[1]"
                            }
                            [
                                position = 8344, 8312
                                scale = -1, 1
                            ]

                            component gen_gain Gain4 {
                                gain = "C_s*Z_DQ"
                            }
                            [
                                position = 8136, 7944
                                scale = -1, 1
                            ]

                            component gen_sum Sum10 {
                                signs = "++"
                            }
                            [
                                position = 7776, 8072
                                scale = -1, 1
                            ]

                            component gen_product Product7 {
                            }
                            [
                                position = 8040, 7912
                                scale = -1, 1
                            ]

                            component gen_gain Gain5 {
                                gain = "C_s*Z_DQ"
                            }
                            [
                                position = 7952, 8352
                                scale = -1, 1
                            ]

                            component gen_product Product8 {
                            }
                            [
                                position = 7856, 8320
                                scale = -1, 1
                            ]

                            component gen_sum Sum11 {
                                signs = "+-"
                            }
                            [
                                position = 7736, 8176
                                scale = -1, 1
                            ]

                            port Q_ref {
                                label = "Q_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8216
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8000
                                rotation = down
                            ]

                            port Xi_rq {
                                label = "Xi_rq"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7648, 8072
                                rotation = down
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = right:6
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8600, 8360
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8072
                                rotation = down
                            ]

                            port P_ref {
                                label = "P_ref"
                                position = right:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8648, 8144
                                rotation = down
                            ]

                            port Xi_rd {
                                label = "Xi_rd"
                                position = left:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7648, 8176
                                rotation = down
                            ]

                            tag From33 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8168, 7872
                                scale = -1, 1
                            ]

                            tag From38 {
                                value = "E_d1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8264, 7944
                                scale = -1, 1
                            ]

                            tag From39 {
                                value = "w1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 7984, 8280
                                scale = -1, 1
                            ]

                            tag From40 {
                                value = "E_q1"
                                scope = masked_subsystem
                                kind = sp
                                direction = out
                            }
                            [
                                position = 8080, 8352
                                scale = -1, 1
                            ]

                            junction Junction142 sp
                            [
                                position = 8528, 8072
                            ]

                            junction Junction143 sp
                            [
                                position = 8544, 8000
                            ]

                            junction Junction144 sp
                            [
                                position = 8408, 8360
                            ]

                            junction Junction147 sp
                            [
                                position = 8184, 8328
                            ]

                            junction Junction138 sp
                            [
                                position = 8160, 8176
                            ]

                            junction Junction139 sp
                            [
                                position = 8568, 8144
                            ]

                            junction Junction141 sp
                            [
                                position = 8560, 8216
                            ]

                            connect Product1.in Sum3.out as Connection23
                            connect Product6.in1 Junction143 as Connection36
                            connect Et_sqr_res.in Junction147 as Connection5
                            connect Product2.in1 Junction138 as Connection25
                            connect Product3.out Sum3.in as Connection28
                            connect Junction138 Product1.in1 as Connection9
                            connect Comparator1.in1 Junction144 as Connection1
                            connect Product6.out Sum4.in1 as Connection37
                            connect Product4.in1 Junction141 as Connection29
                            connect Limit_zero.out Comparator1.in2 as Connection19
                            connect Product4.in Junction142 as Connection30
                            connect Comparator1.out "Signal switch1.in2" as Connection2
                            connect Junction141 Q_ref as Connection11
                            connect "Signal switch1.in" Junction144 as Connection38
                            connect Product4.out Sum3.in1 as Connection31
                            connect Junction142 Ed as Connection12
                            connect Eq Junction143 as Connection3
                            connect Junction143 Product3.in as Connection13
                            connect "Signal switch1.out" Junction147 as Connection39
                            connect Product5.in Junction139 as Connection32
                            connect Product5.in1 Junction142 as Connection33
                            connect Product5.out Sum4.in as Connection34
                            connect one.out "Signal switch1.in1" as Connection40
                            connect Product6.in Junction141 as Connection35
                            connect Product2.in Sum4.out as Connection26
                            connect Product3.in1 Junction139 as Connection27
                            connect Junction138 Junction147 as Connection47
                            [
                                breakpoints = 8160, 8176; 8160, 8264
                            ]
                            connect P_ref Junction139 as Connection48
                            [
                                breakpoints = 8600, 8144
                            ]
                            connect Et_p2 Junction144 as Connection49
                            [
                                breakpoints = 8424, 8360
                            ]
                            connect From33 Product7.in as Connection68
                            connect Gain4.out Product7.in1 as Connection69
                            connect From38 Gain4.in as Connection260
                            connect Sum10.in1 Product1.out as Connection261
                            connect Product7.out Sum10.in as Connection262
                            connect Xi_rq Sum10.out as Connection263
                            connect From39 Product8.in as Connection264
                            connect Gain5.out Product8.in1 as Connection265
                            connect From40 Gain5.in as Connection266
                            connect Sum11.in Product2.out as Connection267
                            connect Product8.out Sum11.in1 as Connection268
                            connect Sum11.out Xi_rd as Connection269
                        }
                        [
                            position = 8840, 8784
                            size = 176, 128
                        ]

                        component Subsystem squared_Vt2 {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 8208, 8160
                                scale = -1, 1
                            ]

                            component gen_sum Sum3 {
                            }
                            [
                                position = 8104, 8192
                                scale = -1, 1
                            ]

                            component gen_product Product2 {
                            }
                            [
                                position = 8208, 8232
                                scale = -1, 1
                            ]

                            port Et_p2 {
                                label = "Et^2"
                                position = left:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8192
                                rotation = down
                            ]

                            port Eq {
                                label = "Eq"
                                position = right:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8224
                                rotation = down
                            ]

                            port Ed {
                                label = "Ed"
                                position = right:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8328, 8152
                                rotation = down
                            ]

                            junction Junction137 sp
                            [
                                position = 8280, 8224
                            ]

                            junction Junction136 sp
                            [
                                position = 8280, 8152
                            ]

                            connect Junction137 Eq as Connection3
                            connect Product2.in Junction137 as Connection6
                            connect Sum3.in Product1.out as Connection8
                            connect Junction136 Ed as Connection1
                            connect Product1.in1 Junction136 as Connection4
                            connect Sum3.in1 Product2.out as Connection9
                            connect Product2.in1 Junction137 as Connection5
                            connect Sum3.out Et_p2 as Connection7
                            connect Junction136 Product1.in as Connection2
                        }
                        [
                            position = 8992, 8848
                            size = 48, 56
                        ]

                        component sys_signal_switch "Signal switch2" {
                            criterion = "ctrl != threshold"
                            threshold = "1"
                        }
                        [
                            position = 8496, 8576
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_bus_join "Bus Join1" {
                        }
                        [
                            position = 8616, 8400
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_bus_split "Bus Split1" {
                        }
                        [
                            position = 8392, 8576
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_bus_join "Bus Join2" {
                        }
                        [
                            position = 8616, 8776
                            hide_name = True
                            scale = -1, 1
                        ]

                        component src_constant Constant1 {
                            execution_rate = "Ts"
                            signal_type = "int"
                            value = "0"
                        }
                        [
                            position = 8424, 8712
                            hide_name = True
                        ]

                        port Ua {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8560
                            rotation = down
                        ]

                        port E_q_ref1 {
                            label = "E_q_ref1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 9472, 8304
                            rotation = down
                        ]

                        port Uc {
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8688
                            rotation = down
                        ]

                        port E_d_ref1 {
                            label = "E_d_ref1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 9456, 8632
                            rotation = down
                        ]

                        port Ub {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8624
                            rotation = down
                        ]

                        tag From36 {
                            value = "E_q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8992, 8416
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From29 {
                            value = "Xi_d1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8568
                            scale = -1, 1
                        ]

                        tag From40 {
                            value = "Xi_q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9536, 8232
                            rotation = down
                        ]

                        tag From38 {
                            value = "Id1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9536, 8448
                            rotation = down
                            size = 56, 20
                        ]

                        tag From1 {
                            value = "alpha1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8176, 8728
                            scale = -1, 1
                            size = 63, 25
                        ]

                        tag From30 {
                            value = "Xi_q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8664
                            scale = -1, 1
                        ]

                        tag From31 {
                            value = "Iq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9536, 8152
                            rotation = down
                        ]

                        tag From39 {
                            value = "Xi_d1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9536, 8544
                            rotation = down
                        ]

                        tag From37 {
                            value = "E_d1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8992, 8464
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From20 {
                            value = "Ed1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9152, 8784
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From41 {
                            value = "Eq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9152, 8816
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From42 {
                            value = "Pref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9064, 8728
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        tag From43 {
                            value = "Qref"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9064, 8760
                            hide_name = True
                            scale = -1, 1
                            size = 67, 20
                        ]

                        junction Junction3 sp
                        [
                            position = 7984, 8560
                        ]

                        junction Junction4 sp
                        [
                            position = 8032, 8624
                        ]

                        junction Junction7 sp
                        [
                            position = 9112, 8232
                        ]

                        junction Junction9 sp
                        [
                            position = 8080, 8728
                        ]

                        junction Junction10 sp
                        [
                            position = 8296, 8520
                        ]

                        junction Junction11 sp
                        [
                            position = 8336, 8616
                        ]

                        junction Junction12 sp
                        [
                            position = 9136, 8544
                        ]

                        junction Junction13 sp
                        [
                            position = 9064, 8784
                        ]

                        junction Junction14 sp
                        [
                            position = 9088, 8816
                        ]

                        connect Sum11.out Gain4.in as Connection290
                        connect From31 Sum11.in as Connection293
                        connect From29 "inner current control loop.Xi_d_meas1" as Connection253
                        connect Sum7.in1 E_d_ref1 as Connection324
                        connect From30 "inner current control loop.Xi_q_meas1" as Connection257
                        connect Sum10.out Gain3.in as Connection287
                        connect "dq to abc.c" Uc as Connection284
                        connect "dq to abc.b" Ub as Connection282
                        connect Gain6.in "inner current control loop.Uq1" as Connection346
                        [
                            breakpoints = 8112, 8664
                        ]
                        connect From40 Sum11.in1 as Connection294
                        connect From39 Sum10.in1 as Connection286
                        connect E_q_ref1 Sum8.in1 as Connection344
                        connect "dq to abc.a" Ua as Connection283
                        connect Gain5.in "inner current control loop.Ud1" as Connection345
                        [
                            breakpoints = 8112, 8520
                        ]
                        connect Gain3.out Sum7.in as Connection289
                        connect Gain4.out Sum8.in as Connection343
                        connect From38 Sum10.in as Connection285
                        connect "dq to abc.d" Junction3 as Connection374
                        connect Junction3 Gain5.out as Connection375
                        connect Ud.in Junction3 as Connection376
                        connect "dq to abc.q" Junction4 as Connection377
                        connect Junction4 Gain6.out as Connection378
                        connect Uq.in Junction4 as Connection379
                        connect Sum8.out Junction7 as Connection398
                        connect Junction7 "Outer voltage control loop.^E_q_ref" as Connection399
                        [
                            breakpoints = 9112, 8232
                        ]
                        connect Eq_ref.in Junction7 as Connection400
                        connect From36 "Outer voltage control loop.^E_q" as Connection404
                        connect From37 "Outer voltage control loop.^E_d" as Connection405
                        connect "dq to abc.alpha" Junction9 as Connection406
                        [
                            breakpoints = 7968, 8728
                        ]
                        connect Junction9 From1 as Connection407
                        [
                            breakpoints = 8112, 8728
                        ]
                        connect alpha.in Junction9 as Connection408
                        connect squared_Vt2.Et_p2 "outer power loop.Et_p2" as Connection359
                        connect "Bus Join1.in" "Outer voltage control loop.Xi_rd" as Connection412
                        connect "Bus Join1.in1" "Outer voltage control loop.Xi_rq" as Connection413
                        connect Xi_d_ref.in Junction10 as Connection414
                        [
                            breakpoints = 8296, 8504
                        ]
                        connect Junction10 "inner current control loop.Xi_d_ref1" as Connection415
                        [
                            breakpoints = 8288, 8520
                        ]
                        connect "Bus Split1.out" Junction10 as Connection416
                        [
                            breakpoints = 8344, 8568; 8344, 8520
                        ]
                        connect "inner current control loop.Xi_q_ref1" Junction11 as Connection417
                        connect Junction11 Xi_q_ref.in as Connection418
                        [
                            breakpoints = 8336, 8632; 8336, 8632
                        ]
                        connect "Bus Split1.out1" Junction11 as Connection419
                        connect "Bus Join2.in" "outer power loop.Xi_rd" as Connection420
                        connect "Bus Join2.in1" "outer power loop.Xi_rq" as Connection421
                        connect "Signal switch2.in1" "Bus Join1.out" as Connection422
                        connect "Signal switch2.in" "Bus Join2.out" as Connection423
                        connect "Bus Split1.in" "Signal switch2.out" as Connection424
                        connect "Outer voltage control loop.^E_d_ref" Junction12 as Connection426
                        [
                            breakpoints = 9136, 8384; 9136, 8384
                        ]
                        connect Junction12 Sum7.out as Connection427
                        connect Ed_ref.in Junction12 as Connection428
                        connect Constant1.out "Signal switch2.in2" as Connection439
                        connect From42 "outer power loop.P_ref" as Connection431
                        connect From43 "outer power loop.Q_ref" as Connection432
                        connect From20 Junction13 as Connection433
                        connect Junction13 "outer power loop.Ed" as Connection434
                        connect squared_Vt2.Ed Junction13 as Connection435
                        connect From41 Junction14 as Connection436
                        connect Junction14 "outer power loop.Eq" as Connection437
                        [
                            breakpoints = 9088, 8816; 9032, 8816
                        ]
                        connect squared_Vt2.Eq Junction14 as Connection438
                    }
                    [
                        position = 7360, 7952
                        size = 128, 152
                    ]

                    component gen_limiter Limit1 {
                        lower_limit = "[-1]"
                        upper_limit = "[1]"
                    }
                    [
                        position = 7136, 7952
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_c_function "C function1" {
                        execution_rate = "Ts"
                        in_terminal_dimensions = "inherit;inherit;inherit"
                        in_terminal_dimensions_str = "in inherit;pi inherit;Ts inherit"
                        in_terminal_labels = "[(\'in\', False), (\'pi\', False), (\'Ts\', False)]"
                        in_terminal_properties = "real in;inherit pi;inherit Ts;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', False)]"
                        output_fnc = "/*Begin code section*/
out = out + in*Ts;
if (out>=2*pi){
    out = out - 2*pi;
}
/*End code section*/"
                    }
                    [
                        position = 8456, 8536
                        hide_name = True
                        scale = -1, 1
                        size = 48, 64
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "np.pi"
                    }
                    [
                        position = 8680, 8584
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "Ts"
                    }
                    [
                        position = 8560, 8568
                        hide_name = True
                        scale = -1, 1
                    ]

                    component Subsystem "Frequency droop" {
                        layout = dynamic
                        component gen_sum Sum1 {
                            signs = "+-"
                        }
                        [
                            position = 8160, 8120
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_sum Sum4 {
                            signs = "++"
                        }
                        [
                            position = 7880, 8216
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_gain Gain3 {
                            gain = "1/D_f"
                        }
                        [
                            position = 8088, 8120
                            hide_name = True
                            scale = -1, 1
                        ]

                        component src_constant Constant4 {
                            execution_rate = "Ts"
                            value = "w_0"
                        }
                        [
                            position = 8056, 8272
                            hide_name = True
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            criterion = "ctrl != threshold"
                            threshold = "1"
                        }
                        [
                            position = 8112, 8304
                            hide_name = True
                            scale = -1, -1
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "w_0"
                        }
                        [
                            position = 8176, 8320
                            hide_name = True
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch2" {
                            criterion = "ctrl != threshold"
                            threshold = "1"
                        }
                        [
                            position = 7992, 8288
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_sum Sum5 {
                            signs = "++"
                        }
                        [
                            position = 8232, 8288
                            hide_name = True
                            scale = -1, 1
                        ]

                        component src_clock Clock1 {
                            execution_rate = "Ts"
                        }
                        [
                            position = 8112, 8168
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_c_function "C function1" {
                            in_terminal_dimensions = "1;1"
                            in_terminal_dimensions_str = "in 1;clk 1"
                            in_terminal_labels = "[(\'in\', True), (\'clk\', True)]"
                            in_terminal_properties = "real in;inherit clk;"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', False)]"
                            output_fnc = "/*Begin code section*/
if (clk>120){
    out = in;
}
else{out=0;}
/*End code section*/"
                        }
                        [
                            position = 8000, 8128
                            hide_name = True
                            scale = -1, 1
                            size = 48, 48
                        ]

                        component gen_c_function "C function2" {
                            global_variables = "real time;int connected;"
                            in_terminal_dimensions = "1;1;1"
                            in_terminal_dimensions_str = "in 1;clk 1;cnt 1"
                            in_terminal_labels = "[(\'in\', True), (\'clk\', True), (\'cnt\', True)]"
                            in_terminal_properties = "real in;inherit clk;inherit cnt;"
                            init_fnc = "/*Begin code section*/
connected = 0;
time = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', False)]"
                            output_fnc = "/*Begin code section*/
/*
if (connected>0 && clk<time+60){
    out = out + 0.001*(in-out);
}
else{out=in;}
*/
if (cnt>0) out=in;
else out = 2*3.14159265359*60;
/*End code section*/"
                            update_fnc = "/*Begin code section*/
if (connected<1 && cnt>0){
    time = clk;
}
if (cnt>0){connected = 1;}
/*End code section*/"
                        }
                        [
                            position = 7752, 8224
                            hide_name = True
                            scale = -1, 1
                            size = 48, 64
                        ]

                        component src_clock Clock2 {
                            execution_rate = "Ts"
                        }
                        [
                            position = 7880, 8272
                            hide_name = True
                            scale = -1, 1
                        ]

                        port w1 {
                            label = "w1"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7680, 8216
                            scale = -1, 1
                        ]

                        port U_P {
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8096
                            scale = -1, 1
                        ]

                        tag From17 {
                            value = "P1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8248, 8144
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag theta_bus7 {
                            value = "del_w"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8328, 8264
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag w_bus2 {
                            value = "w_bus"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8328, 8312
                            hide_name = True
                            scale = -1, -1
                        ]

                        tag MT_ON1 {
                            value = "INV_sync"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8176, 8352
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag MT_ON2 {
                            value = "Connect"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8176, 8392
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag MT_ON3 {
                            value = "Island"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7880, 8384
                            hide_name = True
                            scale = -1, 1
                        ]

                        connect U_P Sum1.in as Connection368
                        connect From17 Sum1.in1 as Connection316
                        connect Gain3.in Sum1.out as Connection392
                        connect MT_ON1 "Signal switch1.in2" as Connection393
                        connect "Signal switch1.in1" Sum5.out as Connection396
                        connect theta_bus7 Sum5.in as Connection397
                        connect w_bus2 Sum5.in1 as Connection398
                        connect Constant2.out "Signal switch1.in" as Connection399
                        connect "Signal switch1.out" "Signal switch2.in" as Connection400
                        connect Constant4.out "Signal switch2.in1" as Connection402
                        connect "Signal switch2.out" Sum4.in1 as Connection403
                        connect Clock1.out "C function1.clk" as Connection413
                        connect Sum4.in "C function1.out" as Connection414
                        connect Gain3.out "C function1.in" as Connection415
                        connect "C function2.in" Sum4.out as Connection416
                        connect "C function2.out" w1 as Connection417
                        connect Clock2.out "C function2.clk" as Connection418
                        [
                            breakpoints = 7832, 8272; 7832, 8224
                        ]
                        connect MT_ON2 "Signal switch2.in2" as Connection422
                        [
                            breakpoints = 8176, 8392; 7992, 8392
                        ]
                        connect MT_ON3 "C function2.cnt" as Connection423
                    }
                    [
                        position = 8352, 8184
                        size = 96, 120
                    ]

                    component Subsystem "Voltage droop" {
                        layout = dynamic
                        component gen_sum Sum2 {
                            signs = "+-"
                        }
                        [
                            position = 8208, 8104
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_probe E_1 {
                        }
                        [
                            position = 7872, 8104
                        ]

                        component gen_gain Gain3 {
                            gain = "1/D_V"
                        }
                        [
                            position = 8128, 8104
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_sum Sum4 {
                        }
                        [
                            position = 7872, 8208
                            hide_name = True
                            scale = -1, 1
                        ]

                        component src_constant Constant4 {
                            execution_rate = "Ts"
                        }
                        [
                            position = 8072, 8272
                            hide_name = True
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            criterion = "ctrl != threshold"
                            threshold = "1"
                        }
                        [
                            position = 8128, 8304
                            hide_name = True
                            scale = -1, -1
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                        }
                        [
                            position = 8192, 8320
                            hide_name = True
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch2" {
                            criterion = "ctrl != threshold"
                            threshold = "1"
                        }
                        [
                            position = 8008, 8288
                            hide_name = True
                            scale = -1, -1
                        ]

                        component gen_sum Sum5 {
                            signs = "++"
                        }
                        [
                            position = 8248, 8288
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_probe dQ {
                        }
                        [
                            position = 8216, 8040
                        ]

                        component gen_c_function "C function1" {
                            in_terminal_dimensions = "1;1"
                            in_terminal_dimensions_str = "in 1;clk 1"
                            in_terminal_labels = "[(\'in\', True), (\'clk\', True)]"
                            in_terminal_properties = "real in;inherit clk;"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', False)]"
                            output_fnc = "/*Begin code section*/
if (clk>120){
    out = in;
}
else{out=0;}
/*End code section*/"
                        }
                        [
                            position = 8016, 8112
                            hide_name = True
                            scale = -1, 1
                            size = 48, 48
                        ]

                        component src_clock Clock1 {
                            execution_rate = "Ts"
                        }
                        [
                            position = 8128, 8152
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_c_function "C function2" {
                            global_variables = "real time;int connected;"
                            in_terminal_dimensions = "1;1;1"
                            in_terminal_dimensions_str = "in 1;clk 1;cnt 1"
                            in_terminal_labels = "[(\'in\', True), (\'clk\', True), (\'cnt\', True)]"
                            in_terminal_properties = "real in;inherit clk;inherit cnt;"
                            init_fnc = "/*Begin code section*/
connected = 0;
time = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', False)]"
                            output_fnc = "/*Begin code section*/
//if (connected<1){out=in;}
/*
if (connected>0 && clk<time+60){
    out = out + 0.001*(in-out);
}
else{out=in;}
*/
if (cnt>0) out=in;
else out = 1;
/*End code section*/"
                            update_fnc = "/*Begin code section*/
if (connected<1 && cnt>0){
    time = clk;
}
if (cnt>0){connected = 1;}
/*End code section*/"
                        }
                        [
                            position = 7640, 8224
                            hide_name = True
                            scale = -1, 1
                            size = 48, 64
                        ]

                        component src_clock Clock2 {
                            execution_rate = "Ts"
                        }
                        [
                            position = 7776, 8280
                            hide_name = True
                            scale = -1, 1
                        ]

                        port E_magnitude1 {
                            label = "E_magnitude1"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8208
                            scale = -1, 1
                        ]

                        port Q_ref1 {
                            label = "Q_ref1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8352, 8080
                            scale = -1, 1
                        ]

                        tag From18 {
                            value = "Q1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8352, 8128
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag theta_bus7 {
                            value = "del_V"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8344, 8264
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag w_bus2 {
                            value = "|V| bus"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8344, 8312
                            hide_name = True
                            scale = -1, -1
                        ]

                        tag MT_ON1 {
                            value = "INV_sync"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8192, 8352
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag MT_ON2 {
                            value = "Connect"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8192, 8392
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From44 {
                            value = "Island"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7776, 8328
                            hide_name = True
                            scale = -1, 1
                            size = 60, 20
                        ]

                        junction Junction2 sp
                        [
                            position = 8160, 8104
                        ]

                        junction Junction3 sp
                        [
                            position = 7808, 8208
                        ]

                        connect From18 Sum2.in1 as Connection323
                        connect Q_ref1 Sum2.in as Connection360
                        connect MT_ON1 "Signal switch1.in2" as Connection393
                        connect "Signal switch1.in1" Sum5.out as Connection396
                        connect theta_bus7 Sum5.in as Connection397
                        connect w_bus2 Sum5.in1 as Connection398
                        connect Constant2.out "Signal switch1.in" as Connection399
                        connect "Signal switch2.out" Sum4.in1 as Connection403
                        connect "Signal switch1.out" "Signal switch2.in" as Connection404
                        connect Constant4.out "Signal switch2.in1" as Connection405
                        connect Gain3.in Junction2 as Connection406
                        connect Junction2 Sum2.out as Connection407
                        connect dQ.in Junction2 as Connection408
                        connect Clock1.out "C function1.clk" as Connection413
                        connect Sum4.in "C function1.out" as Connection414
                        connect "C function1.in" Gain3.out as Connection415
                        connect Clock2.out "C function2.clk" as Connection418
                        [
                            breakpoints = 7728, 8280; 7728, 8232
                        ]
                        connect "C function2.out" E_magnitude1 as Connection420
                        connect E_1.in Junction3 as Connection421
                        connect Junction3 Sum4.out as Connection422
                        [
                            breakpoints = 7808, 8208
                        ]
                        connect "C function2.in" Junction3 as Connection423
                        connect "Signal switch2.in2" MT_ON2 as Connection427
                        [
                            breakpoints = 8008, 8392
                        ]
                        connect From44 "C function2.cnt" as Connection428
                    }
                    [
                        position = 8352, 7944
                        size = 120, 96
                    ]

                    port U_P {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8600, 8144
                        scale = -1, 1
                    ]

                    port U_Q {
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8528, 7912
                        scale = -1, 1
                    ]

                    tag Goto29 {
                        value = "E_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7760, 8392
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From6 {
                        value = "Xi_b1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8088, 7856
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto19 {
                        value = "Id1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7304, 8616
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto37 {
                        value = "P1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6808, 8232
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From24 {
                        value = "Ib1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8656
                        scale = -1, 1
                    ]

                    tag Goto47 {
                        value = "E_mag"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8512, 7976
                        hide_name = True
                    ]

                    tag From28 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8088, 7904
                        scale = -1, 1
                    ]

                    tag From42 {
                        value = "E_qR"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8008
                        scale = -1, 1
                    ]

                    tag Goto22 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7744, 7816
                        scale = -1, 1
                    ]

                    tag From37 {
                        value = "Id1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8256
                        scale = -1, 1
                    ]

                    tag From9 {
                        value = "Eb1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8160
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From7 {
                        value = "Xi_c1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8088, 7944
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto28 {
                        value = "E_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7760, 8520
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto23 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7744, 7944
                        scale = -1, 1
                    ]

                    tag Goto3 {
                        value = "Eq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7752, 8248
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From34 {
                        value = "E_c1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8520
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From36 {
                        value = "Ed1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8208
                        scale = -1, 1
                    ]

                    tag From8 {
                        value = "Ea1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8120
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From26 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8704
                        scale = -1, 1
                    ]

                    tag Goto17 {
                        value = "w1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8624, 8224
                        size = 60, 20
                    ]

                    tag From5 {
                        value = "Xi_a1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8088, 7816
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto20 {
                        value = "Iq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7304, 8744
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From23 {
                        value = "Ia1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8616
                        scale = -1, 1
                    ]

                    tag From20 {
                        value = "E_dR"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 7896
                        scale = -1, 1
                        size = 67, 20
                    ]

                    tag From40 {
                        value = "w1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8664, 8520
                        scale = -1, 1
                    ]

                    tag Goto45 {
                        value = "E_dR"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7760, 8648
                        scale = -1, 1
                        size = 64, 20
                    ]

                    tag Goto2 {
                        value = "modulator1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7064, 7952
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From10 {
                        value = "Ec1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8248
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From33 {
                        value = "E_a1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8392
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From25 {
                        value = "Ic1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7592, 8744
                        scale = -1, 1
                    ]

                    tag From27 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8208
                        scale = -1, 1
                    ]

                    tag From43 {
                        value = "E_mag"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7920, 8648
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag Goto4 {
                        value = "Ed1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7744, 8120
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag Goto36 {
                        value = "Q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6808, 8376
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From32 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8480
                        scale = -1, 1
                    ]

                    tag Goto21 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8248, 8536
                        scale = -1, 1
                    ]

                    tag Goto46 {
                        value = "E_qR"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7784, 8776
                        scale = -1, 1
                    ]

                    tag From35 {
                        value = "E_b1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8064, 8432
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From38 {
                        value = "Iq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8472
                        scale = -1, 1
                    ]

                    tag From39 {
                        value = "Eq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7568, 8400
                        scale = -1, 1
                    ]

                    tag Goto48 {
                        value = "w_e"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8592, 8312
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto49 {
                        value = "Pref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8488, 8088
                        scale = -1, 1
                    ]

                    tag Goto50 {
                        value = "Qref"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8400, 7840
                        scale = -1, 1
                    ]

                    junction Junction228 sp
                    [
                        position = 7520, 8400
                    ]

                    junction Junction230 sp
                    [
                        position = 7472, 8472
                    ]

                    junction Junction231 sp
                    [
                        position = 7520, 7896
                    ]

                    junction Junction258 sp
                    [
                        position = 7520, 8008
                    ]

                    junction Junction267 sp
                    [
                        position = 7136, 8368
                    ]

                    junction Junction268 sp
                    [
                        position = 7136, 8224
                    ]

                    junction Junction159 sp
                    [
                        position = 7472, 8208
                    ]

                    junction Junction269 sp
                    [
                        position = 7816, 8392
                    ]

                    junction Junction229 sp
                    [
                        position = 7520, 8256
                    ]

                    junction Junction158 sp
                    [
                        position = 7816, 8248
                    ]

                    junction Junction273 sp
                    [
                        position = 8544, 8312
                    ]

                    junction Junction274 sp
                    [
                        position = 6856, 8376
                    ]

                    junction Junction275 sp
                    [
                        position = 6856, 8232
                    ]

                    junction Junction276 sp
                    [
                        position = 8544, 8224
                    ]

                    junction Junction277 sp
                    [
                        position = 8552, 8144
                    ]

                    junction Junction278 sp
                    [
                        position = 8472, 7912
                    ]

                    connect From10 Current_abc_to_dq2.Ec2 as Connection234
                    connect From25 "Current_abc_to_dq4.^Ec2" as Connection699
                    connect Gain10.in "Current_abc_to_dq3.^Eq2" as Connection875
                    connect E_d1.in Junction269 as Connection965
                    connect Junction231 From20 as Connection728
                    connect E_q1.in Junction158 as Connection718
                    connect Current_abc_to_dq4.wt2 From26 as Connection702
                    connect Product111.in Junction159 as Connection703
                    connect Gain5.out Goto4 as Connection959
                    [
                        breakpoints = 7816, 8120
                    ]
                    connect Sum4.in Junction268 as Connection955
                    connect Current_abc_to_dq2.Ed2 Gain5.in as Connection870
                    connect Junction228 From39 as Connection680
                    connect Gain11.out Goto19 as Connection877
                    connect Current_abc_to_dq.Xi_d2 Gain6.in as Connection864
                    connect Gain13.out Integrator3.in as Connection925
                    connect From7 Current_abc_to_dq.Xi_c2 as Connection40
                    connect Junction158 Gain8.out as Connection868
                    connect Sum1.in1 Product13.out as Connection719
                    connect From6 Current_abc_to_dq.Xi_b2 as Connection39
                    connect Junction231 "Outer Voltage Loop + Inner Current Loop.E_d_ref1" as Connection736
                    connect "Current_abc_to_dq4.^Ea2" From23 as Connection701
                    connect From9 Current_abc_to_dq2.Eb2 as Connection235
                    connect "Outer Voltage Loop + Inner Current Loop.Ua" "Bus Join1.in" as Connection839
                    connect Goto23 Gain7.out as Connection962
                    connect Product12.out Sum2.in1 as Connection721
                    connect Sum5.in Junction267 as Connection952
                    connect f1.in Gain1.out as Connection318
                    connect E_dREF1.in Junction231 as Connection729
                    [
                        breakpoints = 7520, 7848; 7520, 7896
                    ]
                    connect E_qREF1.in Junction258 as Connection861
                    connect Product111.out Sum1.in as Connection684
                    connect Product13.in Junction228 as Connection679
                    connect Product12.in Junction159 as Connection720
                    connect "Current_abc_to_dq4.^Eb2" From24 as Connection700
                    connect "Outer Voltage Loop + Inner Current Loop.Uc" "Bus Join1.in2" as Connection840
                    connect From43 Goto45 as Connection881
                    connect Junction159 From36 as Connection698
                    connect P1.in Gain15.out as Connection966
                    connect Product10.out Sum2.in as Connection672
                    connect Gain15.in Junction268 as Connection967
                    connect Sum5.out Gain13.in as Connection926
                    connect Q1.in Gain14.out as Connection968
                    connect Product10.in Junction229 as Connection723
                    connect "Current_abc_to_dq4.^Ed2" Gain11.in as Connection876
                    connect Product12.in1 Junction230 as Connection678
                    connect Junction229 From37 as Connection683
                    connect Gain14.in Junction267 as Connection969
                    connect Current_abc_to_dq.wt2 From28 as Connection247
                    [
                        breakpoints = 8000, 7904; 8040, 7904
                    ]
                    connect Product10.in1 Junction228 as Connection681
                    connect From35 "Current_abc_to_dq3.^Eb2" as Connection276
                    connect Gain8.in Current_abc_to_dq2.Eq2 as Connection869
                    connect "Bus Join1.in1" "Outer Voltage Loop + Inner Current Loop.Ub" as Connection838
                    connect Gain9.out Junction269 as Connection963
                    connect Gain6.out Goto22 as Connection961
                    connect From42 Junction258 as Connection859
                    connect Current_abc_to_dq2.Ea2 From8 as Connection236
                    connect From34 "Current_abc_to_dq3.^Ec2" as Connection279
                    connect "Current_abc_to_dq3.^Ea2" From33 as Connection278
                    connect Junction269 Goto29 as Connection964
                    connect Junction258 "Outer Voltage Loop + Inner Current Loop.E_q_ref1" as Connection860
                    connect Junction230 From38 as Connection677
                    connect Product13.in1 Junction230 as Connection676
                    connect Sum4.out Gain4.in as Connection330
                    connect Constant1.out Goto46 as Connection882
                    connect From5 Current_abc_to_dq.Xi_a2 as Connection38
                    connect Gain12.in "Current_abc_to_dq4.^Eq2" as Connection879
                    connect Gain4.out Integrator2.in as Connection335
                    connect From27 Current_abc_to_dq2.wt2 as Connection246
                    connect From32 Current_abc_to_dq3.wt2 as Connection275
                    connect Product111.in1 Junction229 as Connection682
                    connect Goto20 Gain12.out as Connection878
                    connect "Current_abc_to_dq3.^Ed2" Gain9.in as Connection872
                    connect Goto28 Gain10.out as Connection874
                    connect Goto3 Junction158 as Connection292
                    connect Current_abc_to_dq.Xi_q2 Gain7.in as Connection866
                    connect Gain1.in Junction273 as Connection998
                    connect Goto48 Junction273 as Connection1000
                    connect Integrator3.out Junction274 as Connection1003
                    connect Junction274 Sum5.in1 as Connection1004
                    [
                        breakpoints = 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8424; 7120, 8424
                    ]
                    connect Goto36 Junction274 as Connection1005
                    connect Integrator2.out Junction275 as Connection1006
                    connect Junction275 Sum4.in1 as Connection1007
                    [
                        breakpoints = 6856, 8232; 6856, 8232; 6856, 8232; 6856, 8280; 7112, 8280
                    ]
                    connect Goto37 Junction275 as Connection1008
                    connect Junction267 Sum2.out as Connection1014
                    [
                        breakpoints = 7136, 8368; 7152, 8368
                    ]
                    connect Junction268 Sum1.out as Connection1013
                    [
                        breakpoints = 7136, 8224; 7152, 8224
                    ]
                    connect Goto2 Limit1.out as Connection1017
                    connect Limit1.in "Bus Join1.out" as Connection1018
                    connect "C function1.in" From40 as Connection1022
                    connect "C function1.out" Goto21 as Connection1023
                    connect Constant2.out "C function1.pi" as Connection1024
                    [
                        breakpoints = 8592, 8584; 8592, 8536
                    ]
                    connect Constant3.out "C function1.Ts" as Connection1025
                    connect "Voltage droop.E_magnitude1" Goto47 as Connection1028
                    connect Goto17 Junction276 as Connection1030
                    connect Junction276 Junction273 as Connection1031
                    [
                        breakpoints = 8592, 8224; 8544, 8224
                    ]
                    connect "Frequency droop.w1" Junction276 as Connection1032
                    connect "Frequency droop.U_P" Junction277 as Connection1033
                    connect Junction277 U_P as Connection1034
                    connect Goto49 Junction277 as Connection1035
                    connect "Voltage droop.Q_ref1" Junction278 as Connection1036
                    connect Junction278 U_Q as Connection1037
                    connect Goto50 Junction278 as Connection1038
                }
                [
                    position = 6960, 7568
                    size = 296, 128
                ]

                component "core/Triple Pole Single Throw Contactor" S2 {
                    ctrl_src = "Model"
                }
                [
                    position = 9728, 8000
                    size = 64, 256
                ]

                component pas_inductor L0c1 {
                    inductance = "L_i"
                }
                [
                    position = 7888, 8096
                    rotation = down
                ]

                component pas_inductor L0a1 {
                    inductance = "L_i"
                }
                [
                    position = 7888, 7904
                    rotation = down
                ]

                component "core/Three Phase Two Winding Transformer" Tr1 {
                    L1 = "1e-6"
                    L2 = "1e-6"
                    Lm = "1e6"
                    Poc1 = "344.99999999952564"
                    Psc1 = "1762.5"
                    R1 = "1e-6"
                    R2 = "1e-6"
                    Rm = "1e6"
                    Sn = "5e6"
                    V1 = "277"
                    V2 = "480"
                    current_vals_SCOC = "[0.0024, 1.0]"
                    f = "60.0"
                    input = "SI"
                    ioc1 = "0.6999999999992988"
                    usc1 = "3.9999999999957394"
                }
                [
                    position = 10312, 8000
                    size = 126, 256
                ]

                component pas_resistor Rt0b1 {
                    resistance = "R_s"
                }
                [
                    position = 8240, 8256
                    rotation = left
                    scale = -1, 1
                ]

                component "core/Voltage Measurement" Va2 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7744, 8384
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_inductor La1 {
                    inductance = "L_o"
                }
                [
                    position = 9016, 7904
                    rotation = down
                ]

                component pas_inductor Lgrida_1 {
                    inductance = "L"
                }
                [
                    position = 9400, 7904
                    rotation = down
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7056, 7760
                    hide_name = True
                ]

                component gen_probe Ec_1 {
                }
                [
                    position = 8656, 8400
                ]

                component "core/Signal Controlled Voltage Source" Va_inv {
                }
                [
                    position = 7152, 7944
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_resistor Rt0c1 {
                    resistance = "R_s"
                }
                [
                    position = 8320, 8256
                    rotation = left
                    scale = -1, 1
                ]

                component pas_resistor R0b1 {
                    resistance = "R_i"
                }
                [
                    position = 7776, 8000
                ]

                component gen_probe Eb_1 {
                }
                [
                    position = 8544, 8288
                ]

                component pas_resistor Rgrida_1 {
                    resistance = "R"
                }
                [
                    position = 9504, 7904
                ]

                component "core/Voltage Measurement" Vb2 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7872, 8432
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_resistor Rgridc_1 {
                    resistance = "R"
                }
                [
                    position = 9504, 8096
                ]

                component "core/Signal Controlled Voltage Source" Vb_inv {
                }
                [
                    position = 7232, 8040
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_inductor Lgridc_1 {
                    inductance = "L"
                }
                [
                    position = 9400, 8096
                    rotation = down
                ]

                component "core/Voltage Measurement" VaG {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9840, 8216
                    rotation = right
                    size = 64, 32
                ]

                component pas_resistor Rc1 {
                    resistance = "R_o"
                }
                [
                    position = 8920, 8096
                ]

                component "core/Voltage Measurement" VbG {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9968, 8288
                    rotation = right
                    size = 64, 32
                ]

                component pas_resistor R0c1 {
                    resistance = "R_i"
                }
                [
                    position = 7776, 8096
                ]

                component pas_inductor Lb1 {
                    inductance = "L_o"
                }
                [
                    position = 9016, 8000
                    rotation = down
                ]

                component pas_resistor R0a1 {
                    resistance = "R_i"
                }
                [
                    position = 7776, 7904
                ]

                component "core/Current Measurement" Ic1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9168, 8096
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Eb1 {
                    addr = "9"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8608, 8208
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Ea1 {
                    addr = "7"
                    execution_rate = "Ts"
                    feed_forward = "true"
                    sig_output = "True"
                }
                [
                    position = 8544, 8144
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" Xi_b1 {
                    addr = "15"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8032, 8000
                    scale = 1, -1
                    size = 64, 32
                ]

                component "core/Current Measurement" Ib1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 9168, 8000
                    size = 64, 32
                ]

                component "core/Current Measurement" Xi_a1 {
                    addr = "14"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7984, 7904
                    scale = 1, -1
                    size = 64, 32
                ]

                component gen_product Product1 {
                }
                [
                    position = 6960, 7760
                    hide_name = True
                ]

                component pas_capacitor Ca1 {
                    capacitance = "C_s"
                }
                [
                    position = 8160, 8352
                    rotation = right
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "900"
                }
                [
                    position = 6768, 8232
                    hide_name = True
                ]

                component "core/Voltage Measurement" VcG {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 10088, 8408
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Ec1 {
                    addr = "11"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8688, 8272
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component gen_gain Gain1 {
                    gain = "0.5"
                }
                [
                    position = 6888, 7792
                    hide_name = True
                ]

                component pas_inductor Lgridb_1 {
                    inductance = "L"
                }
                [
                    position = 9400, 8000
                    rotation = down
                ]

                component "core/Current Measurement" Xi_c1 {
                    addr = "16"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8096, 8096
                    scale = 1, -1
                    size = 64, 32
                ]

                component pas_inductor Lc1 {
                    inductance = "L_o"
                }
                [
                    position = 9016, 8096
                    rotation = down
                ]

                component pas_resistor Rb1 {
                    resistance = "R_o"
                }
                [
                    position = 8920, 8000
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "NOT"
                }
                [
                    position = 7864, 7592
                    rotation = right
                    hide_name = True
                ]

                component gen_digital_probe "INV_sync OFF" {
                }
                [
                    position = 7936, 7624
                ]

                component gen_digital_probe "INV_sync ON" {
                }
                [
                    position = 7936, 7520
                    rotation = down
                    scale = -1, 1
                ]

                component src_scada_input INV_sync {
                    execution_rate = "Ts"
                    format = "int"
                    max = "1"
                    min = "0"
                    signal_type = "int"
                    unit = ""
                }
                [
                    position = 7808, 7552
                ]

                component gen_bus_join "Bus Join4" {
                }
                [
                    position = 6624, 7208
                    hide_name = True
                ]

                component gen_bus_join "Bus Join5" {
                }
                [
                    position = 6624, 7368
                    hide_name = True
                ]

                component gen_probe Pref_probe {
                }
                [
                    position = 6824, 7312
                ]

                component gen_probe Qref_probe {
                }
                [
                    position = 6872, 7136
                ]

                component gen_gain Gain17 {
                    gain = "1/S/1.5"
                }
                [
                    position = 6912, 7208
                    hide_name = True
                ]

                component gen_gain Gain18 {
                    gain = "1/S/1.5"
                }
                [
                    position = 6832, 7408
                    rotation = right
                    hide_name = True
                ]

                component gen_gain Gain19 {
                    gain = "1.5*S"
                }
                [
                    position = 6536, 7216
                    hide_name = True
                ]

                component gen_gain Gain20 {
                    gain = "1.5*S"
                }
                [
                    position = 6528, 7376
                    hide_name = True
                ]

                component gen_c_function "C function6" {
                    global_variables = "real prev;"
                    in_terminal_dimensions = "2"
                    in_terminal_dimensions_str = "in 2"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
prev = 50;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "1"
                    out_terminal_dimensions_str = "out 1"
                    out_terminal_labels = "[(\'out\', False)]"
                    output_fnc = "/*Begin code section*/
out = 1000*prev;
/*
if (out>in[1]+1000){
    out = in[1]+1000;
}
if (out<in[1]-1000){
    out = in[1]-1000;
}
*/
/*End code section*/"
                    update_fnc = "/*Begin code section*/
prev = prev + 3e-6*(in[0]-prev);
/*
if (out-in[1]<40 && out-in[1]>-40){ 
    prev = prev + 1e-2*(in[0]-prev);
}
*/
/*End code section*/"
                }
                [
                    position = 6720, 7368
                    hide_name = True
                    size = 48, 48
                ]

                component gen_c_function "C function7" {
                    global_variables = "real prev;"
                    in_terminal_dimensions = "2"
                    in_terminal_dimensions_str = "in 2"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
prev = 50;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "1"
                    out_terminal_dimensions_str = "out 1"
                    out_terminal_labels = "[(\'out\', False)]"
                    output_fnc = "/*Begin code section*/
out = 1000*prev;
/*
if (out>in[1]+1000){
    out = in[1]+1000;
}
if (out<in[1]-1000){
    out = in[1]-1000;
}
*/
/*End code section*/"
                    update_fnc = "/*Begin code section*/
prev = prev + 3e-6*(in[0]-prev);
/*
if (out-in[1]<40 && out-in[1]>-40){ 
    prev = prev + 1e-2*(in[0]-prev);
}
*/
/*End code section*/"
                }
                [
                    position = 6720, 7208
                    hide_name = True
                    size = 48, 48
                ]

                component src_scada_input CONNECT {
                    execution_rate = "Ts"
                    format = "int"
                    max = "1"
                    min = "0"
                    signal_type = "int"
                    unit = ""
                }
                [
                    position = 9520, 7736
                ]

                component gen_logic_op "Logical operator2" {
                    operator = "OR"
                }
                [
                    position = 9632, 7776
                    hide_name = True
                ]

                component "core/Voltage RMS" Vrms {
                    frequency = "sys_f"
                    op_mode = "Fixed frequency"
                    sig_output = "True"
                }
                [
                    position = 9928, 7952
                    rotation = right
                    size = 64, 32
                ]

                component gen_probe Vrms_ess {
                    execution_rate = "0.1"
                }
                [
                    position = 10008, 7952
                ]

                component gen_logic_op "Logical operator3" {
                    operator = "NOT"
                }
                [
                    position = 6768, 8336
                    hide_name = True
                ]

                component Subsystem "BE1-25A Synchronizer" {
                    layout = dynamic
                    component gen_trigonometric "Trigonometric function2" {
                        trigonometric_fn = "atan2"
                    }
                    [
                        position = 7456, 8088
                        hide_name = True
                    ]

                    component gen_math_fnc "Mathematical function1" {
                        mathematical_fn = "sqrt"
                    }
                    [
                        position = 8312, 8224
                        hide_name = True
                    ]

                    component gen_limiter Limit2 {
                        lower_limit = "1e-12"
                    }
                    [
                        position = 7384, 8104
                        hide_name = True
                    ]

                    component src_constant Constant9 {
                        execution_rate = "Ts"
                        value = "3e-4"
                    }
                    [
                        position = 8456, 8224
                        hide_name = True
                    ]

                    component gen_c_function "BE1-25A Synchronizer1" {
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "dV inherit"
                        in_terminal_labels = "[(\'dV\', True)]"
                        in_terminal_properties = "real dV;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "del_V inherit"
                        out_terminal_labels = "[(\'del_V\', True)]"
                        out_terminal_properties = "real del_V;"
                        output_fnc = "/*Begin code section*/
if (dV>maxV_slip)
{
    del_V = maxV_pds;
}
else if ((dV<=maxV_slip) && (dV>0))
{
    del_V = maxV_pds*dV/maxV_slip;
}
else if ((dV<=0) && (dV>-1*(maxV_slip-minV_slip)))
{
    del_V = 0;
    //del_V = maxV_pds*dV/min_slip;
}
else if ((dV <= (-1*(maxV_slip-minV_slip)))&&(dV > (-1*maxV_slip)))
{
    del_V= maxV_pds*(dV+(maxV_slip-minV_slip))/minV_slip;
}
else if (dV <= (-1*maxV_slip))
{
    del_V = -1*maxV_pds;
}
/*End code section*/"
                        parameters = "real Ts;real maxV_slip;real minV_slip;real maxV_pds;"
                    }
                    [
                        position = 8488, 8616
                        hide_name = True
                        size = 96, 96
                    ]

                    component tm_delay "Unit Delay4" {
                        signal_out_type = "real"
                    }
                    [
                        position = 8888, 8648
                        hide_name = True
                    ]

                    component gen_abs Abs2 {
                    }
                    [
                        position = 8456, 8192
                        hide_name = True
                    ]

                    component gen_gain Gain4 {
                        gain = "1/w_0"
                    }
                    [
                        position = 7736, 8176
                        hide_name = True
                    ]

                    component src_scada_input "Connect INV" {
                        def_value = "1"
                        execution_rate = "Tsync"
                        format = "int"
                        max = "1"
                        min = "0"
                        signal_type = "int"
                        unit = ""
                    }
                    [
                        position = 8680, 8184
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7440, 8600
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function1" {
                        trigonometric_fn = "atan2"
                    }
                    [
                        position = 7456, 8000
                        hide_name = True
                    ]

                    component gen_c_function "BE1-25A Synchronizer" {
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "df inherit;angle_slip inherit"
                        in_terminal_labels = "[(\'df\', True), (\'angle_slip\', True)]"
                        in_terminal_properties = "real df;real angle_slip;"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "del_w inherit"
                        out_terminal_labels = "[(\'del_w\', True)]"
                        out_terminal_properties = "real del_w;"
                        output_fnc = "/*Begin code section*/
if (df>maxw_slip)
{
    del_w = 1.125*maxw_pds;
}
else if ((df<=maxw_slip) && (df>0))
{
    del_w = maxw_pds*df/maxw_slip + (0.125*maxw_pds);
    //del_w = maxw_pds*(df+1e-4)/max_slip + (angle_slip);
}
else if ((df<=0) && (df > (-minw_slip)))
{
    del_w = (0.125*maxw_pds)*(df)/minw_slip + (0.125*maxw_pds);
    //del_w = maxw_pds*((-1*df)+1e-4)/min_slip  + (angle_slip);
}
else if ((df <= (-1*minw_slip))&&(df > (-1*maxw_slip)))
{
    del_w = 0;
    //del_w = maxw_pds*((min_slip)+1e-4)/min_slip  + (angle_slip);
}
else if (df <= (-1*maxw_slip))
{
    del_w = (maxw_slip+df)*maxw_pds/maxw_slip;
}
/*End code section*/"
                        parameters = "real Ts;real maxw_pds;real maxw_slip;real minw_slip;"
                    }
                    [
                        position = 8184, 8392
                        hide_name = True
                        scale = 1, -1
                        size = 128, 112
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8160, 8192
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 8240, 8224
                        hide_name = True
                    ]

                    component gen_c_function "confine phase" {
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
if (in > 0)
{
    if (in > (6.283185307179586/2))
        out = in - 6.283185307179586;
    else
        out = in;
}
if (in < 0)
{
    if (in < (-6.283185307179586/2))
        out = in + 6.283185307179586;
    else
        out = in;
}
/*End code section*/"
                    }
                    [
                        position = 7824, 8048
                        size = 56, 48
                    ]

                    component gen_sum Sum5 {
                    }
                    [
                        position = 7344, 8352
                        hide_name = True
                    ]

                    component gen_probe frequency_diff3 {
                    }
                    [
                        position = 7920, 8128
                        scale = -1, 1
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 7264, 8384
                        hide_name = True
                    ]

                    component gen_digital_probe "Digital Probe3" {
                        override_signal_name = "True"
                        signal_name = "ang_sync3"
                    }
                    [
                        position = 8616, 8040
                        hide_name = True
                    ]

                    component src_constant Constant7 {
                        execution_rate = "Ts"
                        value = "1e-3"
                    }
                    [
                        position = 8088, 8112
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                        signs = "-+"
                    }
                    [
                        position = 7736, 8048
                        hide_name = True
                    ]

                    component gen_c_function "confine phase2" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 7640, 8088
                        hide_name = True
                        size = 56, 48
                    ]

                    component gen_product Product3 {
                    }
                    [
                        position = 7264, 8320
                        hide_name = True
                    ]

                    component tm_delay "Unit Delay2" {
                    }
                    [
                        position = 7608, 8624
                        rotation = right
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "-+"
                    }
                    [
                        position = 7824, 8200
                        hide_name = True
                    ]

                    component gen_rel_op "Relational operator1" {
                        relational_op = ">"
                    }
                    [
                        position = 8160, 8040
                        hide_name = True
                    ]

                    component gen_rel_op "Relational operator4" {
                        relational_op = "<"
                    }
                    [
                        position = 8520, 8208
                        hide_name = True
                    ]

                    component gen_abs Abs4 {
                    }
                    [
                        position = 7920, 8048
                        hide_name = True
                    ]

                    component gen_gain Gain3 {
                        gain = "1/w_0"
                    }
                    [
                        position = 7736, 8224
                        hide_name = True
                    ]

                    component gen_probe volt_diff3 {
                    }
                    [
                        position = 8448, 8512
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "3e-4"
                    }
                    [
                        position = 8056, 8032
                        hide_name = True
                    ]

                    component gen_digital_probe "Digital Probe1" {
                        override_signal_name = "True"
                        signal_name = "gridconnect2"
                    }
                    [
                        position = 9144, 8184
                        hide_name = True
                    ]

                    component gen_logic_op "Logical operator2" {
                        inputs = "4"
                        operator = "NOT"
                    }
                    [
                        position = 9080, 8224
                        rotation = right
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8160, 8256
                        hide_name = True
                    ]

                    component gen_gain Gain6 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7376, 8576
                        hide_name = True
                    ]

                    component gen_digital_probe "Digital Probe4" {
                        override_signal_name = "True"
                        signal_name = "freq_sync3"
                    }
                    [
                        position = 8616, 8008
                        hide_name = True
                    ]

                    component gen_digital_probe "Digital Probe5" {
                        override_signal_name = "True"
                        signal_name = "volt_sync3"
                    }
                    [
                        position = 8616, 8072
                        hide_name = True
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "3"
                    }
                    [
                        position = 8616, 8120
                        hide_name = True
                    ]

                    component gen_abs Abs5 {
                    }
                    [
                        position = 8056, 8128
                        hide_name = True
                    ]

                    component gen_probe angle_diff3 {
                    }
                    [
                        position = 8056, 7952
                    ]

                    component gen_sum Sum3 {
                        signs = "-+"
                    }
                    [
                        position = 8392, 8192
                        hide_name = True
                        scale = 1, -1
                    ]

                    component gen_gain Gain5 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7336, 8552
                        hide_name = True
                    ]

                    component tm_delay "Unit Delay3" {
                        signal_out_type = "real"
                    }
                    [
                        position = 8584, 8432
                        hide_name = True
                    ]

                    component gen_rel_op "Relational operator2" {
                        relational_op = ">"
                    }
                    [
                        position = 8160, 8120
                        hide_name = True
                    ]

                    component gen_c_function "confine phase1" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 7640, 8000
                        hide_name = True
                        size = 56, 48
                    ]

                    component Subsystem PLL {
                        layout = dynamic
                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            int_init_value = "2*np.pi*60"
                            ki = "2"
                            lower_sat_lim = "2*np.pi*59.5"
                            upper_sat_lim = "2*np.pi*60.5"
                        }
                        [
                            position = 8192, 8152
                            hide_name = True
                        ]

                        component gen_c_function "C function1" {
                            global_variables = "real var;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                            parameters = "real Ts;"
                            update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                        }
                        [
                            position = 8304, 8152
                            hide_name = True
                            size = 80, 48
                        ]

                        component gen_c_function "confine phase" {
                            global_variables = "real x;real floor_in;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        }
                        [
                            position = 8408, 8152
                            size = 56, 48
                        ]

                        port wt {
                            label = "wt"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8496, 8152
                        ]

                        port w {
                            label = "w"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8208
                        ]

                        port q {
                            label = "q"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8064, 8152
                        ]

                        junction Junction1 sp
                        [
                            position = 8240, 8152
                        ]

                        connect w Junction1 as Connection19
                        connect "C function1.in" Junction1 as Connection17
                        connect wt "confine phase.out" as Connection14
                        connect "confine phase.in" "C function1.out" as Connection16
                        connect Junction1 "PID controller1.out" as Connection18
                        connect q "PID controller1.in" as Connection20
                    }
                    [
                        position = 7544, 8576
                        scale = 1, -1
                        size = 96, 56
                    ]

                    component gen_limiter Limit1 {
                        lower_limit = "1e-12"
                    }
                    [
                        position = 7384, 8016
                        hide_name = True
                    ]

                    component gen_digital_probe "Digital Probe6" {
                        override_signal_name = "True"
                        signal_name = "griddisconnect2"
                    }
                    [
                        position = 9144, 8256
                        hide_name = True
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7264, 8576
                        size = 48, 80
                    ]

                    component gen_math_fnc "Mathematical function2" {
                        mathematical_fn = "sqrt"
                    }
                    [
                        position = 7416, 8352
                        hide_name = True
                    ]

                    component gen_probe Vd_G {
                    }
                    [
                        position = 7328, 8480
                        scale = -1, 1
                    ]

                    component gen_probe Vq_G {
                    }
                    [
                        position = 7432, 8472
                        scale = -1, 1
                    ]

                    component gen_probe del_w {
                    }
                    [
                        position = 8744, 8376
                    ]

                    component gen_probe del_V {
                    }
                    [
                        position = 9048, 8584
                    ]

                    component gen_c_function "stay connected1" {
                        global_variables = "real connect;"
                        in_terminal_dimensions = "inherit;inherit"
                        in_terminal_dimensions_str = "ready inherit;connectINV inherit"
                        in_terminal_labels = "[(\'ready\', True), (\'connectINV\', True)]"
                        in_terminal_properties = "inherit ready;inherit connectINV;"
                        init_fnc = "/*Begin code section*/
connect = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        out_terminal_properties = "int out;"
                        output_fnc = "/*Begin code section*/
out = connect;
/*End code section*/"
                        parameters = "real Ts;"
                        update_fnc = "/*Begin code section*/
if ((ready==1)&&(connectINV==1)){
    connect = 1;
}
else if(connectINV==0){
    connect = 0;
}
/*End code section*/"
                    }
                    [
                        position = 8848, 8152
                        hide_name = True
                        size = 160, 104
                    ]

                    component gen_probe "|V|" {
                    }
                    [
                        position = 7512, 8304
                    ]

                    component gen_probe w_G {
                    }
                    [
                        position = 7824, 8160
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_probe w_bus {
                    }
                    [
                        position = 7824, 8240
                    ]

                    component gen_sum Sum6 {
                        signs = "+-"
                    }
                    [
                        position = 7752, 8336
                        hide_name = True
                    ]

                    component gen_sum Sum7 {
                        signs = "+-"
                    }
                    [
                        position = 7752, 8408
                        hide_name = True
                    ]

                    component gen_sum Sum8 {
                        signs = "+-"
                    }
                    [
                        position = 7752, 8480
                        hide_name = True
                    ]

                    component gen_probe Ea-Va {
                    }
                    [
                        position = 7848, 8336
                    ]

                    component gen_probe Eb-Vb {
                    }
                    [
                        position = 7848, 8408
                    ]

                    component gen_probe Ec-Vc {
                    }
                    [
                        position = 7848, 8480
                    ]

                    component "core/abc to dq" "abc to dq2" {
                    }
                    [
                        position = 7984, 8592
                        size = 48, 80
                    ]

                    component gen_probe Ed-Vd {
                    }
                    [
                        position = 8072, 8552
                    ]

                    component gen_probe Eq-Vq {
                    }
                    [
                        position = 8120, 8592
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8072, 8632
                        hide_name = True
                    ]

                    component gen_probe E_d {
                    }
                    [
                        position = 7616, 8704
                    ]

                    component gen_probe E_q {
                    }
                    [
                        position = 7616, 8856
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_gain Gain7 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7336, 8736
                        hide_name = True
                    ]

                    component Subsystem Current_abc_to_dq3 {
                        layout = dynamic
                        component "core/abc to dq" "abc to dq1" {
                        }
                        [
                            position = 7856, 8008
                            size = 48, 80
                        ]

                        component gen_terminator Termination {
                        }
                        [
                            position = 7952, 8064
                        ]

                        port wt {
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8088
                        ]

                        port Ec {
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8040
                        ]

                        port Eq {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 8016
                        ]

                        port Ea {
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 7960
                        ]

                        port Ed {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8008, 7976
                        ]

                        port Eb {
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7704, 8000
                        ]

                        connect Termination.in "abc to dq1.zero_axis" as Connection4
                        connect "abc to dq1.q_axis" Eq as Connection6
                        connect Ec "abc to dq1.vc" as Connection3
                        connect Ea "abc to dq1.va" as Connection1
                        connect Eb "abc to dq1.vb" as Connection2
                        connect "abc to dq1.d_axis" Ed as Connection5
                        connect wt "abc to dq1.wt" as Connection7
                    }
                    [
                        position = 7256, 8784
                        hide_name = True
                        scale = -1, 1
                        size = 64, 144
                    ]

                    component gen_gain Gain12 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 7336, 8832
                        hide_name = True
                    ]

                    component gen_c_function "Hold after connect2" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit;inherit;inherit"
                        in_terminal_dimensions_str = "in inherit;connect inherit;INV_sync inherit"
                        in_terminal_labels = "[(\'in\', True), (\'connect\', True), (\'INV_sync\', True)]"
                        in_terminal_properties = "real in;int connect;inherit INV_sync;"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
if ((connect==0)&&(INV_sync==1))
    var = in;
else if (connect==1)
    var =0;
/*End code section*/"
                    }
                    [
                        position = 8488, 8432
                        hide_name = True
                        size = 96, 96
                    ]

                    component gen_c_function "Hold after connect3" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit;inherit;inherit"
                        in_terminal_dimensions_str = "in inherit;connect inherit;INV_sync inherit"
                        in_terminal_labels = "[(\'in\', True), (\'connect\', True), (\'INV_sync\', True)]"
                        in_terminal_properties = "real in;int connect;inherit INV_sync;"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
if ((connect==0)&&(INV_sync==1))
    var = in;
else if (connect==1)
    var =0;
/*End code section*/"
                    }
                    [
                        position = 8784, 8648
                        hide_name = True
                        size = 96, 96
                    ]

                    component tm_delay "Unit Delay5" {
                    }
                    [
                        position = 8968, 8152
                        hide_name = True
                    ]

                    component gen_probe "|E|" {
                    }
                    [
                        position = 8392, 8248
                    ]

                    component gen_probe Connect {
                    }
                    [
                        position = 9144, 8024
                    ]

                    component "core/Rate Transition" "Rate Transition2" {
                        execution_rate = "Tsync"
                    }
                    [
                        position = 8056, 8360
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition4" {
                        execution_rate = "Tsync"
                    }
                    [
                        position = 8056, 8424
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition7" {
                        execution_rate = "Tsync"
                        init_value = "0"
                    }
                    [
                        position = 8376, 8432
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition8" {
                        execution_rate = "Tsync"
                        init_value = "0"
                    }
                    [
                        position = 8376, 8472
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition6" {
                        execution_rate = "Tsync"
                    }
                    [
                        position = 8320, 8616
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition10" {
                        execution_rate = "Tsync"
                        init_value = "0"
                    }
                    [
                        position = 8656, 8656
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition11" {
                        execution_rate = "Tsync"
                        init_value = "0"
                    }
                    [
                        position = 8656, 8704
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition12" {
                        execution_rate = "Tsync"
                        init_value = "0"
                    }
                    [
                        position = 8704, 8120
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition13" {
                        execution_rate = "Ts"
                    }
                    [
                        position = 8952, 8648
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition14" {
                        execution_rate = "Ts"
                    }
                    [
                        position = 8640, 8432
                        hide_name = True
                        size = 32, 32
                    ]

                    component "core/Rate Transition" "Rate Transition15" {
                        execution_rate = "Ts"
                        init_value = "0"
                    }
                    [
                        position = 9032, 8152
                        hide_name = True
                        size = 32, 32
                    ]

                    tag From39 {
                        value = "E_q"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8072, 8264
                        hide_name = True
                    ]

                    tag From43 {
                        value = "Vd_G"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7176, 8312
                        hide_name = True
                    ]

                    tag w_bus1 {
                        value = "w_bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7656, 8568
                        hide_name = True
                    ]

                    tag Vb_G1 {
                        value = "VbG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7176, 8560
                        hide_name = True
                    ]

                    tag "|V|1" {
                        value = "|V| bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7512, 8352
                        hide_name = True
                    ]

                    tag theta_bus {
                        value = "theta_bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7656, 8656
                        hide_name = True
                    ]

                    tag theta_bus5 {
                        value = "dV"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8240, 8616
                        hide_name = True
                    ]

                    tag Goto2 {
                        value = "del_w"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8744, 8432
                        hide_name = True
                    ]

                    tag From42 {
                        value = "Vq_G"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7176, 8392
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "Vq_G"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7544, 8536
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto31 {
                        value = "del_V"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9048, 8648
                        hide_name = True
                    ]

                    tag Connect2 {
                        value = "Connect"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8296, 8432
                        hide_name = True
                        size = 42, 20
                    ]

                    tag From44 {
                        value = "Vd_G"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 8104
                        hide_name = True
                    ]

                    tag From45 {
                        value = "Vq_G"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 8072
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "dV"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8504, 8160
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "Vd_G"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 8552
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Vc_G1 {
                        value = "VcG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7176, 8584
                        hide_name = True
                    ]

                    tag From41 {
                        value = "E_d"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 8016
                        hide_name = True
                    ]

                    tag Va_G1 {
                        value = "VaG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7176, 8536
                        hide_name = True
                    ]

                    tag From36 {
                        value = "E_d"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8072, 8184
                        hide_name = True
                    ]

                    tag theta_bus2 {
                        value = "w_bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7640, 8224
                        hide_name = True
                    ]

                    tag Connect1 {
                        value = "Connect"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9144, 8152
                        hide_name = True
                    ]

                    tag From1 {
                        value = "|V| bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8240, 8152
                        hide_name = True
                    ]

                    tag From40 {
                        value = "E_q"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7320, 7984
                        hide_name = True
                    ]

                    tag w_e7 {
                        value = "w_e"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7640, 8176
                        hide_name = True
                    ]

                    tag From46 {
                        value = "Ec1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8464
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From37 {
                        value = "Ea1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8320
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From38 {
                        value = "Eb1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8392
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Vb_G2 {
                        value = "VbG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8424
                        hide_name = True
                    ]

                    tag Vc_G2 {
                        value = "VcG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8496
                        hide_name = True
                    ]

                    tag Va_G2 {
                        value = "VaG"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7664, 8352
                        hide_name = True
                    ]

                    tag Goto28 {
                        value = "E_q"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 8832
                        hide_name = True
                        size = 60, 20
                    ]

                    tag Goto29 {
                        value = "E_d"
                        scope = masked_subsystem
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7432, 8736
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From34 {
                        value = "Ec1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7160, 8800
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From33 {
                        value = "Ea1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7160, 8736
                        hide_name = True
                        size = 60, 20
                    ]

                    tag From35 {
                        value = "Eb1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7160, 8768
                        hide_name = True
                        size = 60, 20
                    ]

                    tag theta_bus1 {
                        value = "theta_bus"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7160, 8832
                        hide_name = True
                    ]

                    tag Connect4 {
                        value = "INV_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8296, 8472
                        hide_name = True
                        size = 42, 20
                    ]

                    tag Connect5 {
                        value = "Connect"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8600, 8656
                        hide_name = True
                        size = 42, 20
                    ]

                    tag Connect6 {
                        value = "INV_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8600, 8704
                        hide_name = True
                        size = 42, 20
                    ]

                    junction Junction41 sp
                    [
                        position = 7480, 8576
                    ]

                    junction Junction38 sp
                    [
                        position = 8304, 8120
                    ]

                    junction Junction26 sp
                    [
                        position = 8112, 8184
                    ]

                    junction Junction42 sp
                    [
                        position = 7216, 8392
                    ]

                    junction Junction43 sp
                    [
                        position = 7216, 8312
                    ]

                    junction Junction28 sp
                    [
                        position = 8112, 8264
                    ]

                    junction Junction45 sp
                    [
                        position = 7608, 8656
                    ]

                    junction Junction49 sp
                    [
                        position = 7872, 8048
                    ]

                    junction Junction35 sp
                    [
                        position = 8424, 8192
                    ]

                    junction Junction50 sp
                    [
                        position = 8000, 8048
                    ]

                    junction Junction57 sp
                    [
                        position = 7480, 8536
                    ]

                    junction Junction58 sp
                    [
                        position = 7368, 8552
                    ]

                    junction Junction63 sp
                    [
                        position = 9080, 8152
                    ]

                    junction Junction66 sp
                    [
                        position = 8552, 8136
                    ]

                    junction Junction67 sp
                    [
                        position = 8576, 8040
                    ]

                    junction Junction68 sp
                    [
                        position = 8992, 8648
                    ]

                    junction Junction69 sp
                    [
                        position = 7456, 8352
                    ]

                    junction Junction70 sp
                    [
                        position = 7784, 8224
                    ]

                    junction Junction71 sp
                    [
                        position = 7784, 8176
                    ]

                    junction Junction72 sp
                    [
                        position = 7968, 8200
                    ]

                    junction Junction73 sp
                    [
                        position = 7968, 8128
                    ]

                    junction Junction74 sp
                    [
                        position = 7800, 8336
                    ]

                    junction Junction75 sp
                    [
                        position = 7800, 8480
                    ]

                    junction Junction76 sp
                    [
                        position = 7800, 8408
                    ]

                    junction Junction77 sp
                    [
                        position = 7608, 8656
                    ]

                    junction Junction78 sp
                    [
                        position = 9080, 8184
                    ]

                    junction Junction79 sp
                    [
                        position = 8680, 8432
                    ]

                    junction Junction61 sp
                    [
                        position = 7376, 8736
                    ]

                    junction Junction80 sp
                    [
                        position = 7376, 8832
                    ]

                    junction Junction81 sp
                    [
                        position = 8352, 8224
                    ]

                    junction Junction82 sp
                    [
                        position = 9088, 8152
                    ]

                    junction Junction83 sp
                    [
                        position = 8376, 8616
                    ]

                    connect "Digital Probe4.in" Junction38 as Connection366
                    connect "confine phase2.out" Sum1.in1 as Connection399
                    connect From39 Junction28 as Connection259
                    connect "abc to dq1.q_axis" Gain6.in as Connection319
                    connect From41 Limit1.in as Connection285
                    connect Sum3.in1 From1 as Connection81
                    connect theta_bus2 Gain3.in as Connection241
                    connect Vc_G1 "abc to dq1.vc" as Connection222
                    connect angle_diff3.in Junction49 as Connection430
                    connect Product2.out Sum4.in1 as Connection251
                    connect Abs2.out "Relational operator4.in" as Connection84
                    connect Goto30 Junction35 as Connection308
                    connect Va_G1 "abc to dq1.va" as Connection224
                    connect theta_bus Junction45 as Connection404
                    connect Termination1.in "abc to dq1.zero_axis" as Connection29
                    connect Junction50 Abs4.out as Connection432
                    connect From45 "Trigonometric function2.in" as Connection401
                    connect Sum4.out "Mathematical function1.in" as Connection252
                    connect Product2.in Junction28 as Connection261
                    connect Junction28 Product2.in1 as Connection260
                    connect Constant7.out "Relational operator2.in" as Connection70
                    connect Junction49 Abs4.in as Connection429
                    connect Abs2.in Junction35 as Connection306
                    connect From44 Limit2.in as Connection402
                    connect "Digital Probe6.in" "Logical operator2.out" as Connection454
                    connect Junction26 From36 as Connection248
                    connect Product1.in Junction26 as Connection247
                    connect Limit2.out "Trigonometric function2.in1" as Connection398
                    connect Product3.out Sum5.in as Connection390
                    connect Junction38 "Relational operator2.out" as Connection365
                    [
                        breakpoints = 8288, 8120; 8288, 8120
                    ]
                    connect Product3.in Junction43 as Connection386
                    connect Limit1.out "Trigonometric function1.in1" as Connection286
                    connect From40 "Trigonometric function1.in" as Connection284
                    connect Vb_G1 "abc to dq1.vb" as Connection223
                    connect "Relational operator2.in1" Abs5.out as Connection357
                    connect From42 Junction42 as Connection384
                    connect Junction43 From43 as Connection389
                    connect Sum5.out "Mathematical function2.in" as Connection387
                    connect Product3.in1 Junction43 as Connection391
                    connect Gain6.out Junction41 as Connection381
                    connect Junction35 Sum3.out as Connection307
                    connect "confine phase.in" Sum1.out as Connection146
                    connect Product4.out Sum5.in1 as Connection388
                    connect "confine phase1.out" Sum1.in as Connection400
                    connect Constant9.out "Relational operator4.in1" as Connection85
                    connect PLL.w w_bus1 as Connection233
                    connect Product4.in Junction42 as Connection385
                    connect "confine phase.out" Junction49 as Connection428
                    connect Junction45 "abc to dq1.wt" as Connection405
                    connect Product1.in1 Junction26 as Connection249
                    connect Junction41 PLL.q as Connection382
                    connect Constant6.out "Relational operator1.in" as Connection69
                    connect Product1.out Sum4.in as Connection250
                    connect Junction42 Product4.in1 as Connection392
                    connect "Logical operator1.in1" Junction38 as Connection364
                    [
                        breakpoints = 8576, 8120
                    ]
                    connect "Relational operator1.in1" Junction50 as Connection431
                    connect Gain5.in "abc to dq1.d_axis" as Connection318
                    connect Goto32 Junction57 as Connection468
                    connect Junction57 Junction41 as Connection469
                    connect Vq_G.in Junction57 as Connection470
                    connect Goto33 Junction58 as Connection471
                    connect Junction58 Gain5.out as Connection472
                    connect Vd_G.in Junction58 as Connection473
                    connect PLL.wt "Unit Delay2.in" as Connection474
                    connect "Connect INV.out" "stay connected1.connectINV" as Connection504
                    connect Connect1 Junction63 as Connection508
                    connect w_e7 Gain4.in as Connection513
                    connect "Logical operator1.in2" Junction66 as Connection530
                    connect Junction66 "Relational operator4.out" as Connection531
                    connect "Digital Probe5.in" Junction66 as Connection532
                    connect "Relational operator1.out" Junction67 as Connection534
                    connect Junction67 "Logical operator1.in" as Connection535
                    connect "Digital Probe3.in" Junction67 as Connection536
                    connect Goto31 Junction68 as Connection539
                    connect del_V.in Junction68 as Connection541
                    connect "Trigonometric function2.out" "confine phase2.in" as Connection542
                    connect "Trigonometric function1.out" "confine phase1.in" as Connection543
                    connect "Mathematical function2.out" Junction69 as Connection544
                    connect Junction69 "|V|1" as Connection545
                    [
                        breakpoints = 7456, 8352
                    ]
                    connect "|V|.in" Junction69 as Connection546
                    connect Gain3.out Junction70 as Connection547
                    connect Junction70 Sum2.in1 as Connection548
                    connect w_bus.in Junction70 as Connection549
                    connect Gain4.out Junction71 as Connection550
                    connect Junction71 Sum2.in as Connection551
                    connect w_G.in Junction71 as Connection552
                    connect Sum2.out Junction72 as Connection554
                    connect Abs5.in Junction73 as Connection557
                    connect Junction73 Junction72 as Connection558
                    connect frequency_diff3.in Junction73 as Connection559
                    connect Vc_G2 Sum8.in1 as Connection560
                    connect From46 Sum8.in as Connection561
                    connect Vb_G2 Sum7.in1 as Connection562
                    connect From38 Sum7.in as Connection563
                    connect Va_G2 Sum6.in1 as Connection564
                    connect From37 Sum6.in as Connection565
                    connect Ea-Va.in Junction74 as Connection569
                    connect Junction74 Sum6.out as Connection570
                    connect "abc to dq2.va" Junction74 as Connection571
                    [
                        breakpoints = 7944, 8536; 7944, 8296; 7800, 8296
                    ]
                    connect Ec-Vc.in Junction75 as Connection580
                    connect Junction75 Sum8.out as Connection581
                    connect "abc to dq2.vc" Junction75 as Connection582
                    connect Eb-Vb.in Junction76 as Connection599
                    connect Junction76 Sum7.out as Connection600
                    [
                        breakpoints = 7800, 8408; 7800, 8408; 7800, 8408; 7800, 8408; 7800, 8408
                    ]
                    connect "abc to dq2.vb" Junction76 as Connection601
                    [
                        breakpoints = 7944, 8584; 7904, 8584; 7904, 8384; 7880, 8384; 7880, 8384; 7800, 8384
                    ]
                    connect "Unit Delay2.out" Junction77 as Connection602
                    connect Junction77 Junction45 as Connection603
                    connect "abc to dq2.wt" Junction77 as Connection604
                    [
                        breakpoints = 7944, 8680; 7608, 8680; 7608, 8656
                    ]
                    connect Ed-Vd.in "abc to dq2.d_axis" as Connection605
                    connect Eq-Vq.in "abc to dq2.q_axis" as Connection606
                    connect Termination2.in "abc to dq2.zero_axis" as Connection607
                    connect Junction63 Junction78 as Connection609
                    [
                        breakpoints = 9080, 8152
                    ]
                    connect Junction78 "Logical operator2.in" as Connection610
                    [
                        breakpoints = 9080, 8184
                    ]
                    connect "Digital Probe1.in" Junction78 as Connection611
                    connect Goto2 Junction79 as Connection613
                    connect del_w.in Junction79 as Connection615
                    connect From34 Current_abc_to_dq3.Ec as Connection421
                    connect From33 Current_abc_to_dq3.Ea as Connection278
                    connect From35 Current_abc_to_dq3.Eb as Connection422
                    connect Gain7.in Current_abc_to_dq3.Ed as Connection438
                    [
                        breakpoints = 7304, 8736
                    ]
                    connect Current_abc_to_dq3.Eq Gain12.in as Connection439
                    [
                        breakpoints = 7304, 8832
                    ]
                    connect Goto29 Junction61 as Connection444
                    connect Junction61 Gain7.out as Connection445
                    connect Current_abc_to_dq3.wt theta_bus1 as Connection616
                    connect E_d.in Junction61 as Connection618
                    [
                        breakpoints = 7472, 8760; 7376, 8760; 7376, 8736
                    ]
                    connect Goto28 Junction80 as Connection620
                    connect Junction80 Gain12.out as Connection621
                    connect E_q.in Junction80 as Connection622
                    [
                        breakpoints = 7584, 8808; 7376, 8808
                    ]
                    connect "Hold after connect2.out" "Unit Delay3.in" as Connection623
                    connect "Hold after connect3.out" "Unit Delay4.in" as Connection629
                    connect "Unit Delay5.in" "stay connected1.out" as Connection632
                    connect "Mathematical function1.out" Junction81 as Connection633
                    connect Junction81 Sum3.in as Connection634
                    connect "|E|.in" Junction81 as Connection635
                    connect Junction63 Junction82 as Connection636
                    connect Connect.in Junction82 as Connection638
                    connect "Rate Transition2.in" Junction50 as Connection640
                    connect Junction72 "Rate Transition4.in" as Connection641
                    connect "Rate Transition4.out" "BE1-25A Synchronizer.df" as Connection642
                    connect Connect2 "Rate Transition7.in" as Connection645
                    connect "Rate Transition7.out" "Hold after connect2.connect" as Connection646
                    connect Connect4 "Rate Transition8.in" as Connection647
                    connect "Rate Transition8.out" "Hold after connect2.INV_sync" as Connection648
                    connect "BE1-25A Synchronizer.del_w" "Hold after connect2.in" as Connection649
                    connect theta_bus5 "Rate Transition6.in" as Connection650
                    connect Connect5 "Rate Transition10.in" as Connection654
                    connect "Rate Transition10.out" "Hold after connect3.connect" as Connection655
                    connect Connect6 "Rate Transition11.in" as Connection656
                    connect "Rate Transition11.out" "Hold after connect3.INV_sync" as Connection657
                    connect "BE1-25A Synchronizer1.dV" Junction83 as Connection659
                    connect Junction83 volt_diff3.in as Connection660
                    [
                        breakpoints = 8376, 8616; 8376, 8616; 8376, 8512
                    ]
                    connect "Rate Transition6.out" Junction83 as Connection661
                    connect "Logical operator1.out" "Rate Transition12.in" as Connection662
                    connect "Rate Transition12.out" "stay connected1.ready" as Connection663
                    connect "Rate Transition2.out" "BE1-25A Synchronizer.angle_slip" as Connection664
                    connect Junction68 "Rate Transition13.out" as Connection665
                    connect "Rate Transition13.in" "Unit Delay4.out" as Connection666
                    connect Junction79 "Rate Transition14.out" as Connection667
                    connect "Rate Transition14.in" "Unit Delay3.out" as Connection668
                    connect Junction82 "Rate Transition15.out" as Connection669
                    connect "Rate Transition15.in" "Unit Delay5.out" as Connection670
                    connect "BE1-25A Synchronizer1.del_V" "Hold after connect3.in" as Connection671
                }
                [
                    position = 7640, 7576
                    size = 112, 144
                ]

                component gen_PQ_transform "Power Meter" {
                }
                [
                    position = 9048, 8352
                ]

                component gen_probe P {
                }
                [
                    position = 9152, 8280
                ]

                component gen_probe Q {
                }
                [
                    position = 9152, 8336
                ]

                port Vc {
                    label = "Vc"
                    position = top:3
                    kind = pe
                }
                [
                    position = 10456, 8096
                    scale = -1, 1
                ]

                port Vb {
                    label = "Vb"
                    position = top:2
                    kind = pe
                }
                [
                    position = 10456, 8000
                    scale = -1, 1
                ]

                port Ground {
                    label = "Ground"
                    position = bottom:4
                    kind = pe
                }
                [
                    position = 10472, 8688
                    scale = -1, 1
                ]

                port Va {
                    label = "Va"
                    position = top:1
                    kind = pe
                }
                [
                    position = 10456, 7904
                    scale = -1, 1
                ]

                port setpoint_P {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6464, 7320
                ]

                port setpoint_Q {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6472, 7152
                ]

                port PCC_status {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6688, 8336
                ]

                tag Goto39 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9112, 7968
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto18 {
                    value = "VDC1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6880, 8232
                    size = 60, 20
                ]

                tag Connect2 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 9504, 7808
                    hide_name = True
                ]

                tag Goto31 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9112, 8064
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto35 {
                    value = "Xi_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 8160
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Vb_G {
                    value = "VbG"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 10040, 8288
                ]

                tag Goto41 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8400, 8144
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto44 {
                    value = "Xi_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 8208
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto30 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8496, 8352
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Vc_G {
                    value = "VcG"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 10160, 8408
                ]

                tag From2 {
                    value = "modulator1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 6816, 7728
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto38 {
                    value = "Xi_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 8256
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto33 {
                    value = "E_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7920, 8480
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Va_G {
                    value = "VaG"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9920, 8216
                ]

                tag Goto32 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9112, 7872
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto40 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8464, 8256
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto42 {
                    value = "E_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7792, 8432
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From3 {
                    value = "VDC1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 6816, 7792
                    hide_name = True
                ]

                tag Goto34 {
                    value = "E_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7648, 8384
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Connect6 {
                    value = "INV_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7936, 7552
                    hide_name = True
                ]

                tag From54 {
                    value = "P1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 6464, 7376
                    size = 60, 20
                ]

                tag From55 {
                    value = "Q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 6472, 7216
                    size = 60, 20
                ]

                tag Goto45 {
                    value = "Island"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6880, 8336
                    size = 60, 20
                ]

                tag From58 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8912, 8288
                    hide_name = True
                    size = 37, 20
                ]

                tag From59 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8888, 8312
                    hide_name = True
                    size = 37, 20
                ]

                tag From60 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8864, 8336
                    hide_name = True
                    size = 37, 20
                ]

                tag From61 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8864, 8360
                    hide_name = True
                    size = 37, 20
                ]

                tag From62 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8864, 8384
                    hide_name = True
                    size = 37, 20
                ]

                tag From63 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8864, 8408
                    hide_name = True
                    size = 37, 20
                ]

                junction Junction173 pe
                [
                    position = 8320, 8096
                ]

                junction Junction291 pe
                [
                    position = 7232, 8688
                ]

                junction Junction160 pe
                [
                    position = 8240, 8000
                ]

                junction Junction207 pe
                [
                    position = 8240, 8688
                ]

                junction Junction192 pe
                [
                    position = 8240, 8688
                ]

                junction Junction198 pe
                [
                    position = 8240, 8688
                ]

                junction Junction216 pe
                [
                    position = 8320, 8312
                ]

                junction Junction302 pe
                [
                    position = 10088, 8688
                ]

                junction Junction290 pe
                [
                    position = 7312, 8688
                ]

                junction Junction284 sp
                [
                    position = 8624, 8352
                ]

                junction Junction195 pe
                [
                    position = 8240, 8688
                ]

                junction Junction215 pe
                [
                    position = 8240, 8688
                ]

                junction Junction161 pe
                [
                    position = 8160, 7904
                ]

                junction Junction292 pe
                [
                    position = 8240, 8688
                ]

                junction Junction306 pe
                [
                    position = 9840, 7904
                ]

                junction Junction307 pe
                [
                    position = 9968, 8000
                ]

                junction Junction283 sp
                [
                    position = 8512, 8256
                ]

                junction Junction308 pe
                [
                    position = 10088, 8096
                ]

                junction Junction212 pe
                [
                    position = 8240, 8688
                ]

                junction Junction310 pe
                [
                    position = 10344, 8688
                ]

                junction Junction309 pe
                [
                    position = 10280, 8688
                ]

                junction Junction194 pe
                [
                    position = 8240, 8688
                ]

                junction Junction213 pe
                [
                    position = 8240, 8304
                ]

                junction Junction199 pe
                [
                    position = 8240, 8688
                ]

                junction Junction289 pe
                [
                    position = 7744, 8688
                ]

                junction Junction303 pe
                [
                    position = 9968, 8688
                ]

                junction Junction311 sp
                [
                    position = 8448, 8144
                ]

                junction Junction312 pe
                [
                    position = 8160, 8296
                ]

                junction Junction47 sp
                [
                    position = 7864, 7552
                ]

                junction Junction48 sp
                [
                    position = 7864, 7552
                ]

                junction Junction319 sp
                [
                    position = 6768, 7368
                ]

                junction Junction320 pe
                [
                    position = 8544, 7904
                ]

                junction Junction321 pe
                [
                    position = 8608, 8000
                ]

                junction Junction322 pe
                [
                    position = 8688, 8096
                ]

                junction Junction325 sp
                [
                    position = 6792, 7208
                ]

                junction Junction332 pe
                [
                    position = 9928, 7904
                ]

                junction Junction333 pe
                [
                    position = 9928, 8000
                ]

                connect Ea1.n_node Junction292 as Connection1069
                [
                    breakpoints = 8544, 8224; 8384, 8224; 8384, 8304; 8384, 8688
                ]
                connect Xi_b1.out Goto44 as Connection374
                connect Junction309 Junction310 as Connection1285
                [
                    breakpoints = 10288, 8688
                ]
                connect La1.p_node Ia1.p_node as Connection665
                connect Lgridc_1.p_node Rgridc_1.p_node as Connection1240
                connect Product1.in1 Gain1.out as Connection1073
                connect Vc_inv.n_node Junction290 as Connection1060
                connect Tr1.n2 Junction310 as Connection1287
                connect Junction291 Junction290 as Connection1064
                [
                    breakpoints = 7232, 8688; 7312, 8688
                ]
                connect "Bus Split1.out1" Vb_inv.in as Connection1071
                connect Eb_1.in Junction283 as Connection952
                connect S2.a_out Junction306 as Connection1268
                connect Rt0a1.n_node Junction161 as Connection366
                connect Va2.n_node Junction289 as Connection1057
                connect R0b1.n_node L0b1.n_node as Connection385
                connect Lgrida_1.p_node Rgrida_1.p_node as Connection1236
                connect Junction207 Junction215 as Connection1222
                [
                    breakpoints = 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8688
                ]
                connect Xi_a1.n_node Junction161 as Connection314
                connect Xi_b1.n_node Junction160 as Connection388
                connect Goto35 Xi_a1.out as Connection342
                connect Lgridb_1.p_node Rgridb_1.p_node as Connection1238
                connect VbG.n_node Junction303 as Connection1225
                connect Xi_c1.out Goto38 as Connection313
                connect Junction283 Eb1.out as Connection951
                connect From3 Gain1.in as Connection1072
                connect Junction192 Junction194 as Connection459
                connect Junction302 Junction303 as Connection1223
                connect Constant1.out Goto18 as Connection1096
                connect Vc2.out Goto33 as Connection617
                [
                    breakpoints = 7984, 8480; 7968, 8480
                ]
                connect Rgridc_1.n_node S2.c_in as Connection1243
                connect Junction213 Cb1.p_node as Connection613
                [
                    breakpoints = 8240, 8304; 8240, 8304; 8240, 8304
                ]
                connect From2 Product1.in as Connection1074
                connect Ic1.out Goto31 as Connection668
                connect Tr1.n1 Junction309 as Connection1284
                connect Va_inv.p_node R0a1.p_node as Connection1056
                connect Lc1.p_node Ic1.p_node as Connection663
                connect Rt0b1.n_node Junction160 as Connection351
                connect Junction194 Ca1.n_node as Connection597
                [
                    breakpoints = 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8544; 8160, 8544
                ]
                connect L0c1.p_node Xi_c1.p_node as Connection328
                connect Va2.out Goto34 as Connection624
                connect VbG.p_node Junction307 as Connection1271
                connect Vb Tr1.sec_2 as Connection1278
                connect Junction306 VaG.p_node as Connection1269
                [
                    breakpoints = 9840, 7904
                ]
                connect R0c1.n_node L0c1.n_node as Connection330
                connect Junction195 Junction194 as Connection463
                connect Junction207 Junction198 as Connection574
                [
                    breakpoints = 8240, 8688
                ]
                connect Cb1.n_node Junction212 as Connection602
                connect VbG.out Vb_G as Connection1126
                connect S2.c_out Junction308 as Connection1274
                connect Vb2.p_node Junction213 as Connection614
                [
                    breakpoints = 8064, 8304; 8240, 8304
                ]
                connect "Bus Split1.out2" Vc_inv.in as Connection1053
                connect Tr1.prm_2 Junction307 as Connection1279
                connect Junction290 Junction289 as Connection1061
                [
                    breakpoints = 7312, 8688; 7744, 8688
                ]
                connect "Bus Split1.out" Va_inv.in as Connection1051
                connect Eb1.n_node Junction195 as Connection462
                connect Goto39 Ib1.out as Connection669
                connect Vc_inv.p_node R0c1.p_node as Connection1054
                connect Vc2.p_node Junction216 as Connection627
                connect Va Tr1.sec_1 as Connection1280
                connect VcG.n_node Junction302 as Connection1221
                connect Lb1.p_node Ib1.p_node as Connection664
                connect Vc2.n_node Junction215 as Connection623
                connect Vb_inv.p_node R0b1.p_node as Connection1055
                connect Rc1.n_node Lc1.n_node as Connection399
                connect Goto40 Junction283 as Connection950
                connect L0a1.p_node Xi_a1.p_node as Connection378
                connect Vc Tr1.sec_3 as Connection1276
                connect Junction198 Junction199 as Connection537
                [
                    breakpoints = 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8688; 8240, 8688
                ]
                connect Vb2.out Goto42 as Connection616
                connect Xi_c1.n_node Junction173 as Connection304
                connect Junction212 Junction192 as Connection603
                connect Rt0c1.p_node Junction216 as Connection625
                [
                    breakpoints = 8320, 8288
                ]
                connect Product1.out "Bus Split1.in" as Connection1075
                connect Vb_inv.n_node Junction291 as Connection1063
                connect Ec_1.in Junction284 as Connection956
                [
                    breakpoints = 8624, 8384; 8624, 8352
                ]
                connect La1.n_node Ra1.n_node as Connection401
                connect Va_inv.n_node Junction291 as Connection1065
                [
                    breakpoints = 7152, 8688; 7232, 8688
                ]
                connect L0b1.p_node Xi_b1.p_node as Connection372
                connect Junction308 VcG.p_node as Connection1275
                [
                    breakpoints = 10088, 8096
                ]
                connect L0a1.n_node R0a1.n_node as Connection355
                connect Rgridb_1.n_node S2.b_in as Connection1242
                connect Ia1.out Goto32 as Connection666
                connect Junction289 Junction212 as Connection1058
                [
                    breakpoints = 7744, 8688; 8240, 8688
                ]
                connect Rt0b1.p_node Junction213 as Connection612
                connect Rb1.n_node Lb1.n_node as Connection354
                connect Junction302 Junction309 as Connection1282
                [
                    breakpoints = 10088, 8688
                ]
                connect Junction192 Junction292 as Connection1067
                connect Vb2.n_node Junction215 as Connection621
                connect Junction284 Ec1.out as Connection955
                [
                    breakpoints = 8624, 8352; 8624, 8272
                ]
                connect Junction292 Cc1.n_node as Connection1068
                [
                    breakpoints = 8240, 8688; 8240, 8688; 8240, 8544; 8320, 8544
                ]
                connect Goto30 Junction284 as Connection954
                connect Junction310 Ground as Connection1286
                [
                    breakpoints = 10352, 8688
                ]
                connect Junction216 Cc1.p_node as Connection626
                [
                    breakpoints = 8320, 8304; 8320, 8304; 8320, 8304
                ]
                connect Rgrida_1.n_node S2.a_in as Connection1241
                connect Vc_G VcG.out as Connection1127
                connect Rt0c1.n_node Junction173 as Connection327
                connect Junction198 Junction195 as Connection477
                [
                    breakpoints = 8240, 8688; 8240, 8688
                ]
                connect Tr1.prm_3 Junction308 as Connection1277
                connect Goto41 Junction311 as Connection1292
                connect Junction311 Ea1.out as Connection1293
                connect Ea_1.in Junction311 as Connection1294
                connect Rt0a1.p_node Junction312 as Connection1296
                connect Junction312 Ca1.p_node as Connection1297
                connect Va2.p_node Junction312 as Connection1298
                connect "INV_sync OFF.in" "Logical operator1.out" as Connection155
                connect INV_sync.out Junction47 as Connection1299
                connect Junction47 Connect6 as Connection343
                connect "Logical operator1.in" Junction48 as Connection345
                connect Junction48 Junction47 as Connection346
                connect "INV_sync ON.in" Junction48 as Connection347
                connect From55 Gain19.in as Connection1847
                connect Gain19.out "Bus Join4.in1" as Connection1848
                connect From54 Gain20.in as Connection1849
                connect Gain20.out "Bus Join5.in1" as Connection1850
                connect Gain18.in Junction319 as Connection1886
                connect Junction319 Pref_probe.in as Connection1887
                [
                    breakpoints = 6768, 7368
                ]
                connect "C function6.out" Junction319 as Connection1888
                connect "C function6.in" "Bus Join5.out" as Connection1889
                connect setpoint_P "Bus Join5.in" as Connection1890
                connect setpoint_Q "Bus Join4.in" as Connection1891
                connect Gain18.out Controller.U_P as Connection1892
                connect Gain17.out Controller.U_Q as Connection1893
                connect Junction303 VaG.n_node as Connection1894
                [
                    breakpoints = 9968, 8688; 9968, 8688; 9840, 8688; 9840, 8688
                ]
                connect Junction161 Junction320 as Connection1899
                [
                    breakpoints = 8160, 7904
                ]
                connect Junction320 Ea1.p_node as Connection1900
                [
                    breakpoints = 8544, 7904; 8544, 7904; 8544, 7904
                ]
                connect Eb1.p_node Junction321 as Connection1902
                connect Junction321 Junction160 as Connection1903
                [
                    breakpoints = 8608, 8000
                ]
                connect Rb1.p_node Junction321 as Connection1904
                connect Junction173 Junction322 as Connection1905
                [
                    breakpoints = 8320, 8096
                ]
                connect Junction322 Ec1.p_node as Connection1906
                [
                    breakpoints = 8688, 8272; 8688, 8272; 8688, 8096
                ]
                connect Rc1.p_node Junction322 as Connection1907
                connect "Bus Join4.out" "C function7.in" as Connection1915
                connect Gain17.in Junction325 as Connection1916
                connect Junction325 Qref_probe.in as Connection1917
                [
                    breakpoints = 6792, 7208
                ]
                connect "C function7.out" Junction325 as Connection1918
                connect VaG.out Va_G as Connection1919
                connect "Logical operator2.out" S2.ctrl_in as Connection1938
                connect CONNECT.out "Logical operator2.in" as Connection1939
                connect Connect2 "Logical operator2.in1" as Connection1940
                connect Junction320 Ra1.p_node as Connection1941
                [
                    breakpoints = 8544, 7904; 8800, 7904
                ]
                connect Vrms_ess.in Vrms.out as Connection1821
                connect Tr1.prm_1 Junction332 as Connection1943
                connect Junction332 Junction306 as Connection1944
                connect Vrms.p_node Junction332 as Connection1945
                connect Junction307 Junction333 as Connection1946
                [
                    breakpoints = 9968, 8000
                ]
                connect Junction333 S2.b_out as Connection1947
                connect Vrms.n_node Junction333 as Connection1948
                connect Ec1.n_node Junction207 as Connection1949
                [
                    breakpoints = 8688, 8536; 8688, 8688; 8688, 8688; 8688, 8688; 8688, 8688; 8688, 8688; 8240, 8688; 8240, 8688
                ]
                connect Lgridc_1.n_node Ic1.n_node as Connection1950
                [
                    breakpoints = 9344, 8096
                ]
                connect Lgridb_1.n_node Ib1.n_node as Connection1952
                [
                    breakpoints = 9280, 8000
                ]
                connect Lgrida_1.n_node Ia1.n_node as Connection1951
                [
                    breakpoints = 9216, 7904
                ]
                connect PCC_status "Logical operator3.in" as Connection1953
                connect "Logical operator3.out" Goto45 as Connection1954
                [
                    breakpoints = 6840, 8336
                ]
                connect From58 "Power Meter.va" as Connection2022
                connect From59 "Power Meter.vb" as Connection2023
                [
                    breakpoints = 8968, 8312; 8968, 8328
                ]
                connect From60 "Power Meter.vc" as Connection2024
                connect From61 "Power Meter.ia" as Connection2025
                connect From62 "Power Meter.ib" as Connection2026
                [
                    breakpoints = 8904, 8376; 9000, 8376
                ]
                connect From63 "Power Meter.ic" as Connection2027
                connect P.in "Power Meter.Pdc" as Connection2028
                connect Q.in "Power Meter.Qdc" as Connection2029

                C_s = "150e-6"
                L = "100e-6"
                L_i = "300e-6"
                L_o = "300e-6"
                R = "1e-3"
                R_i = "1e-3"
                R_o = "1e-3"
                R_s = "1e-3"
                S = "10e3"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A grid-forming three-phase inverter with a frequency and voltage droop controller</p></body></html>"

                    S {
                        label = "Rated Power "
                        widget = edit
                        type = generic
                        default_value = "5e6"
                        unit = "VA"
                        group = "1. Three-phase Inverter"
                    }

                    V_ABC {
                        label = "Rated Phase Voltage (RMS)"
                        widget = edit
                        type = generic
                        default_value = "277/np.sqrt(3)"
                        unit = "V"
                        group = "1. Three-phase Inverter"
                    }

                    w_0 {
                        label = "Nominal Frequency"
                        widget = edit
                        type = generic
                        default_value = "2*np.pi*60"
                        unit = "rad/s"
                        group = "1. Three-phase Inverter"
                    }

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_ess"
                        unit = "s"
                        group = "1. Three-phase Inverter"
                    }

                    R_i {
                        label = "Input Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-6"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_i {
                        label = "Input Inductance"
                        widget = edit
                        type = generic
                        default_value = "100e-6*0.02"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    R_s {
                        label = "Shunt Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-6"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    C_s {
                        label = "Shunt Capacitance"
                        widget = edit
                        type = generic
                        default_value = "300e-6*50"
                        unit = "F"
                        group = "2. LCL filter"
                    }

                    R_o {
                        label = "Output Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-6"
                        unit = "Ω"
                        group = "2. LCL filter"
                    }

                    L_o {
                        label = "Output Inductance"
                        widget = edit
                        type = generic
                        default_value = "100e-6*0.02"
                        unit = "H"
                        group = "2. LCL filter"
                    }

                    R {
                        label = "Resistance"
                        widget = edit
                        type = generic
                        default_value = "1e-6"
                        unit = "Ω"
                        group = "3. Electrical Line"
                    }

                    L {
                        label = "Inductance"
                        widget = edit
                        type = generic
                        default_value = "1e-6"
                        unit = "H"
                        group = "3. Electrical Line"
                    }

                    Kp_I {
                        label = "Inner Loop Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "1.2"
                        group = "4. Cascaded Controller"
                    }

                    Ki_I {
                        label = "Inner Loop Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "2"
                        group = "4. Cascaded Controller"
                    }

                    Imax {
                        label = "Inner Loop Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1"
                        group = "4. Cascaded Controller"
                    }

                    Imin {
                        label = "Inner Loop Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1"
                        group = "4. Cascaded Controller"
                    }

                    Kp_V {
                        label = "Outer Loop Proportional Gain"
                        widget = edit
                        type = generic
                        default_value = "0.01"
                        group = "4. Cascaded Controller"
                    }

                    Ki_V {
                        label = "Outer Loop Integral Gain"
                        widget = edit
                        type = generic
                        default_value = "2.2478"
                        group = "4. Cascaded Controller"
                    }

                    Vmax {
                        label = "Outer Loop Upper Limit"
                        widget = edit
                        type = generic
                        default_value = "1"
                        group = "4. Cascaded Controller"
                    }

                    Vmin {
                        label = "Outer Loop Lower Limit"
                        widget = edit
                        type = generic
                        default_value = "-1"
                        group = "4. Cascaded Controller"
                    }

                    f_D {
                        label = "Frequency Droop Coefficient"
                        widget = edit
                        type = generic
                        default_value = "3e-3"
                        unit = "%"
                        group = "5. Droop Control"
                    }

                    V_D {
                        label = "Voltage Droop Coefficient"
                        widget = edit
                        type = generic
                        default_value = "5e-3"
                        unit = "%"
                        group = "5. Droop Control"
                    }

                    T_m {
                        label = "Measurement delay"
                        widget = edit
                        type = generic
                        default_value = "0.5"
                        unit = "s"
                        group = "5. Droop Control"
                    }

                    maxV_slip {
                        label = "Maximum slip (voltage)"
                        widget = edit
                        type = generic
                        default_value = "5e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    minV_slip {
                        label = "Minimum slip (voltage)"
                        widget = edit
                        type = generic
                        default_value = "2.5e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    maxw_slip {
                        label = "Maximum slip (frequency)"
                        widget = edit
                        type = generic
                        default_value = "10e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    minw_slip {
                        label = "Minimum slip (frequency)"
                        widget = edit
                        type = generic
                        default_value = "5e-3"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    maxV_pds {
                        label = "Maximum difference signal (voltage)"
                        widget = edit
                        type = generic
                        default_value = "1e-2"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    maxw_pds {
                        label = "Maximum difference signal (frequency)"
                        widget = edit
                        type = generic
                        default_value = "5e-1"
                        unit = "pu"
                        group = "6. Automatic Synchronizer"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE init
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                        Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                        Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                        Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                        f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                        V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                        T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                        
                        
                        Tfast = Ts
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S/V_DQ
                        Z_DQ = V_DQ/I_DQ
                        mP = w_0*(f_D/100)
                        nQ = V_DQ*(V_D/100)
                        D_f = 1/mP
                        D_V = 1/nQ
                        Tsync = 1
                    ENDCODE

                    CODE define_icon
                        mdl.set_component_icon_image(item_handle, 'grid_forming_inverter.svg')
                    ENDCODE

                    CODE pre_compile
                        # HEADER START
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                        Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                        Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                        Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                        f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                        V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                        T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                        maxV_slip = mdl.get_property_value(mdl.prop(item_handle, "maxV_slip"))
                        minV_slip = mdl.get_property_value(mdl.prop(item_handle, "minV_slip"))
                        maxw_slip = mdl.get_property_value(mdl.prop(item_handle, "maxw_slip"))
                        minw_slip = mdl.get_property_value(mdl.prop(item_handle, "minw_slip"))
                        maxV_pds = mdl.get_property_value(mdl.prop(item_handle, "maxV_pds"))
                        maxw_pds = mdl.get_property_value(mdl.prop(item_handle, "maxw_pds"))
                        # HEADER STOP
                        S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                        V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                        w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                        Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                        R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                        L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                        R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                        C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                        R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                        L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                        R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                        L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                        Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                        Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                        Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                        Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                        Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                        Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                        Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                        Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                        f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                        V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                        T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                        
                        
                        Tfast = Ts
                        V_DQ = V_ABC*np.sqrt(2)
                        I_DQ = S/V_DQ
                        Z_DQ = V_DQ/I_DQ
                        mP = w_0*(f_D/100)
                        nQ = V_DQ*(V_D/100)
                        D_f = 1/mP
                        D_V = 1/nQ
                        Tsync = 1
                    ENDCODE
                }
            }
            [
                position = 8040, 8200
                scale = -1, 1
                size = 240, 184
            ]

            component "core/Rate Transition" "Rate Transition1" {
                execution_rate = "Ts_ess"
                init_value = "1"
            }
            [
                position = 7784, 8200
                hide_name = True
                size = 32, 32
            ]

            port EPC_A {
                position = top:1
                kind = pe
            }
            [
                position = 9088, 8056
                scale = -1, 1
            ]

            port EPC_B {
                position = top:2
                kind = pe
            }
            [
                position = 9088, 8152
                scale = -1, 1
            ]

            port EPC_C {
                position = top:3
                kind = pe
            }
            [
                position = 9088, 8248
                scale = -1, 1
            ]

            tag Goto2 {
                value = "Va"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8368, 8304
                rotation = left
                hide_name = True
            ]

            tag Goto3 {
                value = "Vb"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8440, 8304
                rotation = left
                hide_name = True
            ]

            tag Goto4 {
                value = "Vc"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8512, 8304
                rotation = left
                hide_name = True
            ]

            tag Goto5 {
                value = "Ia"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8920, 7976
                rotation = left
                hide_name = True
            ]

            tag Goto6 {
                value = "Ib"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8872, 7976
                rotation = left
                hide_name = True
            ]

            tag Goto7 {
                value = "Ic"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 8824, 7976
                rotation = left
                hide_name = True
            ]

            tag From7 {
                value = "PCC_status"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 7656, 8200
                hide_name = True
            ]

            junction Junction108 pe
            [
                position = 8400, 8528
            ]

            junction Junction112 pe
            [
                position = 8472, 8528
            ]

            junction Junction113 pe
            [
                position = 8632, 8528
            ]

            junction Junction114 pe
            [
                position = 8568, 8528
            ]

            junction Junction161 pe
            [
                position = 8568, 8056
            ]

            junction Junction162 pe
            [
                position = 8632, 8152
            ]

            junction Junction163 pe
            [
                position = 8696, 8248
            ]

            junction Junction452 pe
            [
                position = 8328, 8056
            ]

            junction Junction453 pe
            [
                position = 8400, 8152
            ]

            junction Junction454 pe
            [
                position = 8472, 8248
            ]

            junction Junction455 pe
            [
                position = 8304, 8528
            ]

            comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Standalone (UPS) load</p></body></html> ENDCOMMENT 
            [
                position = 8216, 8544
            ]

            connect EPC_A PV_Ia.n_node as Connection1352
            connect EPC_B PV_Ib.n_node as Connection1354
            connect EPC_C PV_Ic.n_node as Connection1356
            connect PV_Ia.p_node Junction161 as Connection1353
            connect PV_Ib.p_node Junction162 as Connection1355
            connect PV_Ic.p_node Junction163 as Connection1357
            connect Goto2 Va.out as Connection1358
            connect Goto3 Vb.out as Connection1359
            connect Goto4 Vc.out as Connection1360
            connect Goto5 PV_Ia.out as Connection1361
            connect Goto6 PV_Ib.out as Connection1362
            connect Goto7 PV_Ic.out as Connection1363
            connect Junction112 Junction108 as Connection918
            connect Junction113 Junction114 as Connection923
            connect Junction114 Junction112 as Connection924
            connect Junction163 R16.p_node as Connection1350
            [
                breakpoints = 8696, 8248
            ]
            connect R16.n_node Junction113 as Connection920
            connect R17.n_node Junction113 as Connection922
            connect R17.p_node Junction162 as Connection1346
            connect R18.n_node Junction114 as Connection925
            connect R18.p_node Junction161 as Connection1343
            connect Vb.n_node Junction108 as Connection901
            connect Vc.n_node Junction112 as Connection917
            connect P_ref_PV.out "Grid following inverter (averaged).setpoint_P" as Connection4319
            connect Q_ref_PV.out "Grid following inverter (averaged).setpoint_Q" as Connection4320
            connect Va.p_node Junction452 as Connection4321
            [
                breakpoints = 8328, 8080
            ]
            connect Junction452 Junction161 as Connection4322
            [
                breakpoints = 8328, 8056; 8328, 8056; 8568, 8056; 8568, 8056
            ]
            connect "Grid following inverter (averaged).Va" Junction452 as Connection4323
            connect Vb.p_node Junction453 as Connection4324
            connect Junction453 Junction162 as Connection4325
            [
                breakpoints = 8400, 8152; 8400, 8160; 8400, 8152; 8632, 8152
            ]
            connect "Grid following inverter (averaged).Vb" Junction453 as Connection4326
            [
                breakpoints = 8040, 8016; 8400, 8016
            ]
            connect Junction163 Junction454 as Connection4327
            [
                breakpoints = 8696, 8248; 8696, 8248
            ]
            connect Junction454 Vc.p_node as Connection4328
            [
                breakpoints = 8472, 8248; 8472, 8248; 8472, 8248; 8472, 8248; 8472, 8248; 8472, 8440
            ]
            connect "Grid following inverter (averaged).Vc" Junction454 as Connection4329
            [
                breakpoints = 7944, 7976; 8472, 7976
            ]
            connect Junction108 Junction455 as Connection4330
            [
                breakpoints = 8400, 8528; 8400, 8528
            ]
            connect Junction455 Va.n_node as Connection4331
            [
                breakpoints = 8312, 8528; 8320, 8528; 8312, 8528; 8328, 8528
            ]
            connect "Grid following inverter (averaged).Ground" Junction455 as Connection4332
            connect From7 "Rate Transition1.in" as Connection4333
            connect "Rate Transition1.out" "Grid following inverter (averaged).PCC_status" as Connection4334
        }
        [
            position = 5840, 8120
            rotation = right
            size = 144, 56
        ]

        component pas_resistor Rb1 {
            resistance = "R"
        }
        [
            position = 6248, 8120
        ]

        component pas_inductor La1 {
            inductance = "L"
        }
        [
            position = 6144, 8064
            rotation = down
        ]

        component pas_resistor Ra1 {
            resistance = "R"
        }
        [
            position = 6248, 8064
        ]

        component pas_resistor Rc1 {
            resistance = "R"
        }
        [
            position = 6248, 8176
        ]

        component pas_inductor Lc1 {
            inductance = "L"
        }
        [
            position = 6144, 8176
            rotation = down
        ]

        component pas_inductor Lb1 {
            inductance = "L"
        }
        [
            position = 6144, 8120
            rotation = down
        ]

        component "core/Voltage RMS" Vrms_pv {
            frequency = "sys_f"
        }
        [
            position = 6000, 8008
            size = 64, 32
        ]

        component gen_adv_c_function "Advanced C function" {
            add_src_path = "C files"
            add_src_path_full = "C:\Users\zholbar1\Documents\microgrid_testbed\Tests\C files"
            arb_defs = "/*Begin code section*/

/*End code section*/"
            in_terminal_dimensions = "inherit"
            in_terminal_dimensions_str = "in inherit"
            in_terminal_labels = "[(\'in\', False)]"
            no_feed_inputs = "[\'\']"
            no_feed_outputs = "[\'\']"
            out_terminal_dimensions = "inherit"
            out_terminal_dimensions_str = "out inherit"
            out_terminal_labels = "[(\'out\', False)]"
            output_fnc = "/*Begin code section*/
float Cbat=1;
out = battery(Cbat);
/*End code section*/"
        }
        [
            position = 5608, 7568
            size = 48, 48
        ]

        component src_constant Constant3 {
            execution_rate = "Ts"
        }
        [
            position = 5488, 7568
            hide_name = True
        ]

        component gen_probe OUT {
        }
        [
            position = 5760, 7568
        ]

        tag Tag36 {
            value = "Ground"
            scope = global
            kind = pe
        }
        [
            position = 6496, 7152
            hide_name = True
            scale = -1, 1
        ]

        tag Tag37 {
            value = "Ground"
            scope = global
            kind = pe
        }
        [
            position = 6504, 7712
            hide_name = True
            scale = -1, 1
        ]

        tag Goto48 {
            value = "OUT"
            scope = masked_subsystem
            kind = sp
            direction = in
        }
        [
            position = 5768, 7480
            size = 60, 20
        ]

        junction Junction495 pe
        [
            position = 6400, 7152
        ]

        junction Junction585 pe
        [
            position = 5928, 7840
        ]

        junction Junction586 pe
        [
            position = 6072, 7888
        ]

        junction Junction587 pe
        [
            position = 5912, 8072
        ]

        junction Junction589 pe
        [
            position = 6488, 7968
        ]

        junction Junction590 pe
        [
            position = 6528, 7984
        ]

        junction Junction591 pe
        [
            position = 6560, 8000
        ]

        junction Junction593 pe
        [
            position = 6400, 7888
        ]

        junction Junction594 pe
        [
            position = 6416, 8000
        ]

        junction Junction595 pe
        [
            position = 6384, 7832
        ]

        junction Junction596 pe
        [
            position = 6056, 8120
        ]

        junction Junction597 pe
        [
            position = 6304, 7320
        ]

        junction Junction598 pe
        [
            position = 6400, 7152
        ]

        junction Junction342 sp
        [
            position = 5688, 7568
        ]

        connect PCC.B F2_line.b_in as Connection3390
        connect PCC.G Tag37 as Connection3388
        connect F2_line.c_in PCC.C as Connection3391
        connect F2_line.a_in PCC.A as Connection3501
        connect Junction495 Tag36 as Connection4156
        [
            breakpoints = 6400, 7152
        ]
        connect Vs1.n_node Junction495 as Connection4157
        connect Lc.p_node Rc.p_node as Connection1240
        connect La.p_node Ra.p_node as Connection1236
        connect Lb.p_node Rb.p_node as Connection1238
        connect ESS.EPC_C Lc.n_node as Connection4607
        connect ESS.EPC_A Junction585 as Connection4616
        connect Junction585 La.n_node as Connection4617
        connect Vrms_ess.p_node Junction585 as Connection4618
        connect ESS.EPC_B Junction586 as Connection4619
        connect Junction586 Lb.n_node as Connection4620
        connect Vrms_ess.n_node Junction586 as Connection4621
        [
            breakpoints = 6072, 7784; 6072, 7888
        ]
        connect Lc1.p_node Rc1.p_node as Connection4622
        connect La1.p_node Ra1.p_node as Connection4623
        connect Lb1.p_node Rb1.p_node as Connection4624
        connect PV.EPC_C Lc1.n_node as Connection4627
        connect PV.EPC_A Junction587 as Connection4628
        connect Vrms_pv.p_node Junction587 as Connection4630
        connect Load.A Junction589 as Connection4637
        connect Ra1.n_node Junction589 as Connection4639
        [
            breakpoints = 6488, 8064; 6488, 7968
        ]
        connect Load.B Junction590 as Connection4640
        connect Rb1.n_node Junction590 as Connection4642
        connect Load.C Junction591 as Connection4643
        connect Rc1.n_node Junction591 as Connection4645
        connect Junction590 Junction593 as Connection4649
        [
            breakpoints = 6432, 7984; 6432, 7888
        ]
        connect Junction593 Rb.n_node as Connection4650
        connect PCC.b Junction593 as Connection4651
        connect Junction591 Junction594 as Connection4652
        connect Junction594 Rc.n_node as Connection4653
        [
            breakpoints = 6368, 8000; 6368, 7944
        ]
        connect PCC.c Junction594 as Connection4654
        connect Ra.n_node Junction595 as Connection4656
        connect Junction595 Junction589 as Connection4657
        [
            breakpoints = 6384, 7832; 6488, 7832; 6488, 7968
        ]
        connect PCC.a Junction595 as Connection4658
        connect Junction587 La1.n_node as Connection4659
        [
            breakpoints = 5912, 8072; 6080, 8072
        ]
        connect PV.EPC_B Junction596 as Connection4660
        connect Junction596 Lb1.n_node as Connection4661
        connect Vrms_pv.n_node Junction596 as Connection4662
        connect Vs1.c_node F2_line.c_out as Connection4665
        connect Vs1.a_node Junction597 as Connection4666
        connect Junction597 F2_line.a_out as Connection4667
        connect Vrms_grid.p_node Junction597 as Connection4668
        connect F2_line.b_out Vs1.b_node as Connection4672
        [
            breakpoints = 6400, 7320
        ]
        connect gnd2.node Junction598 as Connection4673
        connect Junction598 Junction495 as Connection4674
        connect Vrms_grid.n_node Junction598 as Connection4675
        connect Constant3.out "Advanced C function.in" as Connection2030
        connect OUT.in Junction342 as Connection2032
        connect Junction342 "Advanced C function.out" as Connection2033
        [
            breakpoints = 5648, 7568
        ]
        connect Goto48 Junction342 as Connection2034
    }

    default {
        gen_PQ_transform {
            filter_order = "first order"
            filter_cutoff_Hz = "30"
            initial_filter_input = "0"
            initial_filter_output = "0"
            enable_inst_ports = "True"
            enable_zero_ports = "False"
            execution_rate = "inherit"
        }

        gen_abs {
            execution_rate = "inherit"
        }

        gen_adv_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            dll_file_path = ""
            dll_file_path_full = ""
            h_file_path = ""
            h_file_path_full = ""
            add_src_path = ""
            add_src_path_full = ""
            convert_to_relative_dll = "True"
            convert_to_relative_src = "True"
            arb_defs = ""
            add_macros = ""
            skip_pre_cmpl_check = "False"
            generate_for_hil = "True"
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_data_type_conversion {
            output_type = "real"
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_math_fnc {
            mathematical_fn = "exponential"
            execution_rate = "inherit"
        }

        gen_pid_controller {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            upper_sat_lim = "1"
            lower_sat_lim = "-1"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_rel_op {
            relational_op = "=="
            execution_rate = "inherit"
        }

        gen_rms_value {
            op_mode = "PLL based"
            frequency = "50"
            period_timeout = "0.5"
            execution_rate = "inherit"
        }

        gen_sr_ff {
            init_value = "0"
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_trigonometric {
            trigonometric_fn = "sin"
            execution_rate = "inherit"
        }

        gen_z_domain_transfer {
            domain = "Z-domain"
            method = "Zero-order hold"
            b_coeff = "[1]"
            a_coeff = "[1,-1]"
            init_states = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_clock {
            execution_rate = "100e-6"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_digital_input {
            addr = "1"
            invert = "false"
            signal_type = "uint"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Four Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100e3"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
            cpl_connection = "star"
        }

        "core/Rate Transition" {
            init_value = "0.0"
            execution_rate = "100e-6"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Three Phase Inverter" {
            ctrl_src = "Digital input per switch"
            op_mode = "Fixed carrier frequency"
            carrier_freq = "10000.0"
            carr_ph_offset = "0.0"
            d_time = "5e-6"
            ref_sig_min_max = "[-1.0, 1.0]"
            load_mode = "on min"
            execution_rate = "inherit"
            Sa_top = "1"
            Sa_top_logic = "active high"
            Sa_bot = "2"
            Sa_bot_logic = "active high"
            Sb_top = "3"
            Sb_top_logic = "active high"
            Sb_bot = "4"
            Sb_bot_logic = "active high"
            Sc_top = "5"
            Sc_top_logic = "active high"
            Sc_bot = "6"
            Sc_bot_logic = "active high"
            delay_enabled = "False"
            fixed_delay = "1e-6"
            var_delay_lut = "[-10.0, 1e-6, 10.0, 1e-6]"
            preview_var_delay = "Preview"
            Sa_top_I = "False"
            Sa_bot_I = "False"
            Sb_top_I = "False"
            Sb_bot_I = "False"
            Sc_top_I = "False"
            Sc_bot_I = "False"
            losses_estimation = "False"
            Import_igbt_xml = "not selected"
            Import_diode_xml = "not selected"
            Vce = "1.3"
            Rce = "0"
            Vd = "1.2"
            Rd = "0"
            i_sw = "[0.0, 6.0, 12.0, 18.0, 24.0]"
            v_sw = "[0.0, 600.0]"
            temp_sw = "[25.0, 50.0, 75.0, 100.0, 125.0]"
            et_on_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*3.8e-3, 0.4*3.8e-3, 0.8*3.8e-3, 0.68*3.8e-3, 0.9*3.8e-3], [0.65*3.8e-3, 0.9*3.8e-3, 1.2*3.8e-3, 1.5*3.8e-3, 1.7*3.8e-3], [0.9*3.8e-3, 1.3*3.8e-3, 1.7*3.8e-3, 1.9*3.8e-3, 2.25*3.8e-3], [1.1*3.8e-3, 1.7*3.8e-3, 2.1*3.8e-3, 2.3*3.8e-3, 2.5*3.8e-3]]"
            et_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.1e-3, 0.4*2.1e-3, 0.8*2.1e-3, 0.68*2.1e-3, 0.9*2.1e-3], [0.65*2.1e-3, 0.9*2.1e-3, 1.2*2.1e-3, 1.5*2.1e-3, 1.7*2.1e-3], [0.9*2.1e-3, 1.3*2.1e-3, 1.7*2.1e-3, 1.9*2.1e-3, 2.25*2.1e-3], [1.1*2.1e-3, 1.7*2.1e-3, 2.1*2.1e-3, 2.3*2.1e-3, 2.5*2.1e-3]]"
            ed_off_table_out = "[[0.0, 0.0275e-3, 0.15e-3, 0.275e-3, 0.3e-3], [0.35*2.2e-3, 0.4*2.2e-3, 0.8*2.2e-3, 0.68*2.2e-3, 0.9*2.2e-3], [0.65*2.2e-3, 0.9*2.2e-3, 1.2*2.2e-3, 1.5*2.2e-3, 1.7*2.2e-3], [0.9*2.2e-3, 1.3*2.2e-3, 1.7*2.2e-3, 1.9*2.2e-3, 2.25*2.2e-3], [1.1*2.2e-3, 1.7*2.2e-3, 2.1*2.2e-3, 2.3*2.2e-3, 2.5*2.2e-3]]"
            temp_estimation = "False"
            thermal_networks_type = "Foster"
            switch_Rth = "[0.159, 0.133, 0.120, 0.038]"
            switch_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            switch_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            diode_Rth = "[0.159, 0.133, 0.120, 0.038]"
            diode_Tth = "[1.1e-1, 1.56e-2, 1.35e-3, 1.51e-4]"
            diode_Cth = "[0.0029, 0.0097, 0.1068, 0.8500]"
            loss_exec_rate = "100e-6"
            vout_cmp_pullup_mode = "False"
            show_cnt_out = "False"
            show_monitoring = "false"
            _control_property = "all high"
            dtv_flag_en = "True"
            pwm_enabling = "False"
            pwm_enable_di = "13"
            pwm_enable_inv = "active high"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            core_sat = "False"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            ioc1 = "0.7"
            Poc1 = "460.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[1910.3, 2419.7]"
            current_vals_SI = "[0.66653, 277.72]"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[1.2, 1.52]"
            current_vals_pu = "[0.0024, 1]"
            flux_vals_SCOC = "[1.2, 1.52]"
            current_vals_SCOC = "[0.0024, 1]"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "false"
            coupling_type = "core"
            Rshunt = "inf"
        }

        "core/Three Phase Voltage Source" {
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Three phase PLL" {
            initial_filter_output = "60"
            wn = "157.0796"
            zeta = "0.707"
            rate_high = "12"
            rate_low = "-12"
            freq_unit = "Hz"
            kp = "100"
            ki = "3200"
            kd = "1"
            N = "714.2857"
            initial_pid_output = "376.99111843"
            up_lim = "1e4"
            low_lim = "-1e4"
            kb = "1"
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "False"
            wn_LPFdq = "62.83185307"
            execution_rate = "inherit"
            enable_pk = "False"
            enable_zero = "True"
            enable_sin = "True"
        }

        "core/Transmission Line" {
            model = "RL coupled"
            num_of_phases = "3"
            model_def = "Geometry"
            unit_sys = "imperial"
            Length_metric = "100.0"
            Length_miles = "62.1371"
            Frequency = "60.0"
            Earth_resistivity = "100"
            X_axis_1_metric = "-1.0668"
            Y_axis_1_metric = "8.5344"
            GMR_1_metric = "0.00743712"
            RD_1_metric = "0.009156192"
            Rs_1_metric = "0.19013958482462417"
            X_axis_1_imperial = "-3.5"
            Y_axis_1_imperial = "28.0"
            GMR_1_imperial = "0.0244"
            RD_1_imperial = "0.03004"
            Rs_1_imperial = "0.306"
            X_axis_2_metric = "-0.3048"
            Y_axis_2_metric = "8.5344"
            GMR_2_metric = "0.00743712"
            RD_2_metric = "0.009156192"
            Rs_2_metric = "0.19013958482462417"
            X_axis_2_imperial = "-1.0"
            Y_axis_2_imperial = "28.0"
            GMR_2_imperial = "0.0244"
            RD_2_imperial = "0.03004"
            Rs_2_imperial = "0.306"
            X_axis_3_metric = "1.0668"
            Y_axis_3_metric = "8.5344"
            GMR_3_metric = "0.00743712"
            RD_3_metric = "0.009156192"
            Rs_3_metric = "0.19013958482462417"
            X_axis_3_imperial = "3.5"
            Y_axis_3_imperial = "28.0"
            GMR_3_imperial = "0.0244"
            RD_3_imperial = "0.03004"
            Rs_3_imperial = "0.306"
            X_axis_4_metric = "0.1524"
            Y_axis_4_metric = "7.3152"
            GMR_4_metric = "0.00248"
            RD_4_metric = "0.00714"
            Rs_4_metric = "0.3678"
            X_axis_4_imperial = "0.5"
            Y_axis_4_imperial = "24.0"
            GMR_4_imperial = "0.00814"
            RD_4_imperial = "0.02345"
            Rs_4_imperial = "0.592"
            R_metric = "[[0.2481, 0.0579, 0.0579], [0.0579, 0.2481, 0.0579], [0.0579, 0.0579, 0.2481]]"
            R_imperial = "[[0.4, 0.093, 0.093], [0.093, 0.4, 0.093], [0.093, 0.093, 0.4]]"
            L_metric = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            L_imperial = "[[0.00374, 0.0022, 0.0022], [0.0022, 0.00374, 0.0022], [0.0022, 0.0022, 0.00374]]"
            C_metric = "[[8.546e-9, 0, 0], [0, 8.546e-9, 0], [0, 0, 8.546e-9]]"
            C_imperial = "[[1.471e-8, 0, 0], [0, 1.530e-8, 0], [0, 0, 1.375e-8]]"
            R_sequence_metric = "[[0.3864, 0, 0],[0, 0.01273, 0], [0, 0, 0.01273]]"
            L_sequence_metric = "[[4.1264e-3, 0, 0],[0, 0.9337e-3, 0], [0, 0, 0.9337e-3]]"
            C_sequence_metric = "[[7.751e-9, 0, 0],[0, 12.74e-9, 0], [0, 0, 12.74e-9]]"
            R_sequence_imperial = "[[0.6218, 0, 0],[0, 0.0204, 0], [0, 0, 0.0204]]"
            L_sequence_imperial = "[[0.00664, 0, 0],[0, 0.00150, 0], [0, 0, 0.00150]]"
            C_sequence_imperial = "[[1.247e-8, 0, 0],[0, 2.0503e-8, 0], [0, 0, 2.0503e-8]]"
            import_from_geometry = "Import from Geometry"
            import_from_RLC = "Import from RLC"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Voltage RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }

        "core/abc to dq" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "True"
            initial_filter_output = "0"
            wn_LPFdq = "1000"
            execution_rate = "inherit"
        }

        "core/dq to abc" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            execution_rate = "0"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Ts = 1e-3
        Ts_gen = 1e-3
        sys_f = 60.0    # Hz
        sys_w = 2.0*np.pi*sys_f    #rad/s
        ft2mi = 1.0/5280.0     #mi/ft
        Tfast = 2e-4
        Ts_ess = 20e-6
        
        # Grid Specs
        
        Vgrid = 115000.0
        SCgrid = 100.0e6
        ratio_grid = 30.0
        
        Rgrid = ((Vgrid/np.sqrt(3))**2)/(SCgrid/3)/np.sqrt(1+ratio_grid**2)
        Lgrid = ratio_grid*Rgrid/sys_w
        
        # Transformer Specs
        
            # Utility
        
        Sn_50MVA       = 50.0e6    # VA
        V1_50MVA       = 115000.0    # V
        V2_50MVA       = 13800.0    # V
        Z_50MVA        = 15.0/100.0    # pu
        Z_ratio_50MVA = 30.0
        
        R_50MVA = Z_50MVA/np.sqrt(1.0+Z_ratio_50MVA**2.0)/2.0    # pu
        L_50MVA = Z_ratio_50MVA*R_50MVA/sys_w/2.0    # pu
        
        R1_50MVA = 3.0*R_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        R2_50MVA = R_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        L1_50MVA = 3.0*L_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        L2_50MVA = L_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        
            # Feeders
        
        Sn_500kVA_1       = 500.0e3    # VA
        V1_500kVA_1       = 13800.0    # V
        V2_500kVA_1       = 480.0    # V
        Z_500kVA_1        = 5.0/100.0    # pu
        Z_ratio_500kVA_1 = 4.9
        
        R_500kVA_1 = Z_500kVA_1/np.sqrt(1.0+Z_ratio_500kVA_1**2.0)/2.0    # pu
        L_500kVA_1 = Z_ratio_500kVA_1*R_500kVA_1/sys_w/2.0    # pu
        
        R1_500kVA_1 = 3.0*R_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        R2_500kVA_1 = R_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        L1_500kVA_1 = 3.0*L_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        L2_500kVA_1 = L_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        
        
        Sn_500kVA_2       = 500.0e3    # VA
        V1_500kVA_2       = 13800.0    # V
        V2_500kVA_2       = 208.0    # V
        Z_500kVA_2        = 5.0/100.0    # pu
        Z_ratio_500kVA_2 = 4.9
        Rm_500kVA_2 = 1e5
        Lm_500kVA_2 = 200
        
        R_500kVA_2 = Z_500kVA_2/np.sqrt(1.0+Z_ratio_500kVA_2**2.0)/2.0    # pu
        L_500kVA_2 = Z_ratio_500kVA_2*R_500kVA_2/sys_w/2.0    # pu
        
        R1_500kVA_2 = 3.0*R_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        R2_500kVA_2 = R_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        L1_500kVA_2 = 3.0*L_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        L2_500kVA_2 = L_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        
        
        Sn_1MVA       = 1000.0e3    # VA
        V1_1MVA       = 13800.0    # V
        V2_1MVA       = 480.0    # V
        Z_1MVA        = 5.56/100.0    # pu
        Z_ratio_1MVA = 5.49
        Rm_1MVA = 1e5
        Lm_1MVA = 200
        
        R_1MVA = Z_1MVA/np.sqrt(1.0+Z_ratio_1MVA**2.0)/2.0    # pu
        L_1MVA = Z_ratio_1MVA*R_1MVA/sys_w/2.0    # pu
        
        R1_1MVA = 3.0*R_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        R2_1MVA = R_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        L1_1MVA = 3.0*L_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        L2_1MVA = L_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        
        Sn_1500kVA       = 1500.0e3    # VA
        V1_1500kVA       = 4160.0    # V
        V2_1500kVA       = 480.0    # V
        Z_1500kVA        = 5.75/100.0    # pu
        Z_ratio_1500kVA = 5.04
        Rm_1500kVA = 1e5
        Lm_1500kVA = 200
        
        R_1500kVA = Z_1500kVA/np.sqrt(1.0+Z_ratio_1500kVA**2.0)/2.0    # pu
        L_1500kVA = Z_ratio_1500kVA*R_1500kVA/sys_w/2.0    # pu
        
        R1_1500kVA = 3.0*R_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        R2_1500kVA = R_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        L1_1500kVA = 3.0*L_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        L2_1500kVA = L_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        
        
        Sn_2MVA_1       = 2000.0e3    # VA
        V1_2MVA_1       = 4160.0    # V
        V2_2MVA_1       = 480.0    # V
        Z_2MVA_1        = 5.75/100.0    # pu
        Z_ratio_2MVA_1 = 5.7
        Rm_2MVA_1 = 1e5
        Lm_2MVA_1 = 200
        
        R_2MVA_1 = Z_2MVA_1/np.sqrt(1.0+Z_ratio_2MVA_1**2.0)/2.0    # pu
        L_2MVA_1 = Z_ratio_2MVA_1*R_2MVA_1/sys_w/2.0    # pu
        
        R1_2MVA_1 = 3.0*R_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        R2_2MVA_1 = R_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        L1_2MVA_1 = 3.0*L_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        L2_2MVA_1 = L_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        
        
        Sn_2MVA_2       = 2000.0e3    # VA
        V1_2MVA_2       = 13800.0    # V
        V2_2MVA_2       = 480.0    # V
        Z_2MVA_2        = 5.75/100.0    # pu
        Z_ratio_2MVA_2 = 5.7
        Rm_2MVA_2 = 1e5
        Lm_2MVA_2 = 200
        
        R_2MVA_2 = Z_2MVA_2/np.sqrt(1.0+Z_ratio_2MVA_2**2.0)/2.0    # pu
        L_2MVA_2 = Z_ratio_2MVA_2*R_2MVA_2/sys_w/2.0    # pu
        
        R1_2MVA_2 = 3.0*R_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        R2_2MVA_2 = R_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        L1_2MVA_2 = 3.0*L_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        L2_2MVA_2 = L_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        
        
        Sn_2500kVA_1       = 2500.0e3    # VA
        V1_2500kVA_1       = 13800.0    # V
        V2_2500kVA_1       = 480.0    # V
        Z_2500kVA_1        = 5.56/100.0    # pu
        Z_ratio_2500kVA_1 = 5.52
        Rm_2500kVA_1 = 1e5
        Lm_2500kVA_1 = 200
        
        R_2500kVA_1 = Z_2500kVA_1/np.sqrt(1.0+Z_ratio_2500kVA_1**2.0)/2.0    # pu
        L_2500kVA_1 = Z_ratio_2500kVA_1*R_2500kVA_1/sys_w/2.0    # pu
        
        R1_2500kVA_1 = 3.0*R_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        R2_2500kVA_1 = R_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        L1_2500kVA_1 = 3.0*L_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        L2_2500kVA_1 = L_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        
        
        Sn_2500kVA_2       = 2500.0e3    # VA
        V1_2500kVA_2       = 13800.0    # V
        V2_2500kVA_2       = 480.0    # V
        Z_2500kVA_2        = 5.75/100.0    # pu
        Z_ratio_2500kVA_2 = 6.6
        Rm_2500kVA_2 = 1e5
        Lm_2500kVA_2 = 200
        
        R_2500kVA_2 = Z_2500kVA_2/np.sqrt(1.0+Z_ratio_2500kVA_2**2.0)/2.0    # pu
        L_2500kVA_2 = Z_ratio_2500kVA_2*R_2500kVA_2/sys_w/2.0    # pu
        
        R1_2500kVA_2 = 3.0*R_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        R2_2500kVA_2 = R_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        L1_2500kVA_2 = 3.0*L_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        L2_2500kVA_2 = L_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        
        
        Sn_3750kVA       = 3750.0e3    # VA
        V1_3750kVA       = 13800.0    # V
        V2_3750kVA       = 4160.0    # V
        Z_3750kVA        = 4.75/100.0    # pu
        Z_ratio_3750kVA = 11.4
        Rm_3750kVA = 1e5
        Lm_3750kVA = 200
        
        R_3750kVA = Z_3750kVA/np.sqrt(1.0+Z_ratio_3750kVA**2.0)/2.0    # pu
        L_3750kVA = Z_ratio_3750kVA*R_3750kVA/sys_w/2.0    # pu
        
        R1_3750kVA = 3.0*R_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        R2_3750kVA = R_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        L1_3750kVA = 3.0*L_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        L2_3750kVA = L_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        
        
        Sn_5MVA       = 5000.0e3    # VA
        V1_5MVA       = 13800.0    # V
        V2_5MVA       = 480.0    # V
        Z_5MVA        = 5.50/100.0    # pu
        Z_ratio_5MVA = 5.44
        Rm_5MVA = 1e5
        Lm_5MVA = 200
        
        R_5MVA = Z_5MVA/np.sqrt(1.0+Z_ratio_5MVA**2.0)/2.0    # pu
        L_5MVA = Z_ratio_5MVA*R_5MVA/sys_w/2.0    # pu
        
        R1_5MVA = 3.0*R_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        R2_5MVA = R_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        L1_5MVA = 3.0*L_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        L2_5MVA = L_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        
        
        # Transmission Line Specs
        
            # The cable 6 impedance is equal to the cable 13 impedance. The differences of both
            # cables are Voltage insulation and Ampacity. Feeder1_line7, Feeder1_line8 and
            # Feeder1_line9 use cable 6.
            # Transmission lines 4, 5 and 6 from Feeder 2 use cable 6.
        
        R1_cable11 = 0.2685    # ohms/mi
        X1_cable11 = 0.207    # ohms/mi
        R0_cable11 = 2.1408    # ohms/mi
        X0_cable11 = 1.582    # ohms/mi
        B_cable11 = 308.7587e-6    # S/mi
        L0_cable11 = X0_cable11/sys_w    # H/mi
        L1_cable11 = X1_cable11/sys_w    # H/mi
        C0_cable11 = B_cable11/sys_w    # F/mi
        R_cable11  = [[R0_cable11,0.0,0.0],[0.0,R1_cable11,0.0],[0.0,0.0,R1_cable11]]
        L_cable11  = [[L0_cable11,0.0,0.0],[0.0,L1_cable11,0.0],[0.0,0.0,L1_cable11]]
        C_cable11  = [[C0_cable11,0.0,0.0],[0.0,C0_cable11,0.0],[0.0,0.0,C0_cable11]]
        
        R1_cable13 = 0.1206    # ohms/mi
        X1_cable13 = 0.1878    # ohms/mi
        R0_cable13 = 1.8354    # ohms/mi
        X0_cable13 = 1.2165    # ohms/mi
        B_cable13 = 384.0177e-6    # S/mi
        L0_cable13 = X0_cable13/sys_w    # H/mi
        L1_cable13 = X1_cable13/sys_w    # H/mi
        C0_cable13 = B_cable13/sys_w    # F/mi
        R_cable13  = [[R0_cable13,0.0,0.0],[0.0,R1_cable13,0.0],[0.0,0.0,R1_cable13]]
        L_cable13  = [[L0_cable13,0.0,0.0],[0.0,L1_cable13,0.0],[0.0,0.0,L1_cable13]]
        C_cable13  = [[C0_cable13,0.0,0.0],[0.0,C0_cable13,0.0],[0.0,0.0,C0_cable13]]
        
        
        # Transmission Line lengths
        
            # Utility
        
        l_U_L1 = 3000.0*ft2mi    # mi
        l_U_L2 = 500.0*ft2mi    # mi
        l_U_L3 = 500.0*ft2mi    # mi
        l_U_L4 = 500.0*ft2mi    # mi
        
            # Feeder1
        
        l_F1L1 = 1800.0*ft2mi    # mi
        l_F1L2 = 5500.0*ft2mi    # mi
        l_F1L3 = 1000.0*ft2mi    # mi
        l_F1L4 = 3000.0*ft2mi    # mi
        l_F1L5 = 3000.0*ft2mi    # mi
        l_F1L6 = 1500.0*ft2mi    # mi
        l_F1L7 = 2000.0*ft2mi    # mi
        l_F1L8 = 1000.0*ft2mi    # mi
        l_F1L9 = 2000.0*ft2mi    # mi
        l_F1DG = 2000.0*ft2mi    # mi
        
            # Fedeer2
        
        l_F2L0 = 10.0*ft2mi    # mi
        l_F2L1 = 5500.0*ft2mi    # mi
        l_F2L2 = 2000.0*ft2mi    # mi
        l_F2L3 = 3000.0*ft2mi    # mi
        l_F2L4 = 1500.0*ft2mi    # mi
        l_F2L5 = 1500.0*ft2mi    # mi
        l_F2L6 = 1500.0*ft2mi    # mi
        
            # Feeder3
        
        l_F3L1 = 2500.0*ft2mi    # mi
        l_F3L2 = 2000.0*ft2mi    # mi
        l_F3L3 = 2000.0*ft2mi    # mi
        l_F3L4 = 1500.0*ft2mi    # mi
        l_F3LNGG = 2000.0*ft2mi    # mi
        
        #EPC ESS specs
        L_inv_ess = 0.133e-3 #7.6573e-5 
        L_grid_ess = 0.08e-3 #4.5944e-5
        
        # Diesel Genset settings
        
            # Governor specs
        
        K = 10  # gain K
        T1 = 1.0E-4 # Time constant T1 of Electric Control Box
        T2 = 0.0 # Time constant T2 of Electric Control Box
        T3 = 0.5001 # Time constant T3 of Electric Control Box
        T4 = 0.025  # Time constant T4 of Actuator
        T5 = 0.0009  # Time constant T5 of Actuator
        T6 = 0.00574  # Time constant T6 of Actuator
        Pm0 = 0.0 #0.0005  # Initial value of Mechanic Power
        Tmax = 10 #1.1  # Max torque limit
        Tmin = -0.1  # Min torque limit
        Td = 0.024  # Engine time delay
        
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2]
        denTF4d = [coeff3, coeff4]
        
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2]
        denTF3d = [coeff3, coeff4]
        
        numTF1d = [(1.0+2.0*T3/Ts),2.0,(1.0-2.0*T3/Ts)]
        denTF1d = [(1.0+2.0*T1/Ts+4.0*T1*T2/(Ts**2)),(2.0-8.0*T1*T2/(Ts**2)),(4.0*T1*T2/(Ts**2)-2.0*T1/Ts+1)]
        
            # Synchronous machine specs from Simulink's 4 MVA machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen1 = 3.5e6  # Nominal/base power of machine in VA
        Vn_gen1 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen1 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen1 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen1 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen1 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen1 = 0.00206  # Field resistance in pu
        Llfd_pu_gen1 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen1 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen1 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen1 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen1 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen1 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen1 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen1 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen1 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen1 = 0.009238  # Friction factor in pu
        
            # Base calculation
        
        Vb_gen1 = Vn_gen1*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen1 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen1 = wb_gen1/pms  # Mechanical angular speed base
        Zb_gen1 = (Vn_gen1*Vn_gen1)/Sb_gen1  # Impedance base
        Trq_b_gen1 = Sb_gen1/wmb_gen1  # Torque base
        Fb_gen1 = Trq_b_gen1/wmb_gen1  # Friction Factor base
        Lb_gen1 = Zb_gen1/wb_gen1  # Inductance base
        
            # Stator data in SI
        
        Rs_gen1 = Rs_pu_gen1*Zb_gen1
        Lls_gen1 = Lls_pu_gen1*Lb_gen1
        Lmd_gen1 = Lmd_pu_gen1*Lb_gen1
        Lmq_gen1 = Lmq_pu_gen1*Lb_gen1
        Rkd_gen1 = Rkd_pu_gen1*Zb_gen1
        Rkq_gen1 = Rkq_pu_gen1*Zb_gen1
        Llkd_gen1 = Llkd_pu_gen1*Lb_gen1
        Llkq_gen1 = Llkq_pu_gen1*Lb_gen1
        
            # Mechanical data in SI
        
        F_gen1 = Fpu_gen1*Fb_gen1  # Friction Factor in Nm.s
        J_gen1 = 2*H_gen1*Sb_gen1/(wmb_gen1*wmb_gen1)  # Inertia in kg.m2
        
            # Field base calculation
        
        Lsfd_gen1 = (2.0/3.0)*Lmd_gen1*(1.0/Ns_fd_gen1)  # Mutual inductance between stator and field
        ifn_gen1 = Vb_gen1/(Lsfd_gen1*wb_gen1)  # Nominal field current
        ifb_gen1 = ifn_gen1*Lmd_pu_gen1  # Field current base
        Vfb_gen1 = Sb_gen1/ifb_gen1  # Field voltage base
        Zfb_gen1 = Vfb_gen1/ifb_gen1  # Field impedance base
        Lfb_gen1 = Zfb_gen1/wb_gen1  # Field inductance base
        
            # Field data in SI
        
        Rf_gen1 = Rf_pu_gen1*Zfb_gen1  # Field resistance (Field side)
        Llfd_gen1 = Llfd_pu_gen1*Lfb_gen1  # Field inductance (Field side)
        Rf_prime_gen1 = Rf_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field resistance referred to the stator side
        Llfd_prime_gen1 = Llfd_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field inductance referred to the stator side
        
            # Exciter initialization
        
        Tr_gen1 = 20e-4  # Low pass filter time constant
        Ka_gen1 = 200  # Regulator gain
        Ta_gen1 = 2e-3  # Regulator time constant
        Ke_gen1 = 1.0  # Exciter constant
        Te_gen1 = 1e-8 #Exciter time constant
        Tb_gen1 = 1e-12  # Transient gain reduction time constant b
        Tc_gen1 = 1e-12  # Transient gain reduction time constant c
        Kf_gen1 = 0  # Damping filter gain
        Tf_gen1 = 1e-12  # Damping filter time constant
        Efmin_gen1 = -0.1 # Regulator output lower limit
        Efmax_gen1 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen1 = 0.0  # Initial terminal voltage
        Vf0_gen1 = 0.0  # Initial field voltage
        Const_gen1 = Vf0_gen1/Ka_gen1
        
            #Diesel settings from Unit Test (Mach_ex_gov_PQv3_4MVA_unit_test_woodward_updated_started_v2.tse)
        
        # Governor specs
        
        K = 10  # gain K
        T4 = 0.025  # Time constant T4
        T5 = 0.0009  # Time constant T5
        T6 = 0.00574  # Time constant T6
        Pm0 = 0.0005  # Initial value of Mechanic Power
        Tmax = 1.1  # Max torque limit
        Tmin = 0  # Min torque limit
        Td = 0.024  # Engine time delay
        
        # numTF4d = [27.7777777777778,-27.6726170945921]  # For Ts = 1e-4
        # denTF4d = [1,-0.894839316814370]  # For Ts = 1e-4
        # numTF4d = [27.7777777777778,-27.6056562658610]  # For Ts = 1.7e-4
        # denTF4d = [1,-0.827878488083238]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2] #[27.7777777777778,-27.4943090883516]  # For Ts = 3e-4
        denTF4d = [coeff3, coeff4] # [1,-0.716531310573789]  # For Ts = 3e-4
        
        # numTF3d = [0,0.0172707241189214]  # For Ts = 1e-4
        # denTF3d = [1,-0.982729275881079]  # For Ts = 1e-4
        # numTF3d = [0,0.0291824473977244]  # For Ts = 1.7e-4
        # denTF3d = [1,-0.970817552602276]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2] #[0,0.0509224900975103]  # For Ts = 3e-4
        denTF3d = [coeff3, coeff4] # [1,-0.949077509902490]  # For Ts = 3e-4
        
        
        # Synchronous machine specs from Simulink's machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen2 = 4.0e6  # Nominal/base power of machine in VA
        Vn_gen2 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen2 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen2 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen2 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen2 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen2 = 0.00206  # Field resistance in pu
        Llfd_pu_gen2 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen2 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen2 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen2 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen2 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen2 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen2 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen2 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen2 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen2 = 0 #0.009238  # Friction factor in pu
        
        # Base calculation
        
        Vb_gen2 = Vn_gen2*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen2 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen2 = wb_gen2/pms  # Mechanical angular speed base
        Zb_gen2 = (Vn_gen2*Vn_gen2)/Sb_gen2  # Impedance base
        Trq_b_gen2 = Sb_gen2/wmb_gen2  # Torque base
        Fb_gen2 = Trq_b_gen2/wmb_gen2  # Friction Factor base
        Lb_gen2 = Zb_gen2/wb_gen2  # Inductance base
        
        # Stator data in SI
        
        Rs_gen2 = Rs_pu_gen2*Zb_gen2
        Lls_gen2 = Lls_pu_gen2*Lb_gen2
        Lmd_gen2 = Lmd_pu_gen2*Lb_gen2
        Lmq_gen2 = Lmq_pu_gen2*Lb_gen2
        Rkd_gen2 = Rkd_pu_gen2*Zb_gen2
        Rkq_gen2 = Rkq_pu_gen2*Zb_gen2
        Llkd_gen2 = Llkd_pu_gen2*Lb_gen2
        Llkq_gen2 = Llkq_pu_gen2*Lb_gen2
        
        # Mechanical data in SI
        
        F_gen2 = Fpu_gen2*Fb_gen2  # Friction Factor in Nm.s
        J_gen2 = 2*H_gen2*Sb_gen2/(wmb_gen2*wmb_gen2)  # Inertia in kg.m2
        
        # Field base calculation
        
        Lsfd_gen2 = (2.0/3.0)*Lmd_gen2*(1.0/Ns_fd_gen2)  # Mutual inductance between stator and field
        ifn_gen2 = Vb_gen2/(Lsfd_gen2*wb_gen2)  # Nominal field current
        ifb_gen2 = ifn_gen2*Lmd_pu_gen2  # Field current base
        Vfb_gen2 = Sb_gen2/ifb_gen2  # Field voltage base
        Zfb_gen2 = Vfb_gen2/ifb_gen2  # Field impedance base
        Lfb_gen2 = Zfb_gen2/wb_gen2  # Field inductance base
        
        # Field data in SI
        
        Rf_gen2 = Rf_pu_gen2*Zfb_gen2  # Field resistance (Field side)
        Llfd_gen2 = Llfd_pu_gen2*Lfb_gen2  # Field inductance (Field side)
        Rf_prime_gen2 = Rf_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field resistance referred to the stator side
        Llfd_prime_gen2 = Llfd_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field inductance referred to the stator side
        
        # Exciter initialization
        
        Tr_gen2 = 1e-3  # Low pass filter time constant
        Ka_gen2 = 20.0  # Regulator gain
        Ta_gen2 = 2e-3  # Regulator time constant
        Ke_gen2 = 1.0  # Exciter constant
        Te_gen2 = 1e-3 #Exciter time constant
        Tb_gen2 = 0.0  # Transient gain reduction time constant b
        Tc_gen2 = 0.0  # Transient gain reduction time constant c
        Kf_gen2 = 0  # Damping filter gain
        Tf_gen2 = 1e-3  # Damping filter time constant
        Efmin_gen2 = -5.0 # 0.0 # Regulator output lower limit
        Efmax_gen2 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen2 = 0.0  # Initial terminal voltage
        Vf0_gen2 = 0.0  # Initial field voltage
        Const_gen2 = Vf0_gen2/Ka_gen2
        
        dummy_gain_exciter = 0.01
        
        #Rl = 14.283
        #Ll = 0.120472454546162
        
        Rl = 0.1
        Ll = 0.010
        
        Rl_mach = Rl
        Ll_mach = Ll
        
        Rl_shunt = 4761.0/1.0# 4761 Ohm is the resistance needed for 1% of nominal power at nominal voltage
        
        
        load = 0.196837209302326
        
        
            #End of settings from Unit Test 
        
        #Feeder 1 has to have slave_id = 1 to all Relays config
        #Feeder 2 has to have slave_id = 2 to all Relays config
        #Feeder 3 has to have slave_id = 3 to all Relays config
        
        #Relays init time
        cb_init_cond_time = 0.1+Ts
        time_flag_delay = 0.2
        
        configF1_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.101',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.102',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.103',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.104',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.105',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.106',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.107',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.108',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.109',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB10 = {
          'port': 502,
          'ip_addr': '192.168.10.110',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB11 = {
          'port': 502,
          'ip_addr': '192.168.10.111',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB12 = {
          'port': 502,
          'ip_addr': '192.168.10.112',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB13 = {
          'port': 502,
          'ip_addr': '192.168.10.113',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB14 = {
          'port': 502,
          'ip_addr': '192.168.10.114',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        
        configF2_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.115',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.116',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.117',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.118',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.119',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.120',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.121',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.122',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.123',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB10 = {
          'port': 502,
          'ip_addr': '192.168.10.124',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB11 = {
          'port': 502,
          'ip_addr': '192.168.10.125',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB12 = {
          'port': 502,
          'ip_addr': '192.168.10.126',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB13 = {
          'port': 502,
          'ip_addr': '192.168.10.127',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB14 = {
          'port': 502,
          'ip_addr': '192.168.10.128',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB15 = {
          'port': 502,
          'ip_addr': '192.168.10.129',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB16 = {
          'port': 502,
          'ip_addr': '192.168.10.130',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB17 = {
          'port': 502,
          'ip_addr': '192.168.10.131',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB18 = {
          'port': 502,
          'ip_addr': '192.168.10.132',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB19 = {
          'port': 502,
          'ip_addr': '192.168.10.133',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        
        configF3_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.134',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.135',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.136',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.137',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.138',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.139',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.140',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.141',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.142',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        dms_config = {
          'port': 502,
          'ip_addr': '192.168.10.54',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '0,1,2,7,3,8,4,9,5,10,6,11,12,13,14,15',
          'holding_register_output_addresses': '',
          'input_register_adresses': ''
        }
        configCHP = {
            'port': 502,
            'ip_addr': '192.168.10.55',
            'netmask': '255.255.255.0',
            'slave_id': 3,
            'coil_input_addresses': '',
            'coil_output_addresses': '',
            'discrete_input_addresses': '',
            'holding_register_input_addresses': '',
            'holding_register_output_addresses': '2000,2001',
            'input_register_adresses': '0,1,2,3,4'
        }
        
            #Transformers Lm and Rm
        Rm_utility_transfo1 = 1e5
        Lm_utility_transfo1 = 200
        
        Rm_feeder1_transfo1 = 1e5
        Lm_feeder1_transfo1 = 200
        
        Rm_feeder1_transfo2 = 1e5
        Lm_feeder1_transfo2 = 200
        
        Rm_feeder1_transfo3 = 1e5
        Lm_feeder1_transfo3 = 200
        
        Rm_feeder1_transfo4 = 1e5
        Lm_feeder1_transfo4 = 200
        
        Rm_feeder1_transfo5 = 1e5
        Lm_feeder1_transfo5 = 200
        
        Rm_feeder1_transfo6 = 1e5
        Lm_feeder1_transfo6 = 200
        
        Rm_feeder1_transfo7 = 1e5
        Lm_feeder1_transfo7 = 200
        
        # ESS specs
        
        R0=.0407753
        L0=2.06374e-3
        Rt0=0.427726
        C=30.002852e-6
        R=1e-3
        #R=0
        L=10e-6
        BW=120
    ENDCODE
}
