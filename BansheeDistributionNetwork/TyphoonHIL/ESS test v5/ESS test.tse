version = 4.2

//
// Saved by sw version: 2020.1 SP2
// Save timestamp: 01-Jul-2020 @ 05:11:59 PM
//

model "ESS test" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = auto
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
    }

    component Subsystem Root {
        component "core/Voltage Measurement" Vb {
            execution_rate = "Ts"
            sig_output = "True"
        }
        [
            position = 8208, 8784
            rotation = right
            size = 64, 32
        ]

        component pas_resistor R17 {
            resistance = "1e4"
        }
        [
            position = 8440, 8832
            rotation = right
        ]

        component "core/Voltage Measurement" Vc {
            execution_rate = "Ts"
            sig_output = "True"
        }
        [
            position = 8280, 8832
            rotation = right
            size = 64, 32
        ]

        component pas_resistor R18 {
            resistance = "1e4"
        }
        [
            position = 8376, 8832
            rotation = right
        ]

        component "core/Voltage Measurement" Va {
            execution_rate = "Ts"
            sig_output = "True"
        }
        [
            position = 8136, 8736
            rotation = right
            size = 64, 32
        ]

        component pas_resistor R16 {
            resistance = "1e4"
        }
        [
            position = 8504, 8832
            rotation = right
        ]

        component src_scada_input P_ref_ess {
            def_value = "10"
            execution_rate = "Ts"
            unit = "kW"
        }
        [
            position = 7464, 8464
        ]

        component src_scada_input Q_ref_ess {
            def_value = "5"
            execution_rate = "Ts"
            unit = "kVAr"
        }
        [
            position = 7464, 8544
        ]

        component Subsystem "Grid forming inverter (averaged)" {
            layout = dynamic
            component pas_resistor Rt0b1 {
                resistance = "R_s"
            }
            [
                position = 6664, 7952
                rotation = left
                scale = -1, 1
            ]

            component "core/Current Measurement" Ia1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7632, 7600
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vc2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 6424, 8176
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rt0c1 {
                resistance = "R_s"
            }
            [
                position = 6744, 7952
                rotation = left
                scale = -1, 1
            ]

            component pas_inductor Lb1 {
                inductance = "L_o"
            }
            [
                position = 7360, 7696
                rotation = down
            ]

            component pas_inductor Lgridb_1 {
                inductance = "L"
            }
            [
                position = 7960, 7696
                rotation = down
            ]

            component "core/Current Measurement" Xi_a1 {
                addr = "14"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 6408, 7600
                scale = 1, -1
                size = 64, 32
            ]

            component pas_capacitor Cc1 {
                capacitance = "C_s"
            }
            [
                position = 6744, 8048
                rotation = right
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 5480, 7456
                hide_name = True
            ]

            component gen_probe Ec_1 {
            }
            [
                position = 7080, 8096
            ]

            component pas_resistor Rgrida_1 {
                resistance = "R"
            }
            [
                position = 7864, 7600
            ]

            component pas_resistor Ra1 {
                resistance = "R_o"
            }
            [
                position = 7264, 7600
            ]

            component pas_resistor Rb1 {
                resistance = "R_o"
            }
            [
                position = 7264, 7696
            ]

            component pas_inductor Lgrida_1 {
                inductance = "L"
            }
            [
                position = 7960, 7600
                rotation = down
            ]

            component "core/Voltage Measurement" Vb2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 6296, 8128
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rgridc_1 {
                resistance = "R"
            }
            [
                position = 7864, 7792
            ]

            component pas_inductor L0b1 {
                inductance = "L_i"
            }
            [
                position = 6312, 7696
                rotation = down
            ]

            component "core/Voltage Measurement" Va2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 6168, 8080
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Signal Controlled Voltage Source" Va_inv {
            }
            [
                position = 5576, 7640
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component gen_product Product1 {
            }
            [
                position = 5384, 7456
                hide_name = True
            ]

            component pas_capacitor Cb1 {
                capacitance = "C_s"
            }
            [
                position = 6664, 8048
                rotation = right
            ]

            component pas_inductor L0c1 {
                inductance = "L_i"
            }
            [
                position = 6312, 7792
                rotation = down
            ]

            component "core/Current Measurement" Xi_c1 {
                addr = "16"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 6520, 7792
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ec1 {
                addr = "11"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7112, 7968
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "900"
            }
            [
                position = 5192, 7928
                hide_name = True
            ]

            component "core/Voltage Measurement" Ea1 {
                addr = "7"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 6968, 7840
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Signal Controlled Voltage Source" Vc_inv {
            }
            [
                position = 5736, 7832
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Ib1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7632, 7696
                size = 64, 32
            ]

            component pas_resistor Rc1 {
                resistance = "R_o"
            }
            [
                position = 7264, 7792
            ]

            component "core/Current Measurement" Xi_b1 {
                addr = "15"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 6456, 7696
                scale = 1, -1
                size = 64, 32
            ]

            component gen_probe Eb_1 {
            }
            [
                position = 6968, 7984
            ]

            component pas_resistor Rgridb_1 {
                resistance = "R"
            }
            [
                position = 7864, 7696
            ]

            component pas_resistor R0b1 {
                resistance = "R_i"
            }
            [
                position = 6200, 7696
            ]

            component "core/Voltage Measurement" Eb1 {
                addr = "9"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7032, 7904
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_inductor La1 {
                inductance = "L_o"
            }
            [
                position = 7360, 7600
                rotation = down
            ]

            component pas_inductor Lgridc_1 {
                inductance = "L"
            }
            [
                position = 7960, 7792
                rotation = down
            ]

            component pas_resistor Rt0a1 {
                resistance = "R_s"
            }
            [
                position = 6584, 7952
                rotation = left
                scale = -1, 1
            ]

            component pas_resistor R0a1 {
                resistance = "R_i"
            }
            [
                position = 6200, 7600
            ]

            component gen_gain Gain1 {
                gain = "0.5"
            }
            [
                position = 5312, 7488
                hide_name = True
            ]

            component gen_probe Ea_1 {
            }
            [
                position = 6920, 7872
            ]

            component pas_inductor L0a1 {
                inductance = "L_i"
            }
            [
                position = 6312, 7600
                rotation = down
            ]

            component pas_inductor Lc1 {
                inductance = "L_o"
            }
            [
                position = 7360, 7792
                rotation = down
            ]

            component pas_resistor R0c1 {
                resistance = "R_i"
            }
            [
                position = 6200, 7792
            ]

            component "core/Signal Controlled Voltage Source" Vb_inv {
            }
            [
                position = 5656, 7736
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Ic1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7632, 7792
                size = 64, 32
            ]

            component pas_capacitor Ca1 {
                capacitance = "C_s"
            }
            [
                position = 6584, 8048
                rotation = right
            ]

            component gen_c_function "C function3" {
                global_variables = "real prev;"
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', False)]"
                init_fnc = "/*Begin code section*/
prev = 5.0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1"
                out_terminal_dimensions_str = "out 1"
                out_terminal_labels = "[(\'out\', False)]"
                output_fnc = "/*Begin code section*/
out = 1000*prev;
/*End code section*/"
                update_fnc = "/*Begin code section*/
if (out-in[1]<40 && out-in[1]>-40){ 
    prev = prev + 1e-2*(in[0]-prev);
}
/*End code section*/"
            }
            [
                position = 5120, 6984
                hide_name = True
                size = 48, 48
            ]

            component gen_bus_join "Bus Join4" {
            }
            [
                position = 5032, 6824
                hide_name = True
            ]

            component gen_bus_join "Bus Join5" {
            }
            [
                position = 5016, 6984
                hide_name = True
            ]

            component gen_c_function "C function5" {
                global_variables = "real prev;"
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', False)]"
                init_fnc = "/*Begin code section*/
prev = 5.0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1"
                out_terminal_dimensions_str = "out 1"
                out_terminal_labels = "[(\'out\', False)]"
                output_fnc = "/*Begin code section*/
out = 1000*prev;
/*End code section*/"
                update_fnc = "/*Begin code section*/
if (out-in[1]<40 && out-in[1]>-40){ 
    prev = prev + 1e-2*(in[0]-prev);
}
/*End code section*/"
            }
            [
                position = 5120, 6824
                hide_name = True
                size = 48, 48
            ]

            component gen_probe Pref_probe {
            }
            [
                position = 5232, 6928
            ]

            component gen_probe Qref_probe {
            }
            [
                position = 5280, 6752
            ]

            component gen_gain Gain17 {
                gain = "1/S"
            }
            [
                position = 5320, 6824
                hide_name = True
            ]

            component gen_gain Gain18 {
                gain = "1/S"
            }
            [
                position = 5240, 7024
                rotation = right
                hide_name = True
            ]

            component Subsystem Controller {
                layout = dynamic
                component gen_product Product13 {
                }
                [
                    position = 7368, 8464
                    scale = -1, 1
                ]

                component gen_gain Gain15 {
                    gain = "S"
                }
                [
                    position = 7064, 8168
                    rotation = right
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe Q1 {
                }
                [
                    position = 7000, 8488
                    rotation = down
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8120
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain6 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7816, 7816
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_integrator Integrator1 {
                }
                [
                    position = 8440, 8536
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 7192, 8224
                    scale = -1, 1
                ]

                component Subsystem Current_abc_to_dq2 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Eq2 {
                        label = "Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Ed2 {
                        label = "Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Eb2 {
                        label = "Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Ec2 {
                        label = "Ec2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Ea2 {
                        label = "Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    connect "abc to dq1.q_axis" Eq2 as Connection6
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect Ea2 "abc to dq1.va" as Connection1
                    connect Eb2 "abc to dq1.vb" as Connection2
                    connect Ec2 "abc to dq1.vc" as Connection3
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" Ed2 as Connection5
                }
                [
                    position = 7936, 8184
                    size = 80, 168
                ]

                component gen_gain Gain8 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7856, 8248
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain1 {
                    gain = "1/(2*np.pi)"
                }
                [
                    position = 8336, 8312
                    scale = -1, 1
                ]

                component gen_product Product12 {
                }
                [
                    position = 7368, 8376
                    scale = -1, 1
                ]

                component gen_gain Gain10 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8520
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain14 {
                    gain = "S"
                }
                [
                    position = 7064, 8456
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7200, 7952
                    scale = -1, 1
                ]

                component gen_gain Gain9 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7856, 8392
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe E_d1 {
                    addr = "8965"
                }
                [
                    position = 7752, 8336
                    scale = -1, 1
                ]

                component gen_probe E_dREF1 {
                }
                [
                    position = 7568, 7848
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 7912, 8776
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 7192, 8368
                    scale = -1, 1
                ]

                component gen_product Product10 {
                }
                [
                    position = 7368, 8296
                    scale = -1, 1
                ]

                component Subsystem Current_abc_to_dq {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Xi_d2 {
                        label = "Xi_d2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Xi_c2 {
                        label = "Xi_c2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Xi_a2 {
                        label = "Xi_a2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port Xi_q2 {
                        label = "Xi_q2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Xi_b2 {
                        label = "Xi_b2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    connect Xi_c2 "abc to dq1.vc" as Connection3
                    connect "abc to dq1.q_axis" Xi_q2 as Connection6
                    connect "abc to dq1.d_axis" Xi_d2 as Connection5
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect Xi_a2 "abc to dq1.va" as Connection1
                    connect Xi_b2 "abc to dq1.vb" as Connection2
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                }
                [
                    position = 7936, 7880
                    size = 80, 168
                ]

                component gen_gain Gain7 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7808, 7944
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain12 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8744
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_product Product111 {
                }
                [
                    position = 7368, 8216
                    scale = -1, 1
                ]

                component Subsystem "Frequency droop" {
                    layout = dynamic
                    component gen_gain Gain4 {
                        gain = "1/D_f"
                    }
                    [
                        position = 8272, 8200
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_product Product1 {
                        signs = "/*"
                    }
                    [
                        position = 8144, 8032
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "w_0"
                    }
                    [
                        position = 8064, 8232
                        scale = -1, 1
                    ]

                    component gen_sum Sum5 {
                        signs = "++"
                    }
                    [
                        position = 8064, 8152
                        scale = -1, 1
                    ]

                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 8272, 8104
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "++"
                    }
                    [
                        position = 7880, 8160
                        scale = -1, 1
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "D_f"
                    }
                    [
                        position = 8248, 8024
                        hide_name = True
                        scale = -1, 1
                    ]

                    port "U - P" {
                        label = "U - P"
                        position = top:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8152, 8160
                        scale = -1, 1
                    ]

                    port w1 {
                        label = "w1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7824, 8160
                        scale = -1, 1
                    ]

                    port U_P {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8360, 8072
                        scale = -1, 1
                    ]

                    tag From17 {
                        value = "P1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8360, 8128
                        scale = -1, 1
                    ]

                    tag theta_bus6 {
                        value = "del_P"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8368, 8200
                        hide_name = True
                        scale = -1, 1
                    ]

                    junction Junction1 sp
                    [
                        position = 8208, 8104
                    ]

                    connect Gain4.out Sum5.in1 as Connection356
                    connect Product1.in1 Junction1 as Connection384
                    connect Junction1 "U - P" as Connection383
                    [
                        breakpoints = 8208, 8104
                    ]
                    connect Constant4.out Sum4.in1 as Connection363
                    connect U_P Sum1.in as Connection368
                    connect From17 Sum1.in1 as Connection316
                    connect Sum1.out Junction1 as Connection382
                    connect Sum5.out Sum4.in as Connection369
                    [
                        breakpoints = 7984, 8152; 7968, 8152
                    ]
                    connect Gain4.in theta_bus6 as Connection380
                    connect Product1.out Sum5.in as Connection385
                    connect Sum4.out w1 as Connection307
                    connect Constant6.out Product1.in as Connection386
                }
                [
                    position = 8296, 8184
                    size = 96, 120
                ]

                component gen_gain Gain11 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8616
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe E_qREF1 {
                }
                [
                    position = 7568, 8056
                ]

                component gen_probe E_q1 {
                }
                [
                    position = 7752, 8192
                    scale = -1, 1
                ]

                component Subsystem "Voltage droop" {
                    layout = dynamic
                    component gen_gain Gain4 {
                        gain = "1/D_V"
                    }
                    [
                        position = 8296, 8192
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 8080, 8248
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 8320, 8096
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "++"
                    }
                    [
                        position = 8096, 8144
                        scale = -1, 1
                    ]

                    component gen_sum Sum3 {
                        signs = "++"
                    }
                    [
                        position = 7928, 8176
                        scale = -1, 1
                    ]

                    component gen_probe E_1 {
                    }
                    [
                        position = 7936, 8096
                    ]

                    component gen_gain Gain3 {
                        gain = "1/D_V"
                    }
                    [
                        position = 8240, 8096
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe del_Q {
                    }
                    [
                        position = 8312, 8256
                    ]

                    port E_magnitude1 {
                        label = "E_magnitude1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8176
                        scale = -1, 1
                    ]

                    port Q_ref1 {
                        label = "Q_ref1"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8464, 8072
                        scale = -1, 1
                    ]

                    tag From18 {
                        value = "Q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8464, 8120
                        scale = -1, 1
                    ]

                    tag theta_bus6 {
                        value = "del_Q"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8408, 8192
                        hide_name = True
                        scale = -1, 1
                    ]

                    junction Junction2 sp
                    [
                        position = 7832, 8176
                    ]

                    junction Junction3 sp
                    [
                        position = 8216, 8192
                    ]

                    connect From18 Sum2.in1 as Connection323
                    connect E_magnitude1 Junction2 as Connection320
                    connect E_1.in Junction2 as Connection322
                    connect Gain3.out Sum4.in as Connection359
                    connect Gain4.in theta_bus6 as Connection357
                    connect Junction2 Sum3.out as Connection321
                    connect Gain3.in Sum2.out as Connection325
                    connect Q_ref1 Sum2.in as Connection360
                    connect Constant4.out Sum3.in1 as Connection318
                    connect Sum4.out Sum3.in as Connection365
                    [
                        breakpoints = 7968, 8144
                    ]
                    connect Gain4.out Junction3 as Connection366
                    connect Junction3 Sum4.in1 as Connection367
                    connect del_Q.in Junction3 as Connection368
                }
                [
                    position = 8296, 7944
                    size = 120, 96
                ]

                component Subsystem Current_abc_to_dq3 {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Ec2" "abc to dq1.vc" as Connection3
                }
                [
                    position = 7936, 8456
                    size = 80, 168
                ]

                component gen_probe f1 {
                }
                [
                    position = 8248, 8312
                    rotation = down
                ]

                component Subsystem Current_abc_to_dq4 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Ec2" "abc to dq1.vc" as Connection3
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                }
                [
                    position = 7480, 8680
                    size = 80, 168
                ]

                component gen_probe P1 {
                }
                [
                    position = 7008, 8136
                    rotation = down
                ]

                component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                    layout = dynamic
                    component Subsystem "Outer voltage control loop" {
                        layout = dynamic
                        component gen_sum Sum12 {
                            signs = "++"
                        }
                        [
                            position = 7616, 8512
                            scale = -1, 1
                        ]

                        component gen_gain Gain4 {
                            gain = "C_s"
                        }
                        [
                            position = 8248, 8352
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8168
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8064, 8768
                            scale = -1, -1
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8272, 8848
                            scale = -1, 1
                        ]

                        component gen_product Product8 {
                        }
                        [
                            position = 8144, 8680
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 7960, 8768
                            scale = -1, 1
                        ]

                        component gen_probe EQ_ctrl {
                        }
                        [
                            position = 8296, 8432
                        ]

                        component gen_sum Sum10 {
                            signs = "+-"
                        }
                        [
                            position = 7952, 8248
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8160, 8808
                            scale = -1, 1
                        ]

                        component gen_product Product6 {
                        }
                        [
                            position = 8152, 8320
                            scale = -1, 1
                        ]

                        component gen_sum Sum11 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8504
                            scale = -1, 1
                        ]

                        component gen_product Product5 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8256
                            scale = -1, 1
                        ]

                        component gen_product Product7 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8592
                            scale = -1, 1
                        ]

                        component gen_probe ED_ctrl {
                        }
                        [
                            position = 8296, 8096
                        ]

                        component gen_gain Gain6 {
                            gain = "C_s"
                        }
                        [
                            position = 8248, 8712
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller4" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8504
                            scale = -1, 1
                        ]

                        component gen_sum Sum13 {
                            signs = "++"
                        }
                        [
                            position = 7936, 8584
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "++"
                        }
                        [
                            position = 7632, 8176
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller3" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8168
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8152, 8752
                            scale = -1, 1
                        ]

                        port Xi_rd1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8176
                            scale = -1, 1
                        ]

                        port Xi_rq1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8512
                            scale = -1, 1
                        ]

                        port "^E_q_ref" {
                            label = "^E_q_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8464
                            scale = -1, 1
                        ]

                        port "^E_d_ref" {
                            label = "^E_d_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8128
                            scale = -1, 1
                        ]

                        port "^E_q" {
                            label = "^E_q1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8512
                            scale = -1, 1
                        ]

                        port "^E_d" {
                            label = "^E_d1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8176
                            scale = -1, 1
                        ]

                        tag From33 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8280, 8280
                            scale = -1, 1
                        ]

                        tag From35 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8280, 8640
                            scale = -1, 1
                        ]

                        tag From32 {
                            value = "Id1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8424, 8224
                            scale = -1, 1
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8320, 8784
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From36 {
                            value = "Iq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8376, 8560
                            scale = -1, 1
                        ]

                        junction Junction171 sp
                        [
                            position = 8232, 8504
                        ]

                        junction Junction170 sp
                        [
                            position = 8216, 8784
                        ]

                        junction Junction159 sp
                        [
                            position = 8480, 8176
                        ]

                        junction Junction158 sp
                        [
                            position = 8448, 8512
                        ]

                        junction Junction172 sp
                        [
                            position = 8240, 8168
                        ]

                        junction Junction153 sp
                        [
                            position = 7872, 8600
                        ]

                        connect "^E_d_ref" Sum8.in as Connection215
                        connect Gain4.in Junction158 as Connection117
                        connect Comparator1.in1 Junction170 as Connection256
                        connect Product5.in1 Junction153 as Connection94
                        connect Sum11.in "^E_q_ref" as Connection217
                        connect Junction170 "Signal switch1.in" as Connection257
                        connect Sum13.in1 Product8.out as Connection233
                        connect From32 Sum10.in as Connection259
                        connect "PID controller3.in" Sum8.out as Connection262
                        [
                            breakpoints = 8336, 8168
                        ]
                        connect Gain6.out Product8.in1 as Connection84
                        connect Xi_rd1 Sum9.out as Connection104
                        connect Sum8.in1 Junction159 as Connection118
                        connect ED_ctrl.in Junction172 as Connection268
                        [
                            breakpoints = 8240, 8160
                        ]
                        connect Junction171 "PID controller4.out" as Connection264
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Gain6.in Junction159 as Connection120
                        connect From33 Product6.in as Connection68
                        connect "^E_d" Junction159 as Connection216
                        connect Sum10.in1 Product6.out as Connection67
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect From27 Junction170 as Connection258
                        connect "^E_q" Junction158 as Connection218
                        connect EQ_ctrl.in Junction171 as Connection265
                        connect Gain5.out Junction153 as Connection92
                        connect From36 Sum13.in as Connection260
                        connect Product5.in Sum10.out as Connection71
                        connect "PID controller3.out" Junction172 as Connection266
                        connect Sum11.out "PID controller4.in" as Connection261
                        [
                            breakpoints = 8336, 8504
                        ]
                        connect Sum12.in Junction171 as Connection263
                        connect Sum11.in1 Junction158 as Connection115
                        connect From35 Product8.in as Connection79
                        connect Xi_rq1 Sum12.out as Connection105
                        connect Sum9.in1 Product5.out as Connection243
                        connect Junction153 Product7.in1 as Connection93
                        connect Sum12.in1 Product7.out as Connection244
                        connect Comparator1.out "Signal switch1.in2" as Connection2
                        connect Limit_zero.out Comparator1.in2 as Connection19
                        connect Junction172 Sum9.in as Connection267
                        connect Gain4.out Product6.in1 as Connection69
                        connect Product7.in Sum13.out as Connection89
                    }
                    [
                        position = 8864, 8400
                        scale = -1, 1
                        size = 152, 168
                    ]

                    component gen_gain Gain5 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8464, 8392
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_sum Sum7 {
                    }
                    [
                        position = 9128, 8552
                        scale = -1, 1
                    ]

                    component gen_sum Sum10 {
                        signs = "+-"
                    }
                    [
                        position = 9368, 8496
                        scale = -1, 1
                    ]

                    component gen_sum Sum11 {
                        signs = "+-"
                    }
                    [
                        position = 9376, 8192
                        scale = -1, 1
                    ]

                    component gen_gain Gain6 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8496, 8456
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain3 {
                        gain = "R_s"
                    }
                    [
                        position = 9272, 8496
                        scale = -1, 1
                    ]

                    component gen_sum Sum8 {
                    }
                    [
                        position = 9160, 8232
                        scale = -1, 1
                    ]

                    component Subsystem "dq to abc" {
                        layout = dynamic
                        component src_constant o_ref {
                            execution_rate = "Ts"
                            value = "[0]"
                        }
                        [
                            position = 7520, 8200
                        ]

                        component "core/dq to abc" "dq to abc1" {
                            execution_rate = "inherit"
                        }
                        [
                            position = 7744, 8184
                            size = 48, 80
                        ]

                        port c {
                            label = "c"
                            position = left:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8216
                        ]

                        port d {
                            label = "Ud1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 8136
                        ]

                        port alpha {
                            label = "alpha1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7600, 8232
                        ]

                        port a {
                            label = "a"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8152
                        ]

                        port q {
                            label = "Uq1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8168
                        ]

                        port b {
                            label = "b"
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8184
                        ]

                        connect q "dq to abc1.q_input" as Connection6
                        connect d "dq to abc1.d_input" as Connection3
                        connect "dq to abc1.phase_b" b as Connection4
                        connect c "dq to abc1.phase_c" as Connection2
                        connect a "dq to abc1.phase_a" as Connection1
                        connect o_ref.out "dq to abc1.zero_input" as Connection5
                        connect alpha "dq to abc1.wt" as Connection7
                    }
                    [
                        position = 8344, 8456
                        size = 80, 168
                    ]

                    component gen_gain Gain4 {
                        gain = "R_s"
                    }
                    [
                        position = 9280, 8192
                        scale = -1, 1
                    ]

                    component Subsystem "inner current control loop" {
                        layout = dynamic
                        component gen_probe XiD_ctrl {
                        }
                        [
                            position = 8208, 7952
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8128, 8432
                            scale = -1, -1
                        ]

                        component gen_pid_controller "PID controller2" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8208, 8224
                            scale = -1, 1
                        ]

                        component gen_gain Gain7 {
                            gain = "L_i"
                        }
                        [
                            position = 8272, 8368
                            scale = -1, 1
                        ]

                        component gen_sum Sum3 {
                        }
                        [
                            position = 7760, 8048
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8216, 8416
                            scale = -1, 1
                        ]

                        component gen_sum Sum5 {
                            signs = "+-"
                        }
                        [
                            position = 8024, 8104
                            scale = -1, 1
                        ]

                        component gen_sum Sum7 {
                        }
                        [
                            position = 7760, 8232
                            scale = -1, 1
                        ]

                        component gen_sum Sum6 {
                        }
                        [
                            position = 8032, 8272
                            scale = -1, 1
                        ]

                        component gen_product Product3 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8112
                            scale = -1, 1
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8168, 8336
                            scale = -1, 1
                        ]

                        component gen_gain Gain6 {
                            gain = "L_i"
                        }
                        [
                            position = 8256, 8176
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8328, 8040
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "+-"
                        }
                        [
                            position = 8320, 8224
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 8024, 8432
                            scale = -1, 1
                        ]

                        component gen_probe XiQ_ctrl {
                        }
                        [
                            position = 8288, 8264
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8336, 8512
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8200, 8040
                            scale = -1, 1
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8168, 8144
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8224, 8472
                            scale = -1, 1
                        ]

                        component gen_product Product4 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8280
                            scale = -1, 1
                        ]

                        port Uq1 {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8232
                            rotation = down
                        ]

                        port Xi_q_meas1 {
                            label = "Xi_q_meas1"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8520, 8264
                            rotation = down
                        ]

                        port Xi_q_ref1 {
                            label = "Xi_q_ref1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8520, 8192
                            rotation = down
                        ]

                        port Ud1 {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8048
                            rotation = down
                        ]

                        port Xi_d_ref1 {
                            label = "Xi_d_ref1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8032
                            rotation = down
                        ]

                        port Xi_d_meas1 {
                            label = "Xi_d_meas1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8112
                            rotation = down
                        ]

                        tag From23 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8272, 8112
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From24 {
                            value = "Ed1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 8056
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From26 {
                            value = "Eq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8128, 8264
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8384, 8448
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From25 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8312
                            scale = -1, 1
                            size = 60, 20
                        ]

                        junction Junction171 sp
                        [
                            position = 7944, 8288
                        ]

                        junction Junction177 sp
                        [
                            position = 8400, 8112
                        ]

                        junction Junction179 sp
                        [
                            position = 8160, 8224
                        ]

                        junction Junction178 sp
                        [
                            position = 8160, 8040
                        ]

                        junction Junction172 sp
                        [
                            position = 8280, 8448
                        ]

                        junction Junction176 sp
                        [
                            position = 8400, 8232
                        ]

                        connect From23 Product1.in as Connection1
                        connect Product4.out Sum7.in1 as Connection19
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Sum6.out Product4.in as Connection27
                        connect From26 Sum6.in as Connection3
                        connect Sum5.in1 Product1.out as Connection24
                        connect Gain6.out Product1.in1 as Connection289
                        connect Sum5.out Product3.in as Connection25
                        connect Junction177 Gain7.in as Connection300
                        connect Junction172 Comparator1.in1 as Connection267
                        connect Gain7.out Product2.in1 as Connection293
                        connect Xi_q_meas1 Junction176 as Connection290
                        connect "PID controller2.in" Sum9.out as Connection306
                        [
                            breakpoints = 8240, 8224
                        ]
                        connect Junction178 Sum3.in as Connection304
                        connect XiQ_ctrl.in Junction179 as Connection309
                        connect Sum7.in Junction179 as Connection307
                        connect Comparator1.out "Signal switch1.in2" as Connection57
                        connect Sum6.in1 Product2.out as Connection26
                        connect From27 Junction172 as Connection268
                        connect Gain5.out Junction171 as Connection254
                        connect Junction176 Sum9.in1 as Connection291
                        connect Sum5.in From24 as Connection23
                        connect Junction171 Product3.in1 as Connection253
                        connect Sum8.in1 Junction177 as Connection301
                        connect "PID controller1.out" Junction178 as Connection303
                        connect From25 Product2.in as Connection2
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect Uq1 Sum7.out as Connection264
                        connect Product3.out Sum3.in1 as Connection17
                        connect Sum8.out "PID controller1.in" as Connection302
                        [
                            breakpoints = 8240, 8040
                        ]
                        connect XiD_ctrl.in Junction178 as Connection305
                        connect "Signal switch1.in" Junction172 as Connection266
                        connect Sum8.in Xi_d_ref1 as Connection297
                        connect Sum9.in Xi_q_ref1 as Connection283
                        connect Product4.in1 Junction171 as Connection252
                        connect Limit_zero.out Comparator1.in2 as Connection251
                        connect Sum3.out Ud1 as Connection263
                        connect Gain6.in Junction176 as Connection292
                        connect Xi_d_meas1 Junction177 as Connection299
                        connect Junction179 "PID controller2.out" as Connection308
                    }
                    [
                        position = 8608, 8424
                        size = 96, 184
                    ]

                    component gen_probe Xi_d_ref {
                    }
                    [
                        position = 8640, 8240
                        rotation = down
                    ]

                    component gen_gain Gain7 {
                        gain = "I_DQ"
                    }
                    [
                        position = 8696, 8240
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_probe Xi_q_ref {
                    }
                    [
                        position = 8608, 8640
                        rotation = down
                    ]

                    component gen_gain Gain8 {
                        gain = "I_DQ"
                    }
                    [
                        position = 8680, 8640
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_probe Ud {
                    }
                    [
                        position = 8360, 8296
                        scale = -1, 1
                    ]

                    component gen_probe Uq {
                    }
                    [
                        position = 8416, 8496
                        scale = -1, 1
                    ]

                    port Ua1 {
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8392
                        rotation = down
                    ]

                    port E_q_ref1 {
                        label = "E_q_ref1"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9424, 8304
                        rotation = down
                    ]

                    port Uc1 {
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8520
                        rotation = down
                    ]

                    port E_d_ref1 {
                        label = "E_d_ref1"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9408, 8632
                        rotation = down
                    ]

                    port Ub1 {
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8456
                        rotation = down
                    ]

                    tag From36 {
                        value = "E_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8416
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From29 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8400
                        scale = -1, 1
                    ]

                    tag From40 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8232
                        rotation = down
                    ]

                    tag From38 {
                        value = "Id1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8448
                        rotation = down
                        size = 56, 20
                    ]

                    tag From1 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 8560
                        scale = -1, 1
                        size = 63, 25
                    ]

                    tag From30 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8496
                        scale = -1, 1
                    ]

                    tag From31 {
                        value = "Iq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8152
                        rotation = down
                    ]

                    tag From39 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8544
                        rotation = down
                    ]

                    tag From37 {
                        value = "E_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8464
                        scale = -1, 1
                        size = 60, 20
                    ]

                    junction Junction1 sp
                    [
                        position = 8768, 8336
                    ]

                    junction Junction2 sp
                    [
                        position = 8768, 8464
                    ]

                    junction Junction3 sp
                    [
                        position = 8424, 8392
                    ]

                    junction Junction4 sp
                    [
                        position = 8464, 8456
                    ]

                    connect Sum11.out Gain4.in as Connection290
                    connect From31 Sum11.in as Connection293
                    connect "dq to abc.alpha" From1 as Connection229
                    [
                        breakpoints = 8400, 8560; 8544, 8560
                    ]
                    connect From29 "inner current control loop.Xi_d_meas1" as Connection253
                    connect Sum7.in1 E_d_ref1 as Connection324
                    connect From36 "Outer voltage control loop.^E_q" as Connection322
                    connect From30 "inner current control loop.Xi_q_meas1" as Connection257
                    connect Sum10.out Gain3.in as Connection287
                    connect Sum8.out "Outer voltage control loop.^E_q_ref" as Connection347
                    connect "dq to abc.c" Uc1 as Connection284
                    connect "dq to abc.b" Ub1 as Connection282
                    connect Gain6.in "inner current control loop.Uq1" as Connection346
                    [
                        breakpoints = 8544, 8496
                    ]
                    connect From40 Sum11.in1 as Connection294
                    connect From39 Sum10.in1 as Connection286
                    connect "Outer voltage control loop.^E_d" From37 as Connection301
                    connect "Outer voltage control loop.^E_d_ref" Sum7.out as Connection317
                    connect E_q_ref1 Sum8.in1 as Connection344
                    connect "dq to abc.a" Ua1 as Connection283
                    connect Gain5.in "inner current control loop.Ud1" as Connection345
                    [
                        breakpoints = 8544, 8352
                    ]
                    connect Gain3.out Sum7.in as Connection289
                    connect Gain4.out Sum8.in as Connection343
                    connect From38 Sum10.in as Connection285
                    connect Xi_d_ref.in Gain7.out as Connection366
                    connect "inner current control loop.Xi_d_ref1" Junction1 as Connection367
                    connect Junction1 "Outer voltage control loop.Xi_rd1" as Connection368
                    connect Gain7.in Junction1 as Connection369
                    connect Xi_q_ref.in Gain8.out as Connection370
                    connect "inner current control loop.Xi_q_ref1" Junction2 as Connection371
                    connect Junction2 "Outer voltage control loop.Xi_rq1" as Connection372
                    connect Gain8.in Junction2 as Connection373
                    connect "dq to abc.d" Junction3 as Connection374
                    connect Junction3 Gain5.out as Connection375
                    connect Ud.in Junction3 as Connection376
                    connect "dq to abc.q" Junction4 as Connection377
                    connect Junction4 Gain6.out as Connection378
                    connect Uq.in Junction4 as Connection379
                }
                [
                    position = 7352, 7952
                    size = 128, 152
                ]

                component gen_probe Xi_d {
                    addr = "8968"
                }
                [
                    position = 7760, 7736
                    scale = -1, 1
                ]

                component gen_probe Xi_q {
                    addr = "8965"
                }
                [
                    position = 7768, 8016
                    scale = -1, 1
                ]

                component gen_gain Gain16 {
                    gain = "1.5"
                }
                [
                    position = 7120, 8224
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain17 {
                    gain = "1.5"
                }
                [
                    position = 7120, 8368
                    hide_name = True
                    scale = -1, -1
                ]

                port "U - P" {
                    position = top:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8296, 8088
                    rotation = right
                    scale = -1, -1
                ]

                port U_P {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8440, 8144
                    scale = -1, 1
                ]

                port U_Q {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8592, 7912
                    scale = -1, 1
                ]

                tag Goto29 {
                    value = "E_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From6 {
                    value = "Xi_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7856
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto19 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8616
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto37 {
                    value = "P1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6736, 8168
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From24 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8656
                    scale = -1, 1
                ]

                tag Goto47 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 7976
                    hide_name = True
                ]

                tag From28 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7904
                    scale = -1, 1
                ]

                tag From42 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8008
                    scale = -1, 1
                ]

                tag Goto22 {
                    value = "Xi_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 7816
                    scale = -1, 1
                ]

                tag From37 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8256
                    scale = -1, 1
                ]

                tag From9 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8160
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From7 {
                    value = "Xi_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7944
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto28 {
                    value = "E_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto23 {
                    value = "Xi_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 7944
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From34 {
                    value = "E_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From36 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8208
                    scale = -1, 1
                ]

                tag From8 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From26 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8704
                    scale = -1, 1
                ]

                tag Goto17 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 8224
                    size = 60, 20
                ]

                tag From5 {
                    value = "Xi_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7816
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto20 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8744
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From23 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8616
                    scale = -1, 1
                ]

                tag From20 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 7896
                    scale = -1, 1
                    size = 67, 20
                ]

                tag From40 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8640, 8536
                    scale = -1, 1
                ]

                tag Goto45 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8648
                    scale = -1, 1
                    size = 64, 20
                ]

                tag Goto2 {
                    value = "modulator1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7096, 7952
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From10 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From33 {
                    value = "E_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From25 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8744
                    scale = -1, 1
                ]

                tag From27 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8208
                    scale = -1, 1
                ]

                tag From43 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 8648
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto36 {
                    value = "Q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6736, 8312
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From32 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8480
                    scale = -1, 1
                ]

                tag Goto21 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8248, 8536
                    scale = -1, 1
                ]

                tag Goto46 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7784, 8776
                    scale = -1, 1
                ]

                tag From35 {
                    value = "E_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8432
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From38 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8472
                    scale = -1, 1
                ]

                tag From39 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8400
                    scale = -1, 1
                ]

                junction Junction228 sp
                [
                    position = 7520, 8400
                ]

                junction Junction230 sp
                [
                    position = 7472, 8472
                ]

                junction Junction231 sp
                [
                    position = 7520, 7896
                ]

                junction Junction258 sp
                [
                    position = 7520, 8008
                ]

                junction Junction159 sp
                [
                    position = 7472, 8208
                ]

                junction Junction269 sp
                [
                    position = 7816, 8392
                ]

                junction Junction229 sp
                [
                    position = 7520, 8256
                ]

                junction Junction158 sp
                [
                    position = 7816, 8248
                ]

                junction Junction272 sp
                [
                    position = 8544, 8224
                ]

                junction Junction273 sp
                [
                    position = 7864, 7816
                ]

                junction Junction274 sp
                [
                    position = 7864, 7944
                ]

                junction Junction275 sp
                [
                    position = 7064, 8224
                ]

                junction Junction276 sp
                [
                    position = 7064, 8368
                ]

                connect From10 Current_abc_to_dq2.Ec2 as Connection234
                connect From25 "Current_abc_to_dq4.^Ec2" as Connection699
                connect Gain10.in "Current_abc_to_dq3.^Eq2" as Connection875
                connect E_d1.in Junction269 as Connection965
                connect Junction231 From20 as Connection728
                connect E_q1.in Junction158 as Connection718
                connect Current_abc_to_dq4.wt2 From26 as Connection702
                connect Product111.in Junction159 as Connection703
                connect Gain5.out Goto4 as Connection959
                [
                    breakpoints = 7816, 8120
                ]
                connect Gain1.in Junction272 as Connection989
                connect Current_abc_to_dq2.Ed2 Gain5.in as Connection870
                connect Junction228 From39 as Connection680
                connect Gain11.out Goto19 as Connection877
                connect From7 Current_abc_to_dq.Xi_c2 as Connection40
                connect Junction158 Gain8.out as Connection868
                connect Sum1.in1 Product13.out as Connection719
                connect From6 Current_abc_to_dq.Xi_b2 as Connection39
                connect Junction231 "Outer Voltage Loop + Inner Current Loop.E_d_ref1" as Connection736
                connect "Frequency droop.U - P" "U - P" as Connection985
                connect "Current_abc_to_dq4.^Ea2" From23 as Connection701
                connect From9 Current_abc_to_dq2.Eb2 as Connection235
                connect "Outer Voltage Loop + Inner Current Loop.Ua1" "Bus Join1.in" as Connection839
                connect Integrator1.in From40 as Connection725
                connect Goto23 Gain7.out as Connection962
                connect Product12.out Sum2.in1 as Connection721
                connect f1.in Gain1.out as Connection318
                connect E_dREF1.in Junction231 as Connection729
                [
                    breakpoints = 7520, 7848; 7520, 7896
                ]
                connect E_qREF1.in Junction258 as Connection861
                connect Product111.out Sum1.in as Connection684
                connect Product13.in Junction228 as Connection679
                connect Product12.in Junction159 as Connection720
                connect "Current_abc_to_dq4.^Eb2" From24 as Connection700
                connect "Outer Voltage Loop + Inner Current Loop.Uc1" "Bus Join1.in2" as Connection840
                connect From43 Goto45 as Connection881
                connect Integrator1.out Goto21 as Connection960
                connect Junction159 From36 as Connection698
                connect Junction272 Goto17 as Connection990
                connect P1.in Gain15.out as Connection966
                connect Product10.out Sum2.in as Connection672
                connect Q1.in Gain14.out as Connection968
                connect Product10.in Junction229 as Connection723
                connect "Current_abc_to_dq4.^Ed2" Gain11.in as Connection876
                connect Product12.in1 Junction230 as Connection678
                connect Junction229 From37 as Connection683
                connect Current_abc_to_dq.wt2 From28 as Connection247
                [
                    breakpoints = 8000, 7904; 8040, 7904
                ]
                connect Product10.in1 Junction228 as Connection681
                connect Goto2 "Bus Join1.out" as Connection51
                connect "Frequency droop.w1" Junction272 as Connection991
                connect From35 "Current_abc_to_dq3.^Eb2" as Connection276
                connect Gain8.in Current_abc_to_dq2.Eq2 as Connection869
                connect "Bus Join1.in1" "Outer Voltage Loop + Inner Current Loop.Ub1" as Connection838
                connect Gain9.out Junction269 as Connection963
                connect Gain6.out Goto22 as Connection961
                connect From42 Junction258 as Connection859
                connect Current_abc_to_dq2.Ea2 From8 as Connection236
                connect From34 "Current_abc_to_dq3.^Ec2" as Connection279
                connect "Current_abc_to_dq3.^Ea2" From33 as Connection278
                connect Junction269 Goto29 as Connection964
                connect Junction258 "Outer Voltage Loop + Inner Current Loop.E_q_ref1" as Connection860
                connect Junction230 From38 as Connection677
                connect Product13.in1 Junction230 as Connection676
                connect U_P "Frequency droop.U_P" as Connection984
                connect Constant1.out Goto46 as Connection882
                connect From5 Current_abc_to_dq.Xi_a2 as Connection38
                connect Gain12.in "Current_abc_to_dq4.^Eq2" as Connection879
                connect From27 Current_abc_to_dq2.wt2 as Connection246
                connect From32 Current_abc_to_dq3.wt2 as Connection275
                connect Product111.in1 Junction229 as Connection682
                connect Goto20 Gain12.out as Connection878
                connect "Voltage droop.E_magnitude1" Goto47 as Connection880
                connect "Current_abc_to_dq3.^Ed2" Gain9.in as Connection872
                connect Goto28 Gain10.out as Connection874
                connect Current_abc_to_dq.Xi_d2 Junction273 as Connection1004
                connect Goto3 Junction158 as Connection292
                connect Junction273 Gain6.in as Connection1005
                connect Xi_d.in Junction273 as Connection1006
                connect Current_abc_to_dq.Xi_q2 Junction274 as Connection1007
                connect Junction274 Gain7.in as Connection1008
                connect U_Q "Voltage droop.Q_ref1" as Connection997
                connect Xi_q.in Junction274 as Connection1009
                connect Gain16.out Junction275 as Connection1011
                connect Sum1.out Gain16.in as Connection1000
                connect Junction275 Gain15.in as Connection1012
                [
                    breakpoints = 7064, 8224
                ]
                connect Goto37 Junction275 as Connection1013
                connect Gain17.in Sum2.out as Connection1003
                connect Gain14.in Junction276 as Connection1015
                connect Junction276 Gain17.out as Connection1016
                [
                    breakpoints = 7064, 8368
                ]
                connect Goto36 Junction276 as Connection1017
            }
            [
                position = 5368, 7160
                size = 296, 128
            ]

            component Subsystem "BE1-25A Synchronizer (inverter)" {
                layout = dynamic
                component gen_trigonometric "Trigonometric function2" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7568, 8104
                    hide_name = True
                ]

                component gen_math_fnc "Mathematical function1" {
                    mathematical_fn = "sqrt"
                }
                [
                    position = 8312, 8224
                    hide_name = True
                ]

                component gen_limiter Limit2 {
                    lower_limit = "1e-12"
                }
                [
                    position = 7496, 8120
                    hide_name = True
                ]

                component src_constant Constant9 {
                    execution_rate = "Ts"
                    value = "5e-2"
                }
                [
                    position = 8456, 8224
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer1" {
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "dV inherit;max_Q inherit;max_slip inherit"
                    in_terminal_labels = "[(\'dV\', True), (\'max_Q\', True), (\'max_slip\', True)]"
                    in_terminal_properties = "real dV;real max_Q;real max_slip;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "del_Q inherit"
                    out_terminal_labels = "[(\'del_Q\', True)]"
                    out_terminal_properties = "real del_Q;"
                    output_fnc = "/*Begin code section*/
if (dV>=max_slip)
{
    del_Q = max_Q;
}
else if ((dV<max_slip) && (dV>=0))
{
    del_Q = max_Q*dV/max_slip;
}
else if ((dV<0) && (dV>=-1*max_slip))
{
    del_Q = max_Q*dV/max_slip;
}
else if (dV < (-1*max_slip)) 
{
    del_Q = -1*max_Q;
}
/*End code section*/"
                    parameters = "real Ts;"
                }
                [
                    position = 8384, 8672
                    hide_name = True
                    size = 144, 224
                ]

                component tm_delay "Unit Delay4" {
                    signal_out_type = "real"
                }
                [
                    position = 8720, 8680
                    hide_name = True
                ]

                component gen_gain Gain7 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7824, 8264
                    hide_name = True
                ]

                component gen_abs Abs2 {
                }
                [
                    position = 8456, 8192
                    hide_name = True
                ]

                component gen_gain Gain4 {
                    gain = "1/w_0"
                }
                [
                    position = 7736, 8152
                    hide_name = True
                ]

                component src_scada_input ESS_start {
                    def_value = "1"
                    execution_rate = "Ts"
                    format = "uint"
                    max = "1"
                    min = "0"
                    signal_type = "uint"
                    unit = ""
                }
                [
                    position = 8800, 8192
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 7440, 8600
                    hide_name = True
                ]

                component gen_trigonometric "Trigonometric function1" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7568, 8016
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer" {
                    in_terminal_dimensions = "inherit;inherit;inherit;inherit"
                    in_terminal_dimensions_str = "df inherit;max_T inherit;max_slip inherit;angle_slip inherit"
                    in_terminal_labels = "[(\'df\', True), (\'max_T\', True), (\'max_slip\', True), (\'angle_slip\', True)]"
                    in_terminal_properties = "real df;real max_T;real max_slip;real angle_slip;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "del_P inherit"
                    out_terminal_labels = "[(\'del_P\', True)]"
                    out_terminal_properties = "real del_P;"
                    output_fnc = "/*Begin code section*/
if (df>=max_slip)
{
    del_P = max_T;
}
else if ((df<max_slip) && (df>=0))
{
    del_P = max_T*(df+1e-4)/max_slip + (angle_slip*1*D_f);
}
else if ((df<0) && (df > (-max_slip)))
{
    del_P = max_T*(df+1e-4)/max_slip  + (angle_slip*1*D_f);
}
else if (df <= (-1*max_slip))
{
    del_P = -1*max_T;
}
/*End code section*/"
                    parameters = "real Ts;real D_f;"
                }
                [
                    position = 8104, 8416
                    hide_name = True
                    size = 144, 224
                ]

                component gen_product Product1 {
                }
                [
                    position = 8160, 8192
                    hide_name = True
                ]

                component gen_c_function "Hold after connect" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True)]"
                    in_terminal_properties = "real in;int connect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
else
    var =0;
/*End code section*/"
                }
                [
                    position = 8320, 8424
                    hide_name = True
                    size = 96, 48
                ]

                component gen_sum Sum4 {
                }
                [
                    position = 8240, 8224
                    hide_name = True
                ]

                component gen_c_function "Hold after connect1" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True)]"
                    in_terminal_properties = "real in;int connect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
else
    var =0;
/*End code section*/"
                }
                [
                    position = 8624, 8680
                    hide_name = True
                    size = 96, 48
                ]

                component gen_c_function "confine phase" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
if (in > 0)
{
    if (in > (6.283185307179586/2))
        out = in - 6.283185307179586;
    else
        out = in;
}
if (in < 0)
{
    if (in < (-6.283185307179586/2))
        out = in + 6.283185307179586;
    else
        out = in;
}
/*End code section*/"
                }
                [
                    position = 7824, 8064
                    size = 56, 48
                ]

                component gen_sum Sum5 {
                }
                [
                    position = 7344, 8352
                    hide_name = True
                ]

                component gen_probe frequency_diff3 {
                }
                [
                    position = 7912, 8128
                    scale = -1, 1
                ]

                component gen_product Product4 {
                }
                [
                    position = 7264, 8384
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe3" {
                    override_signal_name = "True"
                    signal_name = "ang_sync3"
                }
                [
                    position = 8616, 7944
                    hide_name = True
                ]

                component src_constant Constant7 {
                    execution_rate = "Ts"
                    value = "1e-3"
                }
                [
                    position = 8064, 8112
                    hide_name = True
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7736, 8064
                    hide_name = True
                ]

                component src_constant Constant4 {
                    execution_rate = "Ts"
                    value = "1e-4"
                }
                [
                    position = 7968, 8448
                    hide_name = True
                ]

                component gen_c_function "confine phase2" {
                    global_variables = "real x;real floor_in;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                }
                [
                    position = 7640, 8104
                    hide_name = True
                    size = 56, 48
                ]

                component src_clock Clock1 {
                    execution_rate = "Ts"
                }
                [
                    position = 8456, 8304
                    hide_name = True
                ]

                component gen_product Product3 {
                }
                [
                    position = 7264, 8320
                    hide_name = True
                ]

                component tm_delay "Unit Delay2" {
                }
                [
                    position = 7696, 8624
                    rotation = right
                    hide_name = True
                ]

                component gen_sum Sum2 {
                    signs = "-+"
                }
                [
                    position = 7824, 8176
                    hide_name = True
                ]

                component gen_rel_op "Relational operator1" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8056
                    hide_name = True
                ]

                component gen_rel_op "Relational operator4" {
                    relational_op = "<"
                }
                [
                    position = 8520, 8208
                    hide_name = True
                ]

                component gen_abs Abs4 {
                }
                [
                    position = 7904, 8064
                    hide_name = True
                ]

                component tm_delay "Unit Delay1" {
                    signal_out_type = "int"
                }
                [
                    position = 8752, 8128
                    hide_name = True
                ]

                component gen_gain Gain3 {
                    gain = "1/w_0"
                }
                [
                    position = 7736, 8200
                    hide_name = True
                ]

                component gen_probe volt_diff3 {
                }
                [
                    position = 8136, 8608
                ]

                component gen_rel_op "Relational operator5" {
                    relational_op = ">"
                }
                [
                    position = 8520, 8320
                    hide_name = True
                ]

                component src_constant Constant10 {
                    execution_rate = "Ts"
                    value = "10"
                }
                [
                    position = 8456, 8336
                    hide_name = True
                ]

                component src_constant Constant6 {
                    execution_rate = "Ts"
                    value = "1e-3"
                }
                [
                    position = 8064, 8032
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe1" {
                    override_signal_name = "True"
                    signal_name = "gridconnect2"
                }
                [
                    position = 9016, 8208
                    hide_name = True
                ]

                component gen_c_function "stay connected" {
                    global_variables = "real connect;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
connect = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    out_terminal_properties = "int out;"
                    output_fnc = "/*Begin code section*/
out = connect;
/*End code section*/"
                    parameters = "real Ts;"
                    update_fnc = "/*Begin code section*/
if (in==1)
    connect = 1;
/*End code section*/"
                }
                [
                    position = 8696, 8128
                    hide_name = True
                    size = 48, 48
                ]

                component gen_logic_op "Logical operator2" {
                    inputs = "4"
                    operator = "NOT"
                }
                [
                    position = 8944, 8248
                    rotation = right
                    hide_name = True
                ]

                component Subsystem Current_abc_to_dq3 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port wt {
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Ec {
                        position = right:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Eq {
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Ea {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port Ed {
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Eb {
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    connect Termination.in "abc to dq1.zero_axis" as Connection4
                    connect "abc to dq1.q_axis" Eq as Connection6
                    connect Ec "abc to dq1.vc" as Connection3
                    connect Ea "abc to dq1.va" as Connection1
                    connect Eb "abc to dq1.vb" as Connection2
                    connect "abc to dq1.d_axis" Ed as Connection5
                    connect wt "abc to dq1.wt" as Connection7
                }
                [
                    position = 7736, 8312
                    hide_name = True
                    scale = -1, 1
                    size = 64, 144
                ]

                component gen_product Product2 {
                }
                [
                    position = 8160, 8256
                    hide_name = True
                ]

                component gen_gain Gain6 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7376, 8576
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe4" {
                    override_signal_name = "True"
                    signal_name = "freq_sync3"
                }
                [
                    position = 8616, 7992
                    hide_name = True
                ]

                component src_constant Constant11 {
                    execution_rate = "Ts"
                    value = "D_V*6e-1"
                }
                [
                    position = 8240, 8672
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe5" {
                    override_signal_name = "True"
                    signal_name = "volt_sync3"
                }
                [
                    position = 8616, 8032
                    hide_name = True
                ]

                component gen_logic_op "Logical operator1" {
                    inputs = "4"
                }
                [
                    position = 8616, 8128
                    hide_name = True
                ]

                component gen_abs Abs5 {
                }
                [
                    position = 8032, 8128
                    hide_name = True
                ]

                component gen_probe angle_diff3 {
                }
                [
                    position = 8064, 7968
                ]

                component gen_gain Gain8 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7824, 8360
                    hide_name = True
                ]

                component gen_sum Sum3 {
                    signs = "-+"
                }
                [
                    position = 8392, 8192
                    hide_name = True
                    scale = 1, -1
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7336, 8552
                    hide_name = True
                ]

                component tm_delay "Unit Delay3" {
                    signal_out_type = "real"
                }
                [
                    position = 8400, 8424
                    hide_name = True
                ]

                component gen_rel_op "Relational operator2" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8120
                    hide_name = True
                ]

                component src_constant Constant13 {
                    execution_rate = "Ts"
                    value = "1e-1"
                }
                [
                    position = 8240, 8760
                    hide_name = True
                ]

                component src_constant Constant3 {
                    execution_rate = "Ts"
                    value = "D_f*1e-3"
                }
                [
                    position = 7968, 8384
                    hide_name = True
                ]

                component gen_c_function "confine phase1" {
                    global_variables = "real x;real floor_in;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                }
                [
                    position = 7640, 8016
                    hide_name = True
                    size = 56, 48
                ]

                component Subsystem PLL {
                    layout = dynamic
                    component gen_pid_controller "PID controller1" {
                        controller_type = "PI"
                        enb_anti_windup_out = "True"
                        enb_output_limit_out = "True"
                        int_init_value = "2*np.pi*60"
                        ki = "2"
                        lower_sat_lim = "2*np.pi*59.5"
                        upper_sat_lim = "2*np.pi*60.5"
                    }
                    [
                        position = 8192, 8152
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        parameters = "real Ts;"
                        update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                    }
                    [
                        position = 8304, 8152
                        hide_name = True
                        size = 80, 48
                    ]

                    component gen_c_function "confine phase" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 8408, 8152
                        size = 56, 48
                    ]

                    port wt {
                        label = "wt"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8496, 8152
                    ]

                    port w {
                        label = "w"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8304, 8208
                    ]

                    port q {
                        label = "q"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8064, 8152
                    ]

                    junction Junction1 sp
                    [
                        position = 8240, 8152
                    ]

                    connect w Junction1 as Connection19
                    connect "C function1.in" Junction1 as Connection17
                    connect wt "confine phase.out" as Connection14
                    connect "confine phase.in" "C function1.out" as Connection16
                    connect Junction1 "PID controller1.out" as Connection18
                    connect q "PID controller1.in" as Connection20
                }
                [
                    position = 7544, 8576
                    scale = 1, -1
                    size = 96, 56
                ]

                component gen_limiter Limit1 {
                    lower_limit = "1e-12"
                }
                [
                    position = 7496, 8032
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe6" {
                    override_signal_name = "True"
                    signal_name = "griddisconnect2"
                }
                [
                    position = 9016, 8288
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch1" {
                    criterion = "ctrl != threshold"
                    threshold = "1"
                }
                [
                    position = 8888, 8176
                    hide_name = True
                ]

                component "core/abc to dq" "abc to dq1" {
                }
                [
                    position = 7264, 8576
                    size = 48, 80
                ]

                component gen_math_fnc "Mathematical function2" {
                    mathematical_fn = "sqrt"
                }
                [
                    position = 7416, 8352
                    hide_name = True
                ]

                component gen_probe Connect {
                }
                [
                    position = 9080, 7968
                ]

                port In3 {
                    label = "Inverter speed"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7640, 8152
                ]

                tag From39 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8264
                    hide_name = True
                ]

                tag Connect3 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8512, 8688
                    hide_name = True
                ]

                tag Goto28 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7912, 8360
                    hide_name = True
                    size = 60, 20
                ]

                tag From43 {
                    value = "Vd_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8312
                    hide_name = True
                ]

                tag w_bus1 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7696, 8568
                    hide_name = True
                ]

                tag Vb_G1 {
                    value = "VbG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8560
                    hide_name = True
                ]

                tag "|V|1" {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7512, 8352
                    hide_name = True
                ]

                tag theta_bus {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8656
                    hide_name = True
                ]

                tag theta_bus5 {
                    value = "del_V"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8248, 8584
                    hide_name = True
                ]

                tag theta_bus3 {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8360
                    hide_name = True
                ]

                tag Goto2 {
                    value = "del_P"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8496, 8424
                    hide_name = True
                ]

                tag From42 {
                    value = "Vq_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8392
                    hide_name = True
                ]

                tag Goto32 {
                    value = "Vq_G"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7544, 8536
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto31 {
                    value = "del_Q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8800, 8680
                    hide_name = True
                ]

                tag Connect2 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 8432
                    hide_name = True
                ]

                tag Goto29 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7912, 8264
                    hide_name = True
                    size = 60, 20
                ]

                tag From44 {
                    value = "Vd_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8120
                    hide_name = True
                ]

                tag From45 {
                    value = "Vq_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8088
                    hide_name = True
                ]

                tag Goto30 {
                    value = "del_V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8504, 8160
                    hide_name = True
                ]

                tag Goto33 {
                    value = "Vd_G"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7440, 8552
                    hide_name = True
                    size = 60, 20
                ]

                tag Vc_G1 {
                    value = "VcG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8584
                    hide_name = True
                ]

                tag From41 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8032
                    hide_name = True
                ]

                tag Va_G1 {
                    value = "VaG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8536
                    hide_name = True
                ]

                tag From36 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8184
                    hide_name = True
                ]

                tag theta_bus2 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8200
                    hide_name = True
                ]

                tag From34 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8328
                    hide_name = True
                    size = 60, 20
                ]

                tag From33 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8264
                    hide_name = True
                    size = 60, 20
                ]

                tag theta_bus6 {
                    value = "del_V"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8048, 8608
                    hide_name = True
                ]

                tag Connect1 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9016, 8176
                    hide_name = True
                ]

                tag From35 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8296
                    hide_name = True
                    size = 60, 20
                ]

                tag From1 {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 8184
                    hide_name = True
                ]

                tag From40 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8000
                    hide_name = True
                ]

                junction Junction53 sp
                [
                    position = 8800, 8128
                ]

                junction Junction41 sp
                [
                    position = 7480, 8576
                ]

                junction Junction54 sp
                [
                    position = 8944, 8208
                ]

                junction Junction38 sp
                [
                    position = 8304, 8120
                ]

                junction Junction26 sp
                [
                    position = 8112, 8184
                ]

                junction Junction42 sp
                [
                    position = 7216, 8392
                ]

                junction Junction43 sp
                [
                    position = 7216, 8312
                ]

                junction Junction28 sp
                [
                    position = 8112, 8264
                ]

                junction Junction45 sp
                [
                    position = 7696, 8656
                ]

                junction Junction49 sp
                [
                    position = 7872, 8064
                ]

                junction Junction46 sp
                [
                    position = 7976, 8176
                ]

                junction Junction35 sp
                [
                    position = 8424, 8192
                ]

                junction Junction50 sp
                [
                    position = 8000, 8064
                ]

                junction Junction52 sp
                [
                    position = 8944, 8176
                ]

                junction Junction39 sp
                [
                    position = 8560, 8136
                ]

                junction Junction47 sp
                [
                    position = 7976, 8128
                ]

                junction Junction48 sp
                [
                    position = 8256, 8056
                ]

                junction Junction55 sp
                [
                    position = 8944, 8176
                ]

                connect "Digital Probe4.in" Junction38 as Connection366
                connect "confine phase2.out" Sum1.in1 as Connection399
                connect "Mathematical function2.out" "|V|1" as Connection436
                [
                    breakpoints = 7456, 8352
                ]
                connect From39 Junction28 as Connection259
                connect "abc to dq1.q_axis" Gain6.in as Connection319
                connect From34 Current_abc_to_dq3.Ec as Connection280
                connect "Unit Delay1.out" Junction53 as Connection448
                connect From41 Limit1.in as Connection285
                connect Constant4.out "BE1-25A Synchronizer.max_slip" as Connection67
                connect In3 Gain4.in as Connection240
                connect Sum3.in1 From1 as Connection81
                connect Junction53 "Signal switch1.in2" as Connection449
                connect theta_bus2 Gain3.in as Connection241
                connect Vc_G1 "abc to dq1.vc" as Connection222
                connect angle_diff3.in Junction49 as Connection430
                connect Product2.out Sum4.in1 as Connection251
                connect Abs2.out "Relational operator4.in" as Connection84
                connect Connect2 "Hold after connect.connect" as Connection156
                connect "Digital Probe5.in" Junction39 as Connection375
                connect Goto30 Junction35 as Connection308
                connect Gain3.out Sum2.in1 as Connection64
                connect "Mathematical function1.out" Sum3.in as Connection253
                connect Va_G1 "abc to dq1.va" as Connection224
                connect "Signal switch1.in" Junction53 as Connection450
                connect theta_bus Junction45 as Connection404
                connect Gain8.in Current_abc_to_dq3.Eq as Connection324
                connect Goto29 Gain7.out as Connection321
                connect Termination1.in "abc to dq1.zero_axis" as Connection29
                connect "Logical operator1.in" Junction48 as Connection424
                [
                    breakpoints = 8576, 8056; 8480, 8056; 8480, 8056
                ]
                connect Junction50 Abs4.out as Connection432
                connect Constant10.out "Relational operator5.in1" as Connection262
                connect From33 Current_abc_to_dq3.Ea as Connection278
                connect "Digital Probe1.in" Junction54 as Connection451
                connect From45 "Trigonometric function2.in" as Connection401
                connect Clock1.out "Relational operator5.in" as Connection458
                [
                    breakpoints = 8488, 8304
                ]
                connect Junction47 Abs5.in as Connection421
                [
                    breakpoints = 7976, 8128; 7976, 8128
                ]
                connect Sum4.out "Mathematical function1.in" as Connection252
                connect "Hold after connect1.out" "Unit Delay4.in" as Connection355
                connect Product2.in Junction28 as Connection261
                connect Junction28 Product2.in1 as Connection260
                connect Constant7.out "Relational operator2.in" as Connection70
                connect Junction49 Abs4.in as Connection429
                connect "Logical operator2.in" Junction54 as Connection453
                connect Abs2.in Junction35 as Connection306
                connect From44 Limit2.in as Connection402
                connect "Hold after connect.in" "BE1-25A Synchronizer.del_P" as Connection408
                connect "Unit Delay3.out" Goto2 as Connection434
                [
                    breakpoints = 8440, 8424
                ]
                connect theta_bus3 Current_abc_to_dq3.wt as Connection281
                connect "Digital Probe6.in" "Logical operator2.out" as Connection454
                connect "Relational operator1.out" Junction48 as Connection426
                connect Junction26 From36 as Connection248
                connect Product1.in Junction26 as Connection247
                connect Junction46 "BE1-25A Synchronizer.df" as Connection414
                [
                    breakpoints = 7976, 8176
                ]
                connect "Unit Delay1.in" "stay connected.out" as Connection102
                connect volt_diff3.in theta_bus6 as Connection316
                connect Limit2.out "Trigonometric function2.in1" as Connection398
                connect Gain7.in Current_abc_to_dq3.Ed as Connection322
                connect Goto33 Gain5.out as Connection380
                connect Product3.out Sum5.in as Connection390
                connect Constant3.out "BE1-25A Synchronizer.max_T" as Connection66
                connect Junction38 "Relational operator2.out" as Connection365
                [
                    breakpoints = 8288, 8120; 8288, 8120
                ]
                connect Product3.in Junction43 as Connection386
                connect Limit1.out "Trigonometric function1.in1" as Connection286
                connect From40 "Trigonometric function1.in" as Connection284
                connect "Logical operator1.in3" "Relational operator5.out" as Connection371
                [
                    breakpoints = 8576, 8152; 8576, 8288
                ]
                connect Vb_G1 "abc to dq1.vb" as Connection223
                connect Sum2.out Junction46 as Connection413
                [
                    breakpoints = 7864, 8176
                ]
                connect "BE1-25A Synchronizer.angle_slip" Junction50 as Connection433
                connect "Relational operator2.in1" Abs5.out as Connection357
                connect Goto28 Gain8.out as Connection323
                connect From42 Junction42 as Connection384
                connect ESS_start.out "Signal switch1.in1" as Connection442
                connect Junction52 Connect1 as Connection445
                connect Junction43 From43 as Connection389
                connect "Signal switch1.out" Junction52 as Connection444
                connect Sum5.out "Mathematical function2.in" as Connection387
                connect Product3.in1 Junction43 as Connection391
                connect Gain6.out Junction41 as Connection381
                connect Junction35 Sum3.out as Connection307
                connect "confine phase.in" Sum1.out as Connection146
                connect Product4.out Sum5.in1 as Connection388
                connect "confine phase1.out" Sum1.in as Connection400
                connect Constant9.out "Relational operator4.in1" as Connection85
                connect PLL.w w_bus1 as Connection233
                connect Product4.in Junction42 as Connection385
                connect "confine phase2.in" "Trigonometric function2.out" as Connection397
                connect "confine phase.out" Junction49 as Connection428
                connect Junction45 "abc to dq1.wt" as Connection405
                connect From35 Current_abc_to_dq3.Eb as Connection279
                connect Junction39 "Relational operator4.out" as Connection374
                [
                    breakpoints = 8560, 8136; 8560, 8208; 8560, 8136
                ]
                connect "Logical operator1.in2" Junction39 as Connection373
                connect Gain4.out Sum2.in as Connection62
                connect Goto32 Junction41 as Connection383
                connect Constant13.out "BE1-25A Synchronizer1.max_slip" as Connection304
                connect "confine phase1.in" "Trigonometric function1.out" as Connection290
                connect Product1.in1 Junction26 as Connection249
                connect "Hold after connect.out" "Unit Delay3.in" as Connection291
                connect Junction41 PLL.q as Connection382
                connect Connect3 "Hold after connect1.connect" as Connection354
                connect theta_bus5 "BE1-25A Synchronizer1.dV" as Connection309
                connect "stay connected.in" "Logical operator1.out" as Connection92
                connect Constant6.out "Relational operator1.in" as Connection69
                connect Junction48 "Digital Probe3.in" as Connection425
                [
                    breakpoints = 8256, 8056
                ]
                connect "Unit Delay2.in" PLL.wt as Connection348
                connect "BE1-25A Synchronizer1.del_Q" "Hold after connect1.in" as Connection356
                connect Product1.out Sum4.in as Connection250
                connect Junction46 Junction47 as Connection420
                [
                    breakpoints = 7976, 8176; 7976, 8176
                ]
                connect "Unit Delay2.out" Junction45 as Connection406
                connect Junction42 Product4.in1 as Connection392
                connect "Logical operator1.in1" Junction38 as Connection364
                [
                    breakpoints = 8576, 8120
                ]
                connect "Relational operator1.in1" Junction50 as Connection431
                connect frequency_diff3.in Junction47 as Connection422
                connect Gain5.in "abc to dq1.d_axis" as Connection318
                connect "BE1-25A Synchronizer1.max_Q" Constant11.out as Connection305
                connect Junction54 Junction55 as Connection459
                connect Junction55 Junction52 as Connection460
                connect Connect.in Junction55 as Connection461
                connect "Unit Delay4.out" Goto31 as Connection465
                [
                    breakpoints = 8752, 8680
                ]
            }
            [
                position = 6608, 7000
                size = 112, 216
            ]

            component gen_gain Gain19 {
                gain = "S"
            }
            [
                position = 4944, 6864
                hide_name = True
            ]

            component gen_gain Gain20 {
                gain = "S"
            }
            [
                position = 4944, 7016
                hide_name = True
            ]

            component "core/Three Phase Two Winding Transformer" Tr1 {
                Poc1 = "344.99999999952564"
                Psc1 = "1762.5"
                Sn = "120000"
                V1 = "277"
                V2 = "480"
                current_vals_SCOC = "[0.0024, 1.0]"
                f = "60.0"
                ioc1 = "0.6999999999992988"
                usc1 = "3.9999999999957394"
            }
            [
                position = 8536, 7696
                size = 126, 256
            ]

            component "core/Voltage Measurement" VaG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8064, 7912
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" VbG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8192, 7984
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" VcG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8312, 8104
                rotation = right
                size = 64, 32
            ]

            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 7752, 7696
                size = 64, 256
            ]

            component "core/Voltage RMS" Vrms {
                frequency = "sys_f"
                op_mode = "Fixed frequency"
                sig_output = "True"
            }
            [
                position = 7192, 7968
                rotation = right
                size = 64, 32
            ]

            component gen_probe Vrms_ess {
                execution_rate = "0.1"
            }
            [
                position = 7272, 7968
            ]

            port setpoint_P {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 4904, 6960
            ]

            port setpoint_Q {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 4912, 6808
            ]

            port activeP_offset {
                position = top:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 5416, 7048
                scale = -1, 1
            ]

            port Vc {
                label = "Vc"
                position = right:3
                kind = pe
            }
            [
                position = 8680, 7792
                scale = -1, 1
            ]

            port Vb {
                label = "Vb"
                position = right:2
                kind = pe
            }
            [
                position = 8680, 7696
                scale = -1, 1
            ]

            port Ground {
                label = "Ground"
                position = bottom:4
                kind = pe
            }
            [
                position = 8696, 8384
                scale = -1, 1
            ]

            port Va {
                label = "Va"
                position = right:1
                kind = pe
            }
            [
                position = 8680, 7600
                scale = -1, 1
            ]

            tag Goto18 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 5304, 7928
                hide_name = True
                size = 60, 20
            ]

            tag Goto44 {
                value = "Xi_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6312, 7904
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto30 {
                value = "Ec1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6920, 8048
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto38 {
                value = "Xi_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6312, 7952
                scale = -1, 1
                size = 60, 20
            ]

            tag From2 {
                value = "modulator1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 5240, 7424
                hide_name = True
                size = 60, 20
            ]

            tag Goto33 {
                value = "E_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6344, 8176
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto32 {
                value = "Ia1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7472, 7520
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto34 {
                value = "E_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6072, 8080
                scale = -1, 1
                size = 60, 20
            ]

            tag From3 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 5240, 7488
                hide_name = True
            ]

            tag Goto31 {
                value = "Ic1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7472, 7744
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto39 {
                value = "Ib1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7472, 7632
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto42 {
                value = "E_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6216, 8128
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto35 {
                value = "Xi_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6312, 7856
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto41 {
                value = "Ea1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6824, 7840
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto40 {
                value = "Eb1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6888, 7952
                scale = -1, 1
                size = 60, 20
            ]

            tag From54 {
                value = "P1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 4880, 7016
                size = 60, 20
            ]

            tag From55 {
                value = "Q1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 4880, 6864
                size = 60, 20
            ]

            tag w_m2 {
                value = "w1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6360, 7000
                hide_name = True
            ]

            tag Vb_G {
                value = "VbG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8264, 7984
            ]

            tag Vc_G {
                value = "VcG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8384, 8104
            ]

            tag Va_G {
                value = "VaG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8136, 7912
            ]

            tag Connect2 {
                value = "Connect"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 7664, 7512
                hide_name = True
            ]

            junction Junction160 pe
            [
                position = 6664, 7696
            ]

            junction Junction212 pe
            [
                position = 6664, 8384
            ]

            junction Junction199 pe
            [
                position = 6664, 8384
            ]

            junction Junction194 pe
            [
                position = 6664, 8384
            ]

            junction Junction215 pe
            [
                position = 6664, 8384
            ]

            junction Junction291 pe
            [
                position = 5656, 8384
            ]

            junction Junction161 pe
            [
                position = 6584, 7600
            ]

            junction Junction283 sp
            [
                position = 6936, 7952
            ]

            junction Junction192 pe
            [
                position = 6664, 8384
            ]

            junction Junction173 pe
            [
                position = 6744, 7792
            ]

            junction Junction216 pe
            [
                position = 6744, 8000
            ]

            junction Junction284 sp
            [
                position = 7048, 8048
            ]

            junction Junction289 pe
            [
                position = 6168, 8384
            ]

            junction Junction221 sp
            [
                position = 6888, 7840
            ]

            junction Junction213 pe
            [
                position = 6664, 8000
            ]

            junction Junction211 pe
            [
                position = 6584, 7984
            ]

            junction Junction290 pe
            [
                position = 5736, 8384
            ]

            junction Junction198 pe
            [
                position = 6664, 8384
            ]

            junction Junction292 pe
            [
                position = 6664, 8384
            ]

            junction Junction207 pe
            [
                position = 6664, 8384
            ]

            junction Junction195 pe
            [
                position = 6664, 8384
            ]

            junction Junction303 sp
            [
                position = 5200, 6824
            ]

            junction Junction304 sp
            [
                position = 5176, 6984
            ]

            junction Junction305 pe
            [
                position = 6968, 7600
            ]

            junction Junction306 pe
            [
                position = 7032, 7696
            ]

            junction Junction307 pe
            [
                position = 7112, 7792
            ]

            junction Junction309 pe
            [
                position = 8312, 8384
            ]

            junction Junction313 pe
            [
                position = 8568, 8384
            ]

            junction Junction314 pe
            [
                position = 8504, 8384
            ]

            junction Junction315 pe
            [
                position = 8192, 8384
            ]

            junction Junction316 pe
            [
                position = 8064, 7600
            ]

            junction Junction317 pe
            [
                position = 8192, 7696
            ]

            junction Junction318 pe
            [
                position = 8312, 7792
            ]

            junction Junction319 pe
            [
                position = 7192, 7600
            ]

            junction Junction320 pe
            [
                position = 7112, 8384
            ]

            connect Vc2.p_node Junction216 as Connection627
            connect Junction283 Eb1.out as Connection951
            connect Vc2.out Goto33 as Connection617
            [
                breakpoints = 6408, 8176; 6392, 8176
            ]
            connect Junction198 Junction195 as Connection477
            [
                breakpoints = 6664, 8384; 6664, 8384
            ]
            connect Goto41 Junction221 as Connection656
            [
                breakpoints = 6856, 7840; 6904, 7840
            ]
            connect "Bus Split1.out" Va_inv.in as Connection1051
            connect Eb1.n_node Junction195 as Connection462
            connect Junction194 Ca1.n_node as Connection597
            [
                breakpoints = 6664, 8384; 6664, 8384; 6664, 8384; 6664, 8240; 6584, 8240
            ]
            connect Rt0c1.p_node Junction216 as Connection625
            [
                breakpoints = 6744, 7984
            ]
            connect Rt0b1.p_node Junction213 as Connection612
            connect Junction192 Junction292 as Connection1067
            connect Vc_inv.n_node Junction290 as Connection1060
            connect Ec_1.in Junction284 as Connection956
            [
                breakpoints = 7048, 8080; 7048, 8048
            ]
            connect Rc1.n_node Lc1.n_node as Connection399
            connect Junction211 Rt0a1.p_node as Connection599
            [
                breakpoints = 6584, 8000; 6584, 8000; 6584, 7984
            ]
            connect Junction212 Junction192 as Connection603
            connect Junction290 Junction289 as Connection1061
            [
                breakpoints = 5736, 8384; 6168, 8384
            ]
            connect Junction289 Junction212 as Connection1058
            [
                breakpoints = 6168, 8384; 6664, 8384
            ]
            connect Junction207 Junction198 as Connection574
            [
                breakpoints = 6664, 8384
            ]
            connect Cb1.n_node Junction212 as Connection602
            connect Rt0b1.n_node Junction160 as Connection351
            connect Ia1.out Goto32 as Connection666
            connect Junction198 Junction199 as Connection537
            [
                breakpoints = 6664, 8384; 6664, 8384; 6664, 8384; 6664, 8384; 6664, 8384
            ]
            connect Va2.p_node Junction211 as Connection600
            [
                breakpoints = 6408, 7984; 6584, 7984
            ]
            connect Xi_a1.n_node Junction161 as Connection314
            connect "Bus Split1.out2" Vc_inv.in as Connection1053
            connect Product1.in1 Gain1.out as Connection1073
            connect Rt0c1.n_node Junction173 as Connection327
            connect Rgridb_1.n_node Lgridb_1.n_node as Connection546
            connect Rb1.n_node Lb1.n_node as Connection354
            connect Va2.n_node Junction289 as Connection1057
            connect La1.n_node Ra1.n_node as Connection401
            connect Va2.out Goto34 as Connection624
            connect Vc_inv.p_node R0c1.p_node as Connection1054
            connect Junction221 Ea1.out as Connection639
            [
                breakpoints = 6872, 7840; 6936, 7840
            ]
            connect Xi_b1.n_node Junction160 as Connection388
            connect Goto39 Ib1.out as Connection669
            connect From2 Product1.in as Connection1074
            connect Junction291 Junction290 as Connection1064
            [
                breakpoints = 5656, 8384; 5736, 8384
            ]
            connect Goto30 Junction284 as Connection954
            connect Vb_inv.n_node Junction291 as Connection1063
            connect L0a1.n_node R0a1.n_node as Connection355
            connect Product1.out "Bus Split1.in" as Connection1075
            connect "Bus Split1.out1" Vb_inv.in as Connection1071
            connect Ca1.p_node Junction211 as Connection598
            connect La1.p_node Ia1.p_node as Connection665
            connect Ea_1.in Junction221 as Connection640
            connect Vb2.p_node Junction213 as Connection614
            [
                breakpoints = 6488, 8000; 6664, 8000
            ]
            connect Xi_c1.n_node Junction173 as Connection304
            connect Junction192 Junction194 as Connection459
            connect Xi_b1.out Goto44 as Connection374
            connect Ic1.out Goto31 as Connection668
            connect Ea1.n_node Junction292 as Connection1069
            [
                breakpoints = 6968, 7920; 6808, 7920; 6808, 8000; 6808, 8384
            ]
            connect Junction216 Cc1.p_node as Connection626
            [
                breakpoints = 6744, 8000; 6744, 8000; 6744, 8000
            ]
            connect Goto35 Xi_a1.out as Connection342
            connect Lc1.p_node Ic1.p_node as Connection663
            connect Goto40 Junction283 as Connection950
            connect Vb2.out Goto42 as Connection616
            connect L0b1.p_node Xi_b1.p_node as Connection372
            connect From3 Gain1.in as Connection1072
            connect Rt0a1.n_node Junction161 as Connection366
            connect Junction292 Cc1.n_node as Connection1068
            [
                breakpoints = 6664, 8384; 6664, 8384; 6664, 8240; 6744, 8240
            ]
            connect L0a1.p_node Xi_a1.p_node as Connection378
            connect Lb1.p_node Ib1.p_node as Connection664
            connect Junction213 Cb1.p_node as Connection613
            [
                breakpoints = 6664, 8000; 6664, 8000; 6664, 8000
            ]
            connect Junction284 Ec1.out as Connection955
            connect Vb2.n_node Junction215 as Connection621
            connect Rgridc_1.n_node Lgridc_1.n_node as Connection545
            connect Constant1.out Goto18 as Connection1096
            connect Junction195 Junction194 as Connection463
            connect Lgrida_1.n_node Rgrida_1.n_node as Connection547
            connect Xi_c1.out Goto38 as Connection313
            connect Eb_1.in Junction283 as Connection952
            connect Vc2.n_node Junction215 as Connection623
            connect Junction207 Junction215 as Connection1097
            [
                breakpoints = 6664, 8384; 6664, 8384; 6664, 8384; 6664, 8384; 6664, 8384; 6664, 8384
            ]
            connect R0b1.n_node L0b1.n_node as Connection385
            connect L0c1.p_node Xi_c1.p_node as Connection328
            connect Vb_inv.p_node R0b1.p_node as Connection1055
            connect R0c1.n_node L0c1.n_node as Connection330
            connect "Bus Join4.out" "C function5.in" as Connection1780
            connect "Bus Join5.out" "C function3.in" as Connection1781
            connect setpoint_P "Bus Join5.in" as Connection1786
            connect Ea1.p_node Junction305 as Connection1835
            connect setpoint_Q "Bus Join4.in" as Connection1787
            connect Junction305 Junction161 as Connection1836
            [
                breakpoints = 6968, 7600; 6968, 7600; 6968, 7600
            ]
            connect "C function5.out" Junction303 as Connection1807
            connect Qref_probe.in Junction303 as Connection1809
            connect "C function3.out" Junction304 as Connection1810
            connect Eb1.p_node Junction306 as Connection1838
            connect Pref_probe.in Junction304 as Connection1812
            connect Junction306 Junction160 as Connection1839
            [
                breakpoints = 7032, 7696
            ]
            connect Junction303 Gain17.in as Connection1813
            connect Rb1.p_node Junction306 as Connection1840
            connect Junction304 Gain18.in as Connection1815
            connect Ec1.p_node Junction307 as Connection1841
            connect Junction307 Junction173 as Connection1842
            [
                breakpoints = 7112, 7792; 7112, 7968; 7112, 7968
            ]
            connect Rc1.p_node Junction307 as Connection1843
            connect activeP_offset "Controller.U - P" as Connection1844
            connect Gain18.out Controller.U_P as Connection1845
            connect Gain17.out Controller.U_Q as Connection1846
            connect w_m2 "BE1-25A Synchronizer (inverter).In3" as Connection93
            connect From55 Gain19.in as Connection1847
            connect Gain19.out "Bus Join4.in1" as Connection1848
            connect From54 Gain20.in as Connection1849
            connect Gain20.out "Bus Join5.in1" as Connection1850
            connect Junction314 Junction313 as Connection1285
            [
                breakpoints = 8512, 8384
            ]
            connect Tr1.n2 Junction313 as Connection1287
            connect VbG.n_node Junction315 as Connection1225
            connect Junction309 Junction315 as Connection1223
            connect Tr1.n1 Junction314 as Connection1284
            connect Vb Tr1.sec_2 as Connection1278
            connect VbG.out Vb_G as Connection1126
            connect Va_G VaG.out as Connection1125
            connect Va Tr1.sec_1 as Connection1280
            connect VcG.n_node Junction309 as Connection1221
            connect Vc Tr1.sec_3 as Connection1276
            connect Junction309 Junction314 as Connection1282
            [
                breakpoints = 8312, 8384
            ]
            connect Junction313 Ground as Connection1286
            [
                breakpoints = 8576, 8384
            ]
            connect Vc_G VcG.out as Connection1127
            connect Tr1.prm_1 Junction316 as Connection1851
            connect Lgrida_1.p_node Junction316 as Connection1853
            connect Tr1.prm_2 Junction317 as Connection1854
            connect Lgridb_1.p_node Junction317 as Connection1856
            connect Tr1.prm_3 Junction318 as Connection1857
            connect Lgridc_1.p_node Junction318 as Connection1859
            connect S2.ctrl_in Connect2 as Connection1212
            connect Junction317 VbG.p_node as Connection1862
            [
                breakpoints = 8192, 7696; 8192, 7696
            ]
            connect Junction316 VaG.p_node as Connection1863
            [
                breakpoints = 8064, 7600; 8064, 7600; 8064, 7600
            ]
            connect VaG.n_node Junction315 as Connection1860
            [
                breakpoints = 8064, 8384; 8064, 8384; 8192, 8384
            ]
            connect VcG.p_node Junction318 as Connection1861
            [
                breakpoints = 8312, 7792; 8312, 7792
            ]
            connect Ia1.n_node S2.a_in as Connection1864
            connect Ib1.n_node S2.b_in as Connection1865
            connect Ic1.n_node S2.c_in as Connection1866
            connect S2.a_out Rgrida_1.p_node as Connection1867
            connect S2.b_out Rgridb_1.p_node as Connection1868
            connect S2.c_out Rgridc_1.p_node as Connection1869
            connect R0a1.p_node Va_inv.p_node as Connection1870
            [
                breakpoints = 5576, 7600
            ]
            connect Junction291 Va_inv.n_node as Connection1871
            [
                breakpoints = 5656, 8384; 5656, 8384; 5576, 8384; 5576, 7928
            ]
            connect Vrms_ess.in Vrms.out as Connection1821
            connect Ra1.p_node Junction319 as Connection1872
            connect Junction319 Junction305 as Connection1873
            connect Vrms.p_node Junction319 as Connection1874
            connect Junction207 Junction320 as Connection1875
            [
                breakpoints = 6664, 8384; 6664, 8384
            ]
            connect Junction320 Ec1.n_node as Connection1876
            [
                breakpoints = 7112, 8384; 7112, 8384; 7112, 8384
            ]
            connect Vrms.n_node Junction320 as Connection1877

            Kp_V = "30e-3"
            S = "200e3"
            V_D = "5e-4"
            Vmax = "0.35"
            Vmin = "-0.35"
            f_D = "3e-1"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A grid-forming three-phase inverter with a frequency and voltage droop controller</p></body></html>"

                S {
                    label = "Rated Power "
                    widget = edit
                    type = generic
                    default_value = "50e3"
                    unit = "VA"
                    group = "1. Three-phase Inverter"
                }

                V_ABC {
                    label = "Rated Phase Voltage (RMS)"
                    widget = edit
                    type = generic
                    default_value = "277"
                    unit = "V"
                    group = "1. Three-phase Inverter"
                }

                w_0 {
                    label = "Nominal Frequency"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*60"
                    unit = "rad/s"
                    group = "1. Three-phase Inverter"
                }

                Ts {
                    label = "Execution rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                    group = "1. Three-phase Inverter"
                }

                R_i {
                    label = "Input Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.1"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_i {
                    label = "Input Inductance"
                    widget = edit
                    type = generic
                    default_value = "6e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R_s {
                    label = "Shunt Resistance"
                    widget = edit
                    type = generic
                    default_value = "15e-3"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                C_s {
                    label = "Shunt Capacitance"
                    widget = edit
                    type = generic
                    default_value = "150e-6"
                    unit = "F"
                    group = "2. LCL filter"
                }

                R_o {
                    label = "Output Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.03"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_o {
                    label = "Output Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.3e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R {
                    label = "Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.35"
                    unit = "Ω"
                    group = "3. Electrical Line"
                }

                L {
                    label = "Inductance"
                    widget = edit
                    type = generic
                    default_value = "1.5e-3"
                    unit = "H"
                    group = "3. Electrical Line"
                }

                Kp_I {
                    label = "Inner Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "10e-3"
                    group = "4. Cascaded Controller"
                }

                Ki_I {
                    label = "Inner Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "2e-3"
                    group = "4. Cascaded Controller"
                }

                Imax {
                    label = "Inner Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "1"
                    group = "4. Cascaded Controller"
                }

                Imin {
                    label = "Inner Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-1"
                    group = "4. Cascaded Controller"
                }

                Kp_V {
                    label = "Outer Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "10e-3"
                    group = "4. Cascaded Controller"
                }

                Ki_V {
                    label = "Outer Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "2"
                    group = "4. Cascaded Controller"
                }

                Vmax {
                    label = "Outer Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "1.5"
                    group = "4. Cascaded Controller"
                }

                Vmin {
                    label = "Outer Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-1.5"
                    group = "4. Cascaded Controller"
                }

                f_D {
                    label = "Frequency Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "1e-1"
                    unit = "%"
                    group = "5. Droop Control"
                }

                V_D {
                    label = "Voltage Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "%"
                    group = "5. Droop Control"
                }

                T_m {
                    label = "Measurement delay"
                    widget = edit
                    type = generic
                    default_value = "0.5"
                    unit = "s"
                    group = "5. Droop Control"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    mP = w_0*(f_D/100)
                    nQ = V_DQ*(V_D/100)
                    D_f = 1/mP
                    D_V = 1/nQ
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, 'grid_forming_inverter.svg')
                ENDCODE

                CODE pre_compile
                    # HEADER START
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    # HEADER STOP
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    mP = w_0*(f_D/100)
                    nQ = V_DQ*(V_D/100)
                    D_f = 1/mP
                    D_V = 1/nQ
                ENDCODE
            }
        }
        [
            position = 7712, 8504
            rotation = down
            scale = -1, -1
            size = 224, 192
        ]

        component "core/Voltage RMS" Vrms_grid {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 9296, 8616
            rotation = right
            size = 64, 32
        ]

        component pas_resistor Rgrid {
            resistance = "R"
        }
        [
            position = 8624, 8408
        ]

        component pas_resistor Rgrid1 {
            resistance = "R"
        }
        [
            position = 8624, 8504
        ]

        component pas_resistor Rgrid2 {
            resistance = "R"
        }
        [
            position = 8632, 8600
        ]

        component pas_inductor La4 {
            inductance = "L"
        }
        [
            position = 8728, 8408
            rotation = down
        ]

        component pas_inductor La5 {
            inductance = "L"
        }
        [
            position = 8760, 8504
            rotation = down
        ]

        component pas_inductor La6 {
            inductance = "L"
        }
        [
            position = 8760, 8600
            rotation = down
        ]

        component src_voltage Vs2 {
            init_frequency = "60.0"
            init_phase = "np.pi/2"
            init_rms_value = "480"
            init_source_nature = "Sine"
        }
        [
            position = 9152, 8600
            rotation = right
        ]

        component src_voltage Vs3 {
            init_frequency = "60.0"
            init_phase = "np.pi/2+120.0"
            init_rms_value = "480"
            init_source_nature = "Sine"
        }
        [
            position = 8936, 8736
            rotation = right
        ]

        component src_voltage Vs4 {
            init_frequency = "60.0"
            init_phase = "np.pi/2-120.0"
            init_rms_value = "480"
            init_source_nature = "Sine"
        }
        [
            position = 9056, 8672
            rotation = right
        ]

        component src_ground gnd3 {
        }
        [
            position = 8432, 8976
            rotation = down
            hide_name = True
            scale = 1, -1
        ]

        component src_ground gnd4 {
        }
        [
            position = 9096, 8976
            rotation = down
            hide_name = True
            scale = 1, -1
        ]

        tag Goto2 {
            value = "Va"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8176, 8656
            rotation = left
            hide_name = True
        ]

        tag Goto3 {
            value = "Vb"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8248, 8656
            rotation = left
            hide_name = True
        ]

        tag Goto4 {
            value = "Vc"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 8320, 8656
            rotation = left
            hide_name = True
        ]

        junction Junction108 pe
        [
            position = 8208, 8880
        ]

        junction Junction112 pe
        [
            position = 8280, 8880
        ]

        junction Junction113 pe
        [
            position = 8440, 8880
        ]

        junction Junction114 pe
        [
            position = 8376, 8880
        ]

        junction Junction452 pe
        [
            position = 8120, 8880
        ]

        junction Junction453 pe
        [
            position = 8136, 8432
        ]

        junction Junction454 pe
        [
            position = 8208, 8512
        ]

        junction Junction455 pe
        [
            position = 8280, 8600
        ]

        junction Junction512 pe
        [
            position = 9152, 8408
        ]

        junction Junction513 pe
        [
            position = 9152, 8888
        ]

        junction Junction514 pe
        [
            position = 8376, 8408
        ]

        junction Junction515 pe
        [
            position = 8440, 8504
        ]

        junction Junction516 pe
        [
            position = 8504, 8600
        ]

        junction Junction517 pe
        [
            position = 8432, 8880
        ]

        junction Junction518 pe
        [
            position = 9056, 8888
        ]

        junction Junction519 pe
        [
            position = 9096, 8888
        ]

        comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Standalone (UPS) load</p></body></html> ENDCOMMENT 
        [
            position = 8024, 8896
        ]

        connect Goto2 Va.out as Connection1358
        connect Goto3 Vb.out as Connection1359
        connect Goto4 Vc.out as Connection1360
        connect Junction112 Junction108 as Connection918
        connect Junction113 Junction114 as Connection923
        connect Junction114 Junction112 as Connection924
        [
            breakpoints = 8376, 8880; 8280, 8880
        ]
        connect R17.n_node Junction113 as Connection922
        connect R18.n_node Junction114 as Connection925
        connect Vb.n_node Junction108 as Connection901
        connect Vc.n_node Junction112 as Connection917
        connect P_ref_ess.out "Grid forming inverter (averaged).setpoint_P" as Connection4277
        connect Q_ref_ess.out "Grid forming inverter (averaged).setpoint_Q" as Connection4278
        connect Junction108 Junction452 as Connection4282
        [
            breakpoints = 8208, 8880
        ]
        connect Junction452 Va.n_node as Connection4283
        [
            breakpoints = 8128, 8880; 8136, 8880
        ]
        connect "Grid forming inverter (averaged).Ground" Junction452 as Connection4284
        connect Va.p_node Junction453 as Connection4288
        connect "Grid forming inverter (averaged).Va" Junction453 as Connection4290
        connect Vb.p_node Junction454 as Connection4291
        connect "Grid forming inverter (averaged).Vb" Junction454 as Connection4293
        connect Junction455 Vc.p_node as Connection4295
        [
            breakpoints = 8280, 8600; 8280, 8600; 8280, 8600; 8280, 8792
        ]
        connect "Grid forming inverter (averaged).Vc" Junction455 as Connection4296
        connect La4.n_node Rgrid.n_node as Connection4211
        connect La5.n_node Rgrid1.n_node as Connection4213
        connect La6.n_node Rgrid2.n_node as Connection4215
        connect La6.p_node Vs3.p_node as Connection4247
        connect La5.p_node Vs4.p_node as Connection4251
        connect Vs2.p_node Junction512 as Connection4256
        connect Junction512 La4.p_node as Connection4257
        connect Vrms_grid.p_node Junction512 as Connection4258
        connect Vs2.n_node Junction513 as Connection4259
        connect Vrms_grid.n_node Junction513 as Connection4261
        connect Junction453 Junction514 as Connection4300
        [
            breakpoints = 8136, 8432; 8136, 8408
        ]
        connect Junction514 R18.p_node as Connection4301
        [
            breakpoints = 8376, 8408; 8376, 8408
        ]
        connect Rgrid.p_node Junction514 as Connection4302
        connect R17.p_node Junction515 as Connection4303
        connect Junction515 Junction454 as Connection4304
        [
            breakpoints = 8440, 8504; 8440, 8504; 8208, 8504
        ]
        connect Rgrid1.p_node Junction515 as Connection4305
        connect Junction455 Junction516 as Connection4306
        [
            breakpoints = 8280, 8600
        ]
        connect Junction516 R16.p_node as Connection4307
        [
            breakpoints = 8504, 8600; 8504, 8600; 8504, 8600
        ]
        connect Rgrid2.p_node Junction516 as Connection4308
        connect R16.n_node Junction517 as Connection4310
        connect Junction517 Junction113 as Connection4311
        connect gnd3.node Junction517 as Connection4312
        connect Junction518 Vs4.n_node as Connection4314
        [
            breakpoints = 9056, 8888
        ]
        connect Vs3.n_node Junction518 as Connection4315
        connect Junction513 Junction519 as Connection4316
        [
            breakpoints = 9152, 8888
        ]
        connect Junction519 Junction518 as Connection4317
        connect gnd4.node Junction519 as Connection4318
    }

    default {
        gen_abs {
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_math_fnc {
            mathematical_fn = "exponential"
            execution_rate = "inherit"
        }

        gen_pid_controller {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            upper_sat_lim = "1"
            lower_sat_lim = "-1"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_rel_op {
            relational_op = "=="
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_trigonometric {
            trigonometric_fn = "sin"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_clock {
            execution_rate = "100e-6"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        src_voltage {
            sig_input = "False"
            type = "signal generator"
            param_set = "1phase"
            parent_label = ""
            addr = "0"
            spc_nb = "0"
            execution_rate = "100e-6"
            cpd_visible = "True"
            enable_snb = "False"
            snb_type = "R2"
            R2 = "0.0"
            L1 = "0.1"
            override_signal_name = "False"
            signal_name = ""
            init_source_nature = "Constant"
            init_const_value = "0.0"
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            core_sat = "False"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            ioc1 = "0.7"
            Poc1 = "460.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[1910.3, 2419.7]"
            current_vals_SI = "[0.66653, 277.72]"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[1.2, 1.52]"
            current_vals_pu = "[0.0024, 1]"
            flux_vals_SCOC = "[1.2, 1.52]"
            current_vals_SCOC = "[0.0024, 1]"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "false"
            coupling_type = "core"
            Rshunt = "inf"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Voltage RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }

        "core/abc to dq" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "True"
            initial_filter_output = "0"
            wn_LPFdq = "1000"
            execution_rate = "inherit"
        }

        "core/dq to abc" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            execution_rate = "0"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Ts = 1e-3
        Ts_gen = 1e-3
        sys_f = 60.0    # Hz
        sys_w = 2.0*np.pi*sys_f    #rad/s
        ft2mi = 1.0/5280.0     #mi/ft
        Tfast = Ts
        
        # Grid Specs
        
        Vgrid = 115000.0
        SCgrid = 100.0e6
        ratio_grid = 30.0
        
        Rgrid = ((Vgrid/np.sqrt(3))**2)/(SCgrid/3)/np.sqrt(1+ratio_grid**2)
        Lgrid = ratio_grid*Rgrid/sys_w
        
        # Transformer Specs
        
            # Utility
        
        Sn_50MVA       = 50.0e6    # VA
        V1_50MVA       = 115000.0    # V
        V2_50MVA       = 13800.0    # V
        Z_50MVA        = 15.0/100.0    # pu
        Z_ratio_50MVA = 30.0
        
        R_50MVA = Z_50MVA/np.sqrt(1.0+Z_ratio_50MVA**2.0)/2.0    # pu
        L_50MVA = Z_ratio_50MVA*R_50MVA/sys_w/2.0    # pu
        
        R1_50MVA = 3.0*R_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        R2_50MVA = R_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        L1_50MVA = 3.0*L_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        L2_50MVA = L_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        
            # Feeders
        
        Sn_500kVA_1       = 500.0e3    # VA
        V1_500kVA_1       = 13800.0    # V
        V2_500kVA_1       = 480.0    # V
        Z_500kVA_1        = 5.0/100.0    # pu
        Z_ratio_500kVA_1 = 4.9
        
        R_500kVA_1 = Z_500kVA_1/np.sqrt(1.0+Z_ratio_500kVA_1**2.0)/2.0    # pu
        L_500kVA_1 = Z_ratio_500kVA_1*R_500kVA_1/sys_w/2.0    # pu
        
        R1_500kVA_1 = 3.0*R_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        R2_500kVA_1 = R_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        L1_500kVA_1 = 3.0*L_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        L2_500kVA_1 = L_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        
        
        Sn_500kVA_2       = 500.0e3    # VA
        V1_500kVA_2       = 13800.0    # V
        V2_500kVA_2       = 208.0    # V
        Z_500kVA_2        = 5.0/100.0    # pu
        Z_ratio_500kVA_2 = 4.9
        Rm_500kVA_2 = 1e5
        Lm_500kVA_2 = 200
        
        R_500kVA_2 = Z_500kVA_2/np.sqrt(1.0+Z_ratio_500kVA_2**2.0)/2.0    # pu
        L_500kVA_2 = Z_ratio_500kVA_2*R_500kVA_2/sys_w/2.0    # pu
        
        R1_500kVA_2 = 3.0*R_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        R2_500kVA_2 = R_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        L1_500kVA_2 = 3.0*L_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        L2_500kVA_2 = L_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        
        
        Sn_1MVA       = 1000.0e3    # VA
        V1_1MVA       = 13800.0    # V
        V2_1MVA       = 480.0    # V
        Z_1MVA        = 5.56/100.0    # pu
        Z_ratio_1MVA = 5.49
        Rm_1MVA = 1e5
        Lm_1MVA = 200
        
        R_1MVA = Z_1MVA/np.sqrt(1.0+Z_ratio_1MVA**2.0)/2.0    # pu
        L_1MVA = Z_ratio_1MVA*R_1MVA/sys_w/2.0    # pu
        
        R1_1MVA = 3.0*R_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        R2_1MVA = R_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        L1_1MVA = 3.0*L_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        L2_1MVA = L_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        
        Sn_1500kVA       = 1500.0e3    # VA
        V1_1500kVA       = 4160.0    # V
        V2_1500kVA       = 480.0    # V
        Z_1500kVA        = 5.75/100.0    # pu
        Z_ratio_1500kVA = 5.04
        Rm_1500kVA = 1e5
        Lm_1500kVA = 200
        
        R_1500kVA = Z_1500kVA/np.sqrt(1.0+Z_ratio_1500kVA**2.0)/2.0    # pu
        L_1500kVA = Z_ratio_1500kVA*R_1500kVA/sys_w/2.0    # pu
        
        R1_1500kVA = 3.0*R_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        R2_1500kVA = R_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        L1_1500kVA = 3.0*L_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        L2_1500kVA = L_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        
        
        Sn_2MVA_1       = 2000.0e3    # VA
        V1_2MVA_1       = 4160.0    # V
        V2_2MVA_1       = 480.0    # V
        Z_2MVA_1        = 5.75/100.0    # pu
        Z_ratio_2MVA_1 = 5.7
        Rm_2MVA_1 = 1e5
        Lm_2MVA_1 = 200
        
        R_2MVA_1 = Z_2MVA_1/np.sqrt(1.0+Z_ratio_2MVA_1**2.0)/2.0    # pu
        L_2MVA_1 = Z_ratio_2MVA_1*R_2MVA_1/sys_w/2.0    # pu
        
        R1_2MVA_1 = 3.0*R_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        R2_2MVA_1 = R_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        L1_2MVA_1 = 3.0*L_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        L2_2MVA_1 = L_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        
        
        Sn_2MVA_2       = 2000.0e3    # VA
        V1_2MVA_2       = 13800.0    # V
        V2_2MVA_2       = 480.0    # V
        Z_2MVA_2        = 5.75/100.0    # pu
        Z_ratio_2MVA_2 = 5.7
        Rm_2MVA_2 = 1e5
        Lm_2MVA_2 = 200
        
        R_2MVA_2 = Z_2MVA_2/np.sqrt(1.0+Z_ratio_2MVA_2**2.0)/2.0    # pu
        L_2MVA_2 = Z_ratio_2MVA_2*R_2MVA_2/sys_w/2.0    # pu
        
        R1_2MVA_2 = 3.0*R_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        R2_2MVA_2 = R_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        L1_2MVA_2 = 3.0*L_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        L2_2MVA_2 = L_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        
        
        Sn_2500kVA_1       = 2500.0e3    # VA
        V1_2500kVA_1       = 13800.0    # V
        V2_2500kVA_1       = 480.0    # V
        Z_2500kVA_1        = 5.56/100.0    # pu
        Z_ratio_2500kVA_1 = 5.52
        Rm_2500kVA_1 = 1e5
        Lm_2500kVA_1 = 200
        
        R_2500kVA_1 = Z_2500kVA_1/np.sqrt(1.0+Z_ratio_2500kVA_1**2.0)/2.0    # pu
        L_2500kVA_1 = Z_ratio_2500kVA_1*R_2500kVA_1/sys_w/2.0    # pu
        
        R1_2500kVA_1 = 3.0*R_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        R2_2500kVA_1 = R_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        L1_2500kVA_1 = 3.0*L_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        L2_2500kVA_1 = L_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        
        
        Sn_2500kVA_2       = 2500.0e3    # VA
        V1_2500kVA_2       = 13800.0    # V
        V2_2500kVA_2       = 480.0    # V
        Z_2500kVA_2        = 5.75/100.0    # pu
        Z_ratio_2500kVA_2 = 6.6
        Rm_2500kVA_2 = 1e5
        Lm_2500kVA_2 = 200
        
        R_2500kVA_2 = Z_2500kVA_2/np.sqrt(1.0+Z_ratio_2500kVA_2**2.0)/2.0    # pu
        L_2500kVA_2 = Z_ratio_2500kVA_2*R_2500kVA_2/sys_w/2.0    # pu
        
        R1_2500kVA_2 = 3.0*R_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        R2_2500kVA_2 = R_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        L1_2500kVA_2 = 3.0*L_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        L2_2500kVA_2 = L_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        
        
        Sn_3750kVA       = 3750.0e3    # VA
        V1_3750kVA       = 13800.0    # V
        V2_3750kVA       = 4160.0    # V
        Z_3750kVA        = 4.75/100.0    # pu
        Z_ratio_3750kVA = 11.4
        Rm_3750kVA = 1e5
        Lm_3750kVA = 200
        
        R_3750kVA = Z_3750kVA/np.sqrt(1.0+Z_ratio_3750kVA**2.0)/2.0    # pu
        L_3750kVA = Z_ratio_3750kVA*R_3750kVA/sys_w/2.0    # pu
        
        R1_3750kVA = 3.0*R_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        R2_3750kVA = R_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        L1_3750kVA = 3.0*L_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        L2_3750kVA = L_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        
        
        Sn_5MVA       = 5000.0e3    # VA
        V1_5MVA       = 13800.0    # V
        V2_5MVA       = 480.0    # V
        Z_5MVA        = 5.50/100.0    # pu
        Z_ratio_5MVA = 5.44
        Rm_5MVA = 1e5
        Lm_5MVA = 200
        
        R_5MVA = Z_5MVA/np.sqrt(1.0+Z_ratio_5MVA**2.0)/2.0    # pu
        L_5MVA = Z_ratio_5MVA*R_5MVA/sys_w/2.0    # pu
        
        R1_5MVA = 3.0*R_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        R2_5MVA = R_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        L1_5MVA = 3.0*L_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        L2_5MVA = L_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        
        
        # Transmission Line Specs
        
            # The cable 6 impedance is equal to the cable 13 impedance. The differences of both
            # cables are Voltage insulation and Ampacity. Feeder1_line7, Feeder1_line8 and
            # Feeder1_line9 use cable 6.
            # Transmission lines 4, 5 and 6 from Feeder 2 use cable 6.
        
        R1_cable11 = 0.2685    # ohms/mi
        X1_cable11 = 0.207    # ohms/mi
        R0_cable11 = 2.1408    # ohms/mi
        X0_cable11 = 1.582    # ohms/mi
        B_cable11 = 308.7587e-6    # S/mi
        L0_cable11 = X0_cable11/sys_w    # H/mi
        L1_cable11 = X1_cable11/sys_w    # H/mi
        C0_cable11 = B_cable11/sys_w    # F/mi
        R_cable11  = [[R0_cable11,0.0,0.0],[0.0,R1_cable11,0.0],[0.0,0.0,R1_cable11]]
        L_cable11  = [[L0_cable11,0.0,0.0],[0.0,L1_cable11,0.0],[0.0,0.0,L1_cable11]]
        C_cable11  = [[C0_cable11,0.0,0.0],[0.0,C0_cable11,0.0],[0.0,0.0,C0_cable11]]
        
        R1_cable13 = 0.1206    # ohms/mi
        X1_cable13 = 0.1878    # ohms/mi
        R0_cable13 = 1.8354    # ohms/mi
        X0_cable13 = 1.2165    # ohms/mi
        B_cable13 = 384.0177e-6    # S/mi
        L0_cable13 = X0_cable13/sys_w    # H/mi
        L1_cable13 = X1_cable13/sys_w    # H/mi
        C0_cable13 = B_cable13/sys_w    # F/mi
        R_cable13  = [[R0_cable13,0.0,0.0],[0.0,R1_cable13,0.0],[0.0,0.0,R1_cable13]]
        L_cable13  = [[L0_cable13,0.0,0.0],[0.0,L1_cable13,0.0],[0.0,0.0,L1_cable13]]
        C_cable13  = [[C0_cable13,0.0,0.0],[0.0,C0_cable13,0.0],[0.0,0.0,C0_cable13]]
        
        
        # Transmission Line lengths
        
            # Utility
        
        l_U_L1 = 3000.0*ft2mi    # mi
        l_U_L2 = 500.0*ft2mi    # mi
        l_U_L3 = 500.0*ft2mi    # mi
        l_U_L4 = 500.0*ft2mi    # mi
        
            # Feeder1
        
        l_F1L1 = 1800.0*ft2mi    # mi
        l_F1L2 = 5500.0*ft2mi    # mi
        l_F1L3 = 1000.0*ft2mi    # mi
        l_F1L4 = 3000.0*ft2mi    # mi
        l_F1L5 = 3000.0*ft2mi    # mi
        l_F1L6 = 1500.0*ft2mi    # mi
        l_F1L7 = 2000.0*ft2mi    # mi
        l_F1L8 = 1000.0*ft2mi    # mi
        l_F1L9 = 2000.0*ft2mi    # mi
        l_F1DG = 2000.0*ft2mi    # mi
        
            # Fedeer2
        
        l_F2L0 = 10.0*ft2mi    # mi
        l_F2L1 = 5500.0*ft2mi    # mi
        l_F2L2 = 2000.0*ft2mi    # mi
        l_F2L3 = 3000.0*ft2mi    # mi
        l_F2L4 = 1500.0*ft2mi    # mi
        l_F2L5 = 1500.0*ft2mi    # mi
        l_F2L6 = 1500.0*ft2mi    # mi
        
            # Feeder3
        
        l_F3L1 = 2500.0*ft2mi    # mi
        l_F3L2 = 2000.0*ft2mi    # mi
        l_F3L3 = 2000.0*ft2mi    # mi
        l_F3L4 = 1500.0*ft2mi    # mi
        l_F3LNGG = 2000.0*ft2mi    # mi
        
        #EPC ESS specs
        L_inv_ess = 0.133e-3 #7.6573e-5 
        L_grid_ess = 0.08e-3 #4.5944e-5
        
        # Diesel Genset settings
        
            # Governor specs
        
        K = 10  # gain K
        T1 = 1.0E-4 # Time constant T1 of Electric Control Box
        T2 = 0.0 # Time constant T2 of Electric Control Box
        T3 = 0.5001 # Time constant T3 of Electric Control Box
        T4 = 0.025  # Time constant T4 of Actuator
        T5 = 0.0009  # Time constant T5 of Actuator
        T6 = 0.00574  # Time constant T6 of Actuator
        Pm0 = 0.0 #0.0005  # Initial value of Mechanic Power
        Tmax = 10 #1.1  # Max torque limit
        Tmin = -0.1  # Min torque limit
        Td = 0.024  # Engine time delay
        
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2]
        denTF4d = [coeff3, coeff4]
        
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2]
        denTF3d = [coeff3, coeff4]
        
        numTF1d = [(1.0+2.0*T3/Ts),2.0,(1.0-2.0*T3/Ts)]
        denTF1d = [(1.0+2.0*T1/Ts+4.0*T1*T2/(Ts**2)),(2.0-8.0*T1*T2/(Ts**2)),(4.0*T1*T2/(Ts**2)-2.0*T1/Ts+1)]
        
            # Synchronous machine specs from Simulink's 4 MVA machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen1 = 3.5e6  # Nominal/base power of machine in VA
        Vn_gen1 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen1 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen1 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen1 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen1 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen1 = 0.00206  # Field resistance in pu
        Llfd_pu_gen1 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen1 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen1 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen1 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen1 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen1 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen1 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen1 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen1 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen1 = 0.009238  # Friction factor in pu
        
            # Base calculation
        
        Vb_gen1 = Vn_gen1*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen1 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen1 = wb_gen1/pms  # Mechanical angular speed base
        Zb_gen1 = (Vn_gen1*Vn_gen1)/Sb_gen1  # Impedance base
        Trq_b_gen1 = Sb_gen1/wmb_gen1  # Torque base
        Fb_gen1 = Trq_b_gen1/wmb_gen1  # Friction Factor base
        Lb_gen1 = Zb_gen1/wb_gen1  # Inductance base
        
            # Stator data in SI
        
        Rs_gen1 = Rs_pu_gen1*Zb_gen1
        Lls_gen1 = Lls_pu_gen1*Lb_gen1
        Lmd_gen1 = Lmd_pu_gen1*Lb_gen1
        Lmq_gen1 = Lmq_pu_gen1*Lb_gen1
        Rkd_gen1 = Rkd_pu_gen1*Zb_gen1
        Rkq_gen1 = Rkq_pu_gen1*Zb_gen1
        Llkd_gen1 = Llkd_pu_gen1*Lb_gen1
        Llkq_gen1 = Llkq_pu_gen1*Lb_gen1
        
            # Mechanical data in SI
        
        F_gen1 = Fpu_gen1*Fb_gen1  # Friction Factor in Nm.s
        J_gen1 = 2*H_gen1*Sb_gen1/(wmb_gen1*wmb_gen1)  # Inertia in kg.m2
        
            # Field base calculation
        
        Lsfd_gen1 = (2.0/3.0)*Lmd_gen1*(1.0/Ns_fd_gen1)  # Mutual inductance between stator and field
        ifn_gen1 = Vb_gen1/(Lsfd_gen1*wb_gen1)  # Nominal field current
        ifb_gen1 = ifn_gen1*Lmd_pu_gen1  # Field current base
        Vfb_gen1 = Sb_gen1/ifb_gen1  # Field voltage base
        Zfb_gen1 = Vfb_gen1/ifb_gen1  # Field impedance base
        Lfb_gen1 = Zfb_gen1/wb_gen1  # Field inductance base
        
            # Field data in SI
        
        Rf_gen1 = Rf_pu_gen1*Zfb_gen1  # Field resistance (Field side)
        Llfd_gen1 = Llfd_pu_gen1*Lfb_gen1  # Field inductance (Field side)
        Rf_prime_gen1 = Rf_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field resistance referred to the stator side
        Llfd_prime_gen1 = Llfd_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field inductance referred to the stator side
        
            # Exciter initialization
        
        Tr_gen1 = 20e-4  # Low pass filter time constant
        Ka_gen1 = 200  # Regulator gain
        Ta_gen1 = 2e-3  # Regulator time constant
        Ke_gen1 = 1.0  # Exciter constant
        Te_gen1 = 1e-8 #Exciter time constant
        Tb_gen1 = 1e-12  # Transient gain reduction time constant b
        Tc_gen1 = 1e-12  # Transient gain reduction time constant c
        Kf_gen1 = 0  # Damping filter gain
        Tf_gen1 = 1e-12  # Damping filter time constant
        Efmin_gen1 = -0.1 # Regulator output lower limit
        Efmax_gen1 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen1 = 0.0  # Initial terminal voltage
        Vf0_gen1 = 0.0  # Initial field voltage
        Const_gen1 = Vf0_gen1/Ka_gen1
        
            #Diesel settings from Unit Test (Mach_ex_gov_PQv3_4MVA_unit_test_woodward_updated_started_v2.tse)
        
        # Governor specs
        
        K = 10  # gain K
        T4 = 0.025  # Time constant T4
        T5 = 0.0009  # Time constant T5
        T6 = 0.00574  # Time constant T6
        Pm0 = 0.0005  # Initial value of Mechanic Power
        Tmax = 1.1  # Max torque limit
        Tmin = 0  # Min torque limit
        Td = 0.024  # Engine time delay
        
        # numTF4d = [27.7777777777778,-27.6726170945921]  # For Ts = 1e-4
        # denTF4d = [1,-0.894839316814370]  # For Ts = 1e-4
        # numTF4d = [27.7777777777778,-27.6056562658610]  # For Ts = 1.7e-4
        # denTF4d = [1,-0.827878488083238]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2] #[27.7777777777778,-27.4943090883516]  # For Ts = 3e-4
        denTF4d = [coeff3, coeff4] # [1,-0.716531310573789]  # For Ts = 3e-4
        
        # numTF3d = [0,0.0172707241189214]  # For Ts = 1e-4
        # denTF3d = [1,-0.982729275881079]  # For Ts = 1e-4
        # numTF3d = [0,0.0291824473977244]  # For Ts = 1.7e-4
        # denTF3d = [1,-0.970817552602276]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2] #[0,0.0509224900975103]  # For Ts = 3e-4
        denTF3d = [coeff3, coeff4] # [1,-0.949077509902490]  # For Ts = 3e-4
        
        
        # Synchronous machine specs from Simulink's machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen2 = 4.0e6  # Nominal/base power of machine in VA
        Vn_gen2 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen2 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen2 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen2 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen2 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen2 = 0.00206  # Field resistance in pu
        Llfd_pu_gen2 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen2 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen2 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen2 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen2 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen2 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen2 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen2 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen2 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen2 = 0 #0.009238  # Friction factor in pu
        
        # Base calculation
        
        Vb_gen2 = Vn_gen2*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen2 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen2 = wb_gen2/pms  # Mechanical angular speed base
        Zb_gen2 = (Vn_gen2*Vn_gen2)/Sb_gen2  # Impedance base
        Trq_b_gen2 = Sb_gen2/wmb_gen2  # Torque base
        Fb_gen2 = Trq_b_gen2/wmb_gen2  # Friction Factor base
        Lb_gen2 = Zb_gen2/wb_gen2  # Inductance base
        
        # Stator data in SI
        
        Rs_gen2 = Rs_pu_gen2*Zb_gen2
        Lls_gen2 = Lls_pu_gen2*Lb_gen2
        Lmd_gen2 = Lmd_pu_gen2*Lb_gen2
        Lmq_gen2 = Lmq_pu_gen2*Lb_gen2
        Rkd_gen2 = Rkd_pu_gen2*Zb_gen2
        Rkq_gen2 = Rkq_pu_gen2*Zb_gen2
        Llkd_gen2 = Llkd_pu_gen2*Lb_gen2
        Llkq_gen2 = Llkq_pu_gen2*Lb_gen2
        
        # Mechanical data in SI
        
        F_gen2 = Fpu_gen2*Fb_gen2  # Friction Factor in Nm.s
        J_gen2 = 2*H_gen2*Sb_gen2/(wmb_gen2*wmb_gen2)  # Inertia in kg.m2
        
        # Field base calculation
        
        Lsfd_gen2 = (2.0/3.0)*Lmd_gen2*(1.0/Ns_fd_gen2)  # Mutual inductance between stator and field
        ifn_gen2 = Vb_gen2/(Lsfd_gen2*wb_gen2)  # Nominal field current
        ifb_gen2 = ifn_gen2*Lmd_pu_gen2  # Field current base
        Vfb_gen2 = Sb_gen2/ifb_gen2  # Field voltage base
        Zfb_gen2 = Vfb_gen2/ifb_gen2  # Field impedance base
        Lfb_gen2 = Zfb_gen2/wb_gen2  # Field inductance base
        
        # Field data in SI
        
        Rf_gen2 = Rf_pu_gen2*Zfb_gen2  # Field resistance (Field side)
        Llfd_gen2 = Llfd_pu_gen2*Lfb_gen2  # Field inductance (Field side)
        Rf_prime_gen2 = Rf_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field resistance referred to the stator side
        Llfd_prime_gen2 = Llfd_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field inductance referred to the stator side
        
        # Exciter initialization
        
        Tr_gen2 = 1e-3  # Low pass filter time constant
        Ka_gen2 = 20.0  # Regulator gain
        Ta_gen2 = 2e-3  # Regulator time constant
        Ke_gen2 = 1.0  # Exciter constant
        Te_gen2 = 1e-3 #Exciter time constant
        Tb_gen2 = 0.0  # Transient gain reduction time constant b
        Tc_gen2 = 0.0  # Transient gain reduction time constant c
        Kf_gen2 = 0  # Damping filter gain
        Tf_gen2 = 1e-3  # Damping filter time constant
        Efmin_gen2 = -5.0 # 0.0 # Regulator output lower limit
        Efmax_gen2 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen2 = 0.0  # Initial terminal voltage
        Vf0_gen2 = 0.0  # Initial field voltage
        Const_gen2 = Vf0_gen2/Ka_gen2
        
        dummy_gain_exciter = 0.01
        
        #Rl = 14.283
        #Ll = 0.120472454546162
        
        Rl = 0.1
        Ll = 0.010
        
        Rl_mach = Rl
        Ll_mach = Ll
        
        Rl_shunt = 4761.0/1.0# 4761 Ohm is the resistance needed for 1% of nominal power at nominal voltage
        
        
        load = 0.196837209302326
        
        
            #End of settings from Unit Test 
        
        #Feeder 1 has to have slave_id = 1 to all Relays config
        #Feeder 2 has to have slave_id = 2 to all Relays config
        #Feeder 3 has to have slave_id = 3 to all Relays config
        
        #Relays init time
        cb_init_cond_time = 0.1+Ts
        time_flag_delay = 0.2
        
        configF1_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.101',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.102',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.103',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.104',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.105',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.106',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.107',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.108',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.109',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB10 = {
          'port': 502,
          'ip_addr': '192.168.10.110',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB11 = {
          'port': 502,
          'ip_addr': '192.168.10.111',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB12 = {
          'port': 502,
          'ip_addr': '192.168.10.112',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB13 = {
          'port': 502,
          'ip_addr': '192.168.10.113',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB14 = {
          'port': 502,
          'ip_addr': '192.168.10.114',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        
        configF2_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.115',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.116',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.117',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.118',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.119',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.120',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.121',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.122',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.123',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB10 = {
          'port': 502,
          'ip_addr': '192.168.10.124',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB11 = {
          'port': 502,
          'ip_addr': '192.168.10.125',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB12 = {
          'port': 502,
          'ip_addr': '192.168.10.126',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB13 = {
          'port': 502,
          'ip_addr': '192.168.10.127',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB14 = {
          'port': 502,
          'ip_addr': '192.168.10.128',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB15 = {
          'port': 502,
          'ip_addr': '192.168.10.129',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB16 = {
          'port': 502,
          'ip_addr': '192.168.10.130',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB17 = {
          'port': 502,
          'ip_addr': '192.168.10.131',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB18 = {
          'port': 502,
          'ip_addr': '192.168.10.132',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB19 = {
          'port': 502,
          'ip_addr': '192.168.10.133',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        
        configF3_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.134',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.135',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.136',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.137',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.138',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.139',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.140',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.141',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.142',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        dms_config = {
          'port': 502,
          'ip_addr': '192.168.10.54',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '0,1,2,7,3,8,4,9,5,10,6,11,12,13,14,15',
          'holding_register_output_addresses': '',
          'input_register_adresses': ''
        }
        configCHP = {
            'port': 502,
            'ip_addr': '192.168.10.55',
            'netmask': '255.255.255.0',
            'slave_id': 3,
            'coil_input_addresses': '',
            'coil_output_addresses': '',
            'discrete_input_addresses': '',
            'holding_register_input_addresses': '',
            'holding_register_output_addresses': '2000,2001',
            'input_register_adresses': '0,1,2,3,4'
        }
        
            #Transformers Lm and Rm
        Rm_utility_transfo1 = 1e5
        Lm_utility_transfo1 = 200
        
        Rm_feeder1_transfo1 = 1e5
        Lm_feeder1_transfo1 = 200
        
        Rm_feeder1_transfo2 = 1e5
        Lm_feeder1_transfo2 = 200
        
        Rm_feeder1_transfo3 = 1e5
        Lm_feeder1_transfo3 = 200
        
        Rm_feeder1_transfo4 = 1e5
        Lm_feeder1_transfo4 = 200
        
        Rm_feeder1_transfo5 = 1e5
        Lm_feeder1_transfo5 = 200
        
        Rm_feeder1_transfo6 = 1e5
        Lm_feeder1_transfo6 = 200
        
        Rm_feeder1_transfo7 = 1e5
        Lm_feeder1_transfo7 = 200
        
        # ESS specs
        
        R0=.0407753
        L0=2.06374e-3
        Rt0=0.427726
        C=30.002852e-6
        R=1e-1
        #R=0
        L=30.6125e-4
        BW=120
    ENDCODE
}
