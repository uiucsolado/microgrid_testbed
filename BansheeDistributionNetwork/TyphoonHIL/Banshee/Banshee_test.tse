version = 4.2

//
// Saved by sw version: 2020.3
// Save timestamp: 23-Nov-2020 @ 02:35:51 PM
//

model "Banshee_test" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 2
        simulation_method = bilinear
        simulation_time_step = 3e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "external memory"
        sys_sp_rate_1 = 5e-05
        sys_sp_rate_2 = 0.0001
        sys_real_type_precision = "default"
        user_real_type_precision = "double precision"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        export_ss_to_pickle = False
        cce_platform = "generic"
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
    }

    component Subsystem Root {
        component src_ground gnd2 {
        }
        [
            position = 8584, 6560
            rotation = down
            hide_name = True
        ]

        component "core/Three Phase Voltage Source" Vs1 {
            init_frequency = "60.0"
        }
        [
            position = 8584, 6800
            rotation = right
            scale = -1, 1
            size = 62, 256
        ]

        component "core/Voltage RMS" Vrms_grid {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 8240, 7048
            rotation = right
            size = 64, 32
        ]

        component "core/Transmission Line" F2_line {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable13"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_U_L3"
            R_sequence_imperial = "R_cable13"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 8584, 7248
            rotation = left
            size = 256, 72
        ]

        component Subsystem F2_PCC {
            layout = dynamic
            component "core/Triple Pole Single Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8136, 8184
                rotation = left
                size = 64, 256
            ]

            component gen_bus_join "Bus Join1" {
                inputs = "8"
            }
            [
                position = 7224, 8040
                scale = -1, 1
            ]

            component gen_data_type_conversion "Data Type Conversion1" {
            }
            [
                position = 7880, 8184
                hide_name = True
                scale = -1, 1
            ]

            component gen_probe P {
            }
            [
                position = 7536, 7928
                scale = -1, 1
            ]

            component gen_probe Q {
            }
            [
                position = 7536, 7872
                scale = -1, 1
            ]

            component gen_gain Gain3 {
                gain = "100"
            }
            [
                position = 7600, 8024
                hide_name = True
                scale = -1, 1
            ]

            component gen_gain Gain2 {
                gain = "10"
            }
            [
                position = 7624, 8000
                hide_name = True
                scale = -1, 1
            ]

            component gen_gain Gain1 {
                gain = "10"
            }
            [
                position = 7664, 7976
                hide_name = True
                scale = -1, -1
            ]

            component gen_gain "W -> kW" {
                gain = ".001"
            }
            [
                position = 7752, 7976
                scale = -1, 1
            ]

            component gen_gain "var -> kvar" {
                gain = ".001"
            }
            [
                position = 7704, 8000
                scale = -1, 1
            ]

            component gen_gain Gain4 {
                gain = "100"
            }
            [
                position = 7648, 8048
                hide_name = True
                scale = -1, 1
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                    size = 64, 32
                ]

                port Ground {
                    position = bottom:auto
                    kind = pe
                }
                [
                    position = 7648, 8504
                    rotation = left
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1469 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                connect A Junction1470 as Connection390
                connect B Junction1471 as Connection393
                connect C Junction1472 as Connection396
                connect Ground Junction1469 as Connection384
                connect Junction1421 Junction1469 as Connection382
                connect Junction1469 VC.n_node as Connection383
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
            }
            [
                position = 8136, 8312
                rotation = right
                scale = -1, 1
                size = 112, 232
            ]

            component Subsystem "PCC Measurements" {
                layout = dynamic
                component gen_terminator Termination3 {
                }
                [
                    position = 8008, 8088
                    hide_name = True
                    scale = -1, 1
                ]

                component "core/Three phase PLL" "Three phase PLL1" {
                }
                [
                    position = 8088, 8096
                    scale = -1, 1
                ]

                component gen_terminator Termination5 {
                }
                [
                    position = 8008, 8136
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_PQ_transform "Power Meter1" {
                }
                [
                    position = 8088, 8360
                    scale = -1, 1
                ]

                component gen_terminator Termination6 {
                }
                [
                    position = 8016, 8352
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_rms_value "RMS value1" {
                }
                [
                    position = 8088, 8192
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 8416, 8256
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_comparator Comparator1 {
                }
                [
                    position = 7912, 8272
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_comparator Comparator2 {
                }
                [
                    position = 7912, 8464
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination7 {
                }
                [
                    position = 7976, 8368
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination4 {
                }
                [
                    position = 7968, 8120
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 7968, 8072
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination8 {
                }
                [
                    position = 8016, 8384
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8008, 8056
                    hide_name = True
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                }
                [
                    position = 8040, 8264
                    hide_name = True
                    scale = -1, 1
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                }
                [
                    position = 8040, 8472
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 8416, 8184
                    hide_name = True
                    scale = -1, 1
                ]

                port f {
                    label = "Frequency"
                    position = left:4
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7920, 8104
                    scale = -1, 1
                ]

                port P {
                    label = "Real Power"
                    position = left:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7976, 8320
                    scale = -1, 1
                ]

                port Q {
                    label = "Reactive Power"
                    position = left:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8336
                    scale = -1, 1
                ]

                port pf {
                    label = "Power Factor"
                    position = left:6
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8400
                    scale = -1, 1
                ]

                port I {
                    label = "I"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8488, 8184
                    rotation = down
                ]

                port Vrms {
                    label = "Voltage"
                    position = left:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7984, 8192
                    scale = -1, 1
                ]

                port V {
                    label = "V"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8488, 8256
                    rotation = down
                ]

                port "P direction" {
                    label = "P Import/Exprot"
                    position = left:9
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7848, 8272
                    scale = -1, 1
                ]

                port "pf lead lag" {
                    label = "pf lead/lag"
                    position = left:10
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7848, 8464
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8184
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto1 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8160
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                tag From1 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8064
                    hide_name = True
                    scale = -1, 1
                ]

                tag From2 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8096
                    hide_name = True
                    scale = -1, 1
                ]

                tag From9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8400
                    hide_name = True
                    scale = -1, 1
                ]

                tag From8 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8384
                    hide_name = True
                    scale = -1, 1
                ]

                tag From3 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8128
                    hide_name = True
                    scale = -1, 1
                ]

                tag From4 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8352
                    hide_name = True
                    scale = -1, 1
                ]

                tag From10 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto6 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8280
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto5 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8256
                    hide_name = True
                    scale = -1, 1
                ]

                tag From5 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8320
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8208
                    hide_name = True
                    scale = -1, 1
                ]

                tag From6 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8336
                    hide_name = True
                    scale = -1, 1
                ]

                tag From7 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8368
                    hide_name = True
                    scale = -1, 1
                ]

                junction Junction1 sp
                [
                    position = 8016, 8320
                ]

                junction Junction2 sp
                [
                    position = 7976, 8400
                ]

                connect "Bus Split1.out" Goto4 as Connection27
                connect "Bus Split1.out1" Goto5 as Connection26
                connect "Bus Split1.out2" Goto6 as Connection28
                connect "Bus Split1.in" V as Connection47
                connect "Bus Split2.out" Goto1 as Connection25
                connect "Bus Split2.out2" Goto3 as Connection24
                connect "Bus Split2.in" I as Connection48
                connect Comparator1.in1 Junction1 as Connection57
                connect Comparator2.in1 Junction2 as Connection60
                connect Constant1.out Comparator1.in2 as Connection54
                connect Constant2.out Comparator2.in2 as Connection61
                connect From1 "Three phase PLL1.va" as Connection29
                connect From10 "RMS value1.in" as Connection46
                connect From2 "Three phase PLL1.vb" as Connection30
                connect From3 "Three phase PLL1.vc" as Connection31
                connect From4 "Power Meter1.vc" as Connection37
                connect From5 "Power Meter1.va" as Connection39
                connect From6 "Power Meter1.vb" as Connection38
                connect From7 "Power Meter1.ia" as Connection41
                connect From9 "Power Meter1.ic" as Connection40
                connect Goto2 "Bus Split2.out1" as Connection23
                connect Junction1 P as Connection56
                connect Junction2 pf as Connection59
                connect "P direction" Comparator1.out as Connection62
                connect "Power Meter1.ib" From8 as Connection42
                connect "Power Meter1.Pdc" Junction1 as Connection55
                connect "Power Meter1.k_factor" Junction2 as Connection58
                connect "Power Meter1.Qdc" Q as Connection53
                connect "RMS value1.out" Vrms as Connection50
                connect Termination1.in "Three phase PLL1.d_axis" as Connection32
                connect Termination2.in "Three phase PLL1.q_axis" as Connection33
                connect Termination3.in "Three phase PLL1.zero_axis" as Connection34
                connect Termination4.in "Three phase PLL1.theta" as Connection35
                connect Termination5.in "Three phase PLL1.sin_theta" as Connection36
                connect Termination6.in "Power Meter1.Pac" as Connection43
                connect Termination7.in "Power Meter1.Qac" as Connection44
                connect Termination8.in "Power Meter1.apparent" as Connection45
                connect "Three phase PLL1.freq" f as Connection52
                connect "pf lead lag" Comparator2.out as Connection63
            }
            [
                position = 7864, 8048
                size = 96, 184
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                    size = 64, 32
                ]

                port Ground {
                    position = bottom:auto
                    kind = pe
                }
                [
                    position = 7648, 8504
                    rotation = left
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1469 pe
                [
                    position = 7648, 8432
                ]

                connect A IA.p_node as Connection379
                connect B IB.p_node as Connection380
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C IC.p_node as Connection381
                connect Ground Junction1469 as Connection384
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1469 as Connection382
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1469 VC.n_node as Connection383
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
            }
            [
                position = 8136, 8048
                rotation = right
                scale = -1, 1
                size = 112, 232
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 7104, 8128
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 7968, 8360
            ]

            component src_scada_input F2_PCC {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 7880, 8224
            ]

            port A {
                label = "A"
                position = top:1
                kind = pe
            }
            [
                position = 8040, 7944
                rotation = right
            ]

            port B {
                label = "B"
                position = top:2
                kind = pe
            }
            [
                position = 8136, 7944
                rotation = right
            ]

            port C {
                label = "C"
                position = top:3
                kind = pe
            }
            [
                position = 8232, 7944
                rotation = right
            ]

            port a {
                label = "a"
                position = bottom:1
                kind = pe
            }
            [
                position = 8040, 8424
                rotation = left
            ]

            port b {
                label = "b"
                position = bottom:2
                kind = pe
            }
            [
                position = 8136, 8424
                rotation = left
            ]

            port c {
                label = "c"
                position = bottom:3
                kind = pe
            }
            [
                position = 8232, 8424
                rotation = left
            ]

            port G {
                label = "G"
                position = right:1
                kind = pe
            }
            [
                position = 8424, 8192
                rotation = down
            ]

            tag From3 {
                value = "V"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7376, 8016
                hide_name = True
                scale = -1, 1
            ]

            tag Goto2 {
                value = "Q"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8000
                hide_name = True
                scale = -1, 1
            ]

            tag Goto1 {
                value = "P"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 7976
                hide_name = True
                scale = -1, 1
            ]

            tag From8 {
                value = "pf lead/lag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7312, 8096
                hide_name = True
                scale = -1, 1
            ]

            tag Goto5 {
                value = "pf"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8072
                hide_name = True
                scale = -1, 1
            ]

            tag Goto4 {
                value = "f"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8048
                hide_name = True
                scale = -1, 1
            ]

            tag From7 {
                value = "P sign"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7376, 8080
                hide_name = True
                scale = -1, 1
            ]

            tag From1 {
                value = "P"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7376, 7984
                hide_name = True
                scale = -1, 1
            ]

            tag Goto6 {
                value = "P sign"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8096
                hide_name = True
                scale = -1, 1
            ]

            tag Goto8 {
                value = "CB Status"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7800, 8184
                hide_name = True
                scale = -1, 1
            ]

            tag From5 {
                value = "CB Status"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7376, 8048
                hide_name = True
                scale = -1, 1
            ]

            tag Goto7 {
                value = "pf lead/lag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8120
                hide_name = True
                scale = -1, 1
            ]

            tag Goto3 {
                value = "V"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7472, 8024
                hide_name = True
                scale = -1, 1
            ]

            tag From4 {
                value = "f"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7312, 8032
                hide_name = True
                scale = -1, 1
            ]

            tag From2 {
                value = "Q"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7312, 8000
                hide_name = True
                scale = -1, 1
            ]

            tag From6 {
                value = "pf"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7312, 8064
                hide_name = True
                scale = -1, 1
            ]

            junction Junction1 pe
            [
                position = 8392, 8192
            ]

            junction Junction1506 sp
            [
                position = 7784, 7976
            ]

            junction Junction1507 sp
            [
                position = 7800, 8000
            ]

            junction Junction1508 sp
            [
                position = 7952, 8184
            ]

            connect A Meas1.A as Connection45
            connect "Bus Join1.in4" From5 as Connection35
            connect From1 "Bus Join1.in" as Connection31
            connect From2 "Bus Join1.in1" as Connection32
            connect From3 "Bus Join1.in2" as Connection33
            connect From4 "Bus Join1.in3" as Connection34
            connect From6 "Bus Join1.in5" as Connection36
            connect From7 "Bus Join1.in6" as Connection37
            connect From8 "Bus Join1.in7" as Connection54
            connect Gain1.in "W -> kW.out" as Connection1085
            connect Gain2.in "var -> kvar.out" as Connection1088
            connect Gain3.in "PCC Measurements.Vrms" as Connection1091
            connect Gain4.out Goto4 as Connection1093
            connect Goto1 Gain1.out as Connection1094
            [
                breakpoints = 7472, 7976; 7568, 7976
            ]
            connect Goto2 Gain2.out as Connection1095
            [
                breakpoints = 7472, 8000; 7584, 8000
            ]
            connect Goto3 Gain3.out as Connection1090
            connect Goto5 "PCC Measurements.pf" as Connection27
            connect Goto6 "PCC Measurements.P direction" as Connection28
            connect Goto7 "PCC Measurements.pf lead lag" as Connection29
            connect Goto8 "Data Type Conversion1.out" as Connection1076
            connect Junction1 G as Connection19
            connect Junction1506 "PCC Measurements.P" as Connection1101
            connect Junction1507 "PCC Measurements.Q" as Connection1104
            connect Meas1.B B as Connection44
            connect Meas1.C C as Connection43
            connect Meas1.Ground Junction1 as Connection20
            connect Meas1.I "PCC Measurements.I" as Connection52
            connect Meas1.b S1.b_out as Connection41
            connect Meas1.a S1.a_out as Connection40
            connect Meas2.Ground Junction1 as Connection18
            connect Meas2.C S1.c_in as Connection48
            connect Meas2.b b as Connection50
            connect Meas2.c c as Connection49
            connect P.in Junction1506 as Connection1102
            connect "PCC Measurements.f" Gain4.in as Connection1092
            connect "PCC Measurements.V" Meas1.V as Connection53
            connect Q.in Junction1507 as Connection1105
            connect S1.c_out Meas1.c as Connection42
            connect S1.b_in Meas2.B as Connection47
            connect S1.a_in Meas2.A as Connection46
            connect "W -> kW.in" Junction1506 as Connection1100
            connect a Meas2.a as Connection51
            connect "var -> kvar.in" Junction1507 as Connection1103
            [
                breakpoints = 7784, 8000
            ]
            connect Termination1.in "Bus Join1.out" as Connection1106
            connect Termination5.in Meas2.V as Connection1108
            connect F2_PCC.out Junction1508 as Connection1110
            connect Junction1508 S1.ctrl_in as Connection1111
            connect "Data Type Conversion1.in" Junction1508 as Connection1112
        }
        [
            position = 8584, 7464
            size = 80, 48
        ]

        component Subsystem Coupling19 {
            layout = dynamic
            component "core/Four Phase Device Coupling" "Device Coupling 1" {
                C1 = "10e-6"
                R1 = "1"
                snb_type_i = "none"
            }
            [
                position = 8168, 8192
                size = 32, 352
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "C_snubber13800"
                R = "RC_snubber13800"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8032, 8288
                size = 64, 48
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7936, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7936, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7936, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7936, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8264, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8264, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8264, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8264, 8336
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8048, 8240
            ]

            junction Junction2 pe
            [
                position = 8032, 8144
            ]

            junction Junction3 pe
            [
                position = 8016, 8048
            ]

            junction Junction4 pe
            [
                position = 8032, 8336
            ]

            connect "Device Coupling 1.b_out" b as Connection2
            connect c "Device Coupling 1.c_out" as Connection3
            connect a "Device Coupling 1.a_out" as Connection5
            connect g "Device Coupling 1.d_out" as Connection7
            connect "Device Coupling 1.c_in" Junction1 as Connection9
            connect Junction1 C as Connection10
            connect "RC Snubber.C" Junction1 as Connection11
            connect B Junction2 as Connection12
            connect Junction2 "Device Coupling 1.b_in" as Connection13
            connect "RC Snubber.B" Junction2 as Connection14
            connect "Device Coupling 1.a_in" Junction3 as Connection15
            connect Junction3 A as Connection16
            connect "RC Snubber.A" Junction3 as Connection17
            connect "Device Coupling 1.d_in" Junction4 as Connection18
            connect Junction4 G as Connection19
            connect "RC Snubber.N" Junction4 as Connection20
        }
        [
            position = 8592, 7592
            rotation = left
            scale = 1, -1
            size = 48, 80
        ]

        component Subsystem Coupling17 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 1" {
                C1 = "88.47e-06"
                R1 = "1"
                fixed_snb_i = "true"
            }
            [
                position = 8120, 8192
                size = 12, 352
            ]

            component "core/Four Phase TLM Core Coupling" "Core Coupling" {
                capacitance = "C_core13800"
                inductance = "L_core13800"
                type = "Capacitive"
            }
            [
                position = 7592, 8192
                size = 12, 352
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8000, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8000, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 8000, 8240
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 8000, 8336
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            connect a "Core Coupling 1.a_out" as Connection1
            connect "Core Coupling 1.a_in" A as Connection2
            connect B "Core Coupling 1.b_in" as Connection3
            connect "Core Coupling 1.b_out" b as Connection4
            connect c "Core Coupling 1.c_out" as Connection5
            connect "Core Coupling 1.c_in" C as Connection6
            connect G "Core Coupling 1.d_in" as Connection7
            connect "Core Coupling 1.d_out" g as Connection8
        }
        [
            position = 7104, 7800
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem F2_CB8 {
            layout = dynamic
            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8184
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8184
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8184
                        rotation = right
                    ]

                    port A {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port B {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port C {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port G {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8240
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 G as Connection9
                    connect Junction2 Junction1 as Connection12
                    connect R1.p_node A as Connection1
                    connect R1.n_node Junction2 as Connection11
                    connect R2.p_node B as Connection6
                    connect R2.n_node Junction1 as Connection8
                    connect R3.p_node C as Connection2
                    connect R3.n_node Junction2 as Connection13
                }
                [
                    position = 7472, 8312
                    size = 80, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7456, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7472, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7488, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection400
                connect B Junction1474 as Connection403
                connect C Junction1475 as Connection406
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1470 as Connection401
                connect Junction1474 Junction1471 as Connection404
                connect Junction1475 Junction1472 as Connection407
                connect Junction1476 Junction1421 as Connection412
                connect Junction1476 VC.n_node as Connection410
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.A Junction1473 as Connection402
                connect res_for_meas.B Junction1474 as Connection405
                connect res_for_meas.C Junction1475 as Connection408
                connect res_for_meas.G Junction1476 as Connection411
            }
            [
                position = 8144, 8296
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF2_CB8"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_c_function bitwise_faults {
                        input_terminals = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        input_terminals_feedthrough = "[]"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                        output_terminals = "uint fault_status;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[]"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8272
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_c_function "pf bitwise" {
                        input_terminals = "inherit exp_imp;inherit lag_lead;"
                        input_terminals_dimensions = "inherit;inherit"
                        input_terminals_feedthrough = "[u\'\']"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                        output_terminals = "uint pf_states;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[u\'\']"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8416
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8144, 8192
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/4160.0"
                    }
                    [
                        position = 7328, 7752
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7360, 7656
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7360, 7608
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            input_terminals = "real Vbus;real Vline;real VRMSLL;"
                            input_terminals_dimensions = "inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                input_terminals = "real phase_bus;real phase_line;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                input_terminals = "real Vbus;inherit Vline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                input_terminals = "real fbus;inherit fline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            input_terminals = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                            output_terminals = "real trip_out;"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7208, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7336, 8944
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7336, 8872
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction53 sp
                        [
                            position = 6752, 8128
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection117
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Junction53 as Connection125
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        connect Junction52 Junction35 as Connection119
                        connect Junction53 "RMS value4.in" as Connection126
                        [
                            breakpoints = 6752, 8128; 6752, 8128
                        ]
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection116
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "RMS value1.in" Junction52 as Connection118
                        connect "RMS value3.in" Junction34 as Connection38
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in1" Junction52 as Connection120
                        connect "Three Phase Phasor1.in_ref" Junction53 as Connection127
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            input_terminals = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                            output_terminals = "real trip50;real trip51;real trip27;real trip59;"
                            output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto31 {
                        value = "F2_CB8_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7728
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "F2_CB8_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7776
                        hide_name = True
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag Goto32 {
                        value = "F2_CB8_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7752
                        hide_name = True
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag Goto30 {
                        value = "F2_CB8_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7704
                        hide_name = True
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag Goto34 {
                        value = "F2_CB8_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7800
                        hide_name = True
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7288, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7296, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7152, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7288, 7704
                    ]

                    junction Junction129 sp
                    [
                        position = 7296, 7728
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in22" Junction110 as Connection240
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction126 as Connection391
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto26 Junction122 as Connection379
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 R50512761.Enable as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "0.67"
                    R51P_pickup2 = "0.67"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"
                    VRMSLL = "4160.0"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7960, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8184
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8184
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8184
                        rotation = right
                    ]

                    port A {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port B {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port C {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port G {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8240
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 G as Connection9
                    connect Junction2 Junction1 as Connection12
                    connect R1.p_node A as Connection1
                    connect R1.n_node Junction2 as Connection11
                    connect R2.p_node B as Connection6
                    connect R2.n_node Junction1 as Connection8
                    connect R3.p_node C as Connection2
                    connect R3.n_node Junction2 as Connection13
                }
                [
                    position = 7336, 8272
                    size = 80, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1470 pe
                [
                    position = 7320, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7336, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7352, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1470 as Connection394
                connect B Junction1471 as Connection397
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1472 as Connection400
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1470 IA.p_node as Connection395
                connect Junction1471 IB.p_node as Connection398
                connect Junction1472 IC.p_node as Connection401
                connect Junction1473 Junction1421 as Connection406
                connect Junction1473 VC.n_node as Connection404
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.A Junction1470 as Connection396
                connect res_for_meas.B Junction1471 as Connection399
                connect res_for_meas.C Junction1472 as Connection402
                connect res_for_meas.G Junction1473 as Connection405
            }
            [
                position = 8144, 8104
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8000, 8296
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F2_CB8 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8048, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7968, 8096
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8024, 8112
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2619
            connect B Meas1.B as Connection2618
            connect Brk.b Meas2.B as Connection2612
            connect Meas1.c Brk.C as Connection2614
            connect Meas1.b Brk.B as Connection2615
            connect Meas1.a Brk.A as Connection2616
            connect Meas1.C C as Connection2617
            connect Meas2.A Brk.a as Connection2611
            connect Meas2.C Brk.c as Connection2613
            connect Meas2.a a as Connection2608
            connect Meas2.b b as Connection2609
            connect c Meas2.c as Connection2610
            connect F2_CB8.out Brk.control as Connection2620
            connect Meas1.V Termination5.in as Connection2621
            connect Meas1.I Termination4.in as Connection2622
            connect Termination3.in Meas2.V as Connection2623
        }
        [
            position = 7312, 9296
            size = 80, 48
        ]

        component Subsystem CIL_F2_Interruptible4 {
            layout = dynamic
            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                None of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "600e3"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = "0.9"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 7312, 9600
            rotation = right
            scale = -1, 1
            size = 48, 72
        ]

        component Subsystem F2_CB6 {
            layout = dynamic
            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF2_CB6"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_c_function "pf bitwise" {
                        input_terminals = "inherit exp_imp;inherit lag_lead;"
                        input_terminals_dimensions = "inherit;inherit"
                        input_terminals_feedthrough = "[u\'\']"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                        output_terminals = "uint pf_states;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[u\'\']"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_c_function bitwise_faults {
                        input_terminals = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        input_terminals_feedthrough = "[]"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                        output_terminals = "uint fault_status;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[]"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8272
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8144, 8192
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7328, 7752
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7360, 7664
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7360, 7616
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_c_function "Trip_out mng fnc" {
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            input_terminals = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                            output_terminals = "real trip_out;"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            input_terminals = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                            output_terminals = "real trip50;real trip51;real trip27;real trip59;"
                            output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7232, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 8944
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 8880
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection117
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.in Junction50 as Connection110
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 "PQ Power Meter1.Qdc" as Connection111
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection116
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            input_terminals = "real Vbus;real Vline;real VRMSLL;"
                            input_terminals_dimensions = "inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            component gen_c_function "C function1" {
                                input_terminals = "real fbus;inherit fline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                input_terminals = "real phase_bus;real phase_line;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_c_function "C function1" {
                                input_terminals = "real Vbus;inherit Vline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag Goto30 {
                        value = "F2_CB6_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7704
                        hide_name = True
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto32 {
                        value = "F2_CB6_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7752
                        hide_name = True
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto34 {
                        value = "F2_CB6_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7800
                        hide_name = True
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag Goto33 {
                        value = "F2_CB6_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7776
                        hide_name = True
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag Goto31 {
                        value = "F2_CB6_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7728
                        hide_name = True
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7288, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7296, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7152, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7288, 7704
                    ]

                    junction Junction129 sp
                    [
                        position = 7296, 7728
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in22" Junction110 as Connection240
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction126 as Connection391
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto26 Junction122 as Connection379
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 R50512761.Enable as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "0.1"
                    R51P_pickup2 = "0.1"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7968, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8184
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8184
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8184
                        rotation = right
                    ]

                    port A {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port B {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port C {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port G {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8240
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 G as Connection9
                    connect Junction2 Junction1 as Connection12
                    connect R1.p_node A as Connection1
                    connect R1.n_node Junction2 as Connection11
                    connect R2.p_node B as Connection6
                    connect R2.n_node Junction1 as Connection8
                    connect R3.p_node C as Connection2
                    connect R3.n_node Junction2 as Connection13
                }
                [
                    position = 7336, 8288
                    size = 80, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1470 pe
                [
                    position = 7320, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7336, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7360, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1470 as Connection394
                connect B Junction1471 as Connection397
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1472 as Connection400
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1473 as Connection406
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1470 IA.p_node as Connection395
                connect Junction1471 IB.p_node as Connection398
                connect Junction1472 IC.p_node as Connection401
                connect Junction1473 VC.n_node as Connection404
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.A Junction1470 as Connection396
                connect res_for_meas.B Junction1471 as Connection399
                connect res_for_meas.C Junction1472 as Connection402
                connect res_for_meas.G Junction1473 as Connection405
            }
            [
                position = 8144, 8104
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8184
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8184
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8184
                        rotation = right
                    ]

                    port A {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port B {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port C {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port G {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8240
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 G as Connection9
                    connect Junction2 Junction1 as Connection12
                    connect R1.p_node A as Connection1
                    connect R1.n_node Junction2 as Connection11
                    connect R2.p_node B as Connection6
                    connect R2.n_node Junction1 as Connection8
                    connect R3.p_node C as Connection2
                    connect R3.n_node Junction2 as Connection13
                }
                [
                    position = 7480, 8320
                    size = 80, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7464, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7480, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7496, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection400
                connect B Junction1474 as Connection403
                connect C Junction1475 as Connection406
                connect Junction1421 Junction1476 as Connection412
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1470 as Connection401
                connect Junction1474 Junction1471 as Connection404
                connect Junction1475 Junction1472 as Connection407
                connect Junction1476 VC.n_node as Connection410
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.A Junction1473 as Connection402
                connect res_for_meas.B Junction1474 as Connection405
                connect res_for_meas.C Junction1475 as Connection408
                connect res_for_meas.G Junction1476 as Connection411
            }
            [
                position = 8144, 8296
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8008, 8296
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F2_CB6 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8056, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7976, 8096
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            port V {
                position = auto:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8016, 8024
                scale = -1, 1
            ]

            connect A Meas1.A as Connection2619
            connect B Meas1.B as Connection2618
            connect Brk.a Meas2.A as Connection2611
            connect Brk.c Meas2.C as Connection2613
            connect C Meas1.C as Connection2617
            connect Meas1.a Brk.A as Connection2614
            connect Meas1.b Brk.B as Connection2615
            connect Meas1.c Brk.C as Connection2616
            connect Meas2.B Brk.b as Connection2612
            connect Meas2.a a as Connection2610
            connect Meas2.b b as Connection2609
            connect Meas2.c c as Connection2608
            connect F2_CB6.out Brk.control as Connection2620
            connect Meas2.V Termination3.in as Connection2621
            connect Termination4.in Meas1.I as Connection2623
            connect Meas1.V V as Connection2624
        }
        [
            position = 6832, 8864
            size = 80, 48
        ]

        component Subsystem F2_CB4 {
            layout = dynamic
            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_c_function bitwise_faults {
                        input_terminals = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        input_terminals_feedthrough = "[]"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                        output_terminals = "uint fault_status;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[]"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8272
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_c_function "pf bitwise" {
                        input_terminals = "inherit exp_imp;inherit lag_lead;"
                        input_terminals_dimensions = "inherit;inherit"
                        input_terminals_feedthrough = "[u\'\']"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                        output_terminals = "uint pf_states;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[u\'\']"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8416
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8144, 8192
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/4160.0"
                    }
                    [
                        position = 7328, 7752
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7392, 7584
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7392, 7632
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            input_terminals = "real Vbus;real Vline;real VRMSLL;"
                            input_terminals_dimensions = "inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                input_terminals = "real phase_bus;real phase_line;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                input_terminals = "real Vbus;inherit Vline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                input_terminals = "real fbus;inherit fline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7232, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 8944
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 8872
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        connect Junction51 Gain7.in as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "PQ Power Meter1.Pdc" Junction51 as Connection113
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect "Subsystem1.Exporting or Importing" "Export Import" as Connection117
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect "Subsystem1.Lagging or Leading" "Lag Lead" as Connection116
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            input_terminals = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                            output_terminals = "real trip50;real trip51;real trip27;real trip59;"
                            output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            input_terminals = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                            output_terminals = "real trip_out;"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto31 {
                        value = "F2_CB4_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7728
                        hide_name = True
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag Goto30 {
                        value = "F2_CB4_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7704
                        hide_name = True
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto33 {
                        value = "F2_CB4_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7776
                        hide_name = True
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto34 {
                        value = "F2_CB4_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7800
                        hide_name = True
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag Goto32 {
                        value = "F2_CB4_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7752
                        hide_name = True
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7288, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7296, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7152, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7288, 7704
                    ]

                    junction Junction129 sp
                    [
                        position = 7296, 7728
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in22" Junction110 as Connection240
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction126 as Connection391
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto26 Junction122 as Connection379
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 R50512761.Enable as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "1"
                    R51P_pickup2 = "1"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"
                    VRMSLL = "4160.0"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF2_CB4"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7944, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8184
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8184
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8184
                        rotation = right
                    ]

                    port A {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port B {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port C {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port G {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8240
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 G as Connection9
                    connect Junction2 Junction1 as Connection12
                    connect R1.p_node A as Connection1
                    connect R1.n_node Junction2 as Connection11
                    connect R2.p_node B as Connection6
                    connect R2.n_node Junction1 as Connection8
                    connect R3.p_node C as Connection2
                    connect R3.n_node Junction2 as Connection13
                }
                [
                    position = 7336, 8304
                    size = 80, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7320, 7928
                ]

                junction Junction1475 pe
                [
                    position = 7336, 8024
                ]

                junction Junction1476 pe
                [
                    position = 7352, 8120
                ]

                connect A Junction1474 as Connection408
                connect B Junction1475 as Connection411
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect IC.p_node Junction1476 as Connection414
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1473 Junction1421 as Connection406
                connect Junction1473 VC.n_node as Connection404
                connect Junction1474 IA.p_node as Connection409
                connect Junction1475 IB.p_node as Connection412
                connect Junction1476 C as Connection415
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.G Junction1473 as Connection405
                connect res_for_meas.A Junction1474 as Connection410
                connect res_for_meas.B Junction1475 as Connection413
                connect res_for_meas.C Junction1476 as Connection416
            }
            [
                position = 8144, 8104
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8184
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8184
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8184
                        rotation = right
                    ]

                    port A {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port B {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port C {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port G {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8240
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 G as Connection9
                    connect Junction2 Junction1 as Connection12
                    connect R1.p_node A as Connection1
                    connect R1.n_node Junction2 as Connection11
                    connect R2.p_node B as Connection6
                    connect R2.n_node Junction1 as Connection8
                    connect R3.p_node C as Connection2
                    connect R3.n_node Junction2 as Connection13
                }
                [
                    position = 7480, 8272
                    size = 80, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7464, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7480, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7496, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection400
                connect B Junction1474 as Connection403
                connect C Junction1475 as Connection406
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1470 as Connection401
                connect Junction1474 Junction1471 as Connection404
                connect Junction1475 Junction1472 as Connection407
                connect Junction1476 Junction1421 as Connection412
                connect Junction1476 VC.n_node as Connection410
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.A Junction1473 as Connection402
                connect res_for_meas.B Junction1474 as Connection405
                connect res_for_meas.C Junction1475 as Connection408
                connect res_for_meas.G Junction1476 as Connection411
            }
            [
                position = 8144, 8296
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8000, 8296
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F2_CB4 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8048, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7968, 8096
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8000, 8112
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2619
            connect B Meas1.B as Connection2618
            connect Brk.a Meas2.A as Connection2611
            connect Brk.c Meas2.C as Connection2613
            connect Brk.b Meas2.B as Connection2612
            connect C Meas1.C as Connection2617
            connect Meas1.a Brk.A as Connection2614
            connect Meas1.b Brk.B as Connection2615
            connect Meas1.c Brk.C as Connection2616
            connect Meas2.a a as Connection2610
            connect Meas2.b b as Connection2609
            connect Meas2.c c as Connection2608
            connect F2_CB4.out Brk.control as Connection2620
            connect Termination3.in Meas2.V as Connection2621
            connect Termination5.in Meas1.V as Connection2622
            connect Meas1.I Termination4.in as Connection2623
        }
        [
            position = 7656, 9312
            size = 80, 48
        ]

        component "core/Transmission Line" Feeder2_line1 {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable11"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_F2L1"
            R_sequence_imperial = "R_cable11"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 7096, 8192
            rotation = left
            size = 256, 72
        ]

        component Subsystem Coupling16 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 3" {
                C1 = "88.47e-06"
                R1 = "1"
                fixed_snb_i = "true"
            }
            [
                position = 8192, 8192
                size = 12, 352
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "C_snubber13800"
                R = "RC_snubber13800"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8080, 8288
                size = 64, 48
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7928, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7928, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7928, 8240
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7928, 8336
            ]

            junction Junction1 pe
            [
                position = 8080, 8336
            ]

            junction Junction2 pe
            [
                position = 8064, 8048
            ]

            junction Junction3 pe
            [
                position = 8080, 8144
            ]

            junction Junction4 pe
            [
                position = 8096, 8240
            ]

            connect "Core Coupling 3.c_out" c as Connection2
            connect b "Core Coupling 3.b_out" as Connection3
            connect a "Core Coupling 3.a_out" as Connection5
            connect g "Core Coupling 3.d_out" as Connection7
            connect "Core Coupling 3.d_in" Junction1 as Connection9
            connect Junction1 G as Connection10
            connect "RC Snubber.N" Junction1 as Connection11
            connect "Core Coupling 3.a_in" Junction2 as Connection12
            connect Junction2 A as Connection13
            connect "RC Snubber.A" Junction2 as Connection14
            connect Junction3 B as Connection16
            connect "RC Snubber.B" Junction3 as Connection17
            connect Junction3 "Core Coupling 3.b_in" as Connection21
            [
                breakpoints = 8080, 8144; 8096, 8144
            ]
            connect C Junction4 as Connection22
            connect Junction4 "Core Coupling 3.c_in" as Connection23
            connect "RC Snubber.C" Junction4 as Connection24
        }
        [
            position = 7640, 8752
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem CIL_F2_Priority3 {
            layout = dynamic
            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                None of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "1000e3"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = "0.9"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 7656, 9584
            rotation = right
            scale = -1, 1
            size = 48, 72
        ]

        component Subsystem CIL_F2_Interruptible3 {
            layout = dynamic
            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "208"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "300e3"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = "0.9"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6832, 9136
            rotation = right
            scale = -1, 1
            size = 48, 72
        ]

        component Subsystem Feeder2_trafo1 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_500kVA_2"
                L2 = "L2_500kVA_2"
                Lm = "Lm_500kVA_2"
                Poc1 = "5713.2"
                Psc1 = "3332.6668666"
                R1 = "R1_500kVA_2"
                R2 = "R2_500kVA_2"
                Rm = "Rm_500kVA_2"
                Sn = "Sn_500kVA_2"
                V1 = "V1_500kVA_2"
                V2 = "V2_500kVA_2"
                clock_number = "1"
                current_vals_SI = "[0.01810193359837562, 7.542472332656509]"
                current_vals_pu = "[0.0010598400000014273, 0.4416000000002044]"
                f = "sys_f"
                flux_vals_SI = "[54.01897896942637, 68.42404002794008]"
                flux_vals_pu = "[1.0434782608690558, 1.3217391304340085]"
                input = "SI"
                ioc1 = "15.1977491464"
                l1 = "0.00408251691158"
                l2 = "0.0122475507347"
                lm = "6.59859830622"
                r1 = "0.0016663334333"
                r2 = "0.0049990002999"
                rm = "87.5166281594"
                usc1 = "1.76379642563"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8456, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8456, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8456, 8288
                rotation = down
            ]

            port G {
                position = bottom:1
                kind = pe
            }
            [
                position = 8224, 8376
                rotation = left
            ]

            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection22
            connect b2 Tr1.sec_2 as Connection20
            connect c2 Tr1.sec_3 as Connection21
            connect Tr1.n2 G as Connection23
        }
        [
            position = 6832, 9000
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem F2_CB1 {
            layout = dynamic
            component Subsystem Meas1 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                    size = 64, 32
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                    size = 64, 32
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8184
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8184
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8184
                        rotation = right
                    ]

                    port A {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port B {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port C {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port G {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8240
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 G as Connection9
                    connect Junction2 Junction1 as Connection12
                    connect R1.p_node A as Connection1
                    connect R1.n_node Junction2 as Connection11
                    connect R2.p_node B as Connection6
                    connect R2.n_node Junction1 as Connection8
                    connect R3.p_node C as Connection2
                    connect R3.n_node Junction2 as Connection13
                }
                [
                    position = 7336, 8272
                    size = 80, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1470 pe
                [
                    position = 7320, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7336, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7352, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1470 as Connection394
                connect B Junction1471 as Connection397
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1472 as Connection400
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1473 as Connection406
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1470 IA.p_node as Connection395
                connect Junction1471 IB.p_node as Connection398
                connect Junction1472 IC.p_node as Connection401
                connect Junction1473 VC.n_node as Connection404
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.A Junction1470 as Connection396
                connect res_for_meas.B Junction1471 as Connection399
                connect res_for_meas.C Junction1472 as Connection402
                connect res_for_meas.G Junction1473 as Connection405
            }
            [
                position = 8144, 8104
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8184
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8184
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8184
                        rotation = right
                    ]

                    port A {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port B {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port C {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port G {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8240
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 G as Connection9
                    connect Junction2 Junction1 as Connection12
                    connect R1.p_node A as Connection1
                    connect R1.n_node Junction2 as Connection11
                    connect R2.p_node B as Connection6
                    connect R2.n_node Junction1 as Connection8
                    connect R3.p_node C as Connection2
                    connect R3.n_node Junction2 as Connection13
                }
                [
                    position = 7464, 8288
                    size = 80, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7448, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7464, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7480, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection400
                connect B Junction1474 as Connection403
                connect C Junction1475 as Connection406
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1470 as Connection401
                connect Junction1474 Junction1471 as Connection404
                connect Junction1475 Junction1472 as Connection407
                connect Junction1476 Junction1421 as Connection412
                connect Junction1476 VC.n_node as Connection410
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.A Junction1473 as Connection402
                connect res_for_meas.B Junction1474 as Connection405
                connect res_for_meas.C Junction1475 as Connection408
                connect res_for_meas.G Junction1476 as Connection411
            }
            [
                position = 8144, 8296
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                    size = 64, 256
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_c_function "pf bitwise" {
                        input_terminals = "inherit exp_imp;inherit lag_lead;"
                        input_terminals_dimensions = "inherit;inherit"
                        input_terminals_feedthrough = "[u\'\']"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                        output_terminals = "uint pf_states;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[u\'\']"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_c_function bitwise_faults {
                        input_terminals = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        input_terminals_feedthrough = "[]"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                        output_terminals = "uint fault_status;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[]"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8144, 8192
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7320, 7752
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7400, 7600
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7400, 7648
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            input_terminals = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                            output_terminals = "real trip_out;"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            input_terminals = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                            output_terminals = "real trip50;real trip51;real trip27;real trip59;"
                            output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 7784, 8008
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            input_terminals = "real Vbus;real Vline;real VRMSLL;"
                            input_terminals_dimensions = "inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                input_terminals = "real phase_bus;real phase_line;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7656, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                input_terminals = "real fbus;inherit fline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_c_function "C function1" {
                                input_terminals = "real Vbus;inherit Vline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7240, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8936
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8880
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8912
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction50 as Connection110
                        connect Gain8.in Junction51 as Connection113
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 "PQ Power Meter1.Pdc" as Connection111
                        connect Junction51 "PQ Power Meter1.Qdc" as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect "Subsystem1.Exporting or Importing" "Export Import" as Connection117
                        connect Subsystem1.P Junction50 as Connection112
                        connect Subsystem1.Q Junction51 as Connection115
                        connect "Subsystem1.Lagging or Leading" "Lag Lead" as Connection116
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto31 {
                        value = "F2_CB1_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7728
                        hide_name = True
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag Goto33 {
                        value = "F2_CB1_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7776
                        hide_name = True
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto30 {
                        value = "F2_CB1_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7704
                        hide_name = True
                    ]

                    tag Goto32 {
                        value = "F2_CB1_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7752
                        hide_name = True
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto34 {
                        value = "F2_CB1_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7800
                        hide_name = True
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7288, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7296, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7152, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7320, 7704
                    ]

                    junction Junction129 sp
                    [
                        position = 7336, 7728
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in22" Junction110 as Connection240
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction126 as Connection391
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto26 Junction122 as Connection379
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 R50512761.Enable as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "1.97"
                    R51P_pickup2 = "1.97"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            The relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF2_CB1"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7960, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8016, 8296
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F2_CB1 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8064, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7984, 8096
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8016, 8112
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2610
            connect B Meas1.B as Connection2609
            connect Brk.b Meas2.B as Connection2615
            connect Brk.c Meas2.C as Connection2616
            connect C Meas1.C as Connection2608
            connect Meas1.a Brk.A as Connection2611
            connect Meas1.b Brk.B as Connection2612
            connect Meas1.c Brk.C as Connection2613
            connect Meas2.A Brk.a as Connection2614
            connect Meas2.a a as Connection2619
            connect Meas2.b b as Connection2618
            connect Meas2.c c as Connection2617
            connect F2_CB1.out Brk.control as Connection2620
            connect Termination3.in Meas2.V as Connection2621
            connect Termination5.in Meas1.V as Connection2622
            connect Meas1.I Termination4.in as Connection2623
        }
        [
            position = 7096, 7968
            size = 80, 48
        ]

        component Subsystem Feeder2_trafo3 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_1MVA"
                L2 = "L2_1MVA"
                Lm = "Lm_1MVA"
                Poc1 = "5713.2"
                Psc1 = "6642.37715237"
                R1 = "R1_1MVA"
                R2 = "R2_1MVA"
                Rm = "Rm_1MVA"
                Sn = "Sn_1MVA"
                V1 = "V1_1MVA"
                V2 = "V2_1MVA"
                clock_number = "1"
                current_vals_SI = "[0.01810193359837562, 7.542472332656509]"
                current_vals_pu = "[0.0005299200000007136, 0.2208000000001022]"
                f = "sys_f"
                flux_vals_SI = "[54.01897896942637, 68.42404002794008]"
                flux_vals_pu = "[1.0434782608690558, 1.3217391304340085]"
                input = "SI"
                ioc1 = "7.59887457322"
                l1 = "0.00455833132082"
                l2 = "0.0136749939625"
                lm = "13.1971966124"
                r1 = "0.00166059428809"
                r2 = "0.00498178286428"
                rm = "175.033256319"
                usc1 = "1.9405548823"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8472, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8472, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8472, 8288
                rotation = down
            ]

            port G {
                position = bottom:1
                kind = pe
            }
            [
                position = 8224, 8368
                rotation = left
            ]

            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_2 b2 as Connection21
            connect Tr1.sec_3 c2 as Connection22
            connect a2 Tr1.sec_1 as Connection20
            connect Tr1.n2 G as Connection23
        }
        [
            position = 7312, 9464
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem Feeder2_trafo4 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_1500kVA"
                L2 = "L2_1500kVA"
                Lm = "Lm_1500kVA"
                Poc1 = "5713.2"
                Psc1 = "10376.8200411"
                R1 = "R1_1500kVA"
                R2 = "R2_1500kVA"
                Rm = "Rm_1500kVA"
                Sn = "Sn_1500kVA"
                V1 = "V1_1500kVA"
                V2 = "V2_1500kVA"
                clock_number = "1"
                current_vals_SI = "[0.01810193359837562, 7.542472332656509]"
                current_vals_pu = "[0.00014131200000019035, 0.058880000000027265]"
                f = "sys_f"
                flux_vals_SI = "[54.01897896942637, 68.42404002794008]"
                flux_vals_pu = "[1.0434782608690558, 1.3217391304340085]"
                input = "SI"
                ioc1 = "2.02636655286"
                l1 = "0.00394319161562"
                l2 = "0.0118295748469"
                lm = "49.4894872966"
                r1 = "0.000691788002744"
                r2 = "0.00207536400823"
                rm = "656.374711195"
                usc1 = "1.60136595485"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8456, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8456, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8456, 8288
                rotation = down
            ]

            port G {
                position = bottom:1
                kind = pe
            }
            [
                position = 8224, 8384
                rotation = left
            ]

            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection21
            connect b2 Tr1.sec_2 as Connection19
            connect c2 Tr1.sec_3 as Connection20
            connect Tr1.n2 G as Connection22
        }
        [
            position = 7656, 9464
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem F2_CB7 {
            layout = dynamic
            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8184
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8184
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8184
                        rotation = right
                    ]

                    port A {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port B {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port C {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port G {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8240
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 G as Connection9
                    connect Junction2 Junction1 as Connection12
                    connect R1.p_node A as Connection1
                    connect R1.n_node Junction2 as Connection11
                    connect R2.p_node B as Connection6
                    connect R2.n_node Junction1 as Connection8
                    connect R3.p_node C as Connection2
                    connect R3.n_node Junction2 as Connection13
                }
                [
                    position = 7480, 8312
                    size = 80, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7464, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7480, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7496, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection400
                connect B Junction1474 as Connection403
                connect C Junction1475 as Connection406
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1470 as Connection401
                connect Junction1474 Junction1471 as Connection404
                connect Junction1475 Junction1472 as Connection407
                connect Junction1476 Junction1421 as Connection412
                connect Junction1476 VC.n_node as Connection410
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.A Junction1473 as Connection402
                connect res_for_meas.B Junction1474 as Connection405
                connect res_for_meas.C Junction1475 as Connection408
                connect res_for_meas.G Junction1476 as Connection411
            }
            [
                position = 8144, 8296
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF2_CB7"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_c_function "pf bitwise" {
                        input_terminals = "inherit exp_imp;inherit lag_lead;"
                        input_terminals_dimensions = "inherit;inherit"
                        input_terminals_feedthrough = "[u\'\']"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                        output_terminals = "uint pf_states;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[u\'\']"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8416
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8144, 8192
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_c_function bitwise_faults {
                        input_terminals = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        input_terminals_feedthrough = "[]"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                        output_terminals = "uint fault_status;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[]"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7328, 7752
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7400, 7640
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7400, 7592
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7248, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 8936
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 8864
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection116
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        connect Junction51 Gain7.in as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "PQ Power Meter1.Pdc" Junction51 as Connection113
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect "Subsystem1.Lagging or Leading" "Lag Lead" as Connection117
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            input_terminals = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                            output_terminals = "real trip50;real trip51;real trip27;real trip59;"
                            output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            input_terminals = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                            output_terminals = "real trip_out;"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            input_terminals = "real Vbus;real Vline;real VRMSLL;"
                            input_terminals_dimensions = "inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                input_terminals = "real Vbus;inherit Vline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                input_terminals = "real phase_bus;real phase_line;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                input_terminals = "real fbus;inherit fline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag Goto33 {
                        value = "F2_CB7_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7776
                        hide_name = True
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto32 {
                        value = "F2_CB7_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7752
                        hide_name = True
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto30 {
                        value = "F2_CB7_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7704
                        hide_name = True
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag Goto31 {
                        value = "F2_CB7_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7728
                        hide_name = True
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto34 {
                        value = "F2_CB7_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7800
                        hide_name = True
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7288, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7296, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7152, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7288, 7704
                    ]

                    junction Junction129 sp
                    [
                        position = 7296, 7728
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in22" Junction110 as Connection240
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction126 as Connection391
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto26 Junction122 as Connection379
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 R50512761.Enable as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "0.75"
                    R51P_pickup2 = "0.75"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7928, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8184
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8184
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8184
                        rotation = right
                    ]

                    port A {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port B {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port C {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port G {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8240
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 G as Connection9
                    connect Junction2 Junction1 as Connection12
                    connect R1.p_node A as Connection1
                    connect R1.n_node Junction2 as Connection11
                    connect R2.p_node B as Connection6
                    connect R2.n_node Junction1 as Connection8
                    connect R3.p_node C as Connection2
                    connect R3.n_node Junction2 as Connection13
                }
                [
                    position = 7344, 8256
                    size = 80, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1470 pe
                [
                    position = 7328, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7344, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7360, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1470 as Connection394
                connect B Junction1471 as Connection397
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1472 as Connection400
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1470 IA.p_node as Connection395
                connect Junction1471 IB.p_node as Connection398
                connect Junction1472 IC.p_node as Connection401
                connect Junction1473 Junction1421 as Connection406
                connect Junction1473 VC.n_node as Connection404
                connect V "Bus Join1.out" as Connection389
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.A Junction1470 as Connection396
                connect res_for_meas.B Junction1471 as Connection399
                connect res_for_meas.C Junction1472 as Connection402
                connect res_for_meas.G Junction1473 as Connection405
            }
            [
                position = 8144, 8104
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 7992, 8296
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F2_CB7 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8040, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7960, 8096
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8016, 8112
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2619
            connect B Meas1.B as Connection2618
            connect Brk.c Meas2.C as Connection2613
            connect Brk.b Meas2.B as Connection2612
            connect Brk.a Meas2.A as Connection2611
            connect C Meas1.C as Connection2617
            connect Meas1.a Brk.A as Connection2614
            connect Meas1.b Brk.B as Connection2615
            connect Meas1.c Brk.C as Connection2616
            connect Meas2.a a as Connection2610
            connect Meas2.b b as Connection2609
            connect Meas2.c c as Connection2608
            connect Termination5.in Meas1.V as Connection2620
            connect Termination4.in Meas1.I as Connection2621
            connect F2_CB7.out Brk.control as Connection2622
            connect Termination3.in Meas2.V as Connection2623
        }
        [
            position = 7480, 8888
            size = 80, 48
        ]

        component Subsystem Feeder2_trafo2 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_3750kVA"
                L2 = "L2_3750kVA"
                Lm = "Lm_3750kVA"
                Poc1 = "5713.2"
                Psc1 = "10376.8200411"
                R1 = "R1_3750kVA"
                R2 = "R2_3750kVA"
                Rm = "Rm_3750kVA"
                Sn = "Sn_3750kVA"
                V1 = "V1_3750kVA"
                V2 = "V2_3750kVA"
                clock_number = "1"
                current_vals_SI = "[0.01810193359837562, 7.542472332656509]"
                current_vals_pu = "[0.00014131200000019035, 0.058880000000027265]"
                f = "sys_f"
                flux_vals_SI = "[54.01897896942637, 68.42404002794008]"
                flux_vals_pu = "[1.0434782608690558, 1.3217391304340085]"
                input = "SI"
                ioc1 = "2.02636655286"
                l1 = "0.00394319161562"
                l2 = "0.0118295748469"
                lm = "49.4894872966"
                r1 = "0.000691788002744"
                r2 = "0.00207536400823"
                rm = "656.374711195"
                usc1 = "1.60136595485"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8512, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8512, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8512, 8288
                rotation = down
            ]

            port G {
                position = bottom:1
                kind = pe
            }
            [
                position = 8224, 8376
                rotation = left
            ]

            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection22
            connect Tr1.sec_2 b2 as Connection21
            connect c2 Tr1.sec_3 as Connection20
            connect Tr1.n2 G as Connection23
        }
        [
            position = 7480, 9016
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem "Transfo 201" {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr2 {
                L1 = ".00376"
                L2 = "4.54771151295e-06"
                Lm = "200"
                R1 = ".5594175"
                R2 = "0.0006768"
                Rm = "1000000"
                Sn = "2.5e6"
                V1 = "13800"
                V2 = "480"
                current_vals_SI = "[0.35499851344683736, 147.9160472695156]"
                f = "60.0"
                flux_vals_SI = "[35.8660528567491, 45.430333618548865]"
                input = "SI"
            }
            [
                position = 8376, 8184
                size = 126, 256
            ]

            port S1 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8704, 8088
                rotation = down
            ]

            port S2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8696, 8184
                rotation = down
            ]

            port S3 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8720, 8280
                rotation = down
            ]

            port P1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8208, 8088
            ]

            port P2 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8208, 8184
            ]

            port P3 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8208, 8280
            ]

            port N {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8288, 8368
                rotation = left
            ]

            junction Junction1 pe
            [
                position = 8344, 8344
            ]

            connect Tr2.prm_1 P1 as Connection8
            connect Tr2.prm_2 P2 as Connection1
            connect Tr2.prm_3 P3 as Connection3
            connect Tr2.sec_1 S1 as Connection5
            connect Tr2.sec_2 S2 as Connection6
            connect Tr2.sec_3 S3 as Connection7
            connect Tr2.n1 Junction1 as Connection9
            connect Junction1 N as Connection10
            connect Tr2.n2 Junction1 as Connection11
        }
        [
            position = 7424, 8432
            rotation = left
            size = 48, 72
        ]

        component "core/Voltage RMS" Vrms_bus201 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 8064, 7784
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus204 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 7272, 8704
            rotation = right
            size = 64, 32
        ]

        component Subsystem F2_CB5 {
            layout = dynamic
            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 7816, 8168
                    rotation = right
                    size = 64, 256
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8184
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8184
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8184
                        rotation = right
                    ]

                    port A {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port B {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port C {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port G {
                        position = bottom:2
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8240
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 G as Connection9
                    connect Junction2 Junction1 as Connection12
                    connect R1.p_node A as Connection1
                    connect R1.n_node Junction2 as Connection11
                    connect R2.p_node B as Connection6
                    connect R2.n_node Junction1 as Connection8
                    connect R3.p_node C as Connection2
                    connect R3.n_node Junction2 as Connection13
                }
                [
                    position = 7480, 8328
                    size = 80, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7464, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7480, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7496, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection400
                connect B Junction1474 as Connection403
                connect C Junction1475 as Connection406
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1470 as Connection401
                connect Junction1474 Junction1471 as Connection404
                connect Junction1475 Junction1472 as Connection407
                connect Junction1476 Junction1421 as Connection412
                connect Junction1476 VC.n_node as Connection410
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.A Junction1473 as Connection402
                connect res_for_meas.B Junction1474 as Connection405
                connect res_for_meas.C Junction1475 as Connection408
                connect res_for_meas.G Junction1476 as Connection411
            }
            [
                position = 8144, 8296
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_c_function "pf bitwise" {
                        input_terminals = "inherit exp_imp;inherit lag_lead;"
                        input_terminals_dimensions = "inherit;inherit"
                        input_terminals_feedthrough = "[u\'\']"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                        output_terminals = "uint pf_states;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[u\'\']"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8416
                        size = 48, 48
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_c_function bitwise_faults {
                        input_terminals = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                        input_terminals_feedthrough = "[]"
                        input_terminals_show_labels = ""
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                        output_terminals = "uint fault_status;"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[]"
                        output_terminals_show_labels = ""
                    }
                    [
                        position = 9200, 8272
                        size = 48, 128
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8144, 8192
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7320, 7752
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7376, 7648
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7376, 7600
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            input_terminals = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                            output_terminals = "real trip50;real trip51;real trip27;real trip59;"
                            output_terminals_dimensions = "inherit;inherit;inherit;inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            input_terminals = "real Vbus;real Vline;real VRMSLL;"
                            input_terminals_dimensions = "inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                input_terminals = "real phase_bus;real phase_line;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            component gen_c_function "C function1" {
                                input_terminals = "real fbus;inherit fline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                input_terminals = "real Vbus;inherit Vline;"
                                input_terminals_dimensions = "inherit;inherit"
                                input_terminals_feedthrough = "[u\'\']"
                                input_terminals_show_labels = ""
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                                output_terminals_dimensions = "inherit"
                                output_terminals_feedthrough = "[u\'\']"
                                output_terminals_show_labels = ""
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7256, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7376, 8952
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 8872
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection117
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection116
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in1" Junction52 as Connection120
                        connect "Three Phase Phasor1.in_ref" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            input_terminals = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            input_terminals_dimensions = "inherit;inherit;inherit;inherit;inherit;inherit"
                            input_terminals_feedthrough = "[u\'\']"
                            input_terminals_show_labels = ""
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                            output_terminals = "real trip_out;"
                            output_terminals_dimensions = "inherit"
                            output_terminals_feedthrough = "[u\'\']"
                            output_terminals_show_labels = ""
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag Goto34 {
                        value = "F2_CB5_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7800
                        hide_name = True
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto30 {
                        value = "F2_CB5_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7704
                        hide_name = True
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto31 {
                        value = "F2_CB5_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7728
                        hide_name = True
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto33 {
                        value = "F2_CB5_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7776
                        hide_name = True
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto32 {
                        value = "F2_CB5_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7752
                        hide_name = True
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7288, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7296, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7152, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7296, 7704
                    ]

                    junction Junction129 sp
                    [
                        position = 7320, 7728
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in22" Junction110 as Connection240
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction126 as Connection391
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto26 Junction122 as Connection379
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 R50512761.Enable as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "0.5"
                    R51P_pickup2 = "0.5"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF2_CB5"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7928, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                connect B IB.p_node as Connection410
                [
                    breakpoints = 7344, 8024
                ]
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C IC.p_node as Connection411
                [
                    breakpoints = 7360, 8120
                ]
                connect IA.p_node A as Connection412
                [
                    breakpoints = 7328, 7928
                ]
                connect IA.out "Bus Join2.in" as Connection390
                connect IB.n_node b as Connection407
                [
                    breakpoints = 7648, 8024
                ]
                connect a IA.n_node as Connection409
                [
                    breakpoints = 7728, 7928
                ]
                connect c IC.n_node as Connection408
                [
                    breakpoints = 7568, 8120
                ]
            }
            [
                position = 8144, 8104
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8008, 8296
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F2_CB5 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8056, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7904, 8080
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8008, 8112
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            port V {
                position = auto:auto
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7880, 8024
            ]

            connect A Meas1.A as Connection2619
            connect B Meas1.B as Connection2618
            connect Brk.a Meas2.A as Connection2611
            connect Brk.c Meas2.C as Connection2613
            connect Brk.b Meas2.B as Connection2612
            connect C Meas1.C as Connection2617
            connect Meas1.a Brk.A as Connection2614
            connect Meas1.b Brk.B as Connection2615
            connect Meas1.c Brk.C as Connection2616
            connect Meas2.a a as Connection2610
            connect Meas2.b b as Connection2609
            connect Meas2.c c as Connection2608
            connect F2_CB5.out Brk.control as Connection2621
            connect Termination3.in Meas2.V as Connection2622
            connect Termination5.in Meas1.I as Connection2623
            connect Termination4.in V as Connection2624
        }
        [
            position = 7424, 8536
            scale = 1, -1
            size = 80, 48
        ]

        component Subsystem CIL_F2_Critical3 {
            layout = dynamic
            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "1000e3"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = "0.9"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 7296, 8392
            rotation = right
            scale = -1, 1
            size = 48, 72
        ]

        component "core/Voltage RMS" Vrms_bus202 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 7552, 8328
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus205 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 7392, 9224
            rotation = right
            size = 64, 32
        ]

        component Subsystem "3ph Fault 204" {
            layout = dynamic
            component pas_resistor Rb {
                resistance = "R"
            }
            [
                position = 8192, 8232
                rotation = right
            ]

            component "core/Triple Pole Single Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8192, 8120
                rotation = right
                size = 64, 256
            ]

            component src_scada_input ctrl {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8400, 8120
                scale = -1, 1
            ]

            component pas_resistor Ra {
                resistance = "R"
            }
            [
                position = 8096, 8232
                rotation = right
            ]

            component pas_resistor Rc {
                resistance = "R"
            }
            [
                position = 8288, 8232
                rotation = right
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 8096, 8024
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 8192, 8024
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 8288, 8024
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 8192, 8304
            ]

            connect B S1.b_in as Connection2
            connect Junction1 Rc.n_node as Connection9
            connect Ra.n_node Junction1 as Connection8
            connect Ra.p_node S1.c_out as Connection6
            connect Rb.n_node Junction1 as Connection10
            connect Rc.p_node S1.a_out as Connection4
            connect S1.c_in A as Connection1
            connect S1.a_in C as Connection3
            connect S1.b_out Rb.p_node as Connection5
            connect ctrl.out S1.ctrl_in as Connection11

            R = "1"

            mask {
                description = "Three-Phase Fault - Ideal Contactor"

                R {
                    label = "Fault resistance"
                    widget = edit
                    type = generic
                    default_value = "100"
                    unit = "ohms"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 7096, 8736
            size = 64, 48
        ]

        component src_scada_input Pref_form {
            execution_rate = "Ts_gform"
            max = "2.1e6"
            min = "-2.1e6"
            unit = "W"
        }
        [
            position = 7576, 8064
            scale = -1, -1
        ]

        component src_scada_input Qref_form {
            execution_rate = "Ts_gform"
            max = "2.1e6"
            min = "-2.1e6"
            unit = "Vars"
        }
        [
            position = 7576, 8000
            scale = -1, -1
        ]

        component sys_hil_marker "Device Marker4" {
            code_section = "External Memory"
            data_section = "External Memory"
            hil_device_id = "1"
            hw_configuration_id = "2"
            simulation_time_step = "4e-6"
            sys_cpu_optimization = "no optimization"
            sys_sp_rate_1 = "0.0001"
        }
        [
            position = 8080, 7640
        ]

        component sys_hil_marker "Device Marker1" {
            code_section = "External Memory"
            data_section = "External Memory"
            hw_configuration_id = "2"
            simulation_time_step = "4e-6"
            sys_sp_rate_1 = "0.0001"
        }
        [
            position = 8808, 6896
        ]

        component Subsystem "Grid forming inverter (averaged)" {
            layout = dynamic
            component pas_capacitor Cc1 {
                capacitance = "C_s"
            }
            [
                position = 8176, 8416
                rotation = right
            ]

            component "core/Signal Controlled Voltage Source" Vc_inv {
            }
            [
                position = 7168, 8136
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rt0a1 {
                resistance = "R_s"
            }
            [
                position = 8016, 8264
                rotation = left
                scale = -1, 1
            ]

            component pas_resistor Ra1 {
                resistance = "R_o"
            }
            [
                position = 8776, 7904
            ]

            component "core/Current Measurement" Ia1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 7904
                size = 64, 32
            ]

            component pas_inductor L0b1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8000
                rotation = down
            ]

            component "core/Voltage Measurement" Vc2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7856, 8480
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_capacitor Cb1 {
                capacitance = "C_s"
            }
            [
                position = 8096, 8416
                rotation = right
            ]

            component Subsystem Controller {
                layout = dynamic
                component gen_product Product13 {
                }
                [
                    position = 7368, 8464
                    scale = -1, 1
                ]

                component gen_gain Gain4 {
                    gain = "1/T_m"
                }
                [
                    position = 6992, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain15 {
                    gain = "S"
                }
                [
                    position = 7136, 8168
                    rotation = right
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe Q1 {
                }
                [
                    position = 7072, 8488
                    rotation = down
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8120
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain6 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7856, 7816
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_integrator Integrator2 {
                }
                [
                    position = 6896, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 7192, 8224
                    scale = -1, 1
                ]

                component Subsystem Current_abc_to_dq2 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Eq2 {
                        label = "Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Ed2 {
                        label = "Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Eb2 {
                        label = "Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Ec2 {
                        label = "Ec2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Ea2 {
                        label = "Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    connect "abc to dq1.q_axis" Eq2 as Connection6
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect Ea2 "abc to dq1.va" as Connection1
                    connect Eb2 "abc to dq1.vb" as Connection2
                    connect Ec2 "abc to dq1.vc" as Connection3
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" Ed2 as Connection5
                }
                [
                    position = 7936, 8184
                    size = 80, 168
                ]

                component gen_gain Gain8 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7856, 8248
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain1 {
                    gain = "1/(2*np.pi)"
                }
                [
                    position = 8336, 8312
                    scale = -1, 1
                ]

                component gen_gain Gain13 {
                    gain = "1/T_m"
                }
                [
                    position = 7000, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_product Product12 {
                }
                [
                    position = 7368, 8376
                    scale = -1, 1
                ]

                component gen_gain Gain10 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8520
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain14 {
                    gain = "S"
                }
                [
                    position = 7136, 8456
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7200, 7952
                    scale = -1, 1
                ]

                component gen_gain Gain9 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7856, 8392
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe E_d1 {
                    addr = "8965"
                }
                [
                    position = 7752, 8336
                    scale = -1, 1
                ]

                component gen_integrator Integrator3 {
                }
                [
                    position = 6904, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe E_dREF1 {
                }
                [
                    position = 7568, 7848
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 7912, 8776
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 7192, 8368
                    scale = -1, 1
                ]

                component gen_product Product10 {
                }
                [
                    position = 7368, 8296
                    scale = -1, 1
                ]

                component Subsystem Current_abc_to_dq {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Xi_d2 {
                        label = "Xi_d2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Xi_c2 {
                        label = "Xi_c2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Xi_a2 {
                        label = "Xi_a2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port Xi_q2 {
                        label = "Xi_q2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Xi_b2 {
                        label = "Xi_b2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    connect Xi_c2 "abc to dq1.vc" as Connection3
                    connect "abc to dq1.q_axis" Xi_q2 as Connection6
                    connect "abc to dq1.d_axis" Xi_d2 as Connection5
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect Xi_a2 "abc to dq1.va" as Connection1
                    connect Xi_b2 "abc to dq1.vb" as Connection2
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                }
                [
                    position = 7936, 7880
                    size = 80, 168
                ]

                component gen_gain Gain7 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7856, 7944
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain12 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8744
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_product Product111 {
                }
                [
                    position = 7368, 8216
                    scale = -1, 1
                ]

                component Subsystem "Frequency droop" {
                    layout = dynamic
                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 8024, 8248
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "+++"
                    }
                    [
                        position = 7880, 8304
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain3 {
                        gain = "1/D_f"
                    }
                    [
                        position = 7952, 8248
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_scada_input wref {
                        def_value = "1"
                        execution_rate = "Ts"
                        max = "1.3"
                        min = "0.7"
                        unit = "pu"
                    }
                    [
                        position = 8016, 8304
                        scale = -1, 1
                    ]

                    component gen_gain Gain4 {
                        gain = "w_0"
                    }
                    [
                        position = 7952, 8304
                        hide_name = True
                        scale = -1, 1
                    ]

                    component sys_signal_switch "Signal switch4" {
                        criterion = "ctrl != threshold"
                        threshold = "1"
                    }
                    [
                        position = 7960, 8376
                        hide_name = True
                        scale = -1, -1
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 8104, 8392
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe P_signal {
                    }
                    [
                        position = 7960, 8448
                    ]

                    port w1 {
                        label = "w1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7688, 8304
                        scale = -1, 1
                    ]

                    port U_P {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8112, 8224
                        scale = -1, 1
                    ]

                    tag From17 {
                        value = "P1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8112, 8272
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag w_bus3 {
                        value = "P_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8120, 8360
                        hide_name = True
                        scale = -1, -1
                    ]

                    tag MT_ON4 {
                        value = "INV_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8104, 8424
                        hide_name = True
                        scale = -1, 1
                    ]

                    junction Junction1 sp
                    [
                        position = 7920, 8376
                    ]

                    connect U_P Sum1.in as Connection368
                    connect From17 Sum1.in1 as Connection316
                    connect Gain3.out Sum4.in as Connection391
                    connect Gain3.in Sum1.out as Connection392
                    connect wref.out Gain4.in as Connection404
                    connect Gain4.out Sum4.in1 as Connection418
                    connect Constant3.out "Signal switch4.in" as Connection415
                    connect "Signal switch4.in2" MT_ON4 as Connection438
                    connect w1 Sum4.out as Connection440
                    connect w_bus3 "Signal switch4.in1" as Connection442
                    connect "Signal switch4.out" Junction1 as Connection443
                    connect Junction1 Sum4.in2 as Connection444
                    connect P_signal.in Junction1 as Connection445
                }
                [
                    position = 8296, 8184
                    size = 96, 120
                ]

                component gen_sum Sum4 {
                    signs = "+-"
                }
                [
                    position = 7072, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain11 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8616
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe E_qREF1 {
                }
                [
                    position = 7568, 8056
                ]

                component gen_probe E_q1 {
                }
                [
                    position = 7752, 8192
                    scale = -1, 1
                ]

                component Subsystem "Voltage droop" {
                    layout = dynamic
                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 8064, 8264
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain3 {
                        gain = "1/D_V"
                    }
                    [
                        position = 7984, 8264
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "3"
                    }
                    [
                        position = 7872, 8312
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_scada_input Vref {
                        def_value = "1"
                        execution_rate = "Ts"
                        max = "5"
                        min = "0.8"
                        unit = "pu"
                    }
                    [
                        position = 7992, 8320
                        scale = -1, 1
                    ]

                    component sys_signal_switch "Signal switch1" {
                        criterion = "ctrl != threshold"
                        threshold = "1"
                    }
                    [
                        position = 7984, 8416
                        hide_name = True
                        scale = -1, -1
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 8096, 8432
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_probe Q_signal {
                    }
                    [
                        position = 7984, 8496
                    ]

                    port E_magnitude {
                        label = "E_magnitude1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7632, 8312
                        scale = -1, 1
                    ]

                    port Q_ref1 {
                        label = "Q_ref1"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8208, 8240
                        scale = -1, 1
                    ]

                    tag From18 {
                        value = "Q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8208, 8288
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag w_bus2 {
                        value = "Q_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8096, 8400
                        hide_name = True
                        scale = -1, -1
                    ]

                    tag MT_ON1 {
                        value = "INV_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8096, 8464
                        hide_name = True
                        scale = -1, 1
                    ]

                    junction Junction1 sp
                    [
                        position = 7912, 8416
                    ]

                    connect From18 Sum2.in1 as Connection323
                    connect Gain3.in Sum2.out as Connection325
                    connect Gain3.out Sum4.in as Connection362
                    connect Vref.out Sum4.in1 as Connection368
                    connect Constant2.out "Signal switch1.in" as Connection399
                    connect MT_ON1 "Signal switch1.in2" as Connection429
                    connect "Signal switch1.in1" w_bus2 as Connection430
                    connect Q_ref1 Sum2.in as Connection432
                    connect E_magnitude Sum4.out as Connection434
                    connect "Signal switch1.out" Junction1 as Connection435
                    connect Junction1 Sum4.in2 as Connection436
                    connect Q_signal.in Junction1 as Connection437
                }
                [
                    position = 8296, 7944
                    size = 120, 96
                ]

                component Subsystem Current_abc_to_dq3 {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Ec2" "abc to dq1.vc" as Connection3
                }
                [
                    position = 7936, 8456
                    size = 80, 168
                ]

                component gen_probe Qpu {
                }
                [
                    position = 7072, 8544
                    rotation = down
                ]

                component gen_probe f1 {
                }
                [
                    position = 8248, 8312
                    rotation = down
                ]

                component Subsystem Current_abc_to_dq4 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Ec2" "abc to dq1.vc" as Connection3
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                }
                [
                    position = 7480, 8680
                    size = 80, 168
                ]

                component gen_sum Sum5 {
                    signs = "+-"
                }
                [
                    position = 7080, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe P1 {
                }
                [
                    position = 7080, 8136
                    rotation = down
                ]

                component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                    layout = dynamic
                    component Subsystem "Outer voltage control loop" {
                        layout = dynamic
                        component gen_sum Sum12 {
                            signs = "++"
                        }
                        [
                            position = 7616, 8512
                            scale = -1, 1
                        ]

                        component gen_gain Gain4 {
                            gain = "Cs"
                        }
                        [
                            position = 8240, 8352
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8168
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8064, 8768
                            scale = -1, -1
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8272, 8848
                            scale = -1, 1
                        ]

                        component gen_product Product8 {
                        }
                        [
                            position = 8144, 8680
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 7960, 8768
                            scale = -1, 1
                        ]

                        component gen_sum Sum10 {
                            signs = "+-"
                        }
                        [
                            position = 7952, 8248
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8160, 8808
                            scale = -1, 1
                        ]

                        component gen_product Product6 {
                        }
                        [
                            position = 8152, 8320
                            scale = -1, 1
                        ]

                        component gen_sum Sum11 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8504
                            scale = -1, 1
                        ]

                        component gen_product Product5 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8256
                            scale = -1, 1
                        ]

                        component gen_product Product7 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8592
                            scale = -1, 1
                        ]

                        component gen_probe ED_error {
                        }
                        [
                            position = 8376, 8104
                        ]

                        component gen_gain Gain6 {
                            gain = "Cs"
                        }
                        [
                            position = 8216, 8712
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller4" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8504
                            scale = -1, 1
                        ]

                        component gen_sum Sum13 {
                            signs = "++"
                        }
                        [
                            position = 7936, 8584
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "++"
                        }
                        [
                            position = 7632, 8176
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller3" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8168
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8152, 8752
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_probe EQ_error {
                        }
                        [
                            position = 8376, 8440
                        ]

                        component gen_probe ED_ctrl {
                        }
                        [
                            position = 8208, 8112
                        ]

                        component gen_probe EQ_ctrl {
                        }
                        [
                            position = 8208, 8456
                        ]

                        component gen_gain Gain7 {
                            gain = "1/w_0"
                        }
                        [
                            position = 8240, 8280
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_gain Gain8 {
                            gain = "1/w_0"
                        }
                        [
                            position = 8216, 8640
                            hide_name = True
                            scale = -1, 1
                        ]

                        port Xi_rd1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8176
                            scale = -1, 1
                        ]

                        port Xi_rq1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8512
                            scale = -1, 1
                        ]

                        port "^E_q_ref" {
                            label = "^E_q_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8464
                            scale = -1, 1
                        ]

                        port "^E_d_ref" {
                            label = "^E_d_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8128
                            scale = -1, 1
                        ]

                        port "^E_q" {
                            label = "^E_q1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8512
                            scale = -1, 1
                        ]

                        port "^E_d" {
                            label = "^E_d1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8176
                            scale = -1, 1
                        ]

                        tag From33 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8336, 8280
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From35 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8280, 8640
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From32 {
                            value = "Id1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8424, 8224
                            scale = -1, 1
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8320, 8784
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From36 {
                            value = "Iq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8376, 8560
                            scale = -1, 1
                        ]

                        junction Junction170 sp
                        [
                            position = 8216, 8784
                        ]

                        junction Junction159 sp
                        [
                            position = 8480, 8176
                        ]

                        junction Junction158 sp
                        [
                            position = 8448, 8512
                        ]

                        junction Junction153 sp
                        [
                            position = 7872, 8600
                        ]

                        junction Junction172 sp
                        [
                            position = 8336, 8168
                        ]

                        junction Junction173 sp
                        [
                            position = 8336, 8504
                        ]

                        junction Junction174 sp
                        [
                            position = 8136, 8168
                        ]

                        junction Junction175 sp
                        [
                            position = 8168, 8504
                        ]

                        connect "^E_d_ref" Sum8.in as Connection215
                        connect Gain4.in Junction158 as Connection117
                        connect Comparator1.in1 Junction170 as Connection256
                        connect Product5.in1 Junction153 as Connection94
                        connect Sum11.in "^E_q_ref" as Connection217
                        connect Junction170 "Signal switch1.in" as Connection257
                        connect Sum13.in1 Product8.out as Connection233
                        connect From32 Sum10.in as Connection259
                        connect Gain6.out Product8.in1 as Connection84
                        connect Xi_rd1 Sum9.out as Connection104
                        connect Sum8.in1 Junction159 as Connection118
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Gain6.in Junction159 as Connection120
                        connect "^E_d" Junction159 as Connection216
                        connect Sum10.in1 Product6.out as Connection67
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect From27 Junction170 as Connection258
                        connect "^E_q" Junction158 as Connection218
                        connect Gain5.out Junction153 as Connection92
                        connect From36 Sum13.in as Connection260
                        connect Product5.in Sum10.out as Connection71
                        connect Sum11.in1 Junction158 as Connection115
                        connect Xi_rq1 Sum12.out as Connection105
                        connect Sum9.in1 Product5.out as Connection243
                        connect Junction153 Product7.in1 as Connection93
                        connect Sum12.in1 Product7.out as Connection244
                        connect Comparator1.out "Signal switch1.in2" as Connection2
                        connect Limit_zero.out Comparator1.in2 as Connection19
                        connect Gain4.out Product6.in1 as Connection69
                        connect Product7.in Sum13.out as Connection89
                        connect "PID controller3.in" Junction172 as Connection270
                        connect Junction172 Sum8.out as Connection271
                        [
                            breakpoints = 8336, 8168
                        ]
                        connect ED_error.in Junction172 as Connection272
                        connect Sum11.out Junction173 as Connection274
                        connect Junction173 "PID controller4.in" as Connection275
                        [
                            breakpoints = 8336, 8504
                        ]
                        connect EQ_error.in Junction173 as Connection276
                        connect Sum9.in Junction174 as Connection277
                        connect Junction174 "PID controller3.out" as Connection278
                        [
                            breakpoints = 8240, 8168
                        ]
                        connect ED_ctrl.in Junction174 as Connection279
                        connect Sum12.in Junction175 as Connection280
                        connect Junction175 "PID controller4.out" as Connection281
                        [
                            breakpoints = 8232, 8504
                        ]
                        connect EQ_ctrl.in Junction175 as Connection282
                        connect From33 Gain7.in as Connection283
                        connect Gain7.out Product6.in as Connection284
                        connect From35 Gain8.in as Connection285
                        connect Gain8.out Product8.in as Connection286
                    }
                    [
                        position = 8864, 8400
                        scale = -1, 1
                        size = 152, 168
                    ]

                    component gen_gain Gain5 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8464, 8392
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_sum Sum7 {
                    }
                    [
                        position = 9128, 8552
                        scale = -1, 1
                    ]

                    component gen_sum Sum10 {
                        signs = "+-"
                    }
                    [
                        position = 9368, 8496
                        scale = -1, 1
                    ]

                    component gen_sum Sum11 {
                        signs = "+-"
                    }
                    [
                        position = 9376, 8192
                        scale = -1, 1
                    ]

                    component gen_gain Gain6 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8496, 8456
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain3 {
                        gain = "R_s/Z_DQ"
                    }
                    [
                        position = 9272, 8496
                        scale = -1, 1
                    ]

                    component gen_sum Sum8 {
                    }
                    [
                        position = 9160, 8232
                        scale = -1, 1
                    ]

                    component Subsystem "dq to abc" {
                        layout = dynamic
                        component src_constant o_ref {
                            execution_rate = "Ts"
                            value = "[0]"
                        }
                        [
                            position = 7520, 8200
                        ]

                        component "core/dq to abc" "dq to abc1" {
                            execution_rate = "inherit"
                        }
                        [
                            position = 7744, 8184
                            size = 48, 80
                        ]

                        port c {
                            label = "c"
                            position = left:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8216
                        ]

                        port d {
                            label = "Ud1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 8136
                        ]

                        port alpha {
                            label = "alpha1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7600, 8232
                        ]

                        port a {
                            label = "a"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8152
                        ]

                        port q {
                            label = "Uq1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8168
                        ]

                        port b {
                            label = "b"
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8184
                        ]

                        connect q "dq to abc1.q_input" as Connection6
                        connect d "dq to abc1.d_input" as Connection3
                        connect "dq to abc1.phase_b" b as Connection4
                        connect c "dq to abc1.phase_c" as Connection2
                        connect a "dq to abc1.phase_a" as Connection1
                        connect o_ref.out "dq to abc1.zero_input" as Connection5
                        connect alpha "dq to abc1.wt" as Connection7
                    }
                    [
                        position = 8344, 8456
                        size = 80, 168
                    ]

                    component gen_gain Gain4 {
                        gain = "R_s/Z_DQ"
                    }
                    [
                        position = 9280, 8192
                        scale = -1, 1
                    ]

                    component Subsystem "inner current control loop" {
                        layout = dynamic
                        component gen_probe XiD_ctrl {
                        }
                        [
                            position = 8208, 7952
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8128, 8432
                            scale = -1, -1
                        ]

                        component gen_pid_controller "PID controller2" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8208, 8224
                            scale = -1, 1
                        ]

                        component gen_gain Gain7 {
                            gain = "Li"
                        }
                        [
                            position = 8272, 8368
                            scale = -1, 1
                        ]

                        component gen_sum Sum3 {
                        }
                        [
                            position = 7760, 8048
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8216, 8416
                            scale = -1, 1
                        ]

                        component gen_sum Sum5 {
                            signs = "+-"
                        }
                        [
                            position = 8024, 8104
                            scale = -1, 1
                        ]

                        component gen_sum Sum7 {
                        }
                        [
                            position = 7760, 8232
                            scale = -1, 1
                        ]

                        component gen_sum Sum6 {
                        }
                        [
                            position = 8032, 8272
                            scale = -1, 1
                        ]

                        component gen_product Product3 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8112
                            scale = -1, 1
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8168, 8336
                            scale = -1, 1
                        ]

                        component gen_gain Gain6 {
                            gain = "Li"
                        }
                        [
                            position = 8256, 8176
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8328, 8040
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "+-"
                        }
                        [
                            position = 8320, 8224
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 8024, 8432
                            scale = -1, 1
                        ]

                        component gen_probe XiQ_ctrl {
                        }
                        [
                            position = 8288, 8264
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8336, 8512
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8200, 8040
                            scale = -1, 1
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8168, 8144
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8224, 8472
                            scale = -1, 1
                        ]

                        component gen_product Product4 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8280
                            scale = -1, 1
                        ]

                        component gen_probe XiD_error {
                        }
                        [
                            position = 8440, 7960
                        ]

                        component gen_probe XiQ_error {
                        }
                        [
                            position = 8512, 8184
                        ]

                        component gen_gain Gain8 {
                            gain = "1/w_0"
                        }
                        [
                            position = 8264, 8112
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_gain Gain9 {
                            gain = "1/w_0"
                        }
                        [
                            position = 8264, 8312
                            hide_name = True
                            scale = -1, 1
                        ]

                        port Uq1 {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8232
                            rotation = down
                        ]

                        port Xi_q_meas1 {
                            label = "Xi_q_meas1"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8456, 8264
                            rotation = down
                        ]

                        port Xi_q_ref1 {
                            label = "Xi_q_ref1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8456, 8216
                            rotation = down
                        ]

                        port Ud1 {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8048
                            rotation = down
                        ]

                        port Xi_d_ref1 {
                            label = "Xi_d_ref1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8032
                            rotation = down
                        ]

                        port Xi_d_meas1 {
                            label = "Xi_d_meas1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8112
                            rotation = down
                        ]

                        tag From23 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8344, 8112
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From24 {
                            value = "Ed1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 8056
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From26 {
                            value = "Eq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8128, 8264
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8384, 8448
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From25 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8360, 8312
                            scale = -1, 1
                            size = 60, 20
                        ]

                        junction Junction171 sp
                        [
                            position = 7944, 8288
                        ]

                        junction Junction177 sp
                        [
                            position = 8400, 8112
                        ]

                        junction Junction179 sp
                        [
                            position = 8160, 8224
                        ]

                        junction Junction178 sp
                        [
                            position = 8160, 8040
                        ]

                        junction Junction172 sp
                        [
                            position = 8280, 8448
                        ]

                        junction Junction176 sp
                        [
                            position = 8400, 8232
                        ]

                        junction Junction180 sp
                        [
                            position = 8288, 8224
                        ]

                        junction Junction181 sp
                        [
                            position = 8288, 8040
                        ]

                        connect Product4.out Sum7.in1 as Connection19
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Sum6.out Product4.in as Connection27
                        connect From26 Sum6.in as Connection3
                        connect Sum5.in1 Product1.out as Connection24
                        connect Gain6.out Product1.in1 as Connection289
                        connect Sum5.out Product3.in as Connection25
                        connect Junction177 Gain7.in as Connection300
                        connect Junction172 Comparator1.in1 as Connection267
                        connect Gain7.out Product2.in1 as Connection293
                        connect Xi_q_meas1 Junction176 as Connection290
                        connect Junction178 Sum3.in as Connection304
                        connect XiQ_ctrl.in Junction179 as Connection309
                        connect Sum7.in Junction179 as Connection307
                        connect Comparator1.out "Signal switch1.in2" as Connection57
                        connect Sum6.in1 Product2.out as Connection26
                        connect From27 Junction172 as Connection268
                        connect Gain5.out Junction171 as Connection254
                        connect Junction176 Sum9.in1 as Connection291
                        connect Sum5.in From24 as Connection23
                        connect Junction171 Product3.in1 as Connection253
                        connect Sum8.in1 Junction177 as Connection301
                        connect "PID controller1.out" Junction178 as Connection303
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect Uq1 Sum7.out as Connection264
                        connect Product3.out Sum3.in1 as Connection17
                        connect XiD_ctrl.in Junction178 as Connection305
                        connect "Signal switch1.in" Junction172 as Connection266
                        connect Sum8.in Xi_d_ref1 as Connection297
                        connect Sum9.in Xi_q_ref1 as Connection283
                        connect Product4.in1 Junction171 as Connection252
                        connect Limit_zero.out Comparator1.in2 as Connection251
                        connect Sum3.out Ud1 as Connection263
                        connect Gain6.in Junction176 as Connection292
                        connect Xi_d_meas1 Junction177 as Connection299
                        connect Junction179 "PID controller2.out" as Connection308
                        connect "PID controller2.in" Junction180 as Connection310
                        [
                            breakpoints = 8240, 8224
                        ]
                        connect Junction180 Sum9.out as Connection311
                        connect XiQ_error.in Junction180 as Connection312
                        connect Sum8.out Junction181 as Connection313
                        connect Junction181 "PID controller1.in" as Connection314
                        [
                            breakpoints = 8240, 8040
                        ]
                        connect XiD_error.in Junction181 as Connection315
                        connect From23 Gain8.in as Connection316
                        connect Gain8.out Product1.in as Connection317
                        connect From25 Gain9.in as Connection318
                        connect Gain9.out Product2.in as Connection319
                    }
                    [
                        position = 8624, 8424
                        size = 96, 184
                    ]

                    port Ua1 {
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8392
                        rotation = down
                    ]

                    port E_q_ref1 {
                        label = "E_q_ref1"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9424, 8304
                        rotation = down
                    ]

                    port Uc1 {
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8520
                        rotation = down
                    ]

                    port E_d_ref1 {
                        label = "E_d_ref1"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9408, 8632
                        rotation = down
                    ]

                    port Ub1 {
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8456
                        rotation = down
                    ]

                    tag From36 {
                        value = "E_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8416
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From29 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8400
                        scale = -1, 1
                    ]

                    tag From40 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8232
                        rotation = down
                    ]

                    tag From38 {
                        value = "Id1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8448
                        rotation = down
                        size = 56, 20
                    ]

                    tag From1 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 8560
                        scale = -1, 1
                        size = 63, 25
                    ]

                    tag From30 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8496
                        scale = -1, 1
                    ]

                    tag From31 {
                        value = "Iq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8152
                        rotation = down
                    ]

                    tag From39 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8544
                        rotation = down
                    ]

                    tag From37 {
                        value = "E_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8464
                        scale = -1, 1
                        size = 60, 20
                    ]

                    connect Sum11.out Gain4.in as Connection290
                    connect From31 Sum11.in as Connection293
                    connect "dq to abc.alpha" From1 as Connection229
                    [
                        breakpoints = 8400, 8560; 8544, 8560
                    ]
                    connect From29 "inner current control loop.Xi_d_meas1" as Connection253
                    connect Sum7.in1 E_d_ref1 as Connection324
                    connect From36 "Outer voltage control loop.^E_q" as Connection322
                    connect "inner current control loop.Xi_q_ref1" "Outer voltage control loop.Xi_rq1" as Connection327
                    connect From30 "inner current control loop.Xi_q_meas1" as Connection257
                    connect Sum10.out Gain3.in as Connection287
                    connect Sum8.out "Outer voltage control loop.^E_q_ref" as Connection347
                    connect "dq to abc.d" Gain5.out as Connection337
                    connect "dq to abc.q" Gain6.out as Connection339
                    connect "dq to abc.c" Uc1 as Connection284
                    connect "dq to abc.b" Ub1 as Connection282
                    connect Gain6.in "inner current control loop.Uq1" as Connection346
                    [
                        breakpoints = 8544, 8496
                    ]
                    connect From40 Sum11.in1 as Connection294
                    connect From39 Sum10.in1 as Connection286
                    connect "Outer voltage control loop.^E_d" From37 as Connection301
                    connect "Outer voltage control loop.^E_d_ref" Sum7.out as Connection317
                    connect E_q_ref1 Sum8.in1 as Connection344
                    connect "inner current control loop.Xi_d_ref1" "Outer voltage control loop.Xi_rd1" as Connection326
                    connect "dq to abc.a" Ua1 as Connection283
                    connect Gain5.in "inner current control loop.Ud1" as Connection345
                    [
                        breakpoints = 8544, 8352
                    ]
                    connect Gain3.out Sum7.in as Connection289
                    connect Gain4.out Sum8.in as Connection343
                    connect From38 Sum10.in as Connection285
                }
                [
                    position = 7432, 7952
                    size = 128, 152
                ]

                component gen_probe Ppu {
                }
                [
                    position = 7080, 8080
                    rotation = down
                ]

                component gen_gain Gain16 {
                    gain = "S/S_i"
                }
                [
                    position = 7168, 8120
                    rotation = right
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain17 {
                    gain = "S/S_i"
                }
                [
                    position = 7168, 8496
                    rotation = left
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain18 {
                    gain = "1/S"
                }
                [
                    position = 8448, 7912
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain19 {
                    gain = "1/S"
                }
                [
                    position = 8456, 8144
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_c_function integrator {
                    global_variables = "real var;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    input_terminals_dimensions = "inherit"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'in\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'out\', True)]"
                    parameters = "real Ts;"
                    update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                }
                [
                    position = 8496, 8536
                    scale = -1, 1
                    size = 80, 48
                ]

                component gen_c_function "confine phase" {
                    global_variables = "real x;real floor_in;"
                    init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                    input_terminals_dimensions = "inherit"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'in\', True)]"
                    output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'out\', True)]"
                }
                [
                    position = 8360, 8536
                    scale = -1, 1
                    size = 56, 48
                ]

                component gen_rate_limiter "Rate Limiter1" {
                    falling_limit = "-100"
                    rising_limit = "100"
                }
                [
                    position = 8512, 7912
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_rate_limiter "Rate Limiter2" {
                    falling_limit = "-100"
                    rising_limit = "100"
                }
                [
                    position = 8520, 8144
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe E_mag {
                }
                [
                    position = 8512, 8032
                    rotation = down
                    scale = -1, 1
                ]

                port U_P {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8600, 8144
                    scale = -1, 1
                ]

                port U_Q {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8592, 7912
                    scale = -1, 1
                ]

                tag Goto29 {
                    value = "E_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From6 {
                    value = "Xi_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7856
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto19 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8616
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto37 {
                    value = "P1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8232
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From24 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8656
                    scale = -1, 1
                ]

                tag Goto47 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8512, 7976
                    hide_name = True
                ]

                tag From28 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7904
                    scale = -1, 1
                ]

                tag From42 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8008
                    scale = -1, 1
                ]

                tag Goto22 {
                    value = "Xi_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 7816
                    scale = -1, 1
                ]

                tag From37 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7632, 8256
                    scale = -1, 1
                ]

                tag From9 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8160
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From7 {
                    value = "Xi_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7944
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto28 {
                    value = "E_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto23 {
                    value = "Xi_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 7944
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From34 {
                    value = "E_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8048, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From36 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7632, 8208
                    scale = -1, 1
                ]

                tag From8 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From26 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8704
                    scale = -1, 1
                ]

                tag Goto17 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8680, 8224
                    size = 60, 20
                ]

                tag From5 {
                    value = "Xi_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7816
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto20 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8744
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From23 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8616
                    scale = -1, 1
                ]

                tag From20 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 7896
                    scale = -1, 1
                    size = 67, 20
                ]

                tag From40 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8640, 8536
                    scale = -1, 1
                ]

                tag Goto45 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8648
                    scale = -1, 1
                    size = 64, 20
                ]

                tag Goto2 {
                    value = "modulator1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7096, 7952
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From10 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From33 {
                    value = "E_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8048, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From25 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8744
                    scale = -1, 1
                ]

                tag From27 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8208
                    scale = -1, 1
                ]

                tag From43 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 8648
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto36 {
                    value = "Q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8376
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From32 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8048, 8480
                    scale = -1, 1
                ]

                tag Goto21 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8248, 8536
                    scale = -1, 1
                ]

                tag Goto46 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7784, 8776
                    scale = -1, 1
                ]

                tag From35 {
                    value = "E_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8048, 8432
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From38 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7632, 8472
                    scale = -1, 1
                ]

                tag From39 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7632, 8400
                    scale = -1, 1
                ]

                tag Goto48 {
                    value = "w_e"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 8312
                    hide_name = True
                    size = 60, 20
                ]

                junction Junction231 sp
                [
                    position = 7520, 7896
                ]

                junction Junction258 sp
                [
                    position = 7520, 8008
                ]

                junction Junction267 sp
                [
                    position = 7136, 8368
                ]

                junction Junction268 sp
                [
                    position = 7136, 8224
                ]

                junction Junction269 sp
                [
                    position = 7816, 8392
                ]

                junction Junction158 sp
                [
                    position = 7816, 8248
                ]

                junction Junction274 sp
                [
                    position = 6856, 8376
                ]

                junction Junction275 sp
                [
                    position = 6856, 8232
                ]

                junction Junction276 sp
                [
                    position = 7152, 8224
                ]

                junction Junction277 sp
                [
                    position = 7152, 8368
                ]

                junction Junction278 sp
                [
                    position = 8416, 7976
                ]

                junction Junction279 sp
                [
                    position = 7520, 8256
                ]

                junction Junction280 sp
                [
                    position = 7472, 8208
                ]

                junction Junction281 sp
                [
                    position = 7520, 8400
                ]

                junction Junction282 sp
                [
                    position = 7472, 8472
                ]

                junction Junction283 sp
                [
                    position = 8512, 8224
                ]

                junction Junction284 sp
                [
                    position = 8512, 8312
                ]

                connect From10 Current_abc_to_dq2.Ec2 as Connection234
                connect From25 "Current_abc_to_dq4.^Ec2" as Connection699
                connect Gain10.in "Current_abc_to_dq3.^Eq2" as Connection875
                connect E_d1.in Junction269 as Connection965
                connect Junction231 From20 as Connection728
                connect E_q1.in Junction158 as Connection718
                connect Current_abc_to_dq4.wt2 From26 as Connection702
                connect Gain5.out Goto4 as Connection959
                [
                    breakpoints = 7816, 8120
                ]
                connect Sum4.in Junction268 as Connection955
                connect Current_abc_to_dq2.Ed2 Gain5.in as Connection870
                connect Gain11.out Goto19 as Connection877
                connect Current_abc_to_dq.Xi_d2 Gain6.in as Connection864
                connect Gain13.out Integrator3.in as Connection925
                connect From7 Current_abc_to_dq.Xi_c2 as Connection40
                connect Junction158 Gain8.out as Connection868
                connect Sum1.in1 Product13.out as Connection719
                connect From6 Current_abc_to_dq.Xi_b2 as Connection39
                connect Junction231 "Outer Voltage Loop + Inner Current Loop.E_d_ref1" as Connection736
                connect "Current_abc_to_dq4.^Ea2" From23 as Connection701
                connect From9 Current_abc_to_dq2.Eb2 as Connection235
                connect "Outer Voltage Loop + Inner Current Loop.Ua1" "Bus Join1.in" as Connection839
                connect Goto23 Gain7.out as Connection962
                connect Product12.out Sum2.in1 as Connection721
                connect Sum5.in Junction267 as Connection952
                connect f1.in Gain1.out as Connection318
                connect E_dREF1.in Junction231 as Connection729
                [
                    breakpoints = 7520, 7848; 7520, 7896
                ]
                connect E_qREF1.in Junction258 as Connection861
                connect Product111.out Sum1.in as Connection684
                connect "Current_abc_to_dq4.^Eb2" From24 as Connection700
                connect "Outer Voltage Loop + Inner Current Loop.Uc1" "Bus Join1.in2" as Connection840
                connect P1.in Gain15.out as Connection966
                connect Product10.out Sum2.in as Connection672
                connect Gain15.in Junction268 as Connection967
                connect Sum5.out Gain13.in as Connection926
                connect Q1.in Gain14.out as Connection968
                connect "Current_abc_to_dq4.^Ed2" Gain11.in as Connection876
                connect Gain14.in Junction267 as Connection969
                connect Current_abc_to_dq.wt2 From28 as Connection247
                [
                    breakpoints = 8000, 7904; 8040, 7904
                ]
                connect Goto2 "Bus Join1.out" as Connection51
                connect From35 "Current_abc_to_dq3.^Eb2" as Connection276
                connect Gain8.in Current_abc_to_dq2.Eq2 as Connection869
                connect "Bus Join1.in1" "Outer Voltage Loop + Inner Current Loop.Ub1" as Connection838
                connect Gain9.out Junction269 as Connection963
                connect Gain6.out Goto22 as Connection961
                connect From42 Junction258 as Connection859
                connect Current_abc_to_dq2.Ea2 From8 as Connection236
                connect From34 "Current_abc_to_dq3.^Ec2" as Connection279
                connect "Current_abc_to_dq3.^Ea2" From33 as Connection278
                connect Junction269 Goto29 as Connection964
                connect Junction258 "Outer Voltage Loop + Inner Current Loop.E_q_ref1" as Connection860
                connect Sum4.out Gain4.in as Connection330
                connect Constant1.out Goto46 as Connection882
                connect From5 Current_abc_to_dq.Xi_a2 as Connection38
                connect Gain12.in "Current_abc_to_dq4.^Eq2" as Connection879
                connect Gain4.out Integrator2.in as Connection335
                connect From27 Current_abc_to_dq2.wt2 as Connection246
                connect From32 Current_abc_to_dq3.wt2 as Connection275
                connect Goto20 Gain12.out as Connection878
                connect "Current_abc_to_dq3.^Ed2" Gain9.in as Connection872
                connect Goto28 Gain10.out as Connection874
                connect Goto3 Junction158 as Connection292
                connect Current_abc_to_dq.Xi_q2 Gain7.in as Connection866
                connect Integrator3.out Junction274 as Connection1003
                connect Junction274 Sum5.in1 as Connection1004
                [
                    breakpoints = 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8424; 7120, 8424
                ]
                connect Goto36 Junction274 as Connection1005
                connect Integrator2.out Junction275 as Connection1006
                connect Junction275 Sum4.in1 as Connection1007
                [
                    breakpoints = 6856, 8232; 6856, 8232; 6856, 8232; 6856, 8280; 7112, 8280
                ]
                connect Goto37 Junction275 as Connection1008
                connect Sum1.out Junction276 as Connection1014
                connect Junction276 Junction268 as Connection1015
                [
                    breakpoints = 7152, 8224
                ]
                connect Sum2.out Junction277 as Connection1018
                connect Junction277 Junction267 as Connection1019
                [
                    breakpoints = 7152, 8368
                ]
                connect Ppu.in Gain16.out as Connection1021
                connect Gain16.in Junction276 as Connection1022
                connect Qpu.in Gain17.out as Connection1023
                connect Gain17.in Junction277 as Connection1024
                connect Gain18.out "Voltage droop.Q_ref1" as Connection1026
                connect Gain19.out "Frequency droop.U_P" as Connection1028
                connect integrator.in From40 as Connection1030
                connect integrator.out "confine phase.in" as Connection1031
                connect "confine phase.out" Goto21 as Connection1032
                connect U_Q "Rate Limiter1.in" as Connection1033
                connect "Rate Limiter1.out" Gain18.in as Connection1034
                connect U_P "Rate Limiter2.in" as Connection1035
                connect "Rate Limiter2.out" Gain19.in as Connection1036
                connect "Voltage droop.E_magnitude" Junction278 as Connection1037
                connect Junction278 Goto47 as Connection1038
                connect E_mag.in Junction278 as Connection1039
                connect Product111.in1 Junction279 as Connection1062
                connect Junction279 Product10.in as Connection1063
                [
                    breakpoints = 7520, 8256
                ]
                connect From37 Junction279 as Connection1064
                connect Product111.in Junction280 as Connection1065
                connect Junction280 Product12.in as Connection1066
                [
                    breakpoints = 7472, 8208; 7472, 8208
                ]
                connect From36 Junction280 as Connection1067
                connect Product13.in Junction281 as Connection1068
                connect Junction281 Product10.in1 as Connection1069
                [
                    breakpoints = 7520, 8400
                ]
                connect From39 Junction281 as Connection1070
                connect Product12.in1 Junction282 as Connection1071
                connect Junction282 Product13.in1 as Connection1072
                [
                    breakpoints = 7472, 8472
                ]
                connect From38 Junction282 as Connection1073
                connect From43 Goto45 as Connection1074
                connect "Frequency droop.w1" Junction283 as Connection1083
                [
                    breakpoints = 8400, 8224
                ]
                connect Junction283 Goto17 as Connection1084
                [
                    breakpoints = 8544, 8224; 8544, 8224
                ]
                connect Gain1.in Junction284 as Connection1086
                connect Junction284 Junction283 as Connection1087
                connect Goto48 Junction284 as Connection1088
            }
            [
                position = 6704, 7688
                size = 296, 128
            ]

            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 9136, 8000
                size = 64, 256
            ]

            component pas_inductor L0c1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8096
                rotation = down
            ]

            component pas_inductor L0a1 {
                inductance = "L_i"
            }
            [
                position = 7744, 7904
                rotation = down
            ]

            component pas_resistor Rt0b1 {
                resistance = "R_s"
            }
            [
                position = 8096, 8264
                rotation = left
                scale = -1, 1
            ]

            component "core/Voltage Measurement" Va2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7600, 8384
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_inductor La1 {
                inductance = "L_o"
            }
            [
                position = 8872, 7904
                rotation = down
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 6824, 7848
                hide_name = True
            ]

            component "core/Signal Controlled Voltage Source" Va_inv {
            }
            [
                position = 7008, 7944
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rt0c1 {
                resistance = "R_s"
            }
            [
                position = 8176, 8264
                rotation = left
                scale = -1, 1
            ]

            component pas_resistor R0b1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8000
            ]

            component "core/Voltage Measurement" Vb2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7728, 8432
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Signal Controlled Voltage Source" Vb_inv {
            }
            [
                position = 7088, 8040
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Voltage Measurement" VaG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9248, 8216
                rotation = right
                size = 64, 32
            ]

            component pas_resistor Rc1 {
                resistance = "R_o"
            }
            [
                position = 8776, 8096
            ]

            component "core/Voltage Measurement" VbG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9376, 8288
                rotation = right
                size = 64, 32
            ]

            component pas_resistor R0c1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8096
            ]

            component pas_inductor Lb1 {
                inductance = "L_o"
            }
            [
                position = 8872, 8000
                rotation = down
            ]

            component pas_resistor R0a1 {
                resistance = "R_i"
            }
            [
                position = 7632, 7904
            ]

            component "core/Current Measurement" Ic1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 8096
                size = 64, 32
            ]

            component "core/Voltage Measurement" Eb1 {
                addr = "9"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8456, 8408
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ea1 {
                addr = "7"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8320, 8344
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Xi_b1 {
                addr = "15"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7888, 8000
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Current Measurement" Ib1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 8000
                size = 64, 32
            ]

            component "core/Current Measurement" Xi_a1 {
                addr = "14"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7840, 7904
                scale = 1, -1
                size = 64, 32
            ]

            component gen_product Product1 {
            }
            [
                position = 6744, 7848
                hide_name = True
            ]

            component pas_capacitor Ca1 {
                capacitance = "C_s"
            }
            [
                position = 8016, 8416
                rotation = right
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "1000"
            }
            [
                position = 6624, 8232
                hide_name = True
            ]

            component "core/Voltage Measurement" VcG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9496, 8408
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ec1 {
                addr = "11"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8592, 8472
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component gen_gain Gain1 {
                gain = "0.5"
            }
            [
                position = 6672, 7880
                hide_name = True
            ]

            component "core/Current Measurement" Xi_c1 {
                addr = "16"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7952, 8096
                scale = 1, -1
                size = 64, 32
            ]

            component pas_inductor Lc1 {
                inductance = "L_o"
            }
            [
                position = 8872, 8096
                rotation = down
            ]

            component pas_resistor Rb1 {
                resistance = "R_o"
            }
            [
                position = 8776, 8000
            ]

            component src_scada_input "Connect GFM" {
                def_value = "1"
                execution_rate = "Ts"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 8816, 7768
            ]

            component Subsystem "BE1-25A Synchronizer" {
                layout = dynamic
                component gen_trigonometric "Trigonometric function2" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7344, 8088
                    hide_name = True
                ]

                component src_constant Constant9 {
                    execution_rate = "Ts"
                    value = "5e-2"
                }
                [
                    position = 8456, 8224
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer1" {
                    input_terminals = "real dV;"
                    input_terminals_dimensions = "inherit"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'dV\', True)]"
                    output_fnc = "/*Begin code section*/
if (dV>maxV_slip)
{
    del_Q = maxQ_pds;
}
else if ((dV<=maxV_slip) && (dV>0))
{
    del_Q = maxQ_pds*dV/maxV_slip;
}
else if ((dV<=0) && (dV>-1*(maxV_slip-minV_slip)))
{
    del_Q = 0;
    //del_Q = maxQ_pds*dV/min_slip;
}
else if ((dV <= (-1*(maxV_slip-minV_slip)))&&(dV > (-1*maxV_slip)))
{
    del_Q= maxQ_pds*(dV+(maxV_slip-minV_slip))/minV_slip;
}
else if (dV <= (-1*maxV_slip))
{
    del_Q = -1*maxQ_pds;
}
/*End code section*/"
                    output_terminals = "real del_Q;"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'del_Q\', True)]"
                    parameters = "real Ts;real maxV_slip;real minV_slip;real maxQ_pds;"
                }
                [
                    position = 8104, 8616
                    hide_name = True
                    size = 96, 96
                ]

                component gen_abs Abs2 {
                }
                [
                    position = 8456, 8192
                    hide_name = True
                ]

                component gen_gain Gain4 {
                    gain = "1/w_0"
                }
                [
                    position = 7664, 8176
                    hide_name = True
                ]

                component gen_trigonometric "Trigonometric function1" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7344, 8000
                    hide_name = True
                ]

                component gen_c_function "Hold after connect" {
                    global_variables = "real var;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    input_terminals = "real in;int connect;inherit INV_sync;"
                    input_terminals_dimensions = "inherit;inherit;inherit"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'in\', True), (\'connect\', True), (\'INV_sync\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'out\', True)]"
                    update_fnc = "/*Begin code section*/
if ((connect==0)&&(INV_sync==1))
    var = in;
else if (INV_sync==0)
    var =0;
/*End code section*/"
                }
                [
                    position = 8352, 8416
                    hide_name = True
                    size = 96, 96
                ]

                component gen_c_function "Hold after connect1" {
                    global_variables = "real var;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    input_terminals = "real in;int connect;inherit INV_sync;"
                    input_terminals_dimensions = "inherit;inherit;inherit"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'in\', True), (\'connect\', True), (\'INV_sync\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'out\', True)]"
                    update_fnc = "/*Begin code section*/
if ((connect==0)&&(INV_sync==1))
    var = in;
else if (INV_sync==0)
    var =0;
/*End code section*/"
                }
                [
                    position = 8328, 8648
                    hide_name = True
                    size = 96, 104
                ]

                component gen_c_function "confine phase" {
                    input_terminals_dimensions = "inherit"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'in\', True)]"
                    output_fnc = "/*Begin code section*/
if (in > 0)
{
    if (in > (6.283185307179586/2))
        out = in - 6.283185307179586;
    else
        out = in;
}
if (in < 0)
{
    if (in < (-6.283185307179586/2))
        out = in + 6.283185307179586;
    else
        out = in;
}
/*End code section*/"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'out\', True)]"
                }
                [
                    position = 7824, 8048
                    size = 56, 48
                ]

                component gen_sum Sum5 {
                }
                [
                    position = 7344, 8352
                    hide_name = True
                ]

                component gen_product Product4 {
                }
                [
                    position = 7264, 8384
                    hide_name = True
                ]

                component src_constant Constant7 {
                    execution_rate = "Ts"
                    value = "1e-3"
                }
                [
                    position = 8088, 8112
                    hide_name = True
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7736, 8048
                    hide_name = True
                ]

                component gen_product Product3 {
                }
                [
                    position = 7264, 8320
                    hide_name = True
                ]

                component tm_delay "Unit Delay2" {
                }
                [
                    position = 7520, 8688
                    rotation = right
                    hide_name = True
                ]

                component gen_sum Sum2 {
                    signs = "-+"
                }
                [
                    position = 7824, 8200
                    hide_name = True
                ]

                component gen_rel_op "Relational operator1" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8040
                    hide_name = True
                ]

                component gen_rel_op "Relational operator4" {
                    relational_op = "<"
                }
                [
                    position = 8520, 8208
                    hide_name = True
                ]

                component gen_abs Abs4 {
                }
                [
                    position = 7984, 8048
                    hide_name = True
                ]

                component src_constant Constant6 {
                    execution_rate = "Ts"
                    value = "5e-3"
                }
                [
                    position = 8056, 8024
                    hide_name = True
                ]

                component gen_gain Gain6 {
                    gain = "-1/V_DQ"
                }
                [
                    position = 7344, 8640
                    hide_name = True
                ]

                component gen_logic_op "Logical operator1" {
                    inputs = "3"
                }
                [
                    position = 8616, 8120
                    hide_name = True
                ]

                component gen_abs Abs5 {
                }
                [
                    position = 8056, 8128
                    hide_name = True
                ]

                component gen_sum Sum3 {
                    signs = "-+"
                }
                [
                    position = 8392, 8192
                    hide_name = True
                    scale = 1, -1
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7344, 8544
                    hide_name = True
                ]

                component gen_rel_op "Relational operator2" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8120
                    hide_name = True
                ]

                component Subsystem PLL {
                    layout = dynamic
                    component gen_pid_controller "PID controller1" {
                        controller_type = "PI"
                        enb_anti_windup_out = "True"
                        enb_output_limit_out = "True"
                        int_init_value = "w_0"
                        ki = "Ki_PLL"
                        kp = "Kp_PLL"
                        lower_sat_lim = "PLL_min"
                        upper_sat_lim = "PLL_max"
                    }
                    [
                        position = 8192, 8152
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        global_variables = "real var;"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        input_terminals_dimensions = "inherit"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'in\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', True)]"
                        parameters = "real Ts;"
                        update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                    }
                    [
                        position = 8304, 8152
                        hide_name = True
                        size = 80, 48
                    ]

                    component gen_c_function "confine phase" {
                        global_variables = "real x;real floor_in;"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        input_terminals_dimensions = "inherit"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'in\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', True)]"
                    }
                    [
                        position = 8408, 8152
                        size = 56, 48
                    ]

                    port wt {
                        label = "wt"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8496, 8152
                    ]

                    port w {
                        label = "w"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8304, 8208
                    ]

                    port d {
                        label = "-d"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8064, 8152
                    ]

                    junction Junction1 sp
                    [
                        position = 8240, 8152
                    ]

                    connect w Junction1 as Connection19
                    connect "C function1.in" Junction1 as Connection17
                    connect wt "confine phase.out" as Connection14
                    connect "confine phase.in" "C function1.out" as Connection16
                    connect Junction1 "PID controller1.out" as Connection18
                    connect d "PID controller1.in" as Connection20
                }
                [
                    position = 7456, 8640
                    scale = 1, -1
                    size = 96, 56
                ]

                component gen_math_fnc "Mathematical function2" {
                    mathematical_fn = "sqrt"
                }
                [
                    position = 7416, 8352
                    hide_name = True
                ]

                component gen_c_function "stay connected1" {
                    global_variables = "real connect;"
                    init_fnc = "/*Begin code section*/
connect = 0;
/*End code section*/"
                    input_terminals = "inherit ready;inherit connectINV;inherit INVsync;"
                    input_terminals_dimensions = "inherit;inherit;inherit"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'ready\', True), (\'connectINV\', True), (\'INVsync\', True)]"
                    output_fnc = "/*Begin code section*/
out = connect;
/*End code section*/"
                    output_terminals = "int out;"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'out\', True)]"
                    parameters = "real Ts;"
                    update_fnc = "/*Begin code section*/
if ((ready==1)&&(connectINV==1)&&(INVsync==1)){
    connect = 1;
}
else if((connectINV==0)||(INVsync==0)){
    connect = 0;
}
/*End code section*/"
                }
                [
                    position = 8832, 8176
                    hide_name = True
                    size = 160, 104
                ]

                component gen_gain Gain7 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7344, 8768
                    hide_name = True
                ]

                component gen_gain Gain12 {
                    gain = "-1/V_DQ"
                }
                [
                    position = 7344, 8864
                    hide_name = True
                ]

                component tm_delay "Unit Delay5" {
                }
                [
                    position = 8968, 8176
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer2" {
                    input_terminals = "real df;"
                    input_terminals_dimensions = "inherit"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'df\', True)]"
                    output_fnc = "/*Begin code section*/
if (df>maxw_slip)
{
    del_P = 1.125*maxP_pds;
}
else if ((df<=maxw_slip) && (df>0))
{
    del_P = maxP_pds*df/maxw_slip + (0.125*maxP_pds);
    //del_P = maxP_pds*(df+1e-4)/max_slip + (angle_slip);
}
else if ((df<=0) && (df > (-minw_slip)))
{
    del_P = (0.125*maxP_pds)*(df)/minw_slip + (0.125*maxP_pds);
    //del_w = maxP_pds*((-1*df)+1e-4)/min_slip  + (angle_slip);
}
else if ((df <= (-1*minw_slip))&&(df > (-1*maxw_slip)))
{
    del_P = 0;
    //del_P = maxP_pds*((min_slip)+1e-4)/min_slip  + (angle_slip);
}
else if (df <= (-1*maxw_slip))
{
    del_P = (maxw_slip+df)*maxP_pds/maxw_slip;
}
/*End code section*/"
                    output_terminals = "real del_P;"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'del_P\', True)]"
                    parameters = "real Ts;real maxP_pds;real maxw_slip;real minw_slip;"
                }
                [
                    position = 8112, 8392
                    hide_name = True
                    scale = 1, -1
                    size = 128, 112
                ]

                component gen_c_function "Hold after connect2" {
                    global_variables = "real var;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    input_terminals = "real in;int connect;"
                    input_terminals_dimensions = "inherit;inherit"
                    input_terminals_feedthrough = "True;True"
                    input_terminals_show_labels = "True;True"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "True"
                    output_terminals_show_labels = "True"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
else
    var = 0;
/*End code section*/"
                }
                [
                    position = 8568, 8440
                    hide_name = True
                    size = 80, 88
                ]

                component gen_c_function "Hold after connect3" {
                    global_variables = "real var;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    input_terminals = "real in;int connect;"
                    input_terminals_dimensions = "inherit;inherit"
                    input_terminals_feedthrough = "True;True"
                    input_terminals_show_labels = "True;True"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "True"
                    output_terminals_show_labels = "True"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
else
    var = 0;
/*End code section*/"
                }
                [
                    position = 8568, 8672
                    hide_name = True
                    size = 80, 88
                ]

                component gen_gain Gain13 {
                    gain = "1/w_0"
                }
                [
                    position = 7552, 8632
                    hide_name = True
                ]

                component Subsystem "abc to qd" {
                    layout = dynamic
                    component gen_trigonometric "Trigonometric function3" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 7936
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8224, 7912
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8024
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8216, 8024
                        hide_name = True
                    ]

                    component gen_product Product3 {
                    }
                    [
                        position = 8216, 8136
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function2" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8048
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function4" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8160
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 7736, 8160
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8168
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 7736, 8048
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8056
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function5" {
                    }
                    [
                        position = 8120, 8256
                        hide_name = True
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 8216, 8224
                        hide_name = True
                    ]

                    component gen_sum Sum5 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8336
                        hide_name = True
                    ]

                    component gen_product Product5 {
                    }
                    [
                        position = 8200, 8336
                        hide_name = True
                    ]

                    component gen_product Product6 {
                    }
                    [
                        position = 8200, 8448
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function6" {
                    }
                    [
                        position = 8120, 8368
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function7" {
                    }
                    [
                        position = 8120, 8480
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8024
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8336
                        hide_name = True
                    ]

                    port q {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8024
                    ]

                    port d {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8336
                    ]

                    port theta {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7512, 7936
                    ]

                    port a {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 7904
                        rotation = down
                        scale = -1, 1
                    ]

                    port b {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8016
                        rotation = down
                        scale = -1, 1
                    ]

                    port c {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8128
                        rotation = down
                        scale = -1, 1
                    ]

                    junction Junction11 sp
                    [
                        position = 7688, 7936
                    ]

                    junction Junction12 sp
                    [
                        position = 7688, 8040
                    ]

                    junction Junction3 sp
                    [
                        position = 8056, 7904
                    ]

                    junction Junction13 sp
                    [
                        position = 8032, 7936
                    ]

                    junction Junction7 sp
                    [
                        position = 7960, 8016
                    ]

                    junction Junction8 sp
                    [
                        position = 7936, 8048
                    ]

                    junction Junction9 sp
                    [
                        position = 7864, 8128
                    ]

                    junction Junction10 sp
                    [
                        position = 7840, 8160
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">q = (2/3)*( a*cos(wt) + b*cos(wt-(2*pi/3)) + c*cos(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">d = (2/3)*( a*sin(wt) + b*sin(wt-(2*pi/3)) + c*sin(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">zero = (1/3)*( a + b + c );</p></body></html> ENDCOMMENT 
                    [
                        position = 8512, 7952
                    ]

                    connect "Trigonometric function3.out" Product1.in1 as Connection1151
                    connect Product1.out Sum3.in as Connection1153
                    connect Product2.out Sum3.in1 as Connection1154
                    connect "Trigonometric function2.out" Product2.in1 as Connection1155
                    connect "Trigonometric function4.out" Product3.in1 as Connection1164
                    connect Constant2.out Sum2.in1 as Connection1148
                    connect Product3.out Sum3.in2 as Connection1171
                    connect "Trigonometric function5.out" Product4.in1 as Connection1173
                    connect Product4.out Sum5.in as Connection1174
                    connect Product5.out Sum5.in1 as Connection1175
                    connect "Trigonometric function6.out" Product5.in1 as Connection1176
                    connect "Trigonometric function7.out" Product6.in1 as Connection1179
                    connect Product6.out Sum5.in2 as Connection1183
                    connect Sum3.out Gain1.in as Connection1186
                    connect Junction11 theta as Connection1232
                    connect Gain1.out q as Connection1187
                    connect Sum5.out Gain2.in as Connection1188
                    connect Sum2.in Junction12 as Connection1234
                    connect Gain2.out d as Connection1189
                    connect Junction12 Junction11 as Connection1235
                    connect Sum4.in Junction12 as Connection1236
                    connect a Junction3 as Connection1190
                    connect Junction3 Product1.in as Connection1191
                    connect "Trigonometric function3.in" Junction13 as Connection1237
                    connect Product4.in Junction3 as Connection1192
                    connect Junction13 Junction11 as Connection1238
                    connect "Trigonometric function5.in" Junction13 as Connection1239
                    connect b Junction7 as Connection1213
                    connect Junction7 Product2.in as Connection1214
                    connect Product5.in Junction7 as Connection1215
                    connect Sum2.out Junction8 as Connection1216
                    connect Junction8 "Trigonometric function2.in" as Connection1217
                    connect "Trigonometric function6.in" Junction8 as Connection1218
                    connect Constant3.out Sum4.in1 as Connection1219
                    connect c Junction9 as Connection1220
                    connect Junction9 Product3.in as Connection1221
                    connect Product6.in Junction9 as Connection1222
                    connect Sum4.out Junction10 as Connection1227
                    connect Junction10 "Trigonometric function4.in" as Connection1228
                    [
                        breakpoints = 7840, 8160
                    ]
                    connect "Trigonometric function7.in" Junction10 as Connection1229
                }
                [
                    position = 7256, 8592
                    size = 80, 136
                ]

                component Subsystem "abc to qd1" {
                    layout = dynamic
                    component gen_trigonometric "Trigonometric function3" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 7936
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8224, 7912
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8024
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8216, 8024
                        hide_name = True
                    ]

                    component gen_product Product3 {
                    }
                    [
                        position = 8216, 8136
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function2" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8048
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function4" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8160
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 7736, 8160
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8168
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 7736, 8048
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8056
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function5" {
                    }
                    [
                        position = 8120, 8256
                        hide_name = True
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 8216, 8224
                        hide_name = True
                    ]

                    component gen_sum Sum5 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8336
                        hide_name = True
                    ]

                    component gen_product Product5 {
                    }
                    [
                        position = 8200, 8336
                        hide_name = True
                    ]

                    component gen_product Product6 {
                    }
                    [
                        position = 8200, 8448
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function6" {
                    }
                    [
                        position = 8120, 8368
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function7" {
                    }
                    [
                        position = 8120, 8480
                        hide_name = True
                    ]

                    component gen_c_function "confine phase" {
                        global_variables = "real x;real floor_in;"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        input_terminals_dimensions = "inherit"
                        input_terminals_feedthrough = "[\'\']"
                        input_terminals_show_labels = "[(\'in\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        output_terminals_dimensions = "inherit"
                        output_terminals_feedthrough = "[\'\']"
                        output_terminals_show_labels = "[(\'out\', True)]"
                    }
                    [
                        position = 7592, 7936
                        size = 56, 48
                    ]

                    component gen_gain Gain1 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8024
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8336
                        hide_name = True
                    ]

                    port q {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8024
                    ]

                    port d {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8336
                    ]

                    port theta {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7512, 7936
                    ]

                    port a {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 7904
                        rotation = down
                        scale = -1, 1
                    ]

                    port b {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8016
                        rotation = down
                        scale = -1, 1
                    ]

                    port c {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8128
                        rotation = down
                        scale = -1, 1
                    ]

                    junction Junction3 sp
                    [
                        position = 8056, 7904
                    ]

                    junction Junction4 sp
                    [
                        position = 7688, 8040
                    ]

                    junction Junction5 sp
                    [
                        position = 7688, 7936
                    ]

                    junction Junction6 sp
                    [
                        position = 8032, 7936
                    ]

                    junction Junction7 sp
                    [
                        position = 7960, 8016
                    ]

                    junction Junction8 sp
                    [
                        position = 7936, 8048
                    ]

                    junction Junction9 sp
                    [
                        position = 7864, 8128
                    ]

                    junction Junction10 sp
                    [
                        position = 7840, 8160
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">q = (2/3)*( a*cos(wt) + b*cos(wt-(2*pi/3)) + c*cos(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">d = (2/3)*( a*sin(wt) + b*sin(wt-(2*pi/3)) + c*sin(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">zero = (1/3)*( a + b + c );</p></body></html> ENDCOMMENT 
                    [
                        position = 8512, 7952
                    ]

                    connect "Trigonometric function3.out" Product1.in1 as Connection1151
                    connect Product1.out Sum3.in as Connection1153
                    connect Product2.out Sum3.in1 as Connection1154
                    connect "Trigonometric function2.out" Product2.in1 as Connection1155
                    connect "Trigonometric function4.out" Product3.in1 as Connection1164
                    connect Constant2.out Sum2.in1 as Connection1148
                    connect Product3.out Sum3.in2 as Connection1171
                    connect "Trigonometric function5.out" Product4.in1 as Connection1173
                    connect Product4.out Sum5.in as Connection1174
                    connect Product5.out Sum5.in1 as Connection1175
                    connect "Trigonometric function6.out" Product5.in1 as Connection1176
                    connect "Trigonometric function7.out" Product6.in1 as Connection1179
                    connect Junction5 "confine phase.out" as Connection1230
                    connect "confine phase.in" theta as Connection1231
                    connect Product6.out Sum5.in2 as Connection1183
                    connect Sum3.out Gain1.in as Connection1186
                    connect Gain1.out q as Connection1187
                    connect Sum5.out Gain2.in as Connection1188
                    connect Gain2.out d as Connection1189
                    connect a Junction3 as Connection1190
                    connect Junction3 Product1.in as Connection1191
                    connect Product4.in Junction3 as Connection1192
                    connect Sum2.in Junction4 as Connection1204
                    connect Sum4.in Junction4 as Connection1206
                    connect Junction4 Junction5 as Connection1207
                    connect "Trigonometric function3.in" Junction6 as Connection1210
                    connect Junction6 Junction5 as Connection1211
                    connect "Trigonometric function5.in" Junction6 as Connection1212
                    connect b Junction7 as Connection1213
                    connect Junction7 Product2.in as Connection1214
                    connect Product5.in Junction7 as Connection1215
                    connect Sum2.out Junction8 as Connection1216
                    connect Junction8 "Trigonometric function2.in" as Connection1217
                    connect "Trigonometric function6.in" Junction8 as Connection1218
                    connect Constant3.out Sum4.in1 as Connection1219
                    connect c Junction9 as Connection1220
                    connect Junction9 Product3.in as Connection1221
                    connect Product6.in Junction9 as Connection1222
                    connect Sum4.out Junction10 as Connection1227
                    connect Junction10 "Trigonometric function4.in" as Connection1228
                    [
                        breakpoints = 7840, 8160
                    ]
                    connect "Trigonometric function7.in" Junction10 as Connection1229
                }
                [
                    position = 7256, 8816
                    size = 80, 136
                ]

                component gen_math_fnc "Mathematical function1" {
                    mathematical_fn = "sqrt"
                }
                [
                    position = 7416, 8224
                    hide_name = True
                ]

                component gen_product Product1 {
                }
                [
                    position = 7264, 8192
                    hide_name = True
                ]

                component gen_sum Sum4 {
                }
                [
                    position = 7344, 8224
                    hide_name = True
                ]

                component gen_product Product2 {
                }
                [
                    position = 7264, 8256
                    hide_name = True
                ]

                component gen_probe "|E|" {
                }
                [
                    position = 7504, 8144
                ]

                component tm_delay "Unit Delay6" {
                }
                [
                    position = 8656, 8440
                    hide_name = True
                ]

                component tm_delay "Unit Delay7" {
                }
                [
                    position = 8656, 8672
                    hide_name = True
                ]

                component gen_gain Gain14 {
                    gain = "V_ABC*np.sqrt(3)"
                }
                [
                    position = 7456, 8184
                    rotation = left
                    hide_name = True
                ]

                component gen_probe theta_E {
                }
                [
                    position = 7856, 7912
                ]

                component gen_gain Gain17 {
                    gain = "180/np.pi"
                }
                [
                    position = 7768, 7912
                    hide_name = True
                ]

                component gen_probe theta_V {
                }
                [
                    position = 7856, 7976
                ]

                component gen_gain Gain18 {
                    gain = "180/np.pi"
                }
                [
                    position = 7768, 7976
                    hide_name = True
                ]

                component gen_probe "|V|pu" {
                }
                [
                    position = 7560, 8296
                ]

                component gen_probe "|E|pu" {
                }
                [
                    position = 7512, 8256
                ]

                component gen_probe theta_diff {
                }
                [
                    position = 7984, 7984
                ]

                component gen_probe frequency_diff {
                }
                [
                    position = 8056, 8200
                ]

                component gen_probe voltage_diff {
                }
                [
                    position = 8504, 8280
                ]

                component gen_c_function "limit magnitude" {
                    global_variables = "real var;"
                    input_terminals_dimensions = "inherit"
                    input_terminals_feedthrough = "True"
                    input_terminals_show_labels = "False"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "True"
                    output_terminals_show_labels = "False"
                    update_fnc = "/*Begin code section*/
var = in;
if((var<1e-12)&&(var>=0))
    var = 1e-12;
else if((var>-1e-12)&&(var<0))
    var = 1e-12;
/*End code section*/"
                }
                [
                    position = 7264, 8024
                    hide_name = True
                    size = 48, 48
                ]

                component gen_c_function "limit magnitude1" {
                    global_variables = "real var;"
                    input_terminals_dimensions = "inherit"
                    input_terminals_feedthrough = "True"
                    input_terminals_show_labels = "False"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "True"
                    output_terminals_show_labels = "False"
                    update_fnc = "/*Begin code section*/
var = in;
if((var<1e-12)&&(var>=0))
    var = 1e-12;
else if((var>-1e-12)&&(var<0))
    var = 1e-12;
/*End code section*/"
                }
                [
                    position = 7264, 8112
                    hide_name = True
                    size = 48, 48
                ]

                tag From43 {
                    value = "Vd_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8312
                    hide_name = True
                ]

                tag w_bus1 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7632, 8632
                    hide_name = True
                ]

                tag Vb_G1 {
                    value = "VbG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7080, 8576
                    hide_name = True
                ]

                tag "|V|1" {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7560, 8352
                    hide_name = True
                ]

                tag theta_bus {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7080, 8640
                    hide_name = True
                    scale = -1, 1
                ]

                tag theta_bus5 {
                    value = "dV"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7984, 8616
                    hide_name = True
                ]

                tag From42 {
                    value = "Vq_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8392
                    hide_name = True
                ]

                tag Goto32 {
                    value = "Vq_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7456, 8576
                    hide_name = True
                    size = 60, 20
                ]

                tag Connect2 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8232, 8416
                    hide_name = True
                    size = 58, 20
                ]

                tag From44 {
                    value = "Vd_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8112
                    hide_name = True
                ]

                tag From45 {
                    value = "Vq_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7256, 8064
                    hide_name = True
                ]

                tag Goto30 {
                    value = "dV"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8504, 8160
                    hide_name = True
                ]

                tag Goto33 {
                    value = "Vd_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7456, 8544
                    hide_name = True
                    size = 60, 20
                ]

                tag Vc_G1 {
                    value = "VcG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7080, 8608
                    hide_name = True
                ]

                tag From41 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8024
                    hide_name = True
                ]

                tag Va_G1 {
                    value = "VaG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7080, 8544
                    hide_name = True
                ]

                tag w_bus3 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7600, 8224
                    hide_name = True
                ]

                tag Connect1 {
                    value = "synced"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9104, 8176
                    hide_name = True
                ]

                tag From1 {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 8176
                    hide_name = True
                ]

                tag From40 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7256, 7976
                    hide_name = True
                ]

                tag MT_ON2 {
                    value = "INV_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8232, 8440
                    hide_name = True
                ]

                tag MT_ON3 {
                    value = "INV_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8208, 8680
                    hide_name = True
                ]

                tag MT_ON4 {
                    value = "INV_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8688, 8208
                    hide_name = True
                ]

                tag w_e7 {
                    value = "w_e"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7600, 8176
                    hide_name = True
                ]

                tag Goto28 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7464, 8864
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto29 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7464, 8768
                    hide_name = True
                    size = 60, 20
                ]

                tag From34 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7080, 8832
                    hide_name = True
                    size = 60, 20
                ]

                tag From33 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7080, 8768
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7080, 8800
                    hide_name = True
                    size = 60, 20
                ]

                tag theta_bus1 {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7080, 8864
                    hide_name = True
                ]

                tag Connect5 {
                    value = "Connect INV"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8680, 8176
                    hide_name = True
                    size = 72, 20
                ]

                tag Connect6 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8208, 8648
                    hide_name = True
                    size = 58, 20
                ]

                tag Connect3 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8464, 8464
                    hide_name = True
                    size = 58, 20
                ]

                tag Goto34 {
                    value = "P_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8840, 8440
                    hide_name = True
                ]

                tag Connect7 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8464, 8696
                    hide_name = True
                    size = 58, 20
                ]

                tag Goto35 {
                    value = "Q_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8840, 8672
                    hide_name = True
                ]

                tag From39 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8264
                    hide_name = True
                ]

                tag From36 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8184
                    hide_name = True
                ]

                tag "|V|3" {
                    value = "|E|"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7504, 8224
                    hide_name = True
                ]

                tag From48 {
                    value = "|E|"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 8208
                    hide_name = True
                ]

                junction Junction42 sp
                [
                    position = 7216, 8392
                ]

                junction Junction43 sp
                [
                    position = 7216, 8312
                ]

                junction Junction35 sp
                [
                    position = 8424, 8192
                ]

                junction Junction81 sp
                [
                    position = 7992, 8200
                ]

                junction Junction28 sp
                [
                    position = 7216, 8264
                ]

                junction Junction103 sp
                [
                    position = 7216, 8184
                ]

                junction Junction104 sp
                [
                    position = 7456, 8224
                ]

                junction Junction111 sp
                [
                    position = 7552, 8040
                ]

                junction Junction112 sp
                [
                    position = 7608, 8056
                ]

                junction Junction114 sp
                [
                    position = 7456, 8224
                ]

                junction Junction115 sp
                [
                    position = 7912, 8048
                ]

                junction Junction116 sp
                [
                    position = 7992, 8200
                ]

                junction Junction117 sp
                [
                    position = 8424, 8192
                ]

                junction Junction119 sp
                [
                    position = 7480, 8352
                ]

                junction Junction120 sp
                [
                    position = 7384, 8640
                ]

                junction Junction121 sp
                [
                    position = 7200, 8640
                ]

                connect Sum3.in1 From1 as Connection81
                connect Abs2.out "Relational operator4.in" as Connection84
                connect Connect2 "Hold after connect.connect" as Connection156
                connect Goto30 Junction35 as Connection308
                connect From45 "Trigonometric function2.in" as Connection401
                connect Constant7.out "Relational operator2.in" as Connection70
                connect Abs2.in Junction35 as Connection306
                connect Product3.out Sum5.in as Connection390
                connect Product3.in Junction43 as Connection386
                connect From40 "Trigonometric function1.in" as Connection284
                connect "Relational operator2.in1" Abs5.out as Connection357
                connect From42 Junction42 as Connection384
                connect Junction43 From43 as Connection389
                connect Sum5.out "Mathematical function2.in" as Connection387
                connect Product3.in1 Junction43 as Connection391
                connect Product4.out Sum5.in1 as Connection388
                connect Constant9.out "Relational operator4.in1" as Connection85
                connect Product4.in Junction42 as Connection385
                connect Constant6.out "Relational operator1.in" as Connection69
                connect Junction42 Product4.in1 as Connection392
                connect PLL.wt "Unit Delay2.in" as Connection474
                connect MT_ON2 "Hold after connect.INV_sync" as Connection492
                connect MT_ON3 "Hold after connect1.INV_sync" as Connection494
                connect "Hold after connect1.in" "BE1-25A Synchronizer1.del_Q" as Connection495
                connect MT_ON4 "stay connected1.INVsync" as Connection512
                connect w_e7 Gain4.in as Connection513
                connect "Unit Delay5.in" "stay connected1.out" as Connection624
                connect Connect5 "stay connected1.connectINV" as Connection625
                connect Connect6 "Hold after connect1.connect" as Connection626
                connect Abs4.out "Relational operator1.in1" as Connection627
                [
                    breakpoints = 8024, 8048; 8128, 8048
                ]
                connect "BE1-25A Synchronizer2.del_P" "Hold after connect.in" as Connection633
                connect Sum2.out Junction81 as Connection634
                [
                    breakpoints = 7968, 8200
                ]
                connect "BE1-25A Synchronizer2.df" Junction81 as Connection636
                connect Connect3 "Hold after connect2.connect" as Connection1234
                connect Connect7 "Hold after connect3.connect" as Connection1243
                connect Gain13.out w_bus1 as Connection1252
                connect "abc to qd1.q" Gain7.in as Connection1360
                connect Gain12.in "abc to qd1.d" as Connection1361
                connect Gain6.in "abc to qd.d" as Connection1362
                connect Gain5.in "abc to qd.q" as Connection1363
                connect From39 Junction28 as Connection259
                connect Product2.out Sum4.in1 as Connection251
                connect Sum4.out "Mathematical function1.in" as Connection252
                connect Product2.in Junction28 as Connection261
                connect Junction28 Product2.in1 as Connection260
                connect Product1.out Sum4.in as Connection250
                connect From36 Junction103 as Connection1394
                connect Junction103 Product1.in as Connection1395
                connect Product1.in1 Junction103 as Connection1396
                connect "Mathematical function1.out" Junction104 as Connection1398
                connect Junction104 "|V|3" as Connection1399
                connect From48 Sum3.in as Connection1401
                connect "Hold after connect2.out" "Unit Delay6.in" as Connection1402
                connect "Unit Delay7.in" "Hold after connect3.out" as Connection1405
                connect "|E|.in" Gain14.out as Connection1406
                connect "Logical operator1.in" "Relational operator1.out" as Connection1454
                [
                    breakpoints = 8576, 8040
                ]
                connect "Relational operator2.out" "Logical operator1.in1" as Connection1453
                [
                    breakpoints = 8288, 8120; 8288, 8120; 8304, 8120; 8576, 8120
                ]
                connect theta_bus5 "BE1-25A Synchronizer1.dV" as Connection1455
                connect Connect1 "Unit Delay5.out" as Connection1469
                connect Sum1.out "confine phase.in" as Connection1470
                [
                    breakpoints = 7776, 8048
                ]
                connect theta_E.in Gain17.out as Connection1471
                connect theta_V.in Gain18.out as Connection1472
                connect Sum1.in Junction111 as Connection1473
                connect Junction111 "Trigonometric function1.out" as Connection1474
                [
                    breakpoints = 7520, 8000
                ]
                connect Gain17.in Junction111 as Connection1475
                connect Sum1.in1 Junction112 as Connection1476
                connect Junction112 "Trigonometric function2.out" as Connection1477
                [
                    breakpoints = 7520, 8088
                ]
                connect Gain18.in Junction112 as Connection1478
                connect w_bus3 Sum2.in1 as Connection1479
                connect Gain14.in Junction114 as Connection1484
                connect Junction114 Junction104 as Connection1485
                connect "|E|pu.in" Junction114 as Connection1486
                connect "confine phase.out" Junction115 as Connection1487
                [
                    breakpoints = 7872, 8048
                ]
                connect Junction115 Abs4.in as Connection1488
                connect theta_diff.in Junction115 as Connection1489
                connect Abs5.in Junction116 as Connection1490
                [
                    breakpoints = 7992, 8128; 7992, 8128
                ]
                connect Junction116 Junction81 as Connection1491
                [
                    breakpoints = 7992, 8200
                ]
                connect frequency_diff.in Junction116 as Connection1492
                connect Junction35 Junction117 as Connection1493
                connect Junction117 Sum3.out as Connection1494
                connect voltage_diff.in Junction117 as Connection1495
                connect Gain7.out Goto29 as Connection1510
                connect Goto28 Gain12.out as Connection1511
                connect "Relational operator4.out" "Logical operator1.in2" as Connection1525
                connect "Logical operator1.out" "stay connected1.ready" as Connection1534
                connect "|V|1" Junction119 as Connection1536
                connect Junction119 "Mathematical function2.out" as Connection1537
                connect "|V|pu.in" Junction119 as Connection1538
                connect PLL.w Gain13.in as Connection1539
                connect theta_bus1 "abc to qd1.theta" as Connection1540
                connect Gain4.out Sum2.in as Connection1543
                connect Vc_G1 "abc to qd.c" as Connection1544
                connect Vb_G1 "abc to qd.b" as Connection1545
                connect Va_G1 "abc to qd.a" as Connection1546
                connect From34 "abc to qd1.c" as Connection1547
                connect From35 "abc to qd1.b" as Connection1548
                connect From33 "abc to qd1.a" as Connection1549
                connect "Hold after connect.out" "Hold after connect2.in" as Connection1550
                connect "Hold after connect1.out" "Hold after connect3.in" as Connection1551
                connect From41 "limit magnitude.in" as Connection1552
                connect From44 "limit magnitude1.in" as Connection1554
                connect "limit magnitude1.out" "Trigonometric function2.in1" as Connection1555
                connect "limit magnitude.out" "Trigonometric function1.in1" as Connection1556
                connect "Unit Delay6.out" Goto34 as Connection1563
                [
                    breakpoints = 8736, 8440
                ]
                connect Goto35 "Unit Delay7.out" as Connection1564
                connect PLL.d Junction120 as Connection1566
                connect Junction120 Gain6.out as Connection1567
                connect Goto32 Junction120 as Connection1568
                connect "Unit Delay2.out" Junction121 as Connection1570
                [
                    breakpoints = 7520, 8720; 7200, 8720
                ]
                connect Junction121 "abc to qd.theta" as Connection1571
                connect theta_bus Junction121 as Connection1572
                connect Gain5.out Goto33 as Connection1573
            }
            [
                position = 8968, 7608
                size = 112, 144
            ]

            component Subsystem CB_control {
                layout = dynamic
                component gen_logic_op "Logical operator1" {
                }
                [
                    position = 8176, 8256
                    hide_name = True
                ]

                component gen_logic_op "Logical operator3" {
                    operator = "NOT"
                }
                [
                    position = 8424, 8304
                    rotation = right
                    hide_name = True
                ]

                component gen_digital_probe "GCB OFF" {
                }
                [
                    position = 8464, 8352
                ]

                component gen_digital_probe "GCB ON" {
                }
                [
                    position = 8464, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_logic_op "Logical operator5" {
                    operator = "NOT"
                }
                [
                    position = 7632, 8496
                    rotation = right
                    hide_name = True
                ]

                component gen_digital_probe "Grid_Islanded OFF" {
                }
                [
                    position = 7680, 8528
                ]

                component gen_digital_probe "Grid_Islanded ON" {
                }
                [
                    position = 7680, 8408
                    rotation = down
                    scale = -1, 1
                ]

                component src_scada_input Grid_Islanded {
                    def_value = "1"
                    execution_rate = "Ts"
                    format = "int"
                    max = "1"
                    min = "0"
                    signal_type = "int"
                    unit = ""
                }
                [
                    position = 7352, 8432
                ]

                component gen_logic_op "Logical operator6" {
                    operator = "OR"
                }
                [
                    position = 8304, 8688
                    hide_name = True
                ]

                component gen_digital_probe "INV_sync OFF" {
                }
                [
                    position = 7600, 8672
                ]

                component gen_digital_probe "INV_sync ON" {
                }
                [
                    position = 7528, 8600
                    rotation = down
                    scale = -1, -1
                ]

                component gen_logic_op "Logical operator7" {
                }
                [
                    position = 7560, 8440
                    hide_name = True
                ]

                component gen_logic_op "Logical operator8" {
                    inputs = "3"
                }
                [
                    position = 8224, 8696
                    hide_name = True
                ]

                component src_constant Constant10 {
                    execution_rate = "Ts"
                    value = "5e-2"
                }
                [
                    position = 8088, 8712
                    hide_name = True
                ]

                component gen_abs Abs6 {
                }
                [
                    position = 8088, 8680
                    hide_name = True
                ]

                component gen_rel_op "Relational operator5" {
                    relational_op = "<"
                }
                [
                    position = 8152, 8696
                    hide_name = True
                ]

                component gen_sum Sum9 {
                    signs = "-+"
                }
                [
                    position = 8016, 8688
                    hide_name = True
                    scale = 1, -1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                }
                [
                    position = 7944, 8664
                    hide_name = True
                ]

                component src_constant Constant11 {
                    execution_rate = "Ts"
                    value = "1e-3"
                }
                [
                    position = 8088, 8616
                    hide_name = True
                ]

                component gen_abs Abs7 {
                }
                [
                    position = 8088, 8648
                    hide_name = True
                ]

                component gen_rel_op "Relational operator6" {
                    relational_op = ">"
                }
                [
                    position = 8152, 8632
                    hide_name = True
                ]

                component gen_sum Sum10 {
                    signs = "-+"
                }
                [
                    position = 8016, 8640
                    hide_name = True
                    scale = 1, -1
                ]

                component gen_gain Gain13 {
                    gain = "1/w_0"
                }
                [
                    position = 7880, 8616
                    hide_name = True
                ]

                component gen_logic_op "Logical operator9" {
                    operator = "NOT"
                }
                [
                    position = 7408, 8496
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op "Logical operator10" {
                    operator = "NOT"
                }
                [
                    position = 7520, 8496
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op "Logical operator11" {
                }
                [
                    position = 7464, 8568
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op "Logical operator12" {
                    operator = "NOT"
                }
                [
                    position = 7528, 8672
                    hide_name = True
                ]

                component gen_c_function "stay connected1" {
                    global_variables = "int var;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    input_terminals = "inherit connect;inherit disconnect;"
                    input_terminals_dimensions = "inherit;inherit"
                    input_terminals_feedthrough = "[\'\']"
                    input_terminals_show_labels = "[(\'connect\', True), (\'disconnect\', True)]"
                    output_fnc = "/*Begin code section*/
action = var;
/*End code section*/"
                    output_terminals = "int action;"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "[\'\']"
                    output_terminals_show_labels = "[(\'action\', True)]"
                    update_fnc = "/*Begin code section*/
if (connect==1)
{
    var = 1;
}
if(disconnect==0)
{
    var = 0;
}
/*End code section*/"
                }
                [
                    position = 8328, 8240
                    hide_name = True
                    scale = 1, -1
                    size = 112, 72
                ]

                component gen_c_function "Hold after connect2" {
                    global_variables = "real var;"
                    init_fnc = "/*Begin code section*/
var = 1;
/*End code section*/"
                    input_terminals = "real in1;real in2;"
                    input_terminals_dimensions = "inherit;inherit"
                    input_terminals_feedthrough = "True;True"
                    input_terminals_show_labels = "True;True"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    output_terminals = "int out;"
                    output_terminals_dimensions = "inherit"
                    output_terminals_feedthrough = "True"
                    output_terminals_show_labels = "True"
                    update_fnc = "/*Begin code section*/
if ((in1<1.5)&&(in1>0.5)&&(in2<1.5)&&(in2>0.5))
    var = 0;
else
    var = 1;
/*End code section*/"
                }
                [
                    position = 7416, 8368
                    hide_name = True
                    size = 80, 56
                ]

                component tm_delay "Unit Delay2" {
                }
                [
                    position = 8528, 8296
                    hide_name = True
                ]

                port CB_status {
                    label = "CB_status"
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8616, 8240
                ]

                port Close_GCB {
                    label = "Close_GCB"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7880, 8152
                ]

                tag Connect5 {
                    value = "synced"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8648
                    hide_name = True
                ]

                tag Connect6 {
                    value = "Connect INV"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8176, 8216
                    hide_name = True
                ]

                tag Connect1 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8616, 8296
                    hide_name = True
                ]

                tag Connect7 {
                    value = "Grid_Islanded"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7680, 8440
                    hide_name = True
                    size = 75, 20
                ]

                tag Connect8 {
                    value = "Grid_Islanded"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8120, 8744
                    hide_name = True
                    size = 94, 20
                ]

                tag Connect9 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8392, 8688
                    hide_name = True
                    size = 75, 20
                ]

                tag Connect10 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8080, 8264
                    hide_name = True
                ]

                tag Connect11 {
                    value = "INV_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7528, 8632
                    hide_name = True
                    size = 58, 20
                ]

                tag "|V|2" {
                    value = "|E|"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7928, 8712
                    hide_name = True
                    size = 29, 20
                ]

                tag w_e8 {
                    value = "w_e"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7800, 8616
                    hide_name = True
                ]

                tag From1 {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7304, 8352
                    hide_name = True
                ]

                tag w_bus3 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7304, 8384
                    hide_name = True
                ]

                junction Junction108 sp
                [
                    position = 7632, 8440
                ]

                junction Junction109 sp
                [
                    position = 7632, 8440
                ]

                junction Junction81 sp
                [
                    position = 7976, 8664
                ]

                junction Junction113 sp
                [
                    position = 7464, 8600
                ]

                junction Junction115 sp
                [
                    position = 7464, 8632
                ]

                junction Junction116 sp
                [
                    position = 8424, 8240
                ]

                junction Junction117 sp
                [
                    position = 8424, 8240
                ]

                junction Junction119 sp
                [
                    position = 8480, 8240
                ]

                junction Junction121 sp
                [
                    position = 7408, 8432
                ]

                junction Junction123 sp
                [
                    position = 8048, 8152
                ]

                junction Junction124 sp
                [
                    position = 8048, 8216
                ]

                junction Junction125 sp
                [
                    position = 7520, 8448
                ]

                connect "GCB OFF.in" "Logical operator3.out" as Connection155
                connect Connect5 "Logical operator6.in" as Connection959
                connect "Logical operator6.out" Connect9 as Connection961
                connect Connect10 "Logical operator1.in1" as Connection962
                connect "Logical operator7.out" Junction108 as Connection980
                connect Junction108 Connect7 as Connection981
                connect "Logical operator5.in" Junction109 as Connection983
                connect Junction109 Junction108 as Connection984
                connect Abs6.out "Relational operator5.in" as Connection628
                connect Constant10.out "Relational operator5.in1" as Connection631
                connect Abs6.in Sum9.out as Connection632
                [
                    breakpoints = 8056, 8688
                ]
                connect "|V|2" Sum9.in as Connection634
                connect "Relational operator5.out" "Logical operator8.in1" as Connection635
                connect Constant11.out "Relational operator6.in" as Connection636
                connect "Relational operator6.in1" Abs7.out as Connection637
                connect "Relational operator6.out" "Logical operator8.in" as Connection638
                connect Sum10.out Abs7.in as Connection639
                connect w_e8 Gain13.in as Connection640
                connect Constant1.out Junction81 as Connection642
                connect "Logical operator11.in1" "Logical operator9.out" as Connection998
                connect Junction81 Sum9.in1 as Connection643
                connect "Logical operator11.in" "Logical operator10.out" as Connection999
                connect Sum10.in Junction81 as Connection644
                connect Connect8 "Logical operator8.in2" as Connection990
                connect "Logical operator8.out" "Logical operator6.in1" as Connection991
                connect "Grid_Islanded ON.in" Junction109 as Connection1003
                [
                    breakpoints = 7632, 8408
                ]
                connect Junction113 "Logical operator11.out" as Connection1005
                connect "INV_sync ON.in" Junction113 as Connection1006
                connect "Grid_Islanded OFF.in" "Logical operator5.out" as Connection1011
                connect Connect11 Junction115 as Connection1012
                connect Junction115 Junction113 as Connection1013
                connect "Logical operator12.in" Junction115 as Connection1014
                connect "Logical operator12.out" "INV_sync OFF.in" as Connection1015
                connect "stay connected1.action" Junction116 as Connection1018
                connect Junction116 "Logical operator3.in" as Connection1019
                connect Junction117 Junction116 as Connection1022
                connect "GCB ON.in" Junction117 as Connection1023
                connect "stay connected1.connect" "Logical operator1.out" as Connection1032
                connect CB_status Junction119 as Connection1036
                connect Junction119 Junction117 as Connection1037
                connect "Logical operator7.in" Junction121 as Connection1187
                connect Junction121 Grid_Islanded.out as Connection1188
                connect "Logical operator9.in" Junction121 as Connection1189
                connect From1 "Hold after connect2.in1" as Connection1199
                connect w_bus3 "Hold after connect2.in2" as Connection1200
                connect "stay connected1.disconnect" Junction123 as Connection1202
                [
                    breakpoints = 8256, 8152; 8128, 8152
                ]
                connect Junction123 Close_GCB as Connection1203
                [
                    breakpoints = 8016, 8152; 8016, 8152
                ]
                connect "Logical operator1.in" Junction124 as Connection1205
                connect Junction124 Junction123 as Connection1206
                connect Connect6 Junction124 as Connection1207
                connect "Unit Delay2.in" Junction119 as Connection1209
                connect "Unit Delay2.out" Connect1 as Connection1213
                [
                    breakpoints = 8560, 8296
                ]
                connect "Hold after connect2.out" Junction125 as Connection1217
                connect Junction125 "Logical operator10.in" as Connection1218
                connect "Logical operator7.in1" Junction125 as Connection1219
                connect Gain13.out Sum10.in1 as Connection1220
            }
            [
                position = 8968, 7768
                size = 176, 96
            ]

            port Vc {
                label = "Vc"
                position = top:3
                kind = pe
            }
            [
                position = 9568, 8096
                scale = -1, 1
            ]

            port Vb {
                label = "Vb"
                position = top:2
                kind = pe
            }
            [
                position = 9568, 8000
                scale = -1, 1
            ]

            port Va {
                label = "Va"
                position = top:1
                kind = pe
            }
            [
                position = 9568, 7904
                scale = -1, 1
            ]

            port setpoint_P {
                position = right:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6632, 7584
                scale = -1, 1
            ]

            port setpoint_Q {
                position = right:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6776, 7584
            ]

            port ground {
                position = auto:auto
                kind = pe
            }
            [
                position = 9576, 8688
                scale = -1, 1
            ]

            tag Goto39 {
                value = "Ib1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 7968
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto18 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6736, 8232
                hide_name = True
                size = 60, 20
            ]

            tag Goto31 {
                value = "Ic1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 8064
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto35 {
                value = "Xi_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8144
                scale = -1, 1
                size = 60, 20
            ]

            tag Vb_G {
                value = "VbG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9448, 8288
            ]

            tag Goto41 {
                value = "Ea1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8232, 8344
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto44 {
                value = "Xi_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8192
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto30 {
                value = "Ec1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8504, 8472
                scale = -1, 1
                size = 60, 20
            ]

            tag Vc_G {
                value = "VcG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9568, 8408
            ]

            tag From2 {
                value = "modulator1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6600, 7816
                hide_name = True
                size = 60, 20
            ]

            tag Goto38 {
                value = "Xi_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8240
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto33 {
                value = "E_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7776, 8480
                scale = -1, 1
                size = 60, 20
            ]

            tag Va_G {
                value = "VaG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9320, 8216
            ]

            tag Goto32 {
                value = "Ia1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 7872
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto40 {
                value = "Eb1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8368, 8408
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto42 {
                value = "E_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7648, 8432
                scale = -1, 1
                size = 60, 20
            ]

            tag From3 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6600, 7880
                hide_name = True
            ]

            tag Goto34 {
                value = "E_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7504, 8384
                scale = -1, 1
                size = 60, 20
            ]

            junction Junction291 pe
            [
                position = 7088, 8688
            ]

            junction Junction160 pe
            [
                position = 8096, 8000
            ]

            junction Junction198 pe
            [
                position = 8096, 8688
            ]

            junction Junction290 pe
            [
                position = 7168, 8688
            ]

            junction Junction212 pe
            [
                position = 8096, 8688
            ]

            junction Junction199 pe
            [
                position = 8096, 8688
            ]

            junction Junction289 pe
            [
                position = 7600, 8688
            ]

            junction Junction312 pe
            [
                position = 8016, 8344
            ]

            junction Junction314 pe
            [
                position = 8456, 8000
            ]

            junction Junction316 pe
            [
                position = 8592, 8688
            ]

            junction Junction317 pe
            [
                position = 9248, 8688
            ]

            junction Junction318 pe
            [
                position = 9376, 8688
            ]

            junction Junction320 pe
            [
                position = 9248, 7904
            ]

            junction Junction321 pe
            [
                position = 9376, 8000
            ]

            junction Junction322 pe
            [
                position = 9496, 8096
            ]

            junction Junction323 pe
            [
                position = 8320, 8688
            ]

            junction Junction324 pe
            [
                position = 8096, 8544
            ]

            junction Junction325 pe
            [
                position = 8096, 8544
            ]

            junction Junction326 pe
            [
                position = 8176, 8096
            ]

            junction Junction327 pe
            [
                position = 8592, 8096
            ]

            junction Junction328 pe
            [
                position = 8016, 7904
            ]

            junction Junction329 pe
            [
                position = 8320, 7904
            ]

            junction Junction330 pe
            [
                position = 7728, 8688
            ]

            junction Junction331 pe
            [
                position = 7856, 8688
            ]

            junction Junction332 pe
            [
                position = 8096, 8360
            ]

            junction Junction333 pe
            [
                position = 8456, 8688
            ]

            junction Junction334 pe
            [
                position = 9496, 8688
            ]

            connect Xi_b1.out Goto44 as Connection374
            connect La1.p_node Ia1.p_node as Connection665
            connect Product1.in1 Gain1.out as Connection1073
            connect Vc_inv.n_node Junction290 as Connection1060
            connect Junction291 Junction290 as Connection1064
            [
                breakpoints = 7088, 8688; 7168, 8688
            ]
            connect Va2.n_node Junction289 as Connection1057
            connect R0b1.n_node L0b1.n_node as Connection385
            connect Xi_b1.n_node Junction160 as Connection388
            connect Goto35 Xi_a1.out as Connection342
            connect Xi_c1.out Goto38 as Connection313
            connect setpoint_P Controller.U_P as Connection1289
            connect From3 Gain1.in as Connection1072
            connect Constant1.out Goto18 as Connection1096
            connect Vc2.out Goto33 as Connection617
            [
                breakpoints = 7840, 8480; 7824, 8480
            ]
            connect From2 Product1.in as Connection1074
            connect Ic1.out Goto31 as Connection668
            connect Va_inv.p_node R0a1.p_node as Connection1056
            connect Lc1.p_node Ic1.p_node as Connection663
            connect Rt0b1.n_node Junction160 as Connection351
            connect L0c1.p_node Xi_c1.p_node as Connection328
            connect Va2.out Goto34 as Connection624
            connect R0c1.n_node L0c1.n_node as Connection330
            connect VbG.out Vb_G as Connection1126
            connect Junction290 Junction289 as Connection1061
            [
                breakpoints = 7168, 8688; 7600, 8688
            ]
            connect Goto39 Ib1.out as Connection669
            connect Vc_inv.p_node R0c1.p_node as Connection1054
            connect Va_G VaG.out as Connection1125
            connect Lb1.p_node Ib1.p_node as Connection664
            connect Vb_inv.p_node R0b1.p_node as Connection1055
            connect Rc1.n_node Lc1.n_node as Connection399
            connect L0a1.p_node Xi_a1.p_node as Connection378
            connect Junction198 Junction199 as Connection537
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect Vb2.out Goto42 as Connection616
            connect Product1.out "Bus Split1.in" as Connection1075
            connect Vb_inv.n_node Junction291 as Connection1063
            connect La1.n_node Ra1.n_node as Connection401
            connect Va_inv.n_node Junction291 as Connection1065
            [
                breakpoints = 7008, 8688; 7088, 8688
            ]
            connect L0b1.p_node Xi_b1.p_node as Connection372
            connect L0a1.n_node R0a1.n_node as Connection355
            connect Ia1.out Goto32 as Connection666
            connect Rb1.n_node Lb1.n_node as Connection354
            connect Vc_G VcG.out as Connection1127
            connect setpoint_Q Controller.U_Q as Connection1290
            connect Rt0a1.p_node Junction312 as Connection1296
            connect Junction312 Ca1.p_node as Connection1297
            connect Va2.p_node Junction312 as Connection1298
            connect Junction160 Junction314 as Connection1308
            [
                breakpoints = 8096, 8000
            ]
            connect Junction314 Eb1.p_node as Connection1309
            [
                breakpoints = 8456, 8000
            ]
            connect Rb1.p_node Junction314 as Connection1310
            connect Ec1.n_node Junction316 as Connection1314
            connect Junction317 Junction316 as Connection1318
            connect VaG.n_node Junction317 as Connection1319
            connect Junction318 Junction317 as Connection1321
            connect VbG.n_node Junction318 as Connection1322
            connect "Connect GFM.out" CB_control.Close_GCB as Connection1050
            connect S2.a_out Junction320 as Connection1347
            connect Junction320 VaG.p_node as Connection1348
            [
                breakpoints = 9248, 7904; 9248, 7904
            ]
            connect Va Junction320 as Connection1349
            connect VbG.p_node Junction321 as Connection1350
            connect Junction321 S2.b_out as Connection1351
            [
                breakpoints = 9376, 8000; 9376, 8000
            ]
            connect Vb Junction321 as Connection1352
            connect VcG.p_node Junction322 as Connection1353
            connect Junction322 S2.c_out as Connection1354
            [
                breakpoints = 9496, 8096; 9496, 8096
            ]
            connect Vc Junction322 as Connection1355
            connect Ia1.n_node S2.a_in as Connection1356
            connect Ib1.n_node S2.b_in as Connection1357
            connect Ic1.n_node S2.c_in as Connection1358
            connect Ea1.out Goto41 as Connection1360
            [
                breakpoints = 8272, 8344
            ]
            connect Goto40 Eb1.out as Connection1363
            connect Ea1.n_node Junction323 as Connection1366
            connect Cb1.n_node Junction324 as Connection1368
            connect Junction324 Junction212 as Connection1369
            connect Cc1.n_node Junction325 as Connection1372
            connect Junction325 Junction324 as Connection1373
            connect Ca1.n_node Junction325 as Connection1374
            connect Ec1.out Goto30 as Connection1375
            connect Xi_c1.n_node Junction326 as Connection1377
            connect Junction326 Rt0c1.n_node as Connection1378
            [
                breakpoints = 8176, 8096
            ]
            connect Rc1.p_node Junction327 as Connection1380
            connect Junction327 Junction326 as Connection1381
            connect Ec1.p_node Junction327 as Connection1382
            connect Xi_a1.n_node Junction328 as Connection1384
            connect Junction328 Rt0a1.n_node as Connection1385
            [
                breakpoints = 8016, 7904
            ]
            connect Ra1.p_node Junction329 as Connection1387
            connect Junction329 Junction328 as Connection1388
            connect Ea1.p_node Junction329 as Connection1389
            connect Junction289 Junction330 as Connection1391
            [
                breakpoints = 7600, 8688
            ]
            connect Vb2.n_node Junction330 as Connection1393
            connect Junction198 Junction323 as Connection1394
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect Junction330 Junction331 as Connection1395
            connect Junction331 Junction212 as Connection1396
            [
                breakpoints = 8096, 8688
            ]
            connect Vc2.n_node Junction331 as Connection1397
            connect Rt0c1.p_node Cc1.p_node as Connection1399
            connect Vc2.p_node Cc1.p_node as Connection1400
            connect Rt0b1.p_node Junction332 as Connection1401
            connect Junction332 Cb1.p_node as Connection1402
            [
                breakpoints = 8096, 8352; 8096, 8368; 8096, 8368; 8096, 8368
            ]
            connect Vb2.p_node Junction332 as Connection1403
            connect "Bus Split1.out" Va_inv.in as Connection1412
            connect "Bus Split1.out1" Vb_inv.in as Connection1413
            [
                breakpoints = 6984, 7848; 7056, 7848
            ]
            connect "Bus Split1.out2" Vc_inv.in as Connection1414
            [
                breakpoints = 6984, 7864; 7136, 7864
            ]
            connect Junction212 Junction198 as Connection1415
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect Junction316 Junction333 as Connection1416
            [
                breakpoints = 8544, 8688; 8544, 8688; 8544, 8688; 8544, 8688
            ]
            connect Junction333 Junction323 as Connection1417
            connect Eb1.n_node Junction333 as Connection1418
            connect VcG.n_node Junction334 as Connection1419
            connect Junction334 Junction318 as Connection1420
            [
                breakpoints = 9496, 8688
            ]
            connect ground Junction334 as Connection1421
            connect CB_control.CB_status S2.ctrl_in as Connection1422

            maxw_slip = "5e-4"
            minw_slip = "2e-4"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A grid-forming three-phase inverter with a frequency and voltage droop controller</p></body></html>"

                S {
                    label = "Rated Power (System)"
                    widget = edit
                    type = generic
                    default_value = "15.5e6"
                    unit = "VA"
                    group = "1. Three-phase Inverter"
                }

                S_i {
                    label = "Rated Power (Inverter)"
                    widget = edit
                    type = generic
                    default_value = "3e6"
                    unit = "VA"
                    group = "1. Three-phase Inverter"
                }

                V_ABC {
                    label = "Rated Phase Voltage (RMS)"
                    widget = edit
                    type = generic
                    default_value = "480/np.sqrt(3)"
                    unit = "V"
                    group = "1. Three-phase Inverter"
                }

                w_0 {
                    label = "Nominal Frequency"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*60"
                    unit = "rad/s"
                    group = "1. Three-phase Inverter"
                }

                Ts {
                    label = "Execution rate (inverter)"
                    widget = edit
                    type = generic
                    default_value = "Ts_gform"
                    unit = "s"
                    group = "1. Three-phase Inverter"
                }

                Ts_sys {
                    label = "Execution rate (system)"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                    group = "1. Three-phase Inverter"
                }

                R_i {
                    label = "Input Resistance"
                    widget = edit
                    type = generic
                    default_value = "1.5e-3"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_i {
                    label = "Input Inductance"
                    widget = edit
                    type = generic
                    default_value = "10e-6"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R_s {
                    label = "Shunt Resistance"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                C_s {
                    label = "Shunt Capacitance"
                    widget = edit
                    type = generic
                    default_value = "800e-6"
                    unit = "F"
                    group = "2. LCL filter"
                }

                R_o {
                    label = "Output Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.3e-3"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_o {
                    label = "Output Inductance"
                    widget = edit
                    type = generic
                    default_value = "8e-6"
                    unit = "H"
                    group = "2. LCL filter"
                }

                Kp_I {
                    label = "Inner Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "10e-6/1e-3"
                    group = "4. Cascaded Controller"
                }

                Ki_I {
                    label = "Inner Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "1.5e-3/1e-3"
                    group = "4. Cascaded Controller"
                }

                Imax {
                    label = "Inner Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "1"
                    group = "4. Cascaded Controller"
                }

                Imin {
                    label = "Inner Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-1"
                    group = "4. Cascaded Controller"
                }

                Kp_V {
                    label = "Outer Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "0.291176"
                    group = "4. Cascaded Controller"
                }

                Ki_V {
                    label = "Outer Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "0.291176*132.4743"
                    group = "4. Cascaded Controller"
                }

                Vmax {
                    label = "Outer Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "1"
                    group = "4. Cascaded Controller"
                }

                Vmin {
                    label = "Outer Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-1"
                    group = "4. Cascaded Controller"
                }

                f_D {
                    label = "Frequency Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "3e-1"
                    unit = "%"
                    group = "5. Droop Control"
                }

                V_D {
                    label = "Voltage Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "5e-4"
                    unit = "%"
                    group = "5. Droop Control"
                }

                T_m {
                    label = "Measurement delay"
                    widget = edit
                    type = generic
                    default_value = "0.5"
                    unit = "s"
                    group = "5. Droop Control"
                }

                maxV_slip {
                    label = "Maximum slip (voltage)"
                    widget = edit
                    type = generic
                    default_value = "5e-4"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                minV_slip {
                    label = "Minimum slip (voltage)"
                    widget = edit
                    type = generic
                    default_value = "2e-4"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                maxw_slip {
                    label = "Maximum slip (frequency)"
                    widget = edit
                    type = generic
                    default_value = "8e-4"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                minw_slip {
                    label = "Minimum slip (frequency)"
                    widget = edit
                    type = generic
                    default_value = "4e-4"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                maxQ_pds {
                    label = "Maximum difference signal (reactive power)"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                maxP_pds {
                    label = "Maximum difference signal (active power)"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                Kp_PLL {
                    label = "Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "5"
                    group = "7. Phase Locked Loop"
                }

                Ki_PLL {
                    label = "Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "2"
                    group = "7. Phase Locked Loop"
                }

                PLL_max {
                    label = "Saturation Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*63"
                    group = "7. Phase Locked Loop"
                }

                PLL_min {
                    label = "Saturation Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*57"
                    group = "7. Phase Locked Loop"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    S_i = mdl.get_property_value(mdl.prop(item_handle, "S_i"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    Ts_sys = mdl.get_property_value(mdl.prop(item_handle, "Ts_sys"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    maxV_slip = mdl.get_property_value(mdl.prop(item_handle, "maxV_slip"))
                    minV_slip = mdl.get_property_value(mdl.prop(item_handle, "minV_slip"))
                    maxw_slip = mdl.get_property_value(mdl.prop(item_handle, "maxw_slip"))
                    minw_slip = mdl.get_property_value(mdl.prop(item_handle, "minw_slip"))
                    maxQ_pds = mdl.get_property_value(mdl.prop(item_handle, "maxQ_pds"))
                    maxP_pds = mdl.get_property_value(mdl.prop(item_handle, "maxP_pds"))
                    Kp_PLL = mdl.get_property_value(mdl.prop(item_handle, "Kp_PLL"))
                    Ki_PLL = mdl.get_property_value(mdl.prop(item_handle, "Ki_PLL"))
                    PLL_max = mdl.get_property_value(mdl.prop(item_handle, "PLL_max"))
                    PLL_min = mdl.get_property_value(mdl.prop(item_handle, "PLL_min"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = 2*S/(3*V_DQ)
                    Z_DQ = V_DQ/I_DQ
                    C_DQ = 1/(Z_DQ*w_0)
                    L_DQ = Z_DQ/w_0
                    
                    Kp_I = Kp_I/Z_DQ
                    Ki_I = Ki_I*C_DQ
                    Kp_V = Kp_V*Z_DQ
                    Ki_V = Ki_V*L_DQ
                    
                    Rs = R_s/Z_DQ
                    Cs = C_s/C_DQ
                    Li = L_i/L_DQ
                    
                    mP = w_0*(f_D/100)
                    nQ = V_DQ*(V_D/100)
                    D_f = 1/mP
                    D_V = 1/nQ
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, 'grid_forming_inverter.svg')
                ENDCODE

                CODE pre_compile
                ENDCODE
            }
        }
        [
            position = 7424, 8032
            scale = 1, -1
            size = 168, 112
        ]

        component Subsystem Coupling29 {
            layout = dynamic
            component "core/Three Phase Core Coupling" "Core Coupling 1" {
            }
            [
                position = 8168, 8144
                size = 12, 256
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction2 as Connection26
                [
                    breakpoints = 8192, 8288
                ]
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "C_snubber480"
                R = "RC_snubber480"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8064, 8280
                size = 64, 48
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7904, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7904, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7904, 8240
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8080, 8240
            ]

            junction Junction2 pe
            [
                position = 8064, 8144
            ]

            junction Junction3 pe
            [
                position = 8048, 8048
            ]

            connect A Junction3 as Connection34
            [
                breakpoints = 8048, 8048
            ]
            connect B Junction2 as Connection30
            connect C Junction1 as Connection27
            connect "Core Coupling 1.c_in" Junction1 as Connection29
            connect "Core Coupling 1.b_in" Junction2 as Connection32
            connect "Core Coupling 1.a_in" Junction3 as Connection36
            connect "Core Coupling 1.a_out" a as Connection33
            connect "Core Coupling 1.b_out" b as Connection25
            connect Junction1 "RC Snubber.C" as Connection28
            [
                breakpoints = 8080, 8240
            ]
            connect Junction2 "RC Snubber.B" as Connection31
            [
                breakpoints = 8064, 8144
            ]
            connect Junction3 "RC Snubber.A" as Connection35
            connect c "Core Coupling 1.c_out" as Connection26
        }
        [
            position = 7688, 8168
            rotation = right
            scale = -1, -1
            size = 48, 80
        ]

        component Subsystem Coupling16_2 {
            layout = dynamic
            component "core/Four Phase TLM Core Coupling" "Core Coupling" {
                capacitance = "C_core13800"
                inductance = "L_core13800"
                type = "Capacitive"
            }
            [
                position = 8096, 8192
                size = 12, 352
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7904, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7904, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7904, 8240
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7904, 8336
            ]

            connect "Core Coupling.d_out" g as Connection28
            connect "Core Coupling.c_out" c as Connection29
            connect b "Core Coupling.b_out" as Connection30
            connect "Core Coupling.a_out" a as Connection31
            connect "Core Coupling.b_in" B as Connection33
            [
                breakpoints = 8064, 8144
            ]
            connect G "Core Coupling.d_in" as Connection32
            [
                breakpoints = 8064, 8336
            ]
            connect A "Core Coupling.a_in" as Connection34
            [
                breakpoints = 8048, 8048
            ]
            connect "Core Coupling.c_in" C as Connection35
        }
        [
            position = 7488, 8752
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem Coupling29_2 {
            layout = dynamic
            component "core/Three Phase TLM Core Coupling" "Core Coupling" {
                capacitance = "C_core480"
                inductance = "L_core480"
            }
            [
                position = 8080, 8144
                size = 12, 256
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7904, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7904, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7904, 8240
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            connect A "Core Coupling.a_in" as Connection1
            connect "Core Coupling.a_out" a as Connection2
            connect b "Core Coupling.b_out" as Connection3
            connect "Core Coupling.b_in" B as Connection4
            connect C "Core Coupling.c_in" as Connection5
            connect "Core Coupling.c_out" c as Connection6
        }
        [
            position = 7688, 8232
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem Coupling19_2 {
            layout = dynamic
            component "core/Four Phase Device Coupling" "Device Coupling 1" {
                C1 = "10e-6"
                R1 = "1"
                snb_type_i = "none"
            }
            [
                position = 8064, 8192
                scale = -1, 1
                size = 32, 352
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7936, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7936, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7936, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7936, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8184, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8184, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8184, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8184, 8336
                rotation = down
            ]

            connect B "Device Coupling 1.b_out" as Connection61
            connect A "Device Coupling 1.a_out" as Connection63
            connect G "Device Coupling 1.d_out" as Connection65
            connect "Device Coupling 1.c_out" C as Connection68
            connect "Device Coupling 1.d_in" g as Connection69
            connect c "Device Coupling 1.c_in" as Connection70
            connect "Device Coupling 1.b_in" b as Connection71
            connect a "Device Coupling 1.a_in" as Connection72
        }
        [
            position = 8424, 7592
            rotation = left
            scale = 1, -1
            size = 48, 80
        ]

        component "core/Voltage RMS" Vrms_bus202_2 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 7864, 8152
            rotation = right
            size = 64, 32
        ]

        component Subsystem Coupling29_3 {
            layout = dynamic
            component "core/Four Phase TLM Core Coupling" "Core Coupling" {
                capacitance = "C_core480"
                inductance = "L_core13800"
                type = "Capacitive"
            }
            [
                position = 8096, 8192
                size = 12, 352
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7904, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7904, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7904, 8240
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7904, 8336
            ]

            connect "Core Coupling.d_out" g as Connection28
            connect "Core Coupling.c_out" c as Connection29
            connect b "Core Coupling.b_out" as Connection30
            connect "Core Coupling.a_out" a as Connection31
            connect "Core Coupling.b_in" B as Connection33
            [
                breakpoints = 8064, 8144
            ]
            connect G "Core Coupling.d_in" as Connection32
            [
                breakpoints = 8064, 8336
            ]
            connect A "Core Coupling.a_in" as Connection34
            [
                breakpoints = 8048, 8048
            ]
            connect "Core Coupling.c_in" C as Connection35
        }
        [
            position = 7432, 8200
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem Coupling16_3 {
            layout = dynamic
            component "core/Four Phase TLM Core Coupling" "Core Coupling" {
                capacitance = "C_core13800"
                inductance = "L_core13800"
                type = "Capacitive"
            }
            [
                position = 8096, 8192
                size = 12, 352
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7904, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7904, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7904, 8240
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7904, 8336
            ]

            connect "Core Coupling.d_out" g as Connection28
            connect "Core Coupling.c_out" c as Connection29
            connect b "Core Coupling.b_out" as Connection30
            connect "Core Coupling.a_out" a as Connection31
            connect "Core Coupling.b_in" B as Connection33
            [
                breakpoints = 8064, 8144
            ]
            connect G "Core Coupling.d_in" as Connection32
            [
                breakpoints = 8064, 8336
            ]
            connect A "Core Coupling.a_in" as Connection34
            [
                breakpoints = 8048, 8048
            ]
            connect "Core Coupling.c_in" C as Connection35
        }
        [
            position = 6840, 8736
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        tag Tag36 {
            value = "Ground"
            scope = global
            kind = pe
        }
        [
            position = 8680, 6600
            hide_name = True
            scale = -1, 1
        ]

        tag Tag37 {
            value = "Ground"
            scope = global
            kind = pe
        }
        [
            position = 8688, 7464
            hide_name = True
            scale = -1, 1
        ]

        tag Tag78 {
            value = "Ground"
            scope = global
            kind = pe
        }
        [
            position = 8688, 7560
            rotation = down
            hide_name = True
        ]

        tag Tag79 {
            value = "F2_Ground"
            scope = global
            kind = pe
        }
        [
            position = 8688, 7624
            rotation = down
            hide_name = True
        ]

        tag Tag4 {
            value = "F2_Ground"
            scope = global
            kind = pe
        }
        [
            position = 7192, 7760
            hide_name = True
            scale = -1, 1
        ]

        tag Tag5 {
            value = "F2_Ground1"
            scope = global
            kind = pe
        }
        [
            position = 7192, 7848
            hide_name = True
            scale = -1, 1
        ]

        tag Tag12 {
            value = "F2_Ground2"
            scope = global
            kind = pe
        }
        [
            position = 7744, 9464
            hide_name = True
            scale = -1, 1
        ]

        tag Tag9 {
            value = "F2_Ground2"
            scope = global
            kind = pe
        }
        [
            position = 7568, 8816
            hide_name = True
            scale = -1, 1
        ]

        tag Tag8 {
            value = "F2_Ground_CIL"
            scope = global
            kind = pe
        }
        [
            position = 6936, 9000
            hide_name = True
            scale = -1, 1
        ]

        tag Tag11 {
            value = "F2_Ground2"
            scope = global
            kind = pe
        }
        [
            position = 7400, 9464
            hide_name = True
            scale = -1, 1
        ]

        tag Tag6 {
            value = "F2_Ground1"
            scope = global
            kind = pe
        }
        [
            position = 7568, 8696
            hide_name = True
            scale = -1, 1
        ]

        tag Tag10 {
            value = "F2_Ground2"
            scope = global
            kind = pe
        }
        [
            position = 7576, 9016
            hide_name = True
            scale = -1, 1
        ]

        tag Goto9 {
            value = "V204"
            scope = global
            kind = sp
            direction = in
        }
        [
            position = 6936, 8864
            hide_name = True
        ]

        tag From3 {
            value = "V204"
            scope = global
            kind = sp
            direction = out
        }
        [
            position = 7312, 8536
            hide_name = True
        ]

        tag Tag83 {
            value = "F2_Ground1"
            scope = global
            kind = pe
        }
        [
            position = 7504, 8240
            hide_name = True
            scale = -1, 1
        ]

        tag Tag84 {
            value = "F2_Ground_GFM"
            scope = global
            kind = pe
        }
        [
            position = 7504, 8152
            hide_name = True
            scale = -1, 1
        ]

        tag Tag85 {
            value = "F2_Ground_GFM"
            scope = global
            kind = pe
        }
        [
            position = 7560, 7952
            hide_name = True
            scale = -1, 1
        ]

        tag Tag86 {
            value = "F2_Ground_CIL"
            scope = global
            kind = pe
        }
        [
            position = 6912, 8784
            hide_name = True
            scale = -1, 1
        ]

        tag Tag87 {
            value = "F2_Ground1"
            scope = global
            kind = pe
        }
        [
            position = 6912, 8680
            hide_name = True
            scale = -1, 1
        ]

        junction Junction493 pe
        [
            position = 8488, 6952
        ]

        junction Junction495 pe
        [
            position = 8584, 6600
        ]

        junction Junction388 pe
        [
            position = 7464, 9136
        ]

        junction Junction389 pe
        [
            position = 7480, 9152
        ]

        junction Junction390 pe
        [
            position = 7496, 9168
        ]

        junction Junction433 pe
        [
            position = 7112, 8648
        ]

        junction Junction436 pe
        [
            position = 7080, 8616
        ]

        junction Junction514 pe
        [
            position = 7272, 8616
        ]

        junction Junction515 pe
        [
            position = 7312, 8632
        ]

        junction Junction518 pe
        [
            position = 7408, 8304
        ]

        junction Junction522 pe
        [
            position = 7424, 8376
        ]

        junction Junction523 pe
        [
            position = 7392, 9136
        ]

        junction Junction524 pe
        [
            position = 7424, 9152
        ]

        junction Junction569 pe
        [
            position = 7080, 8616
        ]

        junction Junction576 pe
        [
            position = 7112, 8648
        ]

        junction Junction580 pe
        [
            position = 8584, 6968
        ]

        junction Junction598 pe
        [
            position = 8488, 6952
        ]

        junction Junction670 pe
        [
            position = 7408, 8616
        ]

        junction Junction671 pe
        [
            position = 7424, 8632
        ]

        junction Junction672 pe
        [
            position = 7440, 8648
        ]

        junction Junction680 pe
        [
            position = 8064, 7696
        ]

        junction Junction681 pe
        [
            position = 7408, 8272
        ]

        junction Junction682 pe
        [
            position = 7424, 8320
        ]

        junction Junction683 pe
        [
            position = 7440, 8336
        ]

        junction Junction685 pe
        [
            position = 7424, 8128
        ]

        junction Junction686 pe
        [
            position = 7408, 8112
        ]

        junction Junction689 pe
        [
            position = 7096, 8632
        ]

        junction Junction690 pe
        [
            position = 7096, 8632
        ]

        junction Junction691 pe
        [
            position = 8080, 7696
        ]

        junction Junction692 pe
        [
            position = 8096, 7712
        ]

        comment Comment8 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">208V                    </p></body></html> ENDCOMMENT 
        [
            position = 6544, 8960
        ]

        connect Junction495 Tag36 as Connection4156
        [
            breakpoints = 8584, 6600
        ]
        connect Vs1.n_node Junction495 as Connection4157
        connect gnd2.node Junction495 as Connection4155
        connect CIL_F2_Critical3.A Junction518 as Connection4251
        connect CIL_F2_Interruptible3.A Feeder2_trafo1.a2 as Connection3318
        connect CIL_F2_Interruptible4.A Feeder2_trafo3.a2 as Connection3321
        connect CIL_F2_Priority3.A Feeder2_trafo4.a2 as Connection3324
        connect Coupling17.a F2_CB1.A as Connection3864
        connect Coupling17.c F2_CB1.C as Connection3866
        connect F2_CB1.B Coupling17.b as Connection3865
        connect F2_CB1.c Feeder2_line1.c_out as Connection3771
        connect F2_CB1.a Feeder2_line1.a_out as Connection3005
        connect F2_CB4.A Junction388 as Connection3086
        connect F2_CB4.B Junction389 as Connection3084
        connect F2_CB4.C Junction390 as Connection3082
        connect F2_CB6.V Goto9 as Connection4494
        connect F2_CB7.a Feeder2_trafo2.A1 as Connection3032
        connect F2_CB7.c Feeder2_trafo2.C1 as Connection3028
        connect F2_CB7.b Feeder2_trafo2.B1 as Connection3030
        connect F2_CB8.B Junction524 as Connection4267
        connect F2_PCC.B F2_line.b_in as Connection3390
        connect F2_PCC.G Tag37 as Connection3388
        connect F2_line.c_in F2_PCC.C as Connection3391
        connect F2_line.a_in F2_PCC.A as Connection3501
        connect Feeder2_line1.b_out F2_CB1.b as Connection3680
        connect Feeder2_trafo1.c2 CIL_F2_Interruptible3.C as Connection3320
        connect Feeder2_trafo1.b2 CIL_F2_Interruptible3.B as Connection3319
        connect Feeder2_trafo1.C1 F2_CB6.c as Connection3020
        connect Feeder2_trafo1.B1 F2_CB6.b as Connection3716
        connect Feeder2_trafo1.A1 F2_CB6.a as Connection3711
        connect Feeder2_trafo3.b2 CIL_F2_Interruptible4.B as Connection3322
        connect Feeder2_trafo3.c2 CIL_F2_Interruptible4.C as Connection3323
        connect Feeder2_trafo3.B1 F2_CB8.b as Connection3065
        connect Feeder2_trafo3.A1 F2_CB8.a as Connection3067
        connect Feeder2_trafo3.C1 F2_CB8.c as Connection3063
        connect Feeder2_trafo4.c2 CIL_F2_Priority3.C as Connection3767
        connect Feeder2_trafo4.b2 CIL_F2_Priority3.B as Connection3325
        connect Feeder2_trafo4.B1 F2_CB4.b as Connection3083
        connect Feeder2_trafo4.C1 F2_CB4.c as Connection3081
        connect Feeder2_trafo4.A1 F2_CB4.a as Connection3085
        connect Feeder2_trafo4.G Tag12 as Connection3727
        connect From3 F2_CB5.V as Connection4507
        connect Junction388 Junction523 as Connection4264
        [
            breakpoints = 7464, 9136; 7464, 9136; 7464, 9136
        ]
        connect Junction390 F2_CB8.C as Connection3080
        [
            breakpoints = 7496, 9168; 7496, 9168; 7496, 9168
        ]
        connect Junction514 Junction436 as Connection4227
        [
            breakpoints = 7184, 8616; 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616
        ]
        connect Junction518 "Transfo 201.S1" as Connection4250
        [
            breakpoints = 7408, 8400
        ]
        connect Junction522 "Transfo 201.S2" as Connection4262
        connect Junction523 F2_CB8.A as Connection4265
        [
            breakpoints = 7392, 9136; 7296, 9136
        ]
        connect Junction524 Junction389 as Connection4268
        connect Junction569 "3ph Fault 204.A" as Connection4457
        connect Junction569 Junction436 as Connection4456
        connect Junction576 "3ph Fault 204.C" as Connection4492
        [
            breakpoints = 7112, 8648
        ]
        connect Tag10 Feeder2_trafo2.G as Connection3416
        connect Tag11 Feeder2_trafo3.G as Connection3708
        connect Tag4 Coupling17.G as Connection3744
        connect Tag5 Coupling17.g as Connection3411
        connect Tag8 Feeder2_trafo1.G as Connection3414
        connect "Transfo 201.P3" F2_CB5.c as Connection4243
        connect "Transfo 201.P2" F2_CB5.b as Connection4245
        connect "Transfo 201.P1" F2_CB5.a as Connection4247
        connect Vrms_bus202.n_node Junction522 as Connection4263
        connect Vrms_bus204.p_node Junction514 as Connection4228
        connect Vrms_bus204.n_node Junction515 as Connection4231
        connect Vrms_bus205.p_node Junction523 as Connection4266
        connect Vrms_bus205.n_node Junction524 as Connection4269
        connect Junction433 Junction576 as Connection4565
        [
            breakpoints = 7112, 8648; 7112, 8648; 7112, 8648; 7112, 8648; 7112, 8648
        ]
        connect Vs1.b_node Junction580 as Connection4594
        connect F2_line.b_out Junction580 as Connection4596
        connect Vs1.a_node Junction493 as Connection4700
        [
            breakpoints = 8488, 6952
        ]
        connect Junction598 Junction493 as Connection4702
        connect F2_line.a_out Junction598 as Connection4703
        [
            breakpoints = 8568, 6984; 8488, 6984
        ]
        connect Feeder2_line1.c_in Junction433 as Connection4801
        [
            breakpoints = 7112, 8648; 7112, 8648; 7112, 8648; 7112, 8648; 7112, 8648; 7112, 8648
        ]
        connect Pref_form.out "Grid forming inverter (averaged).setpoint_P" as Connection4958
        connect Qref_form.out "Grid forming inverter (averaged).setpoint_Q" as Connection4959
        connect Tag6 Coupling16_2.G as Connection5090
        connect Tag9 Coupling16_2.g as Connection5091
        connect Coupling16_2.a F2_CB7.A as Connection5092
        connect F2_CB7.B Coupling16_2.b as Connection5093
        connect F2_CB7.C Coupling16_2.c as Connection5094
        connect Junction514 Junction670 as Connection5095
        [
            breakpoints = 7272, 8616
        ]
        connect Junction670 F2_CB5.A as Connection5096
        [
            breakpoints = 7408, 8616; 7408, 8616; 7408, 8616
        ]
        connect Coupling16_2.A Junction670 as Connection5097
        connect Junction515 Junction671 as Connection5098
        [
            breakpoints = 7312, 8632; 7312, 8632
        ]
        connect Junction671 F2_CB5.B as Connection5099
        [
            breakpoints = 7424, 8632
        ]
        connect Coupling16_2.B Junction671 as Connection5100
        connect F2_CB5.C Junction672 as Connection5101
        connect Coupling16_2.C Junction672 as Connection5103
        connect Junction672 Junction433 as Connection5201
        [
            breakpoints = 7440, 8648; 7440, 8648; 7184, 8648; 7112, 8648; 7112, 8648; 7112, 8648; 7112, 8648; 7112, 8648; 7112, 8648
        ]
        connect Junction388 Feeder2_trafo2.a2 as Connection5200
        [
            breakpoints = 7464, 9136; 7464, 9136; 7464, 9136; 7464, 9136; 7464, 9136; 7464, 9136
        ]
        connect Vrms_grid.p_node Junction598 as Connection5204
        [
            breakpoints = 8240, 6952; 8240, 6952; 8240, 6952; 8240, 6952; 8400, 6952; 8400, 6952
        ]
        connect Feeder2_trafo2.b2 Junction389 as Connection5203
        [
            breakpoints = 7480, 9152; 7480, 9152; 7480, 9152; 7480, 9152; 7480, 9152; 7480, 9152; 7480, 9152
        ]
        connect Junction436 Feeder2_line1.a_in as Connection5192
        [
            breakpoints = 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616; 7080, 8616
        ]
        connect Feeder2_trafo2.c2 Junction390 as Connection5195
        [
            breakpoints = 7496, 9064; 7496, 9168; 7496, 9168; 7496, 9168; 7496, 9168; 7496, 9168
        ]
        connect Junction580 Vrms_grid.n_node as Connection5227
        [
            breakpoints = 8584, 6968; 8584, 6968; 8584, 6968; 8584, 6968; 8584, 6968; 8584, 6968; 8488, 6968; 8272, 6968; 8272, 6968; 8272, 6968; 8272, 6968
        ]
        connect "Device Marker1.node" Junction493 as Connection5226
        [
            breakpoints = 8808, 6952; 8736, 6952; 8736, 6952; 8736, 6952; 8568, 6952; 8568, 6952; 8568, 6952; 8568, 6952
        ]
        connect Vs1.c_node F2_line.c_out as Connection5225
        [
            breakpoints = 8680, 6984; 8680, 6984; 8680, 6984; 8600, 6984; 8600, 6984
        ]
        connect Coupling17.A Junction680 as Connection5307
        connect Vrms_bus201.p_node Junction680 as Connection5309
        connect Tag84 Coupling29_3.G as Connection5316
        connect Tag83 Coupling29_3.g as Connection5317
        connect Vrms_bus202.p_node Junction681 as Connection5327
        connect Junction681 Junction518 as Connection5328
        [
            breakpoints = 7408, 8272; 7408, 8272; 7408, 8272
        ]
        connect Coupling29_3.a Junction681 as Connection5329
        connect Junction522 Junction682 as Connection5330
        [
            breakpoints = 7424, 8376; 7424, 8376; 7424, 8376
        ]
        connect Junction682 CIL_F2_Critical3.B as Connection5331
        [
            breakpoints = 7424, 8320; 7424, 8320; 7424, 8320
        ]
        connect Coupling29_3.b Junction682 as Connection5332
        connect CIL_F2_Critical3.C Junction683 as Connection5333
        connect Junction683 "Transfo 201.S3" as Connection5334
        [
            breakpoints = 7440, 8336; 7440, 8336; 7440, 8336; 7440, 8400
        ]
        connect Coupling29_3.c Junction683 as Connection5335
        connect "Grid forming inverter (averaged).Vb" Junction685 as Connection5339
        connect Junction685 Vrms_bus202_2.n_node as Connection5340
        [
            breakpoints = 7424, 8128; 7424, 8128; 7480, 8128; 7744, 8128; 7744, 8192
        ]
        connect Coupling29_3.B Junction685 as Connection5341
        connect Coupling29_3.C "Grid forming inverter (averaged).Vc" as Connection5342
        [
            breakpoints = 7440, 8160; 7440, 8096
        ]
        connect Vrms_bus202_2.p_node Junction686 as Connection5344
        connect Junction686 "Grid forming inverter (averaged).Va" as Connection5345
        [
            breakpoints = 7408, 8112; 7360, 8112
        ]
        connect Coupling29_3.A Junction686 as Connection5346
        connect Tag85 "Grid forming inverter (averaged).ground" as Connection5347
        connect F2_CB6.C Coupling16_3.c as Connection5400
        connect Coupling16_3.C Junction576 as Connection5401
        connect F2_CB6.A Coupling16_3.a as Connection5402
        connect Coupling16_3.A Junction569 as Connection5403
        connect Coupling16_3.b F2_CB6.B as Connection5405
        connect Tag86 Coupling16_3.g as Connection5409
        connect Tag87 Coupling16_3.G as Connection5410
        connect Feeder2_line1.b_in Junction689 as Connection5413
        connect Junction689 Junction515 as Connection5414
        [
            breakpoints = 7096, 8632; 7096, 8632; 7096, 8632; 7096, 8632; 7096, 8632; 7096, 8632; 7096, 8632; 7096, 8632; 7096, 8632; 7096, 8632; 7096, 8632; 7096, 8632; 7096, 8632; 7096, 8632; 7224, 8632; 7224, 8632
        ]
        connect "3ph Fault 204.B" Junction690 as Connection5416
        connect Junction690 Junction689 as Connection5417
        connect Coupling16_3.B Junction690 as Connection5418
        connect "Device Marker4.node" Junction691 as Connection5421
        connect Junction691 Junction680 as Connection5422
        [
            breakpoints = 8080, 7696; 8080, 7696; 8080, 7696; 8080, 7696; 8080, 7696; 8064, 7696
        ]
        connect Coupling19.a Junction691 as Connection5423
        connect Coupling17.B Junction692 as Connection5424
        [
            breakpoints = 7304, 7712; 7752, 7712; 7752, 7712
        ]
        connect Junction692 Vrms_bus201.n_node as Connection5425
        [
            breakpoints = 8096, 7712; 8096, 7712
        ]
        connect Coupling19.b Junction692 as Connection5426
        connect Coupling19.c Coupling17.C as Connection5427
        [
            breakpoints = 8600, 7728; 7112, 7728
        ]
        connect Coupling19.g Tag79 as Connection5428
        connect Coupling19.G Tag78 as Connection5429
        connect Coupling19.C F2_PCC.c as Connection5430
        connect F2_PCC.b Coupling19.B as Connection5431
        connect Coupling19.A F2_PCC.a as Connection5432
    }

    logically_deleted {
        "Coupling17.Core Coupling"
        "F2_CB8.MID_Rly1"
        "F2_CB6.MID_Rly1"
        "F2_CB4.MID_Rly1"
        "Coupling16"
        "F2_CB1.MID_Rly1"
        "F2_CB7.MID_Rly1"
        "F2_CB5.MID_Rly1"
        "Coupling29"
        "Coupling29_2"
        "Coupling19_2"
    }

    default {
        gen_PQ_transform {
            filter_order = "first order"
            filter_cutoff_Hz = "30"
            initial_filter_input = "0"
            initial_filter_output = "0"
            enable_inst_ports = "True"
            enable_zero_ports = "False"
            execution_rate = "inherit"
        }

        gen_abs {
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            input_terminals = "real in;"
            input_terminals_show_labels = "False;"
            input_terminals_feedthrough = "True;"
            input_terminals_dimensions = "inherit;"
            output_terminals = "real out;"
            output_terminals_show_labels = "False;"
            output_terminals_feedthrough = "True;"
            output_terminals_dimensions = "inherit;"
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_data_type_conversion {
            output_type = "real"
            execution_rate = "inherit"
        }

        gen_delay {
            delay_type = "Fixed delay"
            del_length = "2"
            max_delay_length = "20"
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_math_fnc {
            mathematical_fn = "exponential"
            execution_rate = "inherit"
        }

        gen_pid_controller {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            show_reset = "none"
            upper_sat_lim = "1"
            upper_sat_lim_source = "internal"
            lower_sat_lim = "-1"
            lower_sat_lim_source = "internal"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_rate_limiter {
            rising_limit = "1"
            falling_limit = "-1"
            execution_rate = "inherit"
        }

        gen_rel_op {
            relational_op = "=="
            execution_rate = "inherit"
        }

        gen_rms_value {
            op_mode = "PLL based"
            frequency = "50"
            period_timeout = "0.5"
            execution_rate = "inherit"
        }

        gen_sr_ff {
            init_value = "0"
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_trigonometric {
            trigonometric_fn = "sin"
            angle = "Radians"
            execution_rate = "inherit"
        }

        msr_phasor_3ph {
            period_timeout = "0.5"
            angle = "Degrees"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        sys_hil_marker {
            hil_device_id = "0"
            override_hw_settings = "False"
            hw_configuration_id = "1"
            override_sim_settings = "False"
            simulation_method = "exact"
            simulation_time_step = "auto"
            ss_calc_method = "systematic elimination"
            enb_pole_shift = "True"
            enb_gds_oversampling = "True"
            show_modes = "False"
            cpl_stb = "False"
            cpl_dynamics_analysis = "False"
            matrix_based_reduction = "True"
            enb_dep_sw_detect = "False"
            export_ss_to_pickle = "False"
            override_user_sp_settings = "False"
            user_cpu_optimization = "high"
            code_section = "Internal Memory"
            data_section = "Internal Memory"
            override_sys_sp_settings = "False"
            sys_cpu_optimization = "high"
            sys_sp_rate_1 = "100e-6"
            sys_sp_rate_2 = "50e-3"
        }

        sys_mp_signal_switch {
            number_of_input_terminals = "2"
            execution_rate = "inherit"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Four Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100e3"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
            cpl_connection = "star"
        }

        "core/Four Phase Device Coupling" {
            snb_type_i = "R1"
            R1 = "inf"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "True"
            snb_type_u = "R2"
            R2 = "0.0"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "True"
        }

        "core/Four Phase TLM Core Coupling" {
            type = "Inductive"
            capacitance = "1e-3"
            inductance = "1e-3"
            embedded_components = "False"
            ratio_type = "Automatic"
            ratio = "0.1"
            cpl_connection = "3 CPLs, Star Connection"
        }

        "core/ModBus Device" {
            hil_id = "0"
            configuration = "config1"
            preview = "Configuration preview"
            network_settings_src = "Configuration dictionary"
            ip_addr = "192.168.0.210"
            netmask = "255.255.255.0"
            port = "502"
            gateway = "192.168.0.210"
            gateway_enable = "False"
            ip_address_port = "False"
            request_counter_port = "None"
            defines = ""
            modbus_sunspec = "False"
            logging = "False"
            execution_rate = "100e-6"
            _supported_platforms = "[\'hil\']"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Three Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100e3"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
            cpl_connection = "star"
        }

        "core/Three Phase TLM Core Coupling" {
            type = "Inductive"
            capacitance = "1e-3"
            inductance = "1e-3"
            embedded_components = "False"
            ratio_type = "Automatic"
            ratio = "0.1"
            cpl_connection = "3 CPLs, Star Connection"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            core_model = "Linear"
            ioc1 = "0.7"
            Poc1 = "460.0"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[1910.3, 2419.7]"
            current_vals_SI = "[0.66653, 277.72]"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[1.2, 1.52]"
            current_vals_pu = "[0.0024, 1]"
            flux_vals_SCOC = "[1.2, 1.52]"
            current_vals_SCOC = "[0.0024, 1]"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "None"
            coupling_type = "core"
            ratio_type = "Automatic"
            ratio = "0.1"
            Rshunt = "inf"
        }

        "core/Three Phase Voltage Source" {
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Three phase PLL" {
            initial_filter_output = "60"
            wn = "157.0796"
            zeta = "0.707"
            rate_high = "12"
            rate_low = "-12"
            freq_unit = "Hz"
            kp = "100"
            ki = "3200"
            kd = "1"
            N = "714.2857"
            initial_pid_output = "376.99111843"
            up_lim = "1e4"
            low_lim = "-1e4"
            kb = "1"
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "False"
            wn_LPFdq = "62.83185307"
            execution_rate = "inherit"
            enable_pk = "False"
            enable_zero = "True"
            enable_sin = "True"
        }

        "core/Transmission Line" {
            model = "RL coupled"
            num_of_phases = "3"
            model_def = "Geometry"
            unit_sys = "imperial"
            Length_metric = "100.0"
            Length_miles = "62.1371"
            Frequency = "60.0"
            Earth_resistivity = "100"
            X_axis_1_metric = "-1.0668"
            Y_axis_1_metric = "8.5344"
            GMR_1_metric = "0.00743712"
            RD_1_metric = "0.009156192"
            Rs_1_metric = "0.19013958482462417"
            X_axis_1_imperial = "-3.5"
            Y_axis_1_imperial = "28.0"
            GMR_1_imperial = "0.0244"
            RD_1_imperial = "0.03004"
            Rs_1_imperial = "0.306"
            X_axis_2_metric = "-0.3048"
            Y_axis_2_metric = "8.5344"
            GMR_2_metric = "0.00743712"
            RD_2_metric = "0.009156192"
            Rs_2_metric = "0.19013958482462417"
            X_axis_2_imperial = "-1.0"
            Y_axis_2_imperial = "28.0"
            GMR_2_imperial = "0.0244"
            RD_2_imperial = "0.03004"
            Rs_2_imperial = "0.306"
            X_axis_3_metric = "1.0668"
            Y_axis_3_metric = "8.5344"
            GMR_3_metric = "0.00743712"
            RD_3_metric = "0.009156192"
            Rs_3_metric = "0.19013958482462417"
            X_axis_3_imperial = "3.5"
            Y_axis_3_imperial = "28.0"
            GMR_3_imperial = "0.0244"
            RD_3_imperial = "0.03004"
            Rs_3_imperial = "0.306"
            X_axis_4_metric = "0.1524"
            Y_axis_4_metric = "7.3152"
            GMR_4_metric = "0.00248"
            RD_4_metric = "0.00714"
            Rs_4_metric = "0.3678"
            X_axis_4_imperial = "0.5"
            Y_axis_4_imperial = "24.0"
            GMR_4_imperial = "0.00814"
            RD_4_imperial = "0.02345"
            Rs_4_imperial = "0.592"
            R_metric = "[[0.2481, 0.0579, 0.0579], [0.0579, 0.2481, 0.0579], [0.0579, 0.0579, 0.2481]]"
            R_imperial = "[[0.4, 0.093, 0.093], [0.093, 0.4, 0.093], [0.093, 0.093, 0.4]]"
            L_metric = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            L_imperial = "[[0.00374, 0.0022, 0.0022], [0.0022, 0.00374, 0.0022], [0.0022, 0.0022, 0.00374]]"
            C_metric = "[[8.546e-9, 0, 0], [0, 8.546e-9, 0], [0, 0, 8.546e-9]]"
            C_imperial = "[[1.471e-8, 0, 0], [0, 1.530e-8, 0], [0, 0, 1.375e-8]]"
            R_sequence_metric = "[[0.3864, 0, 0],[0, 0.01273, 0], [0, 0, 0.01273]]"
            L_sequence_metric = "[[4.1264e-3, 0, 0],[0, 0.9337e-3, 0], [0, 0, 0.9337e-3]]"
            C_sequence_metric = "[[7.751e-9, 0, 0],[0, 12.74e-9, 0], [0, 0, 12.74e-9]]"
            R_sequence_imperial = "[[0.6218, 0, 0],[0, 0.0204, 0], [0, 0, 0.0204]]"
            L_sequence_imperial = "[[0.00664, 0, 0],[0, 0.00150, 0], [0, 0, 0.00150]]"
            C_sequence_imperial = "[[1.247e-8, 0, 0],[0, 2.0503e-8, 0], [0, 0, 2.0503e-8]]"
            import_from_geometry = "Import from Geometry"
            import_from_RLC = "Import from RLC"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            sig_output_filt_and_full_bw = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Voltage RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }

        "core/abc to dq" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "True"
            initial_filter_output = "0"
            wn_LPFdq = "1000"
            execution_rate = "inherit"
        }

        "core/dq to abc" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            execution_rate = "0"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Ts = 0.9e-3
        Ts_gen = 20e-6
        Ts_gfeed = 150e-6
        Ts_gform = 30e-6
        sys_f = 60.0    # Hz
        sys_w = 2.0*np.pi*sys_f    #rad/s
        ft2mi = 1.0/5280.0     #mi/ft
        
        # Grid Specs
        Vgrid = 115000.0
        SCgrid = 100.0e6
        ratio_grid = 30.0
        
        Rgrid = ((Vgrid/np.sqrt(3))**2)/(SCgrid/3)/np.sqrt(1+ratio_grid**2)
        Lgrid = ratio_grid*Rgrid/sys_w
        
        # Snubber circuit design
        V_13800 = 13800
        V_480 = 480
        V_4160 = 4160
        
        tauC_snubber = 1e-2/sys_w
        tauL_snubber = 1e3/sys_w
        QL_snubber = 1e-3*SCgrid;
        QC_snubber = 1e-3*SCgrid;
        
        QC_core480 = 1e-4*3e6;
        QC_core4160 = 1e-4*3e6;
        QC_core13800 = 1e-3*3e6;
        C_core480 = QC_core480/(sys_w*V_480**2)
        C_core4160 = QC_core4160/(sys_w*V_4160**2)
        C_core13800 = QC_core13800/(sys_w*V_13800**2)
        
        L_core13800 = V_13800**2/(QL_snubber*sys_w)
        L_core480 = V_480**2/(QL_snubber*sys_w)
        L_core4160 = V_480**2/(QL_snubber*sys_w)
        
        PL_snubber = QL_snubber*tauL_snubber*sys_w
        QL_PL = QL_snubber/PL_snubber
        
        C_snubber13800 = QC_snubber*(1+(sys_w*tauC_snubber)**2)/(sys_w*V_13800**2)
        RC_snubber13800 = tauC_snubber/C_snubber13800
        L_snubber13800 = (3*V_13800**2/(sys_w*SCgrid**2))*QL_snubber*(1+QL_PL)**2/QL_PL**2
        RL_snubber13800 = L_snubber13800/tauL_snubber
        
        C_snubber4160 = QC_snubber*(1+(sys_w*tauC_snubber)**2)/(sys_w*V_4160**2)
        RC_snubber4160 = tauC_snubber/C_snubber4160
        L_snubber4160 = (3*V_4160**2/(sys_w*SCgrid**2))*QL_snubber*(1+QL_PL)**2/QL_PL**2
        RL_snubber4160 = L_snubber4160/tauL_snubber
        
        C_snubber480 = QC_snubber*(1+(sys_w*tauC_snubber)**2)/(sys_w*V_480**2)
        RC_snubber480 = tauC_snubber/C_snubber480
        L_snubber480 = (3*V_480**2/(sys_w*SCgrid**2))*QL_snubber*(1+QL_PL)**2/QL_PL**2
        RL_snubber480 = L_snubber480/tauL_snubber
        
        # Transformer Specs
        
            # Utility
        
        Sn_50MVA       = 50.0e6    # VA
        V1_50MVA       = 115000.0    # V
        V2_50MVA       = 13800.0    # V
        Z_50MVA        = 15.0/100.0    # pu
        Z_ratio_50MVA = 30.0
        
        R_50MVA = Z_50MVA/np.sqrt(1.0+Z_ratio_50MVA**2.0)/2.0    # pu
        L_50MVA = Z_ratio_50MVA*R_50MVA/sys_w/2.0    # pu
        
        R1_50MVA = 3.0*R_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        R2_50MVA = R_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        L1_50MVA = 3.0*L_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        L2_50MVA = L_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        
            # Feeders
        
        Sn_500kVA_1       = 500.0e3    # VA
        V1_500kVA_1       = 13800.0    # V
        V2_500kVA_1       = 480.0    # V
        Z_500kVA_1        = 5.0/100.0    # pu
        Z_ratio_500kVA_1 = 4.9
        
        R_500kVA_1 = Z_500kVA_1/np.sqrt(1.0+Z_ratio_500kVA_1**2.0)/2.0    # pu
        L_500kVA_1 = Z_ratio_500kVA_1*R_500kVA_1/sys_w/2.0    # pu
        
        R1_500kVA_1 = 3.0*R_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        R2_500kVA_1 = R_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        L1_500kVA_1 = 3.0*L_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        L2_500kVA_1 = L_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        
        
        Sn_500kVA_2       = 500.0e3    # VA
        V1_500kVA_2       = 13800.0    # V
        V2_500kVA_2       = 208.0    # V
        Z_500kVA_2        = 5.0/100.0    # pu
        Z_ratio_500kVA_2 = 4.9
        Rm_500kVA_2 = 1e5
        Lm_500kVA_2 = 200
        
        R_500kVA_2 = Z_500kVA_2/np.sqrt(1.0+Z_ratio_500kVA_2**2.0)/2.0    # pu
        L_500kVA_2 = Z_ratio_500kVA_2*R_500kVA_2/sys_w/2.0    # pu
        
        R1_500kVA_2 = 3.0*R_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        R2_500kVA_2 = R_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        L1_500kVA_2 = 3.0*L_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        L2_500kVA_2 = L_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        
        
        Sn_1MVA       = 1000.0e3    # VA
        V1_1MVA       = 13800.0    # V
        V2_1MVA       = 480.0    # V
        Z_1MVA        = 5.56/100.0    # pu
        Z_ratio_1MVA = 5.49
        Rm_1MVA = 1e5
        Lm_1MVA = 200
        
        R_1MVA = Z_1MVA/np.sqrt(1.0+Z_ratio_1MVA**2.0)/2.0    # pu
        L_1MVA = Z_ratio_1MVA*R_1MVA/sys_w/2.0    # pu
        
        R1_1MVA = 3.0*R_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        R2_1MVA = R_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        L1_1MVA = 3.0*L_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        L2_1MVA = L_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        
        Sn_1500kVA       = 1500.0e3    # VA
        V1_1500kVA       = 4160.0    # V
        V2_1500kVA       = 480.0    # V
        Z_1500kVA        = 5.75/100.0    # pu
        Z_ratio_1500kVA = 5.04
        Rm_1500kVA = 1e5
        Lm_1500kVA = 200
        
        R_1500kVA = Z_1500kVA/np.sqrt(1.0+Z_ratio_1500kVA**2.0)/2.0    # pu
        L_1500kVA = Z_ratio_1500kVA*R_1500kVA/sys_w/2.0    # pu
        
        R1_1500kVA = 3.0*R_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        R2_1500kVA = R_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        L1_1500kVA = 3.0*L_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        L2_1500kVA = L_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        
        
        Sn_2MVA_1       = 2000.0e3    # VA
        V1_2MVA_1       = 4160.0    # V
        V2_2MVA_1       = 480.0    # V
        Z_2MVA_1        = 5.75/100.0    # pu
        Z_ratio_2MVA_1 = 5.7
        Rm_2MVA_1 = 1e5
        Lm_2MVA_1 = 200
        
        R_2MVA_1 = Z_2MVA_1/np.sqrt(1.0+Z_ratio_2MVA_1**2.0)/2.0    # pu
        L_2MVA_1 = Z_ratio_2MVA_1*R_2MVA_1/sys_w/2.0    # pu
        
        R1_2MVA_1 = 3.0*R_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        R2_2MVA_1 = R_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        L1_2MVA_1 = 3.0*L_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        L2_2MVA_1 = L_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        
        
        Sn_2MVA_2       = 2000.0e3    # VA
        V1_2MVA_2       = 13800.0    # V
        V2_2MVA_2       = 480.0    # V
        Z_2MVA_2        = 5.75/100.0    # pu
        Z_ratio_2MVA_2 = 5.7
        Rm_2MVA_2 = 1e5
        Lm_2MVA_2 = 200
        
        R_2MVA_2 = Z_2MVA_2/np.sqrt(1.0+Z_ratio_2MVA_2**2.0)/2.0    # pu
        L_2MVA_2 = Z_ratio_2MVA_2*R_2MVA_2/sys_w/2.0    # pu
        
        R1_2MVA_2 = 3.0*R_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        R2_2MVA_2 = R_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        L1_2MVA_2 = 3.0*L_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        L2_2MVA_2 = L_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        
        
        Sn_2500kVA_1       = 2500.0e3    # VA
        V1_2500kVA_1       = 13800.0    # V
        V2_2500kVA_1       = 480.0    # V
        Z_2500kVA_1        = 5.56/100.0    # pu
        Z_ratio_2500kVA_1 = 5.52
        Rm_2500kVA_1 = 1e5
        Lm_2500kVA_1 = 200
        
        R_2500kVA_1 = Z_2500kVA_1/np.sqrt(1.0+Z_ratio_2500kVA_1**2.0)/2.0    # pu
        L_2500kVA_1 = Z_ratio_2500kVA_1*R_2500kVA_1/sys_w/2.0    # pu
        
        R1_2500kVA_1 = 3.0*R_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        R2_2500kVA_1 = R_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        L1_2500kVA_1 = 3.0*L_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        L2_2500kVA_1 = L_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        
        
        Sn_2500kVA_2       = 2500.0e3    # VA
        V1_2500kVA_2       = 13800.0    # V
        V2_2500kVA_2       = 480.0    # V
        Z_2500kVA_2        = 5.75/100.0    # pu
        Z_ratio_2500kVA_2 = 6.6
        Rm_2500kVA_2 = 1e5
        Lm_2500kVA_2 = 200
        
        R_2500kVA_2 = Z_2500kVA_2/np.sqrt(1.0+Z_ratio_2500kVA_2**2.0)/2.0    # pu
        L_2500kVA_2 = Z_ratio_2500kVA_2*R_2500kVA_2/sys_w/2.0    # pu
        
        R1_2500kVA_2 = 3.0*R_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        R2_2500kVA_2 = R_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        L1_2500kVA_2 = 3.0*L_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        L2_2500kVA_2 = L_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        
        
        Sn_3750kVA       = 3750.0e3    # VA
        V1_3750kVA       = 13800.0    # V
        V2_3750kVA       = 4160.0    # V
        Z_3750kVA        = 4.75/100.0    # pu
        Z_ratio_3750kVA = 11.4
        Rm_3750kVA = 1e5
        Lm_3750kVA = 200
        
        R_3750kVA = Z_3750kVA/np.sqrt(1.0+Z_ratio_3750kVA**2.0)/2.0    # pu
        L_3750kVA = Z_ratio_3750kVA*R_3750kVA/sys_w/2.0    # pu
        
        R1_3750kVA = 3.0*R_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        R2_3750kVA = R_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        L1_3750kVA = 3.0*L_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        L2_3750kVA = L_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        
        
        Sn_5MVA       = 5000.0e3    # VA
        V1_5MVA       = 13800.0    # V
        V2_5MVA       = 480.0    # V
        Z_5MVA        = 5.50/100.0    # pu
        Z_ratio_5MVA = 5.44
        Rm_5MVA = 1e5
        Lm_5MVA = 200
        
        R_5MVA = Z_5MVA/np.sqrt(1.0+Z_ratio_5MVA**2.0)/2.0    # pu
        L_5MVA = Z_ratio_5MVA*R_5MVA/sys_w/2.0    # pu
        
        R1_5MVA = 3.0*R_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        R2_5MVA = R_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        L1_5MVA = 3.0*L_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        L2_5MVA = L_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        
        
        # Transmission Line Specs
        
            # The cable 6 impedance is equal to the cable 13 impedance. The differences of both
            # cables are Voltage insulation and Ampacity. Feeder1_line7, Feeder1_line8 and
            # Feeder1_line9 use cable 6.
            # Transmission lines 4, 5 and 6 from Feeder 2 use cable 6.
        
        R1_cable11 = 0.2685    # ohms/mi
        X1_cable11 = 0.207    # ohms/mi
        R0_cable11 = 2.1408    # ohms/mi
        X0_cable11 = 1.582    # ohms/mi
        B_cable11 = 308.7587e-6    # S/mi
        L0_cable11 = X0_cable11/sys_w    # H/mi
        L1_cable11 = X1_cable11/sys_w    # H/mi
        C0_cable11 = B_cable11/sys_w    # F/mi
        R_cable11  = [[R0_cable11,0.0,0.0],[0.0,R1_cable11,0.0],[0.0,0.0,R1_cable11]]
        L_cable11  = [[L0_cable11,0.0,0.0],[0.0,L1_cable11,0.0],[0.0,0.0,L1_cable11]]
        C_cable11  = [[C0_cable11,0.0,0.0],[0.0,C0_cable11,0.0],[0.0,0.0,C0_cable11]]
        
        R1_cable13 = 0.1206    # ohms/mi
        X1_cable13 = 0.1878    # ohms/mi
        R0_cable13 = 1.8354    # ohms/mi
        X0_cable13 = 1.2165    # ohms/mi
        B_cable13 = 384.0177e-6    # S/mi
        L0_cable13 = X0_cable13/sys_w    # H/mi
        L1_cable13 = X1_cable13/sys_w    # H/mi
        C0_cable13 = B_cable13/sys_w    # F/mi
        R_cable13  = [[R0_cable13,0.0,0.0],[0.0,R1_cable13,0.0],[0.0,0.0,R1_cable13]]
        L_cable13  = [[L0_cable13,0.0,0.0],[0.0,L1_cable13,0.0],[0.0,0.0,L1_cable13]]
        C_cable13  = [[C0_cable13,0.0,0.0],[0.0,C0_cable13,0.0],[0.0,0.0,C0_cable13]]
        
        
        # Transmission Line lengths
        
            # Utility
        
        l_U_L1 = 3000.0*ft2mi    # mi
        l_U_L2 = 500.0*ft2mi    # mi
        l_U_L3 = 500.0*ft2mi    # mi
        l_U_L4 = 500.0*ft2mi    # mi
        
            # Feeder1
        
        l_F1L1 = 1800.0*ft2mi    # mi
        l_F1L2 = 5500.0*ft2mi    # mi
        l_F1L3 = 1000.0*ft2mi    # mi
        l_F1L4 = 3000.0*ft2mi    # mi
        l_F1L5 = 3000.0*ft2mi    # mi
        l_F1L6 = 1500.0*ft2mi    # mi
        l_F1L7 = 2000.0*ft2mi    # mi
        l_F1L8 = 1000.0*ft2mi    # mi
        l_F1L9 = 2000.0*ft2mi    # mi
        l_F1DG = 2000.0*ft2mi    # mi
        
            # Fedeer2
        
        l_F2L0 = 10.0*ft2mi    # mi
        l_F2L1 = 5500.0*ft2mi    # mi
        l_F2L2 = 2000.0*ft2mi    # mi
        l_F2L3 = 3000.0*ft2mi    # mi
        l_F2L4 = 1500.0*ft2mi    # mi
        l_F2L5 = 1500.0*ft2mi    # mi
        l_F2L6 = 1500.0*ft2mi    # mi
        
            # Feeder3
        
        l_F3L1 = 2500.0*ft2mi    # mi
        l_F3L2 = 2000.0*ft2mi    # mi
        l_F3L3 = 2000.0*ft2mi    # mi
        l_F3L4 = 1500.0*ft2mi    # mi
        l_F3LNGG = 2000.0*ft2mi    # mi
        
        #EPC ESS specs
        L_inv_ess = 0.133e-3 #7.6573e-5 
        L_grid_ess = 0.08e-3 #4.5944e-5
        
        # Diesel Genset settings
        
            # Governor specs
        
        K = 10  # gain K
        T1 = 1.0E-4 # Time constant T1 of Electric Control Box
        T2 = 0.0 # Time constant T2 of Electric Control Box
        T3 = 0.5001 # Time constant T3 of Electric Control Box
        T4 = 0.025  # Time constant T4 of Actuator
        T5 = 0.0009  # Time constant T5 of Actuator
        T6 = 0.00574  # Time constant T6 of Actuator
        Pm0 = 0.0 #0.0005  # Initial value of Mechanic Power
        Tmax = 10 #1.1  # Max torque limit
        Tmin = -0.1  # Min torque limit
        Td = 0.024  # Engine time delay
        
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2]
        denTF4d = [coeff3, coeff4]
        
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2]
        denTF3d = [coeff3, coeff4]
        
        numTF1d = [(1.0+2.0*T3/Ts),2.0,(1.0-2.0*T3/Ts)]
        denTF1d = [(1.0+2.0*T1/Ts+4.0*T1*T2/(Ts**2)),(2.0-8.0*T1*T2/(Ts**2)),(4.0*T1*T2/(Ts**2)-2.0*T1/Ts+1)]
        
            # Synchronous machine specs from Simulink's 4 MVA machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen1 = 3.5e6  # Nominal/base power of machine in VA
        Vn_gen1 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen1 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen1 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen1 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen1 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen1 = 0.00206  # Field resistance in pu
        Llfd_pu_gen1 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen1 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen1 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen1 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen1 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen1 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen1 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen1 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen1 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen1 = 0.009238  # Friction factor in pu
        
            # Base calculation
        
        Vb_gen1 = Vn_gen1*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen1 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen1 = wb_gen1/pms  # Mechanical angular speed base
        Zb_gen1 = (Vn_gen1*Vn_gen1)/Sb_gen1  # Impedance base
        Trq_b_gen1 = Sb_gen1/wmb_gen1  # Torque base
        Fb_gen1 = Trq_b_gen1/wmb_gen1  # Friction Factor base
        Lb_gen1 = Zb_gen1/wb_gen1  # Inductance base
        
            # Stator data in SI
        
        Rs_gen1 = Rs_pu_gen1*Zb_gen1
        Lls_gen1 = Lls_pu_gen1*Lb_gen1
        Lmd_gen1 = Lmd_pu_gen1*Lb_gen1
        Lmq_gen1 = Lmq_pu_gen1*Lb_gen1
        Rkd_gen1 = Rkd_pu_gen1*Zb_gen1
        Rkq_gen1 = Rkq_pu_gen1*Zb_gen1
        Llkd_gen1 = Llkd_pu_gen1*Lb_gen1
        Llkq_gen1 = Llkq_pu_gen1*Lb_gen1
        
            # Mechanical data in SI
        
        F_gen1 = Fpu_gen1*Fb_gen1  # Friction Factor in Nm.s
        J_gen1 = 2*H_gen1*Sb_gen1/(wmb_gen1*wmb_gen1)  # Inertia in kg.m2
        
            # Field base calculation
        
        Lsfd_gen1 = (2.0/3.0)*Lmd_gen1*(1.0/Ns_fd_gen1)  # Mutual inductance between stator and field
        ifn_gen1 = Vb_gen1/(Lsfd_gen1*wb_gen1)  # Nominal field current
        ifb_gen1 = ifn_gen1*Lmd_pu_gen1  # Field current base
        Vfb_gen1 = Sb_gen1/ifb_gen1  # Field voltage base
        Zfb_gen1 = Vfb_gen1/ifb_gen1  # Field impedance base
        Lfb_gen1 = Zfb_gen1/wb_gen1  # Field inductance base
        
            # Field data in SI
        
        Rf_gen1 = Rf_pu_gen1*Zfb_gen1  # Field resistance (Field side)
        Llfd_gen1 = Llfd_pu_gen1*Lfb_gen1  # Field inductance (Field side)
        Rf_prime_gen1 = Rf_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field resistance referred to the stator side
        Llfd_prime_gen1 = Llfd_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field inductance referred to the stator side
        
            # Exciter initialization
        
        Tr_gen1 = 20e-4  # Low pass filter time constant
        Ka_gen1 = 200  # Regulator gain
        Ta_gen1 = 2e-3  # Regulator time constant
        Ke_gen1 = 1.0  # Exciter constant
        Te_gen1 = 1e-8 #Exciter time constant
        Tb_gen1 = 1e-12  # Transient gain reduction time constant b
        Tc_gen1 = 1e-12  # Transient gain reduction time constant c
        Kf_gen1 = 0  # Damping filter gain
        Tf_gen1 = 1e-12  # Damping filter time constant
        Efmin_gen1 = -0.1 # Regulator output lower limit
        Efmax_gen1 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen1 = 0.0  # Initial terminal voltage
        Vf0_gen1 = 0.0  # Initial field voltage
        Const_gen1 = Vf0_gen1/Ka_gen1
        
            #Diesel settings from Unit Test (Mach_ex_gov_PQv3_4MVA_unit_test_woodward_updated_started_v2.tse)
        
        # Governor specs
        
        K = 10  # gain K
        T4 = 0.025  # Time constant T4
        T5 = 0.0009  # Time constant T5
        T6 = 0.00574  # Time constant T6
        Pm0 = 0.0005  # Initial value of Mechanic Power
        Tmax = 1.1  # Max torque limit
        Tmin = 0  # Min torque limit
        Td = 0.024  # Engine time delay
        
        # numTF4d = [27.7777777777778,-27.6726170945921]  # For Ts = 1e-4
        # denTF4d = [1,-0.894839316814370]  # For Ts = 1e-4
        # numTF4d = [27.7777777777778,-27.6056562658610]  # For Ts = 1.7e-4
        # denTF4d = [1,-0.827878488083238]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2] #[27.7777777777778,-27.4943090883516]  # For Ts = 3e-4
        denTF4d = [coeff3, coeff4] # [1,-0.716531310573789]  # For Ts = 3e-4
        
        # numTF3d = [0,0.0172707241189214]  # For Ts = 1e-4
        # denTF3d = [1,-0.982729275881079]  # For Ts = 1e-4
        # numTF3d = [0,0.0291824473977244]  # For Ts = 1.7e-4
        # denTF3d = [1,-0.970817552602276]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2] #[0,0.0509224900975103]  # For Ts = 3e-4
        denTF3d = [coeff3, coeff4] # [1,-0.949077509902490]  # For Ts = 3e-4
        
        
        # Synchronous machine specs from Simulink's machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen2 = 4.0e6  # Nominal/base power of machine in VA
        Vn_gen2 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen2 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen2 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen2 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen2 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen2 = 0.00206  # Field resistance in pu
        Llfd_pu_gen2 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen2 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen2 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen2 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen2 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen2 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen2 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen2 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen2 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen2 = 0 #0.009238  # Friction factor in pu
        
        # Base calculation
        
        Vb_gen2 = Vn_gen2*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen2 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen2 = wb_gen2/pms  # Mechanical angular speed base
        Zb_gen2 = (Vn_gen2*Vn_gen2)/Sb_gen2  # Impedance base
        Trq_b_gen2 = Sb_gen2/wmb_gen2  # Torque base
        Fb_gen2 = Trq_b_gen2/wmb_gen2  # Friction Factor base
        Lb_gen2 = Zb_gen2/wb_gen2  # Inductance base
        
        # Stator data in SI
        
        Rs_gen2 = Rs_pu_gen2*Zb_gen2
        Lls_gen2 = Lls_pu_gen2*Lb_gen2
        Lmd_gen2 = Lmd_pu_gen2*Lb_gen2
        Lmq_gen2 = Lmq_pu_gen2*Lb_gen2
        Rkd_gen2 = Rkd_pu_gen2*Zb_gen2
        Rkq_gen2 = Rkq_pu_gen2*Zb_gen2
        Llkd_gen2 = Llkd_pu_gen2*Lb_gen2
        Llkq_gen2 = Llkq_pu_gen2*Lb_gen2
        
        # Mechanical data in SI
        
        F_gen2 = Fpu_gen2*Fb_gen2  # Friction Factor in Nm.s
        J_gen2 = 2*H_gen2*Sb_gen2/(wmb_gen2*wmb_gen2)  # Inertia in kg.m2
        
        # Field base calculation
        
        Lsfd_gen2 = (2.0/3.0)*Lmd_gen2*(1.0/Ns_fd_gen2)  # Mutual inductance between stator and field
        ifn_gen2 = Vb_gen2/(Lsfd_gen2*wb_gen2)  # Nominal field current
        ifb_gen2 = ifn_gen2*Lmd_pu_gen2  # Field current base
        Vfb_gen2 = Sb_gen2/ifb_gen2  # Field voltage base
        Zfb_gen2 = Vfb_gen2/ifb_gen2  # Field impedance base
        Lfb_gen2 = Zfb_gen2/wb_gen2  # Field inductance base
        
        # Field data in SI
        
        Rf_gen2 = Rf_pu_gen2*Zfb_gen2  # Field resistance (Field side)
        Llfd_gen2 = Llfd_pu_gen2*Lfb_gen2  # Field inductance (Field side)
        Rf_prime_gen2 = Rf_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field resistance referred to the stator side
        Llfd_prime_gen2 = Llfd_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field inductance referred to the stator side
        
        # Exciter initialization
        
        Tr_gen2 = 1e-3  # Low pass filter time constant
        Ka_gen2 = 20.0  # Regulator gain
        Ta_gen2 = 2e-3  # Regulator time constant
        Ke_gen2 = 1.0  # Exciter constant
        Te_gen2 = 1e-3 #Exciter time constant
        Tb_gen2 = 0.0  # Transient gain reduction time constant b
        Tc_gen2 = 0.0  # Transient gain reduction time constant c
        Kf_gen2 = 0  # Damping filter gain
        Tf_gen2 = 1e-3  # Damping filter time constant
        Efmin_gen2 = -5.0 # 0.0 # Regulator output lower limit
        Efmax_gen2 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen2 = 0.0  # Initial terminal voltage
        Vf0_gen2 = 0.0  # Initial field voltage
        Const_gen2 = Vf0_gen2/Ka_gen2
        
        dummy_gain_exciter = 0.01
        
        #Rl = 14.283
        #Ll = 0.120472454546162
        
        Rl = 0.1
        Ll = 0.010
        
        Rl_mach = Rl
        Ll_mach = Ll
        
        Rl_shunt = 4761.0/1.0# 4761 Ohm is the resistance needed for 1% of nominal power at nominal voltage
        
        
        load = 0.196837209302326
        
        
            #End of settings from Unit Test 
        
        #Feeder 1 has to have slave_id = 1 to all Relays config
        #Feeder 2 has to have slave_id = 2 to all Relays config
        #Feeder 3 has to have slave_id = 3 to all Relays config
        
        #Relays init time
        cb_init_cond_time = 0.1+Ts
        time_flag_delay = 0.2
        
        configF1_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.101',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.102',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.103',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.104',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.105',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.106',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.107',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.108',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.109',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB10 = {
          'port': 502,
          'ip_addr': '192.168.10.110',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB11 = {
          'port': 502,
          'ip_addr': '192.168.10.111',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB12 = {
          'port': 502,
          'ip_addr': '192.168.10.112',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB13 = {
          'port': 502,
          'ip_addr': '192.168.10.113',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF1_CB14 = {
          'port': 502,
          'ip_addr': '192.168.10.114',
          'netmask': '255.255.255.0',
          'slave_id': 1,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        
        configF2_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.115',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.116',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.117',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.118',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.119',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.120',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.121',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.122',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.123',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB10 = {
          'port': 502,
          'ip_addr': '192.168.10.124',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB11 = {
          'port': 502,
          'ip_addr': '192.168.10.125',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB12 = {
          'port': 502,
          'ip_addr': '192.168.10.126',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB13 = {
          'port': 502,
          'ip_addr': '192.168.10.127',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB14 = {
          'port': 502,
          'ip_addr': '192.168.10.128',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB15 = {
          'port': 502,
          'ip_addr': '192.168.10.129',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB16 = {
          'port': 502,
          'ip_addr': '192.168.10.130',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB17 = {
          'port': 502,
          'ip_addr': '192.168.10.131',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB18 = {
          'port': 502,
          'ip_addr': '192.168.10.132',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF2_CB19 = {
          'port': 502,
          'ip_addr': '192.168.10.133',
          'netmask': '255.255.255.0',
          'slave_id': 2,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        
        configF3_CB1 = {
          'port': 502,
          'ip_addr': '192.168.10.134',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB2 = {
          'port': 502,
          'ip_addr': '192.168.10.135',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB3 = {
          'port': 502,
          'ip_addr': '192.168.10.136',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB4 = {
          'port': 502,
          'ip_addr': '192.168.10.137',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB5 = {
          'port': 502,
          'ip_addr': '192.168.10.138',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB6 = {
          'port': 502,
          'ip_addr': '192.168.10.139',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB7 = {
          'port': 502,
          'ip_addr': '192.168.10.140',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB8 = {
          'port': 502,
          'ip_addr': '192.168.10.141',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        configF3_CB9 = {
          'port': 502,
          'ip_addr': '192.168.10.142',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '',
          'holding_register_output_addresses': '2000,2001,2002',
          'input_register_adresses': '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24'
        }
        dms_config = {
          'port': 502,
          'ip_addr': '192.168.10.54',
          'netmask': '255.255.255.0',
          'slave_id': 3,
          'coil_input_addresses': '',
          'coil_output_addresses': '',
          'discrete_input_addresses': '',
          'holding_register_input_addresses': '0,1,2,7,3,8,4,9,5,10,6,11,12,13,14,15',
          'holding_register_output_addresses': '',
          'input_register_adresses': ''
        }
        configCHP = {
            'port': 502,
            'ip_addr': '192.168.10.55',
            'netmask': '255.255.255.0',
            'slave_id': 3,
            'coil_input_addresses': '',
            'coil_output_addresses': '',
            'discrete_input_addresses': '',
            'holding_register_input_addresses': '',
            'holding_register_output_addresses': '2000,2001',
            'input_register_adresses': '0,1,2,3,4'
        }
        
            #Transformers Lm and Rm
        Rm_utility_transfo1 = 1e5
        Lm_utility_transfo1 = 200
        
        Rm_feeder1_transfo1 = 1e5
        Lm_feeder1_transfo1 = 200
        
        Rm_feeder1_transfo2 = 1e5
        Lm_feeder1_transfo2 = 200
        
        Rm_feeder1_transfo3 = 1e5
        Lm_feeder1_transfo3 = 200
        
        Rm_feeder1_transfo4 = 1e5
        Lm_feeder1_transfo4 = 200
        
        Rm_feeder1_transfo5 = 1e5
        Lm_feeder1_transfo5 = 200
        
        Rm_feeder1_transfo6 = 1e5
        Lm_feeder1_transfo6 = 200
        
        Rm_feeder1_transfo7 = 1e5
        Lm_feeder1_transfo7 = 200
    ENDCODE
}
