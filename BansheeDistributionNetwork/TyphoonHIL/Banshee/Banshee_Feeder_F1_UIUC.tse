version = 4.2

//
// Saved by sw version: 2020.2
// Save timestamp: 29-Oct-2020 @ 12:48:12 PM
//

model "Banshee_Feeder_F1_UIUC" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 2
        simulation_method = exact
        simulation_time_step = 4e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "external memory"
        sys_sp_rate_1 = 5e-05
        sys_sp_rate_2 = 0.001
        sys_real_type_precision = "default"
        user_real_type_precision = "double precision"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
        user_cpu_part_option = "default"
        matrix_based_reduction = True
        cpl_dynamics_analysis = False
        cce_use_relative_names = False
        cce_type_mapping_real = "double"
        cce_type_mapping_uint = "unsigned int"
        cce_type_mapping_int = "int"
        cce_directory = ""
        cce_custom_type_int = ""
        cce_custom_type_uint = ""
        cce_custom_type_real = ""
    }

    component Subsystem Root {
        component src_ground gnd2 {
        }
        [
            position = 8584, 6560
            rotation = down
            hide_name = True
        ]

        component "core/Three Phase Voltage Source" Vs1 {
            init_frequency = "60.0"
        }
        [
            position = 8584, 6800
            rotation = right
            scale = -1, 1
            size = 62, 256
        ]

        component "core/Voltage RMS" Vrms_grid {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 8240, 7048
            rotation = right
            size = 64, 32
        ]

        component sys_hil_marker "Device Marker1" {
            code_section = "External Memory"
            data_section = "External Memory"
            hil_device_id = "1"
            hw_configuration_id = "2"
            override_sim_settings = "True"
            simulation_time_step = "4e-6"
            sys_sp_rate_1 = "0.0001"
        }
        [
            position = 8864, 7080
        ]

        component Subsystem F1_PCC {
            layout = dynamic
            component gen_bus_join "Bus Join1" {
                inputs = "8"
            }
            [
                position = 7232, 8040
                scale = -1, 1
            ]

            component "core/Triple Pole Single Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8136, 8184
                rotation = left
                size = 64, 256
            ]

            component gen_sr_ff "SR Flip Flop1" {
            }
            [
                position = 7840, 8280
            ]

            component src_digital_input "Digital Input Trip" {
                addr = "6"
                execution_rate = "Ts"
                invert = "true"
            }
            [
                position = 7720, 8328
            ]

            component src_digital_input "Digital Input Close" {
                addr = "5"
                execution_rate = "Ts"
                invert = "true"
            }
            [
                position = 7720, 8264
            ]

            component gen_data_type_conversion "Data Type Conversion1" {
            }
            [
                position = 7928, 8184
                hide_name = True
                scale = -1, 1
            ]

            component gen_probe P {
            }
            [
                position = 7680, 7928
                scale = -1, 1
            ]

            component gen_probe Q {
            }
            [
                position = 7680, 7872
                scale = -1, 1
            ]

            component gen_gain Gain1 {
                gain = "10"
            }
            [
                position = 7616, 7976
                hide_name = True
                scale = -1, -1
            ]

            component gen_gain Gain4 {
                gain = "100"
            }
            [
                position = 7624, 8048
                hide_name = True
                scale = -1, 1
            ]

            component gen_gain Gain2 {
                gain = "10"
            }
            [
                position = 7616, 8000
                hide_name = True
                scale = -1, 1
            ]

            component gen_gain Gain3 {
                gain = "100"
            }
            [
                position = 7600, 8024
                hide_name = True
                scale = -1, 1
            ]

            component gen_gain "W -> kW" {
                gain = ".001"
            }
            [
                position = 7744, 7976
                scale = -1, 1
            ]

            component gen_gain "var -> kvar" {
                gain = ".001"
            }
            [
                position = 7688, 8000
                scale = -1, 1
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                    size = 64, 32
                ]

                port Ground {
                    position = bottom:auto
                    kind = pe
                }
                [
                    position = 7648, 8504
                    rotation = left
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1469 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                connect A Junction1470 as Connection390
                connect B Junction1471 as Connection393
                connect C Junction1472 as Connection396
                connect Ground Junction1469 as Connection384
                connect Junction1421 Junction1469 as Connection382
                connect Junction1469 VC.n_node as Connection383
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
            }
            [
                position = 8136, 8312
                rotation = right
                scale = -1, 1
                size = 112, 232
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                port Ground {
                    position = bottom:auto
                    kind = pe
                }
                [
                    position = 7648, 8504
                    rotation = left
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1469 pe
                [
                    position = 7648, 8432
                ]

                connect A IA.p_node as Connection379
                connect B IB.p_node as Connection380
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C IC.p_node as Connection381
                connect Ground Junction1469 as Connection384
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1469 as Connection382
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1469 VC.n_node as Connection383
                connect V "Bus Join1.out" as Connection389
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
            }
            [
                position = 8136, 8048
                rotation = right
                scale = -1, 1
                size = 112, 232
            ]

            component Subsystem "PCC Measurements" {
                layout = dynamic
                component src_constant Constant2 {
                    execution_rate = "Ts"
                }
                [
                    position = 8040, 8472
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 8416, 8256
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination5 {
                }
                [
                    position = 8008, 8136
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 8416, 8184
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination8 {
                }
                [
                    position = 8016, 8384
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8008, 8056
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination3 {
                }
                [
                    position = 8008, 8088
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination2 {
                }
                [
                    position = 7968, 8072
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_PQ_transform "Power Meter1" {
                }
                [
                    position = 8088, 8360
                    scale = -1, 1
                ]

                component gen_comparator Comparator1 {
                }
                [
                    position = 7912, 8272
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_comparator Comparator2 {
                }
                [
                    position = 7912, 8464
                    hide_name = True
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                }
                [
                    position = 8040, 8264
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination4 {
                }
                [
                    position = 7968, 8120
                    hide_name = True
                    scale = -1, 1
                ]

                component "core/Three phase PLL" "Three phase PLL1" {
                }
                [
                    position = 8088, 8096
                    scale = -1, 1
                    size = 64, 128
                ]

                component gen_terminator Termination7 {
                }
                [
                    position = 7976, 8368
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_terminator Termination6 {
                }
                [
                    position = 8016, 8352
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_rms_value "RMS value1" {
                }
                [
                    position = 8088, 8192
                    scale = -1, 1
                ]

                port f {
                    label = "Frequency"
                    position = left:4
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7920, 8104
                    scale = -1, 1
                ]

                port P {
                    label = "Real Power"
                    position = left:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7976, 8320
                    scale = -1, 1
                ]

                port Q {
                    label = "Reactive Power"
                    position = left:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8336
                    scale = -1, 1
                ]

                port pf {
                    label = "Power Factor"
                    position = left:6
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8400
                    scale = -1, 1
                ]

                port I {
                    label = "I"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8488, 8184
                    rotation = down
                ]

                port Vrms {
                    label = "Voltage"
                    position = left:3
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7984, 8192
                    scale = -1, 1
                ]

                port V {
                    label = "V"
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8488, 8256
                    rotation = down
                ]

                port "P direction" {
                    label = "P Import/Exprot"
                    position = left:9
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7848, 8272
                    scale = -1, 1
                ]

                port "pf lead lag" {
                    label = "pf lead/lag"
                    position = left:10
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7848, 8464
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                tag From9 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8400
                    hide_name = True
                    scale = -1, 1
                ]

                tag From6 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8336
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8184
                    hide_name = True
                    scale = -1, 1
                ]

                tag From10 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8192
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Ic"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8208
                    hide_name = True
                    scale = -1, 1
                ]

                tag From4 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8352
                    hide_name = True
                    scale = -1, 1
                ]

                tag From2 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8096
                    hide_name = True
                    scale = -1, 1
                ]

                tag From5 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8320
                    hide_name = True
                    scale = -1, 1
                ]

                tag From3 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8128
                    hide_name = True
                    scale = -1, 1
                ]

                tag From7 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 8368
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto6 {
                    value = "Vc"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8280
                    hide_name = True
                    scale = -1, 1
                ]

                tag From8 {
                    value = "Ib"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8384
                    hide_name = True
                    scale = -1, 1
                ]

                tag From1 {
                    value = "Va"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8192, 8064
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto5 {
                    value = "Vb"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8256
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto1 {
                    value = "Ia"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8328, 8160
                    hide_name = True
                    scale = -1, 1
                ]

                junction Junction1 sp
                [
                    position = 8016, 8320
                ]

                junction Junction2 sp
                [
                    position = 7976, 8400
                ]

                connect "Bus Split1.out" Goto4 as Connection27
                connect "Bus Split1.out1" Goto5 as Connection26
                connect "Bus Split1.out2" Goto6 as Connection28
                connect "Bus Split1.in" V as Connection47
                connect "Bus Split2.out" Goto1 as Connection25
                connect "Bus Split2.out2" Goto3 as Connection24
                connect "Bus Split2.in" I as Connection48
                connect Comparator1.in1 Junction1 as Connection57
                connect Comparator2.in1 Junction2 as Connection60
                connect Constant1.out Comparator1.in2 as Connection54
                connect Constant2.out Comparator2.in2 as Connection61
                connect From1 "Three phase PLL1.va" as Connection29
                connect From10 "RMS value1.in" as Connection46
                connect From2 "Three phase PLL1.vb" as Connection30
                connect From3 "Three phase PLL1.vc" as Connection31
                connect From4 "Power Meter1.vc" as Connection37
                connect From5 "Power Meter1.va" as Connection39
                connect From6 "Power Meter1.vb" as Connection38
                connect From7 "Power Meter1.ia" as Connection41
                connect From9 "Power Meter1.ic" as Connection40
                connect Goto2 "Bus Split2.out1" as Connection23
                connect Junction1 P as Connection56
                connect Junction2 pf as Connection59
                connect "P direction" Comparator1.out as Connection62
                connect "Power Meter1.ib" From8 as Connection42
                connect "Power Meter1.Pdc" Junction1 as Connection55
                connect "Power Meter1.k_factor" Junction2 as Connection58
                connect "Power Meter1.Qdc" Q as Connection53
                connect "RMS value1.out" Vrms as Connection50
                connect Termination1.in "Three phase PLL1.d_axis" as Connection32
                connect Termination2.in "Three phase PLL1.q_axis" as Connection33
                connect Termination3.in "Three phase PLL1.zero_axis" as Connection34
                connect Termination4.in "Three phase PLL1.theta" as Connection35
                connect Termination5.in "Three phase PLL1.sin_theta" as Connection36
                connect Termination6.in "Power Meter1.Pac" as Connection43
                connect Termination7.in "Power Meter1.Qac" as Connection44
                connect Termination8.in "Power Meter1.apparent" as Connection45
                connect "Three phase PLL1.freq" f as Connection52
                connect "pf lead lag" Comparator2.out as Connection63
            }
            [
                position = 7920, 8048
                size = 96, 184
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 7160, 8072
            ]

            component gen_terminator Termination2 {
            }
            [
                position = 7760, 8224
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 7928, 8320
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7960, 8448
            ]

            port A {
                label = "A"
                position = top:1
                kind = pe
            }
            [
                position = 8040, 7944
                rotation = right
            ]

            port B {
                label = "B"
                position = top:2
                kind = pe
            }
            [
                position = 8136, 7944
                rotation = right
            ]

            port C {
                label = "C"
                position = top:3
                kind = pe
            }
            [
                position = 8232, 7944
                rotation = right
            ]

            port a {
                label = "a"
                position = bottom:1
                kind = pe
            }
            [
                position = 8040, 8424
                rotation = left
            ]

            port b {
                label = "b"
                position = bottom:2
                kind = pe
            }
            [
                position = 8136, 8424
                rotation = left
            ]

            port c {
                label = "c"
                position = bottom:3
                kind = pe
            }
            [
                position = 8232, 8424
                rotation = left
            ]

            port G {
                label = "G"
                position = right:1
                kind = pe
            }
            [
                position = 8424, 8192
                rotation = down
            ]

            tag From3 {
                value = "V"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7384, 8016
                hide_name = True
                scale = -1, 1
            ]

            tag Goto8 {
                value = "CB Status"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7848, 8184
                hide_name = True
                scale = -1, 1
            ]

            tag From4 {
                value = "f"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7320, 8032
                hide_name = True
                scale = -1, 1
            ]

            tag Goto1 {
                value = "P"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7480, 7976
                hide_name = True
                scale = -1, 1
            ]

            tag From7 {
                value = "P sign"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7384, 8080
                hide_name = True
                scale = -1, 1
            ]

            tag Goto5 {
                value = "pf"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7480, 8072
                hide_name = True
                scale = -1, 1
            ]

            tag From6 {
                value = "pf"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7320, 8064
                hide_name = True
                scale = -1, 1
            ]

            tag Goto6 {
                value = "P sign"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7480, 8096
                hide_name = True
                scale = -1, 1
            ]

            tag Goto7 {
                value = "pf lead/lag"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7480, 8120
                hide_name = True
                scale = -1, 1
            ]

            tag From5 {
                value = "CB Status"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7384, 8048
                hide_name = True
                scale = -1, 1
            ]

            tag From2 {
                value = "Q"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7320, 8000
                hide_name = True
                scale = -1, 1
            ]

            tag Goto4 {
                value = "f"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7480, 8048
                hide_name = True
                scale = -1, 1
            ]

            tag From8 {
                value = "pf lead/lag"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7320, 8096
                hide_name = True
                scale = -1, 1
            ]

            tag From1 {
                value = "P"
                scope = local
                kind = sp
                direction = out
            }
            [
                position = 7384, 7984
                hide_name = True
                scale = -1, 1
            ]

            tag Goto3 {
                value = "V"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7480, 8024
                hide_name = True
                scale = -1, 1
            ]

            tag Goto2 {
                value = "Q"
                scope = local
                kind = sp
                direction = in
            }
            [
                position = 7480, 8000
                hide_name = True
                scale = -1, 1
            ]

            junction Junction1 pe
            [
                position = 8392, 8192
            ]

            junction Junction2 sp
            [
                position = 7976, 8184
            ]

            junction Junction3 sp
            [
                position = 7976, 8208
            ]

            junction Junction4 sp
            [
                position = 7848, 8000
            ]

            junction Junction5 sp
            [
                position = 7800, 7976
            ]

            connect A Meas1.A as Connection45
            connect "Bus Join1.in4" From5 as Connection35
            connect "Data Type Conversion1.in" Junction2 as Connection1072
            connect "Digital Input Close.out" "SR Flip Flop1.s_in" as Connection1067
            connect "Digital Input Trip.out" "SR Flip Flop1.r_in" as Connection1066
            connect From1 "Bus Join1.in" as Connection31
            connect From2 "Bus Join1.in1" as Connection32
            connect From3 "Bus Join1.in2" as Connection33
            connect From4 "Bus Join1.in3" as Connection34
            connect From6 "Bus Join1.in5" as Connection36
            connect From7 "Bus Join1.in6" as Connection37
            connect From8 "Bus Join1.in7" as Connection38
            connect Gain1.in "W -> kW.out" as Connection1098
            connect Gain2.in "var -> kvar.out" as Connection1100
            connect Gain3.in "PCC Measurements.Vrms" as Connection1095
            connect Gain4.out Goto4 as Connection1097
            connect Goto1 Gain1.out as Connection1102
            [
                breakpoints = 7528, 7976; 7584, 7976
            ]
            connect Goto2 Gain2.out as Connection1103
            [
                breakpoints = 7528, 8000; 7592, 8000
            ]
            connect Goto3 Gain3.out as Connection1094
            connect Goto5 "PCC Measurements.pf" as Connection27
            connect Goto6 "PCC Measurements.P direction" as Connection28
            connect Goto7 "PCC Measurements.pf lead lag" as Connection29
            connect Goto8 "Data Type Conversion1.out" as Connection1071
            connect Junction1 G as Connection19
            connect Junction2 S1.ctrl_in as Connection1070
            connect Junction3 Junction2 as Connection1082
            [
                breakpoints = 7976, 8208; 7976, 8184
            ]
            connect Junction4 "PCC Measurements.Q" as Connection1109
            connect Junction5 "W -> kW.in" as Connection1112
            connect Meas1.B B as Connection44
            connect Meas1.C C as Connection43
            connect Meas1.Ground Junction1 as Connection20
            connect Meas1.I "PCC Measurements.I" as Connection52
            [
                breakpoints = 8000, 7976; 7976, 7976
            ]
            connect Meas1.a S1.a_out as Connection40
            connect Meas1.b S1.b_out as Connection41
            connect Meas2.Ground Junction1 as Connection18
            connect Meas2.C S1.c_in as Connection48
            connect Meas2.b b as Connection50
            connect Meas2.c c as Connection49
            connect P.in Junction5 as Connection1113
            connect "PCC Measurements.f" Gain4.in as Connection1096
            connect "PCC Measurements.P" Junction5 as Connection1111
            [
                breakpoints = 7864, 7976
            ]
            connect "PCC Measurements.V" Meas1.V as Connection53
            connect Q.in Junction4 as Connection1110
            connect S1.c_out Meas1.c as Connection42
            connect S1.b_in Meas2.B as Connection47
            connect S1.a_in Meas2.A as Connection46
            connect "SR Flip Flop1.out" Junction3 as Connection1081
            [
                breakpoints = 7976, 8224
            ]
            connect a Meas2.a as Connection51
            connect "var -> kvar.in" Junction4 as Connection1108
            connect Termination1.in "Bus Join1.out" as Connection1114
            connect Termination2.in Junction3 as Connection1118
            [
                breakpoints = 7728, 8208
            ]
            connect Termination3.in "SR Flip Flop1.out_n" as Connection1119
            connect Termination4.in Meas2.V as Connection1120
        }
        [
            position = 5248, 7464
            size = 80, 48
        ]

        component "core/Transmission Line" F1_line {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable13"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_U_L2"
            R_sequence_imperial = "R_cable13"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 5248, 7280
            rotation = left
            size = 256, 72
        ]

        component Subsystem Coupling6 {
            layout = dynamic
            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "1.25e-6"
                R = "8"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8056, 8280
                size = 64, 48
            ]

            component "core/Four Phase Device Coupling" "Device Coupling 1" {
                C1 = "10e-6"
                R1 = "1"
                snb_type_i = "none"
                snb_type_u = "none"
            }
            [
                position = 7520, 7968
                size = 32, 352
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7912, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7912, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7912, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7912, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8264, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8264, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8264, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8264, 8336
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8040, 8048
            ]

            junction Junction2 pe
            [
                position = 8056, 8144
            ]

            junction Junction3 pe
            [
                position = 8072, 8248
            ]

            junction Junction4 pe
            [
                position = 8056, 8336
            ]

            connect "RC Snubber.A" Junction1 as Connection25
            connect Junction1 A as Connection26
            [
                breakpoints = 8040, 8048
            ]
            connect a Junction1 as Connection27
            connect B Junction2 as Connection28
            connect Junction2 "RC Snubber.B" as Connection29
            [
                breakpoints = 8056, 8144
            ]
            connect b Junction2 as Connection30
            connect "RC Snubber.C" Junction3 as Connection31
            connect Junction3 C as Connection32
            [
                breakpoints = 8072, 8240
            ]
            connect c Junction3 as Connection33
            connect "RC Snubber.N" Junction4 as Connection34
            connect Junction4 G as Connection35
            [
                breakpoints = 8056, 8336
            ]
            connect g Junction4 as Connection36
        }
        [
            position = 5256, 7592
            rotation = left
            scale = 1, -1
            size = 48, 80
        ]

        component Subsystem Coupling8 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 1" {
                fixed_snb_u = "true"
            }
            [
                position = 8192, 8192
                size = 12, 352
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8136, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8136, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 8136, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 8136, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            connect "Core Coupling 1.a_in" A as Connection5
            connect "Core Coupling 1.b_in" B as Connection7
            connect "Core Coupling 1.c_in" C as Connection1
            connect "Core Coupling 1.d_in" G as Connection4
            connect "Core Coupling 1.a_out" a as Connection8
            connect "Core Coupling 1.b_out" b as Connection2
            connect "Core Coupling 1.c_out" c as Connection3
            connect "Core Coupling 1.d_out" g as Connection6
        }
        [
            position = 4184, 7808
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem F1_CB2 {
            layout = dynamic
            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8208
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8144
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7936
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7936
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF1_CB2"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8008
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8152, 8192
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7328, 7808
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7440, 7648
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7440, 7696
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7248, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction53 sp
                        [
                            position = 6752, 8128
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection117
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        connect Junction51 Gain7.in as Connection114
                        connect Junction52 Junction35 as Connection119
                        connect Junction53 Junction23 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection116
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "PQ Power Meter1.Pdc" Junction51 as Connection113
                        connect "RMS value1.in" Junction52 as Connection118
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction53 as Connection121
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in1" Junction52 as Connection120
                        connect "Three Phase Phasor1.in_ref" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto34 {
                        value = "F1_CB2_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7408, 7856
                        hide_name = True
                    ]

                    tag Goto33 {
                        value = "F1_CB2_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7408, 7832
                        hide_name = True
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto31 {
                        value = "F1_CB2_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7408, 7784
                        hide_name = True
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto32 {
                        value = "F1_CB2_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7408, 7808
                        hide_name = True
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto30 {
                        value = "F1_CB2_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7408, 7760
                        hide_name = True
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7272, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7288, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7152, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7336, 7760
                    ]

                    junction Junction129 sp
                    [
                        position = 7344, 7784
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in22" Junction110 as Connection240
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 Junction126 as Connection391
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 "CALC FROM MEASUREMENTS.bus_freq" as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "1.47"
                    R51P_pickup2 = "1.47"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            The relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8176
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7936
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7984
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7952, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7344, 8248
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7264, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7264, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7264, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1469 pe
                [
                    position = 7328, 7928
                ]

                junction Junction1470 pe
                [
                    position = 7344, 8024
                ]

                junction Junction1471 pe
                [
                    position = 7360, 8120
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1469 as Connection395
                connect B Junction1470 as Connection398
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1471 as Connection401
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1472 as Connection404
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1469 IA.p_node as Connection396
                connect Junction1470 IB.p_node as Connection399
                connect Junction1471 IC.p_node as Connection402
                connect Junction1472 VC.n_node as Connection405
                connect V "Bus Join1.out" as Connection389
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P1 Junction1469 as Connection397
                connect res_for_meas.P2 Junction1470 as Connection400
                connect res_for_meas.P3 Junction1471 as Connection403
                connect res_for_meas.P4 Junction1472 as Connection406
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7464, 8256
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7480, 8120
                ]

                junction Junction1475 pe
                [
                    position = 7464, 8024
                ]

                junction Junction1476 pe
                [
                    position = 7448, 7928
                ]

                connect A Junction1476 as Connection410
                connect B Junction1475 as Connection407
                connect C Junction1474 as Connection404
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1421 as Connection402
                connect Junction1474 Junction1472 as Connection405
                connect Junction1475 Junction1471 as Connection408
                connect Junction1476 Junction1470 as Connection411
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1473 as Connection401
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P4 Junction1473 as Connection403
                connect res_for_meas.P3 Junction1474 as Connection406
                connect res_for_meas.P2 Junction1475 as Connection409
                connect res_for_meas.P1 Junction1476 as Connection412
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8000, 8312
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F1_CB2 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8048, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7968, 8088
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8000, 8104
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2610
            connect Brk.a Meas2.A as Connection2611
            connect Brk.b Meas2.B as Connection2612
            connect Brk.c Meas2.C as Connection2613
            connect C Meas1.C as Connection2608
            connect Meas1.B B as Connection2609
            connect Meas1.a Brk.A as Connection2614
            connect Meas1.c Brk.C as Connection2616
            connect Meas1.b Brk.B as Connection2615
            connect Meas2.a a as Connection2617
            connect Meas2.c c as Connection2619
            connect b Meas2.b as Connection2618
            connect Termination3.in Meas2.V as Connection2620
            connect Termination5.in Meas1.V as Connection2621
            connect Termination4.in Meas1.I as Connection2622
            connect F1_CB2.out Brk.control as Connection2623
        }
        [
            position = 5248, 7872
            size = 80, 48
        ]

        component Subsystem F1_CB1 {
            layout = dynamic
            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                    size = 64, 256
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                    size = 64, 32
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                    size = 64, 32
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7312, 8296
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7232, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7232, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7232, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1470 pe
                [
                    position = 7296, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7312, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7328, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1470 as Connection394
                connect B Junction1471 as Connection397
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1472 as Connection400
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1470 IA.p_node as Connection395
                connect Junction1471 IB.p_node as Connection398
                connect Junction1472 IC.p_node as Connection401
                connect Junction1473 Junction1421 as Connection406
                connect Junction1473 VC.n_node as Connection404
                connect V "Bus Join1.out" as Connection389
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P1 Junction1470 as Connection396
                connect res_for_meas.P2 Junction1471 as Connection399
                connect res_for_meas.P3 Junction1472 as Connection402
                connect res_for_meas.P4 Junction1473 as Connection405
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                }
                [
                    position = 7352, 8120
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                }
                [
                    position = 7224, 7928
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                }
                [
                    position = 7288, 8024
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7480, 8280
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7072, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7072, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7072, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7464, 7928
                ]

                junction Junction1475 pe
                [
                    position = 7480, 8024
                ]

                junction Junction1476 pe
                [
                    position = 7496, 8120
                ]

                connect A IA.p_node as Connection422
                connect B IB.p_node as Connection420
                connect IA.n_node Junction1474 as Connection423
                connect IB.n_node Junction1475 as Connection421
                connect IC.p_node C as Connection419
                connect IC.n_node Junction1476 as Connection418
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1421 as Connection402
                connect Junction1474 Junction1470 as Connection405
                connect Junction1475 Junction1471 as Connection408
                connect Junction1476 Junction1472 as Connection417
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1473 as Connection401
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P4 Junction1473 as Connection403
                connect res_for_meas.P1 Junction1474 as Connection406
                connect res_for_meas.P2 Junction1475 as Connection409
                connect res_for_meas.P3 Junction1476 as Connection416
            }
            [
                position = 8144, 8296
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF1_CB1"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8136, 8192
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7624, 7640
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7512, 7472
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7512, 7520
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 "Trip_out mng fnc.enable" as Connection190
                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection189
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection191
                        connect "Trip_out mng fnc.initial_condition" initial_condition as Connection193
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection192
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection195
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection194
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7248, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7360, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7448, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8912
                        ]

                        junction Junction52 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction53 sp
                        [
                            position = 6752, 8128
                        ]

                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        connect Junction52 Junction35 as Connection119
                        connect Junction53 Junction23 as Connection122
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "RMS value1.in" Junction52 as Connection118
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction53 as Connection121
                        connect S Gain9.out as Connection102
                        connect "Subsystem1.Exporting or Importing" "Export Import" as Connection117
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect "Subsystem1.Lagging or Leading" "Lag Lead" as Connection116
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in1" Junction52 as Connection120
                        connect "Three Phase Phasor1.in_ref" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto30 {
                        value = "F1_CB1_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7520, 7592
                        hide_name = True
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7384, 8256
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag Goto33 {
                        value = "F1_CB1_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7520, 7664
                        hide_name = True
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto34 {
                        value = "F1_CB1_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7520, 7688
                        hide_name = True
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag Goto32 {
                        value = "F1_CB1_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7704, 7640
                        hide_name = True
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag Goto31 {
                        value = "F1_CB1_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7520, 7616
                        hide_name = True
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7448, 8240
                    ]

                    junction Junction125 sp
                    [
                        position = 7160, 8032
                    ]

                    junction Junction127 sp
                    [
                        position = 7400, 8192
                    ]

                    junction Junction128 sp
                    [
                        position = 7384, 8176
                    ]

                    junction Junction132 sp
                    [
                        position = 7344, 8624
                    ]

                    junction Junction133 sp
                    [
                        position = 7384, 7592
                    ]

                    junction Junction134 sp
                    [
                        position = 7472, 7616
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in22" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction127 as Connection392
                    connect "Bus Join1.in18" Junction128 as Connection395
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction133 as Connection443
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction101 "Logical operator1.in1" as Connection438
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection434
                    connect Junction105 "Unit Delay4.out" as Connection436
                    connect Junction106 Junction132 as Connection435
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection387
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 "Logical operator1.in3" as Connection440
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 Goto33 as Connection404
                    connect Junction123 Junction110 as Connection383
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection388
                    connect Junction125 normalize.in as Connection441
                    connect Junction127 "CALC FROM MEASUREMENTS.Q" as Connection393
                    connect Junction127 Junction134 as Connection446
                    connect Junction128 "CALC FROM MEASUREMENTS.P" as Connection396
                    connect Junction132 Goto34 as Connection415
                    connect Junction132 cb_state as Connection414
                    connect Junction133 Junction128 as Connection444
                    connect Junction134 Goto31 as Connection447
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in" Junction100 as Connection437
                    connect "Logical operator1.in2" Junction120 as Connection439
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction133 as Connection445
                    connect Q.in Junction134 as Connection448
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.out Goto32 as Connection442
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "0.6"
                    R51P_pickup2 = "0.6"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in" Delay1.out as Connection936
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7904, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 7944, 8016
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination2 {
            }
            [
                position = 7944, 8056
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 7952, 8352
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F1_CB1 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8016, 8200
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2623
            connect B Meas1.B as Connection2622
            connect Brk.a Meas2.A as Connection2627
            connect Brk.b Meas2.B as Connection2628
            connect Brk.c Meas2.C as Connection2629
            connect C Meas1.C as Connection2621
            connect Meas1.a Brk.A as Connection2624
            connect Meas1.b Brk.B as Connection2625
            connect Meas1.c Brk.C as Connection2626
            connect Meas2.a a as Connection2632
            connect Meas2.b b as Connection2631
            connect Meas2.c c as Connection2630
            connect Meas1.V Termination1.in as Connection2639
            [
                breakpoints = 8024, 8104
            ]
            connect Termination2.in Meas1.I as Connection2640
            [
                breakpoints = 8008, 8088
            ]
            connect Termination3.in Meas2.V as Connection2644
            [
                breakpoints = 8032, 8296
            ]
            connect F1_CB1.out Brk.control as Connection2645
        }
        [
            position = 4176, 7944
            size = 80, 48
        ]

        component Subsystem Coupling11 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 1" {
                C1 = "88.42e-6"
                R1 = "1"
                fixed_snb_i = "true"
                fixed_snb_u = "true"
            }
            [
                position = 8192, 8192
                size = 12, 352
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 8136, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 8136, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 8136, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 8136, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            connect "Core Coupling 1.a_in" A as Connection5
            connect "Core Coupling 1.b_in" B as Connection7
            connect "Core Coupling 1.c_in" C as Connection1
            connect "Core Coupling 1.d_in" G as Connection4
            connect "Core Coupling 1.a_out" a as Connection8
            connect "Core Coupling 1.b_out" b as Connection2
            connect "Core Coupling 1.c_out" c as Connection3
            connect "Core Coupling 1.d_out" g as Connection6
        }
        [
            position = 5256, 7792
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component "core/Transmission Line" Feeder1_line6 {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_imperial = "C_cable13"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable13"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "l_F1L6"
            Length_miles = "l_F1L6"
            R_sequence_imperial = "R_cable13"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 4664, 8632
            rotation = left
            size = 256, 72
        ]

        component Subsystem CIL_F1_Critical1 {
            layout = dynamic
            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "1200e3"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = "0.9"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 4192, 8856
            rotation = right
            scale = -1, 1
            size = 48, 72
        ]

        component Subsystem Feeder1_trafo1 {
            layout = dynamic
            component "core/Current Measurement" Ia1 {
            }
            [
                position = 8456, 8096
                size = 64, 32
            ]

            component "core/Voltage Measurement" Va1 {
            }
            [
                position = 8408, 8248
                rotation = right
                size = 64, 32
            ]

            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_500kVA_1"
                L2 = "L2_500kVA_1"
                Lm = "Lm_feeder1_transfo1"
                Poc1 = "5713.2"
                Psc1 = "3332.6668666"
                R1 = "R1_500kVA_1"
                R2 = "R2_500kVA_1"
                Rm = "Rm_feeder1_transfo1"
                Sn = "Sn_500kVA_1"
                V1 = "V1_500kVA_1"
                V2 = "V2_500kVA_1"
                clock_number = "1"
                current_vals_SI = "[0.07099970268944768, 29.5832094539223]"
                current_vals_pu = "[0.004156921938167208, 1.7320508075686942]"
                f = "sys_f"
                flux_vals_SI = "[35.866052856720586, 45.43033361848513]"
                flux_vals_pu = "[0.6928203230266023, 0.8775724091672871]"
                input = "SI"
                ioc1 = "15.1977491464"
                l1 = "0.00408251691158"
                l2 = "0.0122475507348"
                lm = "6.59859830622"
                r1 = "0.0016663334333"
                r2 = "0.00499900029989"
                rm = "87.5166281594"
                usc1 = "1.76379642564"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8536, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8272, 8432
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8272, 8096
            ]

            junction Junction2 pe
            [
                position = 8232, 8376
            ]

            junction Junction3 pe
            [
                position = 8232, 8376
            ]

            connect Ground Junction2 as Connection13
            connect Ia1.n_node a2 as Connection17
            connect Junction1 Ia1.p_node as Connection16
            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 Junction1 as Connection10
            connect Tr1.sec_2 b2 as Connection4
            connect Tr1.sec_3 c2 as Connection1
            connect Va1.p_node Junction1 as Connection12
            connect Va1.n_node Junction3 as Connection18
            connect Junction3 Junction2 as Connection19
            connect Tr1.n2 Junction3 as Connection20
        }
        [
            position = 4024, 8608
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem F1_CB14 {
            layout = dynamic
            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7472, 8264
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7456, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7472, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7488, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection401
                connect B Junction1474 as Connection404
                connect C Junction1475 as Connection407
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1470 as Connection402
                connect Junction1474 Junction1471 as Connection405
                connect Junction1475 Junction1472 as Connection408
                connect Junction1476 Junction1421 as Connection411
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1476 as Connection410
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P1 Junction1473 as Connection403
                connect res_for_meas.P2 Junction1474 as Connection406
                connect res_for_meas.P3 Junction1475 as Connection409
                connect res_for_meas.P4 Junction1476 as Connection412
            }
            [
                position = 8144, 8304
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                        size = 48, 128
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8144, 8192
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                        size = 48, 48
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/480.0"
                    }
                    [
                        position = 7304, 7752
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7352, 7648
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7352, 7600
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7264, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7376, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7416, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection117
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection116
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto33 {
                        value = "F1_CB14_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7776
                        hide_name = True
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag Goto32 {
                        value = "F1_CB14_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7752
                        hide_name = True
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag Goto31 {
                        value = "F1_CB14_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7728
                        hide_name = True
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag Goto30 {
                        value = "F1_CB14_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7704
                        hide_name = True
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag Goto34 {
                        value = "F1_CB14_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7800
                        hide_name = True
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7256, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7264, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7160, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7328, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7256, 7704
                    ]

                    junction Junction129 sp
                    [
                        position = 7272, 7728
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto26 Junction122 as Connection379
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 R50512761.Enable as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "3500.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "2.47"
                    R51P_pickup2 = "2.47"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"
                    VRMSLL = "480.0"
                    dV_threshold = "10"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF1_CB14"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7936, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7344, 8264
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7288, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7288, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7288, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1469 pe
                [
                    position = 7328, 7928
                ]

                junction Junction1470 pe
                [
                    position = 7344, 8024
                ]

                junction Junction1471 pe
                [
                    position = 7360, 8120
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1469 as Connection395
                connect B Junction1470 as Connection398
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1471 as Connection401
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1472 as Connection404
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1469 IA.p_node as Connection396
                connect Junction1470 IB.p_node as Connection399
                connect Junction1471 IC.p_node as Connection402
                connect Junction1472 VC.n_node as Connection405
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P1 Junction1469 as Connection397
                connect res_for_meas.P2 Junction1470 as Connection400
                connect res_for_meas.P3 Junction1471 as Connection403
                connect res_for_meas.P4 Junction1472 as Connection406
            }
            [
                position = 8144, 8088
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8008, 8304
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F1_CB14 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8056, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7976, 8080
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8008, 8096
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect B Meas1.B as Connection2609
            connect Brk.b Meas2.B as Connection2615
            connect Brk.c Meas2.C as Connection2614
            connect Brk.a Meas2.A as Connection2616
            connect C Meas1.C as Connection2608
            connect Meas1.A A as Connection2610
            connect Meas1.b Brk.B as Connection2612
            connect Meas1.a Brk.A as Connection2611
            connect Meas1.c Brk.C as Connection2613
            connect Meas2.a a as Connection2619
            connect Meas2.b b as Connection2618
            connect Meas2.c c as Connection2617
            connect F1_CB14.out Brk.control as Connection2620
            connect Termination3.in Meas2.V as Connection2621
            connect Termination5.in Meas1.V as Connection2622
            connect Termination4.in Meas1.I as Connection2623
        }
        [
            position = 5136, 9576
            size = 80, 48
        ]

        component Subsystem CIL_F1_Critical2 {
            layout = dynamic
            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            - pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "1500e3"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = "0.9"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 5256, 9216
            rotation = right
            scale = -1, 1
            size = 48, 72
        ]

        component Subsystem F1_CB10 {
            layout = dynamic
            component Subsystem Meas1 {
                layout = dynamic
                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7336, 8256
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7264, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7264, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7264, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1470 pe
                [
                    position = 7320, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7336, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7352, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1470 as Connection394
                connect B Junction1471 as Connection397
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1472 as Connection400
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1470 IA.p_node as Connection395
                connect Junction1471 IB.p_node as Connection398
                connect Junction1472 IC.p_node as Connection401
                connect Junction1473 Junction1421 as Connection406
                connect Junction1473 VC.n_node as Connection404
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P1 Junction1470 as Connection396
                connect res_for_meas.P2 Junction1471 as Connection399
                connect res_for_meas.P3 Junction1472 as Connection402
                connect res_for_meas.P4 Junction1473 as Connection405
            }
            [
                position = 8144, 8088
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF1_CB10"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8136, 8192
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/4160.0"
                    }
                    [
                        position = 7296, 7768
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7360, 7624
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7360, 7672
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7264, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7376, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8912
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect "Subsystem1.Exporting or Importing" "Export Import" as Connection117
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect "Subsystem1.Lagging or Leading" "Lag Lead" as Connection116
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag Goto32 {
                        value = "F1_CB10_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7384, 7768
                        hide_name = True
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag Goto30 {
                        value = "F1_CB10_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7384, 7720
                        hide_name = True
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto31 {
                        value = "F1_CB10_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7384, 7744
                        hide_name = True
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto33 {
                        value = "F1_CB10_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7384, 7792
                        hide_name = True
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto34 {
                        value = "F1_CB10_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7384, 7816
                        hide_name = True
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7280, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7296, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7168, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7328, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7296, 8192
                    ]

                    junction Junction128 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction129 sp
                    [
                        position = 7264, 7720
                    ]

                    junction Junction130 sp
                    [
                        position = 7336, 7752
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto26 Junction122 as Connection379
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction129 as Connection401
                    connect Goto32 normalize.out as Connection399
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction128 as Connection398
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 R50512761.Enable as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction124 Junction127 as Connection394
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction130 as Connection404
                    connect Junction128 Junction106 as Connection397
                    connect Junction129 Junction123 as Connection402
                    connect Junction130 Goto31 as Connection405
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction129 as Connection403
                    connect Q.in Junction130 as Connection406
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction128 as Connection396
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection400
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "1.33"
                    R51P_pickup2 = "1.33"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"
                    VRMSLL = "4160.0"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7968, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7464, 8272
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7448, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7464, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7480, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection401
                connect B Junction1474 as Connection404
                connect C Junction1475 as Connection407
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1470 as Connection402
                connect Junction1474 Junction1471 as Connection405
                connect Junction1475 Junction1472 as Connection408
                connect Junction1476 Junction1421 as Connection411
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1476 as Connection410
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P1 Junction1473 as Connection403
                connect res_for_meas.P2 Junction1474 as Connection406
                connect res_for_meas.P3 Junction1475 as Connection409
                connect res_for_meas.P4 Junction1476 as Connection412
            }
            [
                position = 8144, 8304
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8016, 8296
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F1_CB10 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8056, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7976, 8088
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8008, 8104
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect B Meas1.B as Connection2609
            connect Brk.b Meas2.B as Connection2615
            connect Brk.c Meas2.C as Connection2616
            connect Brk.a Meas2.A as Connection2614
            connect C Meas1.C as Connection2608
            connect Meas1.A A as Connection2610
            connect Meas1.b Brk.B as Connection2612
            connect Meas1.a Brk.A as Connection2611
            connect Meas1.c Brk.C as Connection2613
            connect Meas2.a a as Connection2617
            connect Meas2.b b as Connection2618
            connect Meas2.c c as Connection2619
            connect F1_CB10.out Brk.control as Connection2620
            connect Termination3.in Meas2.V as Connection2621
            connect Termination5.in Meas1.V as Connection2622
            connect Meas1.I Termination4.in as Connection2623
        }
        [
            position = 4944, 9112
            size = 80, 48
        ]

        component Subsystem Feeder1_trafo2 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_2500kVA_1"
                L2 = "L2_2500kVA_1"
                Lm = "Lm_feeder1_transfo2"
                Poc1 = "5713.2"
                Psc1 = "16518.5685408"
                R1 = "R1_2500kVA_1"
                R2 = "R2_2500kVA_1"
                Rm = "Rm_feeder1_transfo2"
                Sn = "Sn_2500kVA_1"
                V1 = "V1_2500kVA_1"
                V2 = "V2_2500kVA_1"
                clock_number = "1"
                current_vals_SI = "[0.35499851344683736, 147.9160472695156]"
                current_vals_pu = "[0.004156921938167209, 1.7320508075745495]"
                f = "sys_f"
                flux_vals_SI = "[35.8660528567491, 45.430333618548865]"
                flux_vals_pu = "[0.6928203230266023, 0.8775724091672871]"
                input = "SI"
                ioc1 = "3.03954982929"
                l1 = "0.00455912491726"
                l2 = "0.0136773747518"
                lm = "32.9929915311"
                r1 = "0.00165185685408"
                r2 = "0.00495557056224"
                rm = "437.583140797"
                usc1 = "1.93965980842"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8280, 8376
                rotation = down
            ]

            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection3
            connect Tr1.sec_2 b2 as Connection4
            connect Tr1.sec_3 c2 as Connection1
            connect Tr1.n2 Ground as Connection9
        }
        [
            position = 4296, 8600
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem Feeder1_trafo5 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_2MVA_1"
                L2 = "L2_2MVA_1"
                Lm = "Lm_feeder1_transfo5"
                Poc1 = "519.168"
                Psc1 = "13247.9599806"
                R1 = "R1_2MVA_1"
                R2 = "R2_2MVA_1"
                Rm = "Rm_feeder1_transfo5"
                Sn = "Sn_2MVA_1"
                V1 = "V1_2MVA_1"
                V2 = "V2_2MVA_1"
                clock_number = "1"
                current_vals_SI = "[0.9421114395319917, 392.5464331383299]"
                current_vals_pu = "[0.004156921938165342, 1.7320508075674217]"
                f = "sys_f"
                flux_vals_SI = "[10.811795643773644, 13.694941148779948]"
                flux_vals_pu = "[0.6928203230292398, 0.877572409169516]"
                input = "SI"
                ioc1 = "0.345261194639"
                l1 = "0.0047195857431"
                l2 = "0.0141587572293"
                lm = "290.457900665"
                r1 = "0.00165599499758"
                r2 = "0.00496798499273"
                rm = "3852.31755424"
                usc1 = "2.00067224776"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8264, 8384
                rotation = down
            ]

            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection3
            connect Tr1.sec_2 b2 as Connection4
            connect Tr1.sec_3 c2 as Connection1
            connect Tr1.n2 Ground as Connection9
        }
        [
            position = 4944, 9264
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem Coupling10 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 1" {
                C1 = "1e-6"
                R1 = "1e3"
                fixed_snb_i = "true"
                fixed_snb_u = "true"
            }
            [
                position = 8192, 8192
                size = 12, 352
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "1.25e-6"
                R = "8"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8072, 8288
                size = 64, 48
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7936, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7936, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7936, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7936, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8056, 8048
            ]

            junction Junction2 pe
            [
                position = 8072, 8144
            ]

            junction Junction3 pe
            [
                position = 8088, 8240
            ]

            junction Junction4 pe
            [
                position = 8072, 8336
            ]

            connect "Core Coupling 1.a_in" Junction1 as Connection9
            connect "Core Coupling 1.b_in" Junction2 as Connection12
            connect "Core Coupling 1.c_in" Junction3 as Connection15
            connect "Core Coupling 1.d_in" Junction4 as Connection18
            connect "Core Coupling 1.a_out" a as Connection8
            connect "Core Coupling 1.b_out" b as Connection2
            connect "Core Coupling 1.c_out" c as Connection3
            connect "Core Coupling 1.d_out" g as Connection6
            connect Junction1 A as Connection10
            connect Junction2 B as Connection13
            connect Junction3 C as Connection16
            connect Junction4 G as Connection19
            connect "RC Snubber.A" Junction1 as Connection11
            connect "RC Snubber.B" Junction2 as Connection14
            connect "RC Snubber.C" Junction3 as Connection17
            connect "RC Snubber.N" Junction4 as Connection20
        }
        [
            position = 4672, 8816
            rotation = left
            scale = 1, -1
            size = 48, 80
        ]

        component Subsystem CIL_F1_Priority1 {
            layout = dynamic
            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        R and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "1000e3"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = "0.9"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 5136, 9704
            rotation = right
            scale = -1, 1
            size = 48, 72
        ]

        component Subsystem F1_CB5 {
            layout = dynamic
            component Subsystem Meas2 {
                layout = dynamic
                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                    size = 64, 32
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7480, 8264
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7464, 7928
                ]

                junction Junction1475 pe
                [
                    position = 7480, 8024
                ]

                junction Junction1476 pe
                [
                    position = 7496, 8120
                ]

                connect A Junction1474 as Connection404
                connect B Junction1475 as Connection407
                connect C Junction1476 as Connection410
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1421 as Connection402
                connect Junction1474 Junction1470 as Connection405
                connect Junction1475 Junction1471 as Connection408
                connect Junction1476 Junction1472 as Connection411
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1473 as Connection401
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P4 Junction1473 as Connection403
                connect res_for_meas.P1 Junction1474 as Connection406
                connect res_for_meas.P2 Junction1475 as Connection409
                connect res_for_meas.P3 Junction1476 as Connection412
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                    size = 64, 32
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7296, 8216
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7224, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7224, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7224, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1469 pe
                [
                    position = 7280, 7928
                ]

                junction Junction1470 pe
                [
                    position = 7296, 8024
                ]

                junction Junction1471 pe
                [
                    position = 7312, 8120
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1469 as Connection395
                connect B Junction1470 as Connection398
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1471 as Connection401
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1472 as Connection404
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1469 IA.p_node as Connection396
                connect Junction1470 IB.p_node as Connection399
                connect Junction1471 IC.p_node as Connection402
                connect Junction1472 VC.n_node as Connection405
                connect V "Bus Join1.out" as Connection389
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P1 Junction1469 as Connection397
                connect res_for_meas.P2 Junction1470 as Connection400
                connect res_for_meas.P3 Junction1471 as Connection403
                connect res_for_meas.P4 Junction1472 as Connection406
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                    size = 64, 256
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8152, 8192
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7336, 7752
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7376, 7656
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7376, 7608
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7224, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7344, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7392, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection117
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection116
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto33 {
                        value = "F1_CB5_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7776
                        hide_name = True
                    ]

                    tag Goto30 {
                        value = "F1_CB5_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7704
                        hide_name = True
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto32 {
                        value = "F1_CB5_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7752
                        hide_name = True
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag Goto34 {
                        value = "F1_CB5_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7800
                        hide_name = True
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag Goto31 {
                        value = "F1_CB5_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7424, 7728
                        hide_name = True
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7264, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7272, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7152, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7344, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7296, 7704
                    ]

                    junction Junction129 sp
                    [
                        position = 7328, 7728
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_pickup1 = "20.00"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "0.5"
                    R51P_pickup2 = "0.5"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF1_CB5"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7984, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8000, 8312
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F1_CB5 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8048, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7968, 8088
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8000, 8104
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2610
            connect Brk.B Meas1.b as Connection2612
            connect Brk.a Meas2.A as Connection2614
            connect Brk.c Meas2.C as Connection2616
            connect C Meas1.C as Connection2608
            connect Meas1.B B as Connection2609
            connect Meas1.c Brk.C as Connection2611
            connect Meas1.a Brk.A as Connection2613
            connect Meas2.B Brk.b as Connection2615
            connect Meas2.a a as Connection2619
            connect Meas2.b b as Connection2618
            connect Meas2.c c as Connection2617
            connect F1_CB5.out Brk.control as Connection2620
            connect Termination3.in Meas2.V as Connection2621
            connect Termination5.in Meas1.V as Connection2622
            connect Meas1.I Termination4.in as Connection2623
        }
        [
            position = 4296, 8432
            size = 80, 48
        ]

        component "core/Transmission Line" Feeder1_line1 {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_imperial = "C_cable13"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable13"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_F1L1"
            R_sequence_imperial = "R_cable13"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 4176, 8168
            rotation = left
            size = 256, 72
        ]

        component "core/Transmission Line" Feeder1_line2 {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_imperial = "C_cable13"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable13"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_F1L2"
            R_sequence_imperial = "R_cable13"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 5248, 8064
            rotation = left
            size = 256, 72
        ]

        component Subsystem CIL_F1_Interruptible1 {
            layout = dynamic
            component pas_inductor Lc {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8248
            ]

            component pas_resistor Rc {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8248
            ]

            component pas_resistor Rb {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8192
            ]

            component pas_inductor La {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8136
            ]

            component pas_resistor Ra {
                resistance = "V**2/S*pf"
            }
            [
                position = 8136, 8136
            ]

            component pas_inductor Lb {
                inductance = "V**2/S*np.sqrt(1-pf**2)/2.0/np.pi/f"
            }
            [
                position = 8232, 8192
            ]

            port A {
                label = "A"
                position = left:1
                kind = pe
            }
            [
                position = 8056, 8136
            ]

            port B {
                label = "B"
                position = left:2
                kind = pe
            }
            [
                position = 8056, 8192
            ]

            port C {
                label = "C"
                position = left:3
                kind = pe
            }
            [
                position = 8056, 8248
            ]

            junction Junction1 pe
            [
                position = 8288, 8192
            ]

            connect Junction1 Lc.n_node as Connection17
            connect La.n_node Junction1 as Connection16
            connect Lb.n_node Junction1 as Connection18
            connect Lb.p_node Rb.n_node as Connection13
            connect Ra.p_node A as Connection8
            connect Ra.n_node La.p_node as Connection12
            connect Rb.p_node B as Connection1
            connect Rc.p_node C as Connection10
            connect Rc.n_node Lc.p_node as Connection14

            mask {
                description = "Constant Impedance Load
hree-phase Y connected RL load.
and L values are calculated using the input parameters:
ated line-to-line voltage
ated three-phase power
f: Rated frequency
pf: Rated power factor
one of the parameters can be set to 0."

                V {
                    label = "Voltage"
                    widget = edit
                    type = generic
                    default_value = "480"
                    unit = "V"
                    group = "General"
                }

                S {
                    label = "Power"
                    widget = edit
                    type = generic
                    default_value = "300e3"
                    unit = "VA"
                    group = "General"
                }

                f {
                    label = "Frequency"
                    widget = edit
                    type = generic
                    default_value = "60"
                    unit = "Hz"
                    group = "General"
                }

                pf {
                    label = "Power Factor"
                    widget = edit
                    type = generic
                    default_value = "0.9"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 4024, 8776
            rotation = right
            scale = -1, 1
            size = 48, 72
        ]

        component Subsystem F1_CB6 {
            layout = dynamic
            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7312, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7224, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7224, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7224, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1469 pe
                [
                    position = 7296, 7928
                ]

                junction Junction1470 pe
                [
                    position = 7312, 8024
                ]

                junction Junction1471 pe
                [
                    position = 7328, 8120
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1469 as Connection395
                connect B Junction1470 as Connection398
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1471 as Connection401
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1472 as Connection404
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1469 IA.p_node as Connection396
                connect Junction1470 IB.p_node as Connection399
                connect Junction1471 IC.p_node as Connection402
                connect Junction1472 VC.n_node as Connection405
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P1 Junction1469 as Connection397
                connect res_for_meas.P2 Junction1470 as Connection400
                connect res_for_meas.P3 Junction1471 as Connection403
                connect res_for_meas.P4 Junction1472 as Connection406
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF1_CB6"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8144, 8192
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7336, 7688
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7384, 7544
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7384, 7592
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7256, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7376, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection117
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.in Junction50 as Connection110
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 "PQ Power Meter1.Qdc" as Connection111
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection116
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag Goto31 {
                        value = "F1_CB6_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7664
                        hide_name = True
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag Goto32 {
                        value = "F1_CB6_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7688
                        hide_name = True
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto34 {
                        value = "F1_CB6_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7736
                        hide_name = True
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag Goto30 {
                        value = "F1_CB6_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7640
                        hide_name = True
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto33 {
                        value = "F1_CB6_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7416, 7712
                        hide_name = True
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7296, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7304, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7168, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7328, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7344, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7320, 7640
                    ]

                    junction Junction129 sp
                    [
                        position = 7344, 7664
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "0.75"
                    R51P_pickup2 = "0.75"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7976, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7472, 8272
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7456, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7472, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7488, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection401
                connect B Junction1474 as Connection404
                connect C Junction1475 as Connection407
                connect Junction1421 Junction1476 as Connection410
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1470 as Connection402
                connect Junction1474 Junction1471 as Connection405
                connect Junction1475 Junction1472 as Connection408
                connect Junction1476 VC.n_node as Connection411
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P1 Junction1473 as Connection403
                connect res_for_meas.P2 Junction1474 as Connection406
                connect res_for_meas.P3 Junction1475 as Connection409
                connect res_for_meas.P4 Junction1476 as Connection412
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 7992, 8312
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F1_CB6 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8040, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7960, 8088
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 7992, 8104
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect A Meas1.A as Connection2615
            connect Brk.B Meas1.b as Connection2619
            connect Brk.a Meas2.A as Connection2621
            connect Brk.c Meas2.C as Connection2623
            connect C Meas1.C as Connection2617
            connect Meas1.B B as Connection2616
            connect Meas1.a Brk.A as Connection2618
            connect Meas1.c Brk.C as Connection2620
            connect Meas2.B Brk.b as Connection2622
            connect Meas2.a a as Connection2624
            connect Meas2.c c as Connection2626
            connect b Meas2.b as Connection2625
            connect F1_CB6.out Brk.control as Connection2627
            connect Termination3.in Meas2.V as Connection2628
            connect Termination5.in Meas1.V as Connection2629
            connect Meas1.I Termination4.in as Connection2630
        }
        [
            position = 4664, 8352
            size = 80, 48
        ]

        component Subsystem Feeder1_trafo6 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_2MVA_1"
                L2 = "L2_2MVA_1"
                Lm = "Lm_feeder1_transfo6"
                Poc1 = "519.168"
                Psc1 = "13247.9599806"
                R1 = "R1_2MVA_1"
                R2 = "R2_2MVA_1"
                Rm = "Rm_feeder1_transfo6"
                Sn = "Sn_2MVA_1"
                V1 = "V1_2MVA_1"
                V2 = "V2_2MVA_1"
                clock_number = "1"
                current_vals_SI = "[0.9421114395319917, 392.5464331383299]"
                current_vals_pu = "[0.004156921938165342, 1.7320508075674217]"
                f = "sys_f"
                flux_vals_SI = "[10.811795643773644, 13.694941148779948]"
                flux_vals_pu = "[0.6928203230292398, 0.877572409169516]"
                input = "SI"
                ioc1 = "0.345261194639"
                l1 = "0.0047195857431"
                l2 = "0.0141587572293"
                lm = "290.457900665"
                r1 = "0.00165599499758"
                r2 = "0.00496798499273"
                rm = "3852.31755424"
                usc1 = "2.00067224776"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8264, 8360
                rotation = down
            ]

            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection3
            connect Tr1.sec_2 b2 as Connection4
            connect Tr1.sec_3 c2 as Connection1
            connect Tr1.n2 Ground as Connection9
        }
        [
            position = 5256, 9104
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem Feeder1_trafo3 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_3750kVA"
                L2 = "L2_3750kVA"
                Lm = "Lm_feeder1_transfo3"
                Poc1 = "5713.2"
                Psc1 = "10376.8200411"
                R1 = "R1_3750kVA"
                R2 = "R2_3750kVA"
                Rm = "Rm_feeder1_transfo3"
                Sn = "Sn_3750kVA"
                V1 = "V1_3750kVA"
                V2 = "V2_3750kVA"
                clock_number = "1"
                current_vals_SI = "[0.5324977701702561, 221.8740709042734]"
                current_vals_pu = "[0.004156921938163306, 1.7320508075667431]"
                f = "sys_f"
                flux_vals_SI = "[35.8660528567491, 45.430333618548865]"
                flux_vals_pu = "[0.6928203230266023, 0.8775724091672871]"
                input = "SI"
                ioc1 = "2.02636655286"
                l1 = "0.00394319161562"
                l2 = "0.0118295748469"
                lm = "49.4894872966"
                r1 = "0.000691788002744"
                r2 = "0.00207536400823"
                rm = "656.374711195"
                usc1 = "1.60136595485"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8272, 8368
                rotation = down
            ]

            connect Tr1.prm_1 A1 as Connection6
            connect Tr1.prm_2 B1 as Connection8
            connect Tr1.prm_3 C1 as Connection2
            connect Tr1.sec_1 a2 as Connection3
            connect Tr1.sec_2 b2 as Connection4
            connect Tr1.sec_3 c2 as Connection1
            connect Tr1.n2 Ground as Connection9
        }
        [
            position = 4664, 8920
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem Coupling9 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 1" {
                C1 = "88.42e-7"
                R1 = "10"
                fixed_snb_i = "true"
                fixed_snb_u = "true"
            }
            [
                position = 8192, 8192
                size = 12, 352
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "50e-6"
                R = ".2"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8080, 8288
                size = 64, 48
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7928, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7928, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7928, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7928, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8064, 8048
            ]

            junction Junction2 pe
            [
                position = 8080, 8144
            ]

            junction Junction3 pe
            [
                position = 8096, 8240
            ]

            junction Junction4 pe
            [
                position = 8080, 8336
            ]

            connect "Core Coupling 1.a_in" Junction1 as Connection9
            connect "Core Coupling 1.b_in" Junction2 as Connection12
            connect "Core Coupling 1.c_in" Junction3 as Connection15
            connect "Core Coupling 1.d_in" Junction4 as Connection18
            connect "Core Coupling 1.a_out" a as Connection8
            connect "Core Coupling 1.b_out" b as Connection2
            connect "Core Coupling 1.c_out" c as Connection3
            connect "Core Coupling 1.d_out" g as Connection6
            connect Junction1 A as Connection10
            connect Junction2 B as Connection13
            connect Junction3 C as Connection16
            connect Junction4 G as Connection19
            connect "RC Snubber.A" Junction1 as Connection11
            connect "RC Snubber.B" Junction2 as Connection14
            connect "RC Snubber.C" Junction3 as Connection17
            connect "RC Snubber.N" Junction4 as Connection20
        }
        [
            position = 4952, 9424
            rotation = left
            scale = 1, -1
            size = 48, 80
        ]

        component Subsystem F1_CB4 {
            layout = dynamic
            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7320, 8240
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7248, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7248, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7248, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1470 pe
                [
                    position = 7304, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7320, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7336, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1470 as Connection394
                connect B Junction1471 as Connection397
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1472 as Connection400
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1473 as Connection406
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1470 IA.p_node as Connection395
                connect Junction1471 IB.p_node as Connection398
                connect Junction1472 IC.p_node as Connection401
                connect Junction1473 VC.n_node as Connection404
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P1 Junction1470 as Connection396
                connect res_for_meas.P2 Junction1471 as Connection399
                connect res_for_meas.P3 Junction1472 as Connection402
                connect res_for_meas.P4 Junction1473 as Connection405
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7480, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7464, 7928
                ]

                junction Junction1475 pe
                [
                    position = 7480, 8024
                ]

                junction Junction1476 pe
                [
                    position = 7496, 8120
                ]

                connect A Junction1474 as Connection404
                connect B Junction1475 as Connection407
                connect C Junction1476 as Connection410
                connect Junction1421 Junction1473 as Connection401
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 VC.n_node as Connection402
                connect Junction1474 Junction1470 as Connection405
                connect Junction1475 Junction1471 as Connection408
                connect Junction1476 Junction1472 as Connection411
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P4 Junction1473 as Connection403
                connect res_for_meas.P1 Junction1474 as Connection406
                connect res_for_meas.P2 Junction1475 as Connection409
                connect res_for_meas.P3 Junction1476 as Connection412
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF1_CB4"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8144, 8192
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7312, 7800
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7368, 7696
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7368, 7648
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7248, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7360, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8912
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection117
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 Gain8.in as Connection111
                        connect Junction51 Gain7.in as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection116
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "PQ Power Meter1.Qdc" Junction50 as Connection110
                        connect "PQ Power Meter1.Pdc" Junction51 as Connection113
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in1" Junction52 as Connection120
                        connect "Three Phase Phasor1.in_ref" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag Goto33 {
                        value = "F1_CB4_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7824
                        hide_name = True
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto32 {
                        value = "F1_CB4_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7800
                        hide_name = True
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto34 {
                        value = "F1_CB4_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7848
                        hide_name = True
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag Goto31 {
                        value = "F1_CB4_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7776
                        hide_name = True
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag Goto30 {
                        value = "F1_CB4_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7752
                        hide_name = True
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7272, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7288, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7168, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7312, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7312, 7752
                    ]

                    junction Junction129 sp
                    [
                        position = 7328, 7776
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto26 Junction122 as Connection379
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 R50512761.Enable as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "0.1"
                    R51P_pickup2 = "0.1"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            The relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7984, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8016, 8312
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F1_CB4 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8064, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7984, 8088
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8016, 8104
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect Brk.c Meas2.C as Connection2614
            connect Brk.a Meas2.A as Connection2616
            connect C Meas1.C as Connection2608
            connect Meas1.A A as Connection2610
            connect Meas1.B B as Connection2609
            connect Meas1.c Brk.C as Connection2613
            connect Meas1.a Brk.A as Connection2611
            connect Meas1.b Brk.B as Connection2612
            connect Meas2.B Brk.b as Connection2615
            connect Meas2.c c as Connection2619
            connect a Meas2.a as Connection2620
            connect b Meas2.b as Connection2618
            connect F1_CB4.out Brk.control as Connection2621
            connect Termination3.in Meas2.V as Connection2622
            connect Termination5.in Meas1.V as Connection2623
            connect Meas1.I Termination4.in as Connection2624
        }
        [
            position = 4016, 8432
            size = 80, 48
        ]

        component Subsystem F1_Motor {
            layout = dynamic
            component gen_terminator Termination1 {
            }
            [
                position = 8056, 8352
                scale = -1, 1
            ]

            component "core/Induction Machine with Squirrel Cage" IM {
                Jm = "63.87"
                Llr = "3.9965e-4"
                Lls = "3.9965e-4"
                Lm = "0.0346"
                Rr = "0.066"
                Rs = "0.029"
                Rsnb_stator = "795.498829621"
                enb_sig_out = "True"
                execution_rate = "Ts"
                load_src = "Model"
            }
            [
                position = 8192, 8256
                rotation = right
                scale = -1, 1
                size = 160, 160
            ]

            component Subsystem Meas {
                layout = dynamic
                component "core/Voltage Measurement" Vbc {
                }
                [
                    position = 8248, 8216
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                }
                [
                    position = 8096, 8120
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Vca {
                }
                [
                    position = 8152, 8272
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Vab {
                }
                [
                    position = 8152, 8216
                    size = 64, 32
                ]

                component "core/Current Measurement" Ib {
                }
                [
                    position = 8200, 8120
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" Ic {
                }
                [
                    position = 8296, 8120
                    rotation = right
                    size = 64, 32
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8096, 8040
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8200, 8040
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8296, 8040
                    rotation = right
                ]

                port a {
                    position = bottom:1
                    kind = pe
                }
                [
                    position = 8096, 8368
                    rotation = left
                ]

                port b {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8200, 8368
                    rotation = left
                ]

                port c {
                    position = bottom:3
                    kind = pe
                }
                [
                    position = 8296, 8368
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8096, 8216
                ]

                junction Junction2 pe
                [
                    position = 8200, 8216
                ]

                junction Junction3 pe
                [
                    position = 8200, 8216
                ]

                junction Junction4 pe
                [
                    position = 8296, 8216
                ]

                junction Junction5 pe
                [
                    position = 8296, 8272
                ]

                junction Junction6 pe
                [
                    position = 8096, 8272
                ]

                connect Ia.p_node A as Connection33
                connect Ib.p_node B as Connection32
                connect Ic.p_node C as Connection35
                connect Junction1 Ia.n_node as Connection26
                connect Junction2 Ib.n_node as Connection28
                connect Junction2 b as Connection31
                connect Junction3 Junction2 as Connection15
                connect Junction4 Ic.n_node as Connection30
                connect Junction5 Junction4 as Connection21
                connect Junction5 c as Connection36
                connect Junction6 Junction1 as Connection24
                connect Junction6 a as Connection34
                connect Vab.p_node Junction1 as Connection10
                connect Vab.n_node Junction3 as Connection14
                connect Vbc.p_node Junction3 as Connection16
                connect Vbc.n_node Junction4 as Connection19
                connect Vca.p_node Junction5 as Connection22
                connect Vca.n_node Junction6 as Connection25
            }
            [
                position = 8192, 8112
                size = 112, 48
            ]

            component Subsystem Chiller_compressor {
                layout = dynamic
                component tm_delay "Unit Delay1" {
                }
                [
                    position = 8272, 8192
                ]

                component gen_c_function "C function1" {
                    in_terminal_dimensions_str = "w inherit;"
                    in_terminal_labels = "False;"
                    in_terminal_properties = "real w;"
                    init_fnc = "/*Begin code section*/
T = 0;
w = 0;
/*End code section*/"
                    no_feed_inputs = "[u\'\']"
                    no_feed_outputs = "[u\'\']"
                    out_terminal_dimensions_str = "T inherit;"
                    out_terminal_labels = "False;"
                    out_terminal_properties = "real T;"
                    output_fnc = "/*Begin code section*/
T = 0.1118*w+0.000861*powf(w,2)-3.371e-7*powf(w,3);
/*End code section*/"
                }
                [
                    position = 8192, 8192
                ]

                component gen_gain Gain1 {
                    gain = "9.5493"
                }
                [
                    position = 8120, 8192
                ]

                port w_meas {
                    label = "w meas"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8056, 8192
                ]

                port torque {
                    label = "Torque"
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8344, 8192
                ]

                connect "C function1.w" Gain1.out as Connection5
                connect "C function1.T" "Unit Delay1.in" as Connection3
                connect torque "Unit Delay1.out" as Connection19
                connect w_meas Gain1.in as Connection20
            }
            [
                position = 7936, 8312
                scale = -1, 1
                size = 80, 48
            ]

            component Subsystem CB {
                layout = dynamic
                component pas_capacitor C2 {
                    capacitance = "1e-3"
                }
                [
                    position = 7856, 8312
                ]

                component pas_resistor R1 {
                    resistance = "100"
                }
                [
                    position = 7952, 8264
                ]

                component pas_resistor R2 {
                    resistance = "100"
                }
                [
                    position = 7952, 8312
                ]

                component pas_resistor R3 {
                    resistance = "100"
                }
                [
                    position = 7952, 8360
                ]

                component "core/Triple Pole Single Throw Contactor" S1 {
                }
                [
                    position = 8192, 8192
                    rotation = right
                    size = 64, 256
                ]

                component pas_capacitor C1 {
                    capacitance = "1e-3"
                }
                [
                    position = 7856, 8264
                ]

                component pas_capacitor C3 {
                    capacitance = "1e-3"
                }
                [
                    position = 7856, 8360
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8096, 8112
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8112
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8288, 8112
                    rotation = right
                ]

                port a {
                    position = bottom:1
                    kind = pe
                }
                [
                    position = 8096, 8624
                    rotation = left
                ]

                port b {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8624
                    rotation = left
                ]

                port c {
                    position = bottom:3
                    kind = pe
                }
                [
                    position = 8288, 8624
                    rotation = left
                ]

                port g {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7680, 8312
                ]

                junction Junction1 pe
                [
                    position = 8096, 8264
                ]

                junction Junction2 pe
                [
                    position = 8192, 8312
                ]

                junction Junction3 pe
                [
                    position = 8288, 8360
                ]

                junction Junction5 pe
                [
                    position = 7728, 8312
                ]

                junction Junction6 pe
                [
                    position = 7728, 8312
                ]

                connect C1.p_node Junction5 as Connection46
                connect C2.p_node Junction5 as Connection48
                connect C3.p_node Junction6 as Connection52
                connect C3.n_node R3.p_node as Connection49
                connect Junction1 a as Connection44
                connect Junction3 c as Connection42
                connect Junction6 Junction5 as Connection51
                connect R1.p_node C1.n_node as Connection45
                connect R1.n_node Junction1 as Connection9
                connect R2.p_node C2.n_node as Connection47
                connect R2.n_node Junction2 as Connection12
                connect R3.n_node Junction3 as Connection15
                connect S1.c_in A as Connection6
                connect S1.b_in B as Connection2
                connect S1.a_in C as Connection4
                connect S1.c_out Junction1 as Connection7
                connect S1.b_out Junction2 as Connection10
                connect S1.a_out Junction3 as Connection13
                connect b Junction2 as Connection43
                connect g Junction6 as Connection50
            }
            [
                position = 8192, 8024
                size = 104, 48
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8088, 7888
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8192, 7888
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8288, 7888
                rotation = right
            ]

            port g {
                position = left:2
                kind = pe
            }
            [
                position = 8072, 8024
            ]

            connect B CB.B as Connection12
            connect C CB.C as Connection10
            connect CB.A A as Connection9
            connect CB.c Meas.C as Connection17
            connect CB.b Meas.B as Connection15
            connect Chiller_compressor.w_meas IM.speed_out as Connection4
            connect Chiller_compressor.torque IM.load_in as Connection21
            connect IM.a_in Meas.a as Connection19
            connect Meas.A CB.a as Connection20
            connect Meas.b IM.b_in as Connection16
            connect Meas.c IM.c_in as Connection18
            connect Termination1.in IM.torque_out as Connection6
            connect g CB.g as Connection14
        }
        [
            position = 4944, 9720
            size = 64, 128
        ]

        component "core/Voltage RMS" Vrms_bus101 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 4736, 7776
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus102 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 4208, 8432
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus104 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 4360, 8768
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus105 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 4840, 8288
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus106 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 4808, 9072
            rotation = right
            size = 64, 32
        ]

        component "core/Voltage RMS" Vrms_bus107 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 5032, 9576
            rotation = right
            size = 64, 32
        ]

        component Subsystem "3ph Fault 106" {
            layout = dynamic
            component pas_resistor Ra {
                resistance = "1e-3"
            }
            [
                position = 8096, 8208
                rotation = right
            ]

            component pas_resistor Rc {
                resistance = "1e-3"
            }
            [
                position = 8288, 8208
                rotation = right
            ]

            component pas_resistor Rb {
                resistance = "1e-3"
            }
            [
                position = 8192, 8208
                rotation = right
            ]

            component src_scada_input ctrl {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8392, 8104
                scale = -1, 1
            ]

            component "core/Three Phase Non-Ideal Contactor" S1 {
                ctrl_src = "Model"
                resistance = "R"
                switching = "any current"
            }
            [
                position = 8192, 8104
                rotation = right
                size = 64, 256
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8096, 8024
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8192, 8024
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8288, 8024
                rotation = right
            ]

            junction Junction557 pe
            [
                position = 8192, 8288
            ]

            connect Junction557 Ra.n_node as Connection4396
            connect Ra.p_node S1.C2 as Connection4391
            connect Rb.n_node Junction557 as Connection4397
            connect Rb.p_node S1.B2 as Connection4392
            connect Rc.n_node Junction557 as Connection4395
            connect Rc.p_node S1.A2 as Connection4393
            connect S1.C1 A as Connection4398
            connect S1.B1 B as Connection4400
            connect S1.A1 C as Connection4399
            connect ctrl.out S1.ctrl_in as Connection4401

            R = ".8"

            mask {
                description = "Three-Phase Fault - Non-Ideal Switch"

                R {
                    label = "Switch Resistance"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "ohms"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 5080, 9112
            size = 64, 48
        ]

        component Subsystem F1_CB3 {
            layout = dynamic
            component Subsystem MID_Rly1 {
                layout = dynamic
                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8152, 8184
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7312, 7800
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7392, 7680
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7392, 7632
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7272, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7392, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7456, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction53 sp
                        [
                            position = 6752, 8128
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection117
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.in Junction50 as Connection110
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 "PQ Power Meter1.Qdc" as Connection111
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        connect Junction52 Junction35 as Connection119
                        connect Junction53 Junction23 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection116
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "RMS value1.in" Junction52 as Connection118
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction53 as Connection121
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in1" Junction52 as Connection120
                        connect "Three Phase Phasor1.in_ref" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag Goto31 {
                        value = "F1_CB3_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7776
                        hide_name = True
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto34 {
                        value = "F1_CB3_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7848
                        hide_name = True
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto30 {
                        value = "F1_CB3_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7752
                        hide_name = True
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag Goto32 {
                        value = "F1_CB3_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7800
                        hide_name = True
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag Goto33 {
                        value = "F1_CB3_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7392, 7824
                        hide_name = True
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8184
                    ]

                    junction Junction123 sp
                    [
                        position = 7264, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7280, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7160, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7320, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7312, 7752
                    ]

                    junction Junction129 sp
                    [
                        position = 7328, 7776
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto26 Junction122 as Connection379
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 R50512761.Enable as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "1.3"
                    R51P_pickup2 = "1.3"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF1_CB3"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7960, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                    size = 64, 256
                ]

                component src_scada_input F1_CB3 {
                    def_value = "1"
                    execution_rate = "Ts"
                    format = "int"
                    max = "1"
                    min = "0"
                    signal_type = "int"
                    unit = ""
                }
                [
                    position = 8296, 8184
                    scale = -1, 1
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect F1_CB3.out S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                }
                [
                    position = 7568, 8352
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                }
                [
                    position = 7432, 8024
                    size = 64, 32
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                }
                [
                    position = 7496, 8120
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                }
                [
                    position = 7648, 8288
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                }
                [
                    position = 7728, 8224
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                }
                [
                    position = 7368, 7928
                    size = 64, 32
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7320, 8232
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7224, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7224, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7224, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1469 pe
                [
                    position = 7304, 7928
                ]

                junction Junction1470 pe
                [
                    position = 7320, 8024
                ]

                junction Junction1471 pe
                [
                    position = 7336, 8120
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1469 as Connection395
                connect B Junction1470 as Connection398
                connect C Junction1471 as Connection401
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1472 as Connection404
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1469 IA.p_node as Connection396
                connect Junction1470 IB.p_node as Connection399
                connect Junction1471 IC.p_node as Connection402
                connect Junction1472 VC.n_node as Connection405
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P1 Junction1469 as Connection397
                connect res_for_meas.P2 Junction1470 as Connection400
                connect res_for_meas.P3 Junction1471 as Connection403
                connect res_for_meas.P4 Junction1472 as Connection406
            }
            [
                position = 8144, 8088
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                }
                [
                    position = 7568, 8320
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                }
                [
                    position = 7648, 8256
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                }
                [
                    position = 7728, 8192
                    rotation = right
                    size = 64, 32
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7480, 8272
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                junction Junction1474 pe
                [
                    position = 7496, 8120
                ]

                junction Junction1475 pe
                [
                    position = 7480, 8024
                ]

                junction Junction1476 pe
                [
                    position = 7464, 7928
                ]

                connect A Junction1476 as Connection410
                connect B Junction1475 as Connection407
                connect C Junction1474 as Connection404
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1421 as Connection402
                connect Junction1474 Junction1472 as Connection405
                connect Junction1475 Junction1471 as Connection408
                connect Junction1476 Junction1470 as Connection411
                connect VA.n_node Junction1421 as Connection237
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.n_node Junction1473 as Connection401
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P4 Junction1473 as Connection403
                connect res_for_meas.P3 Junction1474 as Connection406
                connect res_for_meas.P2 Junction1475 as Connection409
                connect res_for_meas.P1 Junction1476 as Connection412
            }
            [
                position = 8144, 8304
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect B Meas1.B as Connection2609
            connect Brk.B Meas1.b as Connection2612
            connect Brk.a Meas2.A as Connection2616
            connect Brk.c Meas2.C as Connection2614
            connect C Meas1.C as Connection2608
            connect Meas1.A A as Connection2610
            connect Meas1.c Brk.C as Connection2613
            connect Meas1.a Brk.A as Connection2611
            connect Meas2.B Brk.b as Connection2615
            connect Meas2.a a as Connection2617
            connect Meas2.c c as Connection2619
            connect b Meas2.b as Connection2618
        }
        [
            position = 6072, 7800
            size = 80, 48
        ]

        component "core/Transmission Line" Feeder1_lineDiesel {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_imperial = "C_cable11"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable11"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_F1DG"
            R_sequence_imperial = "R_cable11"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 6256, 8672
            rotation = left
            size = 256, 72
        ]

        component Subsystem DIESEL_MCB {
            layout = dynamic
            component gen_rms_value "RMS value2" {
            }
            [
                position = 8696, 7848
            ]

            component "core/Current Measurement" Ib_grid {
                addr = "535"
                execution_rate = "Ts"
            }
            [
                position = 8128, 7712
                rotation = left
                size = 64, 32
            ]

            component "core/Current Measurement" IC_MCB {
                addr = "291"
                execution_rate = "Ts"
                frequency = "10000.0"
            }
            [
                position = 8224, 8512
                rotation = left
                size = 64, 32
            ]

            component "core/Voltage Measurement" VC_grid_2 {
                addr = "267"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8608, 8064
                rotation = down
                scale = -1, -1
                size = 64, 32
            ]

            component "core/Current Measurement" Ia_grid {
                addr = "533"
                execution_rate = "Ts"
            }
            [
                position = 8032, 7672
                rotation = left
                size = 64, 32
            ]

            component "core/Voltage Measurement" VB_grid_2 {
                addr = "267"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8464, 8008
                rotation = down
                scale = -1, -1
                size = 64, 32
            ]

            component gen_probe VC_grid2rms {
            }
            [
                position = 8792, 7904
            ]

            component "core/Voltage Measurement" VA_grid_2 {
                addr = "267"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8336, 7952
                size = 64, 32
            ]

            component pas_resistor R62 {
                resistance = "4761.0"
            }
            [
                position = 8336, 8600
                rotation = down
            ]

            component gen_probe VA_grid2rms {
            }
            [
                position = 8792, 7792
            ]

            component "core/Current Measurement" Ic_grid {
                addr = "537"
                execution_rate = "Ts"
            }
            [
                position = 8224, 7752
                rotation = left
                size = 64, 32
            ]

            component gen_rms_value "RMS value3" {
            }
            [
                position = 8696, 7904
            ]

            component pas_resistor R59 {
                resistance = "4761.0"
            }
            [
                position = 8336, 8664
                rotation = down
            ]

            component gen_probe VB_grid2rms {
            }
            [
                position = 8792, 7848
            ]

            component "core/Current Measurement" IB_MCB {
                addr = "290"
                execution_rate = "Ts"
                frequency = "10000.0"
            }
            [
                position = 8128, 8512
                rotation = left
                size = 64, 32
            ]

            component "core/Voltage Measurement" VA_busbar {
                addr = "267"
                execution_rate = "Ts"
            }
            [
                position = 8336, 8776
                rotation = down
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor R61 {
                resistance = "4761.0"
            }
            [
                position = 8336, 8720
                rotation = down
            ]

            component gen_rms_value "RMS value1" {
            }
            [
                position = 8696, 7792
            ]

            component "core/Current Measurement" IA_MCB {
                addr = "288"
                execution_rate = "Ts"
                frequency = "10000.0"
            }
            [
                position = 8032, 8512
                rotation = left
                size = 64, 32
            ]

            component pas_resistor R63 {
                resistance = "1e5"
            }
            [
                position = 8304, 8216
                rotation = down
            ]

            component pas_resistor R64 {
                resistance = "1e5"
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            component pas_resistor R65 {
                resistance = "1e5"
            }
            [
                position = 8304, 8160
                rotation = down
            ]

            component "core/Triple Pole Single Throw Contactor" DG_MCB {
                Sa = "8"
                ctrl_src = "Model"
            }
            [
                position = 8128, 8352
                rotation = left
                size = 64, 256
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8864
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8032, 8864
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7584
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8224, 8864
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8032, 7584
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8224, 7584
                rotation = right
            ]

            port DG_MCB_Control {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7920, 8352
            ]

            junction Junction2 pe
            [
                position = 8440, 8664
            ]

            junction Junction3 pe
            [
                position = 8128, 8664
            ]

            junction Junction4 pe
            [
                position = 8032, 8720
            ]

            junction Junction5 pe
            [
                position = 8224, 8600
            ]

            junction Junction6 pe
            [
                position = 8032, 8776
            ]

            junction Junction7 pe
            [
                position = 8440, 8720
            ]

            junction Junction11 pe
            [
                position = 8128, 8008
            ]

            junction Junction12 pe
            [
                position = 8224, 8064
            ]

            junction Junction19 pe
            [
                position = 8032, 7952
            ]

            junction Junction20 pe
            [
                position = 8688, 8008
            ]

            junction Junction21 pe
            [
                position = 8688, 8064
            ]

            junction Junction25 pe
            [
                position = 8440, 8096
            ]

            junction Junction26 pe
            [
                position = 8440, 8160
            ]

            junction Junction27 pe
            [
                position = 8032, 8216
            ]

            junction Junction28 pe
            [
                position = 8128, 8160
            ]

            junction Junction29 pe
            [
                position = 8224, 8096
            ]

            connect A Ia_grid.n_node as Connection2689
            connect B Ib_grid.n_node as Connection2691
            connect Ib_grid.p_node Junction11 as Connection2692
            connect Ic_grid.n_node C as Connection2694
            connect Junction12 Ic_grid.p_node as Connection2693
            connect Junction19 Ia_grid.p_node as Connection2698
            connect Junction2 R59.p_node as Connection2622
            connect Junction20 Junction21 as Connection2709
            [
                breakpoints = 8688, 8008
            ]
            connect Junction20 VB_grid_2.n_node as Connection2701
            connect Junction21 VC_grid_2.n_node as Connection2710
            [
                breakpoints = 8688, 8064
            ]
            connect Junction25 Junction21 as Connection2734
            [
                breakpoints = 8440, 8096; 8688, 8096
            ]
            connect Junction26 Junction25 as Connection2723
            connect Junction3 IB_MCB.p_node as Connection2625
            connect Junction4 IA_MCB.p_node as Connection2628
            connect Junction5 IC_MCB.p_node as Connection2631
            connect Junction6 Junction4 as Connection2639
            connect Junction7 Junction2 as Connection2642
            connect R59.n_node Junction3 as Connection2626
            connect R61.n_node Junction4 as Connection2629
            connect R61.p_node Junction7 as Connection2641
            connect R62.p_node Junction2 as Connection2735
            [
                breakpoints = 8440, 8600
            ]
            connect R62.n_node Junction5 as Connection2632
            connect R63.p_node Junction26 as Connection2724
            connect R64.p_node Junction25 as Connection2719
            connect R65.p_node Junction26 as Connection2722
            connect "RMS value1.in" VA_grid_2.out as Connection2688
            connect "RMS value2.in" VB_grid_2.out as Connection2687
            connect "RMS value3.in" VC_grid_2.out as Connection2686
            connect VA_busbar.p_node Junction6 as Connection2640
            connect VA_busbar.n_node Junction7 as Connection2643
            connect VA_grid2rms.in "RMS value1.out" as Connection111
            connect VA_grid_2.p_node Junction19 as Connection2699
            connect VA_grid_2.n_node Junction20 as Connection2702
            connect VB_grid2rms.in "RMS value2.out" as Connection117
            connect VB_grid_2.p_node Junction11 as Connection2656
            connect VC_grid2rms.in "RMS value3.out" as Connection122
            connect VC_grid_2.p_node Junction12 as Connection2660
            connect a Junction6 as Connection2638
            connect b Junction3 as Connection2624
            connect c Junction5 as Connection2630
            connect DG_MCB_Control DG_MCB.ctrl_in as Connection2608
            connect IA_MCB.n_node DG_MCB.a_in as Connection2751
            connect R63.n_node Junction27 as Connection2752
            connect Junction27 Junction19 as Connection2753
            [
                breakpoints = 8032, 8216; 8032, 8216; 8032, 8112; 8032, 7952; 8032, 7952
            ]
            connect DG_MCB.a_out Junction27 as Connection2754
            connect R65.n_node Junction28 as Connection2755
            connect Junction28 Junction11 as Connection2756
            [
                breakpoints = 8128, 8160; 8128, 8160; 8128, 8008
            ]
            connect DG_MCB.b_out Junction28 as Connection2757
            connect DG_MCB.b_in IB_MCB.n_node as Connection2758
            connect IC_MCB.n_node DG_MCB.c_in as Connection2759
            connect Junction12 Junction29 as Connection2760
            [
                breakpoints = 8224, 8064; 8224, 8064
            ]
            connect Junction29 R64.n_node as Connection2761
            [
                breakpoints = 8224, 8096; 8224, 8096
            ]
            connect DG_MCB.c_out Junction29 as Connection2762
        }
        [
            position = 6256, 8456
            size = 72, 72
        ]

        component "core/Voltage RMS" Vrms_bus103 {
            frequency = "sys_f"
            op_mode = "Fixed frequency"
        }
        [
            position = 5928, 8240
            rotation = right
            size = 64, 32
        ]

        component "core/Transmission Line" Feeder1_line3 {
            C_imperial = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            C_sequence_imperial = "C_cable13"
            C_sequence_metric = "[[5.089e-7, 0.0, 0.0], [0.0, 5.089e-7, 0.0], [0.0, 0.0, 5.089e-7]]"
            Frequency = "sys_f"
            L_sequence_imperial = "L_cable13"
            L_sequence_metric = "[[0.0020, 0.0, 0.0], [0.0, 3.0953e-4, 0.0], [0.0, 0.0, 3.0953e-4]]"
            Length_metric = "1.6764"
            Length_miles = "l_F1L3"
            R_sequence_imperial = "R_cable13"
            R_sequence_metric = "[[1.1405, 0.0, 0.0], [0.0, 0.0749, 0.0], [0.0, 0.0, 0.0749]]"
            model_def = "Sequence"
        }
        [
            position = 6072, 7992
            rotation = left
            size = 256, 72
        ]

        component Subsystem "3ph Fault 103" {
            layout = dynamic
            component pas_resistor Rb {
                resistance = "R"
            }
            [
                position = 8192, 8232
                rotation = right
            ]

            component src_scada_input ctrl {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8400, 8120
                scale = -1, 1
            ]

            component pas_resistor Rc {
                resistance = "R"
            }
            [
                position = 8288, 8232
                rotation = right
            ]

            component "core/Triple Pole Single Throw Contactor" S1 {
                ctrl_src = "Model"
            }
            [
                position = 8192, 8120
                rotation = right
            ]

            component pas_resistor Ra {
                resistance = "R"
            }
            [
                position = 8096, 8232
                rotation = right
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 8096, 8024
                rotation = right
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 8192, 8024
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 8288, 8024
                rotation = right
            ]

            junction Junction1 pe
            [
                position = 8192, 8304
            ]

            connect B S1.b_in as Connection2
            connect Junction1 Rc.n_node as Connection9
            connect Ra.n_node Junction1 as Connection8
            connect Ra.p_node S1.c_out as Connection6
            connect Rb.n_node Junction1 as Connection10
            connect Rc.p_node S1.a_out as Connection4
            connect S1.c_in A as Connection1
            connect S1.a_in C as Connection3
            connect S1.b_out Rb.p_node as Connection5
            connect ctrl.out S1.ctrl_in as Connection11

            R = "0.1"

            mask {
                description = "Three-Phase Fault - Ideal Contactor"

                R {
                    label = "Fault resistance"
                    widget = edit
                    type = generic
                    default_value = "100"
                    unit = "ohms"
                    group = "General"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE
            }
        }
        [
            position = 6072, 8392
            size = 64, 48
        ]

        component sys_hil_marker "Device Marker3" {
            code_section = "External Memory"
            data_section = "External Memory"
            hw_configuration_id = "2"
            simulation_time_step = "4e-6"
            sys_cpu_optimization = "no optimization"
            sys_sp_rate_1 = "0.0001"
            user_cpu_optimization = "no optimization"
        }
        [
            position = 5832, 7608
        ]

        component Subsystem Coupling7 {
            layout = dynamic
            component "core/Four Phase Core Coupling" "Core Coupling 1" {
                C1 = "0.0039"
                L1 = "0.2e-6"
                R1 = "0.0103"
                R2 = "0.0045"
                fixed_snb_i = "true"
                fixed_snb_u = "true"
            }
            [
                position = 8192, 8192
                size = 12, 352
            ]

            component pas_resistor R1 {
            }
            [
                position = 8280, 8048
            ]

            component pas_resistor R2 {
            }
            [
                position = 8280, 8144
            ]

            component pas_resistor R3 {
            }
            [
                position = 8280, 8240
            ]

            component pas_inductor L1 {
                inductance = "1000e-6"
            }
            [
                position = 8376, 8048
            ]

            component pas_inductor L2 {
                inductance = "1000e-6"
            }
            [
                position = 8384, 8144
            ]

            component pas_inductor L3 {
                inductance = "1000e-6"
            }
            [
                position = 8384, 8240
            ]

            component Subsystem "RC Snubber" {
                layout = dynamic
                component pas_resistor R1 {
                    resistance = "R"
                }
                [
                    position = 8120, 8144
                    rotation = right
                ]

                component pas_resistor R3 {
                    resistance = "R"
                }
                [
                    position = 8264, 8144
                    rotation = right
                ]

                component pas_resistor R2 {
                    resistance = "R"
                }
                [
                    position = 8192, 8144
                    rotation = right
                ]

                component pas_capacitor C3 {
                    capacitance = "C"
                }
                [
                    position = 8264, 8240
                    rotation = right
                ]

                component pas_capacitor C1 {
                    capacitance = "C"
                }
                [
                    position = 8120, 8240
                    rotation = right
                ]

                component pas_capacitor C2 {
                    capacitance = "C"
                }
                [
                    position = 8192, 8240
                    rotation = right
                ]

                port A {
                    position = top:1
                    kind = pe
                }
                [
                    position = 8120, 8064
                    rotation = right
                ]

                port B {
                    position = top:2
                    kind = pe
                }
                [
                    position = 8192, 8064
                    rotation = right
                ]

                port C {
                    position = top:3
                    kind = pe
                }
                [
                    position = 8264, 8064
                    rotation = right
                ]

                port N {
                    position = bottom:2
                    kind = pe
                }
                [
                    position = 8192, 8320
                    rotation = left
                ]

                junction Junction1 pe
                [
                    position = 8192, 8288
                ]

                junction Junction2 pe
                [
                    position = 8192, 8288
                ]

                connect C1.n_node Junction2 as Connection21
                connect C1.p_node R1.n_node as Connection11
                connect C1.p_node R1.n_node as Connection10
                connect C1.p_node R1.n_node as Connection9
                connect C2.n_node Junction1 as Connection18
                connect C2.p_node R2.n_node as Connection24
                connect C3.n_node Junction2 as Connection23
                connect Junction1 N as Connection19
                connect Junction2 Junction1 as Connection22
                connect R1.p_node A as Connection13
                connect R2.p_node B as Connection15
                connect R3.p_node C as Connection16
                connect R3.n_node C3.p_node as Connection25

                C = "10e-6"
                R = "0.1"

                mask {
                    R {
                        label = "R"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "ohms"
                        group = "General"
                    }

                    C {
                        label = "C"
                        widget = edit
                        type = generic
                        default_value = "0"
                        unit = "F"
                        group = "General"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE
                }
            }
            [
                position = 8056, 8288
                size = 64, 48
            ]

            port A {
                position = left:1
                kind = pe
            }
            [
                position = 7936, 8048
            ]

            port B {
                position = left:2
                kind = pe
            }
            [
                position = 7936, 8144
            ]

            port C {
                position = left:3
                kind = pe
            }
            [
                position = 7936, 8240
            ]

            port G {
                position = left:4
                kind = pe
            }
            [
                position = 7936, 8336
            ]

            port a {
                position = right:1
                kind = pe
            }
            [
                position = 8448, 8048
                rotation = down
            ]

            port b {
                position = right:2
                kind = pe
            }
            [
                position = 8448, 8144
                rotation = down
            ]

            port c {
                position = right:3
                kind = pe
            }
            [
                position = 8448, 8240
                rotation = down
            ]

            port g {
                position = right:4
                kind = pe
            }
            [
                position = 8248, 8336
                rotation = down
            ]

            junction Junction1 pe
            [
                position = 8040, 8048
            ]

            junction Junction2 pe
            [
                position = 8056, 8144
            ]

            junction Junction3 pe
            [
                position = 8072, 8240
            ]

            junction Junction4 pe
            [
                position = 8056, 8336
            ]

            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">1. R1-L1 to R3-L3 are series RL snubbers to remove AO problem during fault at bus 103. </p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">R = 0.1 ohm. L = 100uH</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">2. When Diesel Genset is off, it will consume 3.5W + j1.37VAr @60Hz</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">3. When Diesel Geneset is at nominal power (3.4MW), it will consume 6kW + j2.5kVAr @60Hz</p></body></html> ENDCOMMENT 
            [
                position = 8296, 8280
            ]

            connect "Core Coupling 1.d_out" g as Connection6
            connect R1.n_node L1.p_node as Connection43
            connect R2.n_node L2.p_node as Connection45
            connect R3.n_node L3.p_node as Connection47
            connect L1.n_node a as Connection53
            connect L2.n_node b as Connection54
            connect L3.n_node c as Connection55
            connect "Core Coupling 1.c_out" R3.p_node as Connection56
            connect "Core Coupling 1.b_out" R2.p_node as Connection57
            connect "Core Coupling 1.a_out" R1.p_node as Connection58
            connect "Core Coupling 1.a_in" Junction1 as Connection91
            [
                breakpoints = 8064, 8048; 8048, 8048; 8048, 8048
            ]
            connect Junction1 A as Connection92
            [
                breakpoints = 8040, 8048
            ]
            connect "RC Snubber.A" Junction1 as Connection93
            connect "Core Coupling 1.b_in" Junction2 as Connection94
            [
                breakpoints = 8080, 8144
            ]
            connect Junction2 B as Connection95
            [
                breakpoints = 8064, 8144; 8064, 8144; 8056, 8144
            ]
            connect "RC Snubber.B" Junction2 as Connection96
            connect C Junction3 as Connection97
            connect Junction3 "Core Coupling 1.c_in" as Connection98
            [
                breakpoints = 8072, 8240; 8080, 8240; 8080, 8240; 8096, 8240
            ]
            connect "RC Snubber.C" Junction3 as Connection99
            connect "Core Coupling 1.d_in" Junction4 as Connection100
            [
                breakpoints = 8080, 8336; 8064, 8336; 8064, 8336
            ]
            connect Junction4 G as Connection101
            [
                breakpoints = 8056, 8336
            ]
            connect "RC Snubber.N" Junction4 as Connection102
        }
        [
            position = 6080, 8200
            rotation = right
            scale = -1, 1
            size = 48, 80
        ]

        component Subsystem RegD_Control {
            layout = dynamic
            component Subsystem P_ref_VL1 {
                layout = dynamic
                component gen_probe RegD_act1 {
                }
                [
                    position = 8392, 7936
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant capacity_max {
                    execution_rate = "Tfast"
                    value = "500e3"
                }
                [
                    position = 8776, 8000
                    scale = -1, 1
                ]

                component src_constant capacity_min {
                    execution_rate = "Tfast"
                    value = "100e3"
                }
                [
                    position = 8784, 8192
                    scale = -1, 1
                ]

                component gen_sum Sum8 {
                    signs = "-+"
                }
                [
                    position = 8632, 8160
                    scale = -1, -1
                ]

                component gen_sum Sum9 {
                    signs = "-+"
                }
                [
                    position = 8632, 8040
                    scale = -1, -1
                ]

                component gen_c_function "C function1" {
                    global_variables = "real deltaP;"
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;Reg_Max inherit;Reg_Min inherit"
                    in_terminal_labels = "[(\'in\', False), (\'Reg_Max\', False), (\'Reg_Min\', False)]"
                    in_terminal_properties = "real in;inherit Reg_Max;inherit Reg_Min;"
                    init_fnc = "/*Begin code section*/
deltaP=0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', False)]"
                    output_fnc = "/*Begin code section*/
out=deltaP;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (in>=0)
{
    deltaP=-1*Reg_Min*in;
}
else
{
    deltaP=-1*Reg_Max*in;
}
out=deltaP;
/*End code section*/"
                }
                [
                    position = 8200, 8072
                    scale = -1, 1
                    size = 48, 80
                ]

                component src_scada_input Pref_initial {
                    unit = ""
                }
                [
                    position = 8776, 8104
                    scale = -1, 1
                ]

                component gen_sum Sum10 {
                    signs = "++"
                }
                [
                    position = 7864, 8080
                    scale = -1, -1
                ]

                port P_ref_VL1 {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7736, 8080
                    rotation = down
                ]

                port In1 {
                    position = auto:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8784, 7888
                    scale = -1, 1
                ]

                tag Goto1 {
                    value = "Reg_Max"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8544, 8024
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "Reg_Min"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8552, 8160
                    scale = -1, 1
                ]

                tag From1 {
                    value = "Reg_Max"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 8104
                    scale = -1, 1
                ]

                tag From2 {
                    value = "Reg_Min"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 8160
                    scale = -1, 1
                ]

                junction Junction10 sp
                [
                    position = 8672, 8104
                ]

                junction Junction12 sp
                [
                    position = 8672, 8104
                ]

                junction Junction13 sp
                [
                    position = 8352, 7992
                ]

                connect capacity_min.out Sum8.in as Connection478
                connect capacity_max.out Sum9.in1 as Connection479
                connect Goto1 Sum9.out as Connection483
                connect Goto2 Sum8.out as Connection484
                connect From1 "C function1.Reg_Max" as Connection498
                [
                    breakpoints = 8264, 8104; 8264, 8080
                ]
                connect From2 "C function1.Reg_Min" as Connection499
                connect Sum9.in Junction10 as Connection500
                connect Sum8.in1 Junction12 as Connection509
                connect Junction12 Junction10 as Connection510
                [
                    breakpoints = 8672, 8104
                ]
                connect Pref_initial.out Junction12 as Connection511
                connect Sum10.in Junction10 as Connection538
                [
                    breakpoints = 7976, 8088; 8104, 8088; 8104, 8088; 8128, 8088; 8128, 8216; 8160, 8216; 8416, 8216; 8416, 8064; 8416, 8064; 8592, 8064
                ]
                connect Sum10.in1 "C function1.out" as Connection539
                connect P_ref_VL1 Sum10.out as Connection540
                connect "C function1.in" Junction13 as Connection542
                [
                    breakpoints = 8240, 7992; 8320, 7992
                ]
                connect Junction13 RegD_act1.in as Connection543
                [
                    breakpoints = 8344, 7992
                ]
                connect In1 Junction13 as Connection544
                [
                    breakpoints = 8752, 7992; 8352, 7992
                ]
            }
            [
                position = 8376, 8304
                size = 88, 48
            ]

            component Subsystem P_ref_Diesel {
                layout = dynamic
                component Subsystem Subsystem1 {
                    layout = dynamic
                    component gen_probe RegD_act1 {
                    }
                    [
                        position = 8592, 8048
                        rotation = down
                        scale = -1, 1
                    ]

                    component gen_product Product3 {
                    }
                    [
                        position = 8416, 8128
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "-+"
                    }
                    [
                        position = 8496, 8304
                        scale = -1, 1
                    ]

                    component gen_gain Gain1 {
                        gain = "0.5"
                    }
                    [
                        position = 8280, 8288
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant capacity_max {
                        execution_rate = "Tfast"
                        value = "5000"
                    }
                    [
                        position = 8624, 8336
                        scale = -1, 1
                    ]

                    component gen_sum Sum7 {
                    }
                    [
                        position = 8280, 8192
                        scale = -1, 1
                    ]

                    component src_constant capacity_min {
                        execution_rate = "Tfast"
                        value = "0"
                    }
                    [
                        position = 8624, 8240
                        scale = -1, 1
                    ]

                    component gen_sum Sum8 {
                        signs = "++"
                    }
                    [
                        position = 8344, 8288
                        scale = -1, 1
                    ]

                    component gen_c_function "limit ramp rate" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit;inherit;inherit"
                        in_terminal_dimensions_str = "initial inherit;in inherit;regulate inherit"
                        in_terminal_labels = "[(\'initial\', True), (\'in\', True), (\'regulate\', True)]"
                        in_terminal_properties = "real initial;real in;int regulate;"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
if (regulate==0)
    var=initial;
else
{
    if ( fabs(in-var) <=50 )
        var = in;
    else if ( (fabs(in-var) >50) && ((in-var)>0))
        var += 50;
    else if ( (fabs(in-var) >50) && ((in-var)<0))
        var -= 50;
}
/*End code section*/"
                    }
                    [
                        position = 7976, 8272
                        scale = -1, -1
                        size = 144, 64
                    ]

                    component gen_c_function "Hold after regulation" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "regulate inherit"
                        in_terminal_labels = "[(\'regulate\', True)]"
                        in_terminal_properties = "int regulate;"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        out_terminal_properties = "int out;"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
if (regulate!=0)
    var = 1;
/*End code section*/"
                    }
                    [
                        position = 8128, 8128
                        hide_name = True
                        scale = -1, 1
                        size = 96, 48
                    ]

                    component src_scada_input RegD_Signal {
                        unit = ""
                    }
                    [
                        position = 8640, 8128
                        scale = -1, 1
                    ]

                    component gen_c_function "limit ramp rate1" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "deltaP inherit"
                        in_terminal_labels = "[(\'deltaP\', True)]"
                        in_terminal_properties = "real deltaP;"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        update_fnc = "/*Begin code section*/
if ( fabs(deltaP) <=50 )
    var = deltaP;
else if ( (fabs(deltaP) >50) && ((deltaP)>0))
    var += 50;
else if ( (fabs(deltaP) >50) && ((deltaP)<0))
    var -= 50;
/*End code section*/"
                    }
                    [
                        position = 7872, 8032
                        scale = -1, -1
                        size = 144, 64
                    ]

                    port P_ref_Diesel {
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7744, 8272
                        rotation = down
                    ]

                    junction Junction1 sp
                    [
                        position = 8536, 8240
                    ]

                    junction Junction4 sp
                    [
                        position = 8536, 8240
                    ]

                    junction Junction5 sp
                    [
                        position = 8536, 8336
                    ]

                    junction Junction6 sp
                    [
                        position = 8352, 8128
                    ]

                    junction Junction7 sp
                    [
                        position = 8528, 8128
                    ]

                    connect Sum7.in1 Junction1 as Connection419
                    connect Junction1 Sum4.in as Connection418
                    [
                        breakpoints = 8536, 8240; 8536, 8288
                    ]
                    connect Product3.in1 Sum4.out as Connection446
                    [
                        breakpoints = 8456, 8288
                    ]
                    connect Sum8.out Gain1.in as Connection447
                    connect capacity_min.out Junction4 as Connection448
                    connect Junction4 Junction1 as Connection449
                    connect Sum8.in Junction4 as Connection450
                    [
                        breakpoints = 8384, 8288; 8384, 8240
                    ]
                    connect capacity_max.out Junction5 as Connection451
                    connect Junction5 Sum4.in1 as Connection452
                    connect Sum8.in1 Junction5 as Connection453
                    [
                        breakpoints = 8384, 8304; 8384, 8336; 8536, 8336
                    ]
                    connect "Hold after regulation.out" "limit ramp rate.regulate" as Connection460
                    connect Gain1.out "limit ramp rate.initial" as Connection465
                    connect "limit ramp rate.out" P_ref_Diesel as Connection466
                    connect "limit ramp rate.in" Sum7.out as Connection467
                    [
                        breakpoints = 8216, 8192
                    ]
                    connect Product3.out Junction6 as Connection468
                    connect Junction6 Sum7.in as Connection469
                    [
                        breakpoints = 8352, 8128; 8352, 8176
                    ]
                    connect "Hold after regulation.regulate" Junction6 as Connection470
                    connect RegD_act1.in Junction7 as Connection472
                    connect Junction7 Product3.in as Connection473
                    [
                        breakpoints = 8528, 8128
                    ]
                    connect RegD_Signal.out Junction7 as Connection474
                }
                [
                    position = 8496, 7592
                    size = 48, 48
                ]

                component gen_probe RegD_act1 {
                }
                [
                    position = 9016, 7696
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant capacity_max {
                    execution_rate = "Tfast"
                    value = "1000e3"
                }
                [
                    position = 9400, 7760
                    scale = -1, 1
                ]

                component src_constant capacity_min {
                    execution_rate = "Tfast"
                    value = "200e3"
                }
                [
                    position = 9400, 7952
                    scale = -1, 1
                ]

                component gen_sum Sum8 {
                    signs = "-+"
                }
                [
                    position = 9256, 7920
                    scale = -1, -1
                ]

                component gen_sum Sum9 {
                    signs = "-+"
                }
                [
                    position = 9256, 7800
                    scale = -1, -1
                ]

                component gen_c_function "C function1" {
                    global_variables = "real deltaP;"
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;Reg_Max inherit;Reg_Min inherit"
                    in_terminal_labels = "[(\'in\', False), (\'Reg_Max\', False), (\'Reg_Min\', False)]"
                    in_terminal_properties = "real in;inherit Reg_Max;inherit Reg_Min;"
                    init_fnc = "/*Begin code section*/
deltaP=0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', False)]"
                    output_fnc = "/*Begin code section*/
out=deltaP;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (in>=0)
{
    deltaP=Reg_Max*in;
}
else
{
    deltaP=Reg_Min*in;
}
out=deltaP;
/*End code section*/"
                }
                [
                    position = 8824, 7832
                    scale = -1, 1
                    size = 48, 80
                ]

                component src_scada_input Pref_initial {
                    unit = ""
                }
                [
                    position = 9408, 7864
                    scale = -1, 1
                ]

                component gen_sum Sum10 {
                    signs = "++"
                }
                [
                    position = 8488, 7840
                    scale = -1, -1
                ]

                port P_ref_Diesel {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8336, 7840
                    rotation = down
                ]

                port In1 {
                    position = auto:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 9128, 7712
                    scale = -1, 1
                ]

                tag Goto1 {
                    value = "Reg_Max"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9168, 7784
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "Reg_Min"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 9176, 7920
                    scale = -1, 1
                ]

                tag From1 {
                    value = "Reg_Max"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8936, 7864
                    scale = -1, 1
                ]

                tag From2 {
                    value = "Reg_Min"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8936, 7920
                    scale = -1, 1
                ]

                junction Junction10 sp
                [
                    position = 9296, 7864
                ]

                junction Junction12 sp
                [
                    position = 9296, 7864
                ]

                junction Junction13 sp
                [
                    position = 8968, 7752
                ]

                connect capacity_min.out Sum8.in as Connection478
                connect capacity_max.out Sum9.in1 as Connection479
                connect Goto1 Sum9.out as Connection483
                connect Goto2 Sum8.out as Connection484
                connect From1 "C function1.Reg_Max" as Connection498
                [
                    breakpoints = 8888, 7864; 8888, 7840
                ]
                connect From2 "C function1.Reg_Min" as Connection499
                connect Sum9.in Junction10 as Connection500
                connect Sum8.in1 Junction12 as Connection509
                connect Junction12 Junction10 as Connection510
                [
                    breakpoints = 9296, 7864
                ]
                connect Pref_initial.out Junction12 as Connection511
                connect Sum10.out P_ref_Diesel as Connection535
                connect Sum10.in Junction10 as Connection538
                [
                    breakpoints = 8600, 7848; 8728, 7848; 8728, 7848; 8752, 7848; 8752, 7976; 8784, 7976; 9040, 7976; 9040, 7824; 9040, 7824; 9216, 7824
                ]
                connect Sum10.in1 "C function1.out" as Connection539
                connect RegD_act1.in Junction13 as Connection541
                connect Junction13 "C function1.in" as Connection542
                [
                    breakpoints = 8968, 7752; 8944, 7752; 8864, 7752
                ]
                connect In1 Junction13 as Connection543
            }
            [
                position = 8368, 8120
                size = 88, 48
            ]

            component src_scada_input RegD_Signal {
                execution_rate = "Tfast"
                unit = ""
            }
            [
                position = 7448, 8112
            ]

            component Subsystem P_ref_VL2 {
                layout = dynamic
                component gen_probe RegD_act1 {
                }
                [
                    position = 8392, 7936
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant capacity_max {
                    execution_rate = "Tfast"
                    value = "500e3"
                }
                [
                    position = 8776, 8000
                    scale = -1, 1
                ]

                component src_constant capacity_min {
                    execution_rate = "Tfast"
                    value = "100e3"
                }
                [
                    position = 8784, 8192
                    scale = -1, 1
                ]

                component gen_sum Sum8 {
                    signs = "-+"
                }
                [
                    position = 8632, 8160
                    scale = -1, -1
                ]

                component gen_sum Sum9 {
                    signs = "-+"
                }
                [
                    position = 8632, 8040
                    scale = -1, -1
                ]

                component gen_c_function "C function1" {
                    global_variables = "real deltaP;"
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;Reg_Max inherit;Reg_Min inherit"
                    in_terminal_labels = "[(\'in\', False), (\'Reg_Max\', False), (\'Reg_Min\', False)]"
                    in_terminal_properties = "real in;inherit Reg_Max;inherit Reg_Min;"
                    init_fnc = "/*Begin code section*/
deltaP=0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', False)]"
                    output_fnc = "/*Begin code section*/
out=deltaP;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (in>=0)
{
    deltaP=-1*Reg_Min*in;
}
else
{
    deltaP=-1*Reg_Max*in;
}
out=deltaP;
/*End code section*/"
                }
                [
                    position = 8200, 8072
                    scale = -1, 1
                    size = 48, 80
                ]

                component src_scada_input Pref_initial {
                    unit = ""
                }
                [
                    position = 8776, 8104
                    scale = -1, 1
                ]

                component gen_sum Sum10 {
                    signs = "++"
                }
                [
                    position = 7864, 8080
                    scale = -1, -1
                ]

                port P_ref_VL1 {
                    position = left:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7736, 8080
                    rotation = down
                ]

                port In1 {
                    position = auto:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8784, 7888
                    scale = -1, 1
                ]

                tag Goto1 {
                    value = "Reg_Max"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8544, 8024
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "Reg_Min"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8552, 8160
                    scale = -1, 1
                ]

                tag From1 {
                    value = "Reg_Max"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 8104
                    scale = -1, 1
                ]

                tag From2 {
                    value = "Reg_Min"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 8160
                    scale = -1, 1
                ]

                junction Junction10 sp
                [
                    position = 8672, 8104
                ]

                junction Junction12 sp
                [
                    position = 8672, 8104
                ]

                junction Junction13 sp
                [
                    position = 8352, 7992
                ]

                connect capacity_min.out Sum8.in as Connection478
                connect capacity_max.out Sum9.in1 as Connection479
                connect Goto1 Sum9.out as Connection483
                connect Goto2 Sum8.out as Connection484
                connect From1 "C function1.Reg_Max" as Connection498
                [
                    breakpoints = 8264, 8104; 8264, 8080
                ]
                connect From2 "C function1.Reg_Min" as Connection499
                connect Sum9.in Junction10 as Connection500
                connect Sum8.in1 Junction12 as Connection509
                connect Junction12 Junction10 as Connection510
                [
                    breakpoints = 8672, 8104
                ]
                connect Pref_initial.out Junction12 as Connection511
                connect Sum10.in Junction10 as Connection538
                [
                    breakpoints = 7976, 8088; 8104, 8088; 8104, 8088; 8128, 8088; 8128, 8216; 8160, 8216; 8416, 8216; 8416, 8064; 8416, 8064; 8592, 8064
                ]
                connect Sum10.in1 "C function1.out" as Connection539
                connect P_ref_VL1 Sum10.out as Connection540
                connect "C function1.in" Junction13 as Connection542
                [
                    breakpoints = 8240, 7992; 8320, 7992
                ]
                connect Junction13 RegD_act1.in as Connection543
                [
                    breakpoints = 8344, 7992
                ]
                connect In1 Junction13 as Connection544
                [
                    breakpoints = 8752, 7992; 8352, 7992
                ]
            }
            [
                position = 8368, 8512
                size = 88, 48
            ]

            component src_scada_input RegD {
                unit = ""
            }
            [
                position = 7824, 8128
            ]

            component gen_probe N2 {
            }
            [
                position = 7688, 8512
            ]

            component gen_probe N3 {
            }
            [
                position = 7520, 8512
            ]

            component Subsystem Modbus2 {
                layout = dynamic
                component src_constant C_u13 {
                    value = "50"
                }
                [
                    position = 7856, 8056
                ]

                component src_constant C_u11 {
                }
                [
                    position = 7920, 8008
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8376, 8056
                ]

                component src_constant C_u12 {
                }
                [
                    position = 7920, 7912
                ]

                component gen_probe Probe3 {
                }
                [
                    position = 8512, 7968
                ]

                component gen_gain Gain1 {
                    gain = "scale_back_const"
                }
                [
                    position = 8400, 7912
                ]

                component "core/ModBus Device" "ModBus Device2" {
                    configuration = "config2"
                }
                [
                    position = 8168, 7984
                    size = 184, 184
                ]

                component src_constant C_u14 {
                }
                [
                    position = 7856, 7960
                ]

                port n2 {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8584, 7912
                ]

                junction Junction10 sp
                [
                    position = 8480, 7912
                ]

                connect n2 Junction10 as Connection196
                connect Junction10 Gain1.out as Connection197
                connect Probe3.in Junction10 as Connection198
                connect C_u11.out "ModBus Device2.coil_in" as Connection200
                connect C_u12.out "ModBus Device2.discrete_in" as Connection201
                connect C_u13.out "ModBus Device2.holding_in" as Connection202
                connect Termination1.in "ModBus Device2.coil_out" as Connection206
                connect Gain1.in "ModBus Device2.holding_out" as Connection207
                connect C_u14.out "ModBus Device2.reg_in" as Connection208
                [
                    breakpoints = 7920, 7960; 8056, 7960
                ]
            }
            [
                position = 7600, 8512
                size = 64, 80
            ]

            component Subsystem Modbus3 {
                layout = dynamic
                component src_constant C_u13 {
                    value = "50"
                }
                [
                    position = 7856, 8056
                ]

                component src_constant C_u11 {
                }
                [
                    position = 7920, 8008
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8376, 8056
                ]

                component src_constant C_u12 {
                }
                [
                    position = 7920, 7912
                ]

                component gen_probe Probe3 {
                }
                [
                    position = 8512, 7968
                ]

                component gen_gain Gain1 {
                    gain = "scale_back_const"
                }
                [
                    position = 8400, 7912
                ]

                component "core/ModBus Device" "ModBus Device2" {
                    configuration = "config3"
                }
                [
                    position = 8168, 7984
                    size = 184, 184
                ]

                component src_constant C_u14 {
                }
                [
                    position = 7856, 7960
                ]

                port n3 {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8584, 7912
                ]

                junction Junction10 sp
                [
                    position = 8480, 7912
                ]

                connect n3 Junction10 as Connection196
                connect Junction10 Gain1.out as Connection197
                connect Probe3.in Junction10 as Connection198
                connect C_u11.out "ModBus Device2.coil_in" as Connection200
                connect C_u12.out "ModBus Device2.discrete_in" as Connection201
                connect C_u13.out "ModBus Device2.holding_in" as Connection202
                connect Termination1.in "ModBus Device2.coil_out" as Connection206
                connect Gain1.in "ModBus Device2.holding_out" as Connection207
                connect C_u14.out "ModBus Device2.reg_in" as Connection208
                [
                    breakpoints = 7920, 7960; 8056, 7960
                ]
            }
            [
                position = 7416, 8464
                size = 64, 80
            ]

            component Subsystem Modbus1 {
                layout = dynamic
                component src_constant C_u13 {
                    value = "50"
                }
                [
                    position = 7984, 8016
                ]

                component gen_product Product1 {
                }
                [
                    position = 7720, 8056
                ]

                component src_constant C_u11 {
                }
                [
                    position = 7912, 7872
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 8376, 7904
                ]

                component src_constant Constant1 {
                    value = "scale_const"
                }
                [
                    position = 7616, 8104
                ]

                component src_constant C_u12 {
                }
                [
                    position = 7984, 7960
                ]

                component gen_probe Probe1 {
                }
                [
                    position = 7856, 8104
                ]

                component gen_probe Probe3 {
                }
                [
                    position = 8472, 8120
                ]

                component gen_gain Gain1 {
                    gain = "scale_back_const"
                }
                [
                    position = 8360, 8056
                ]

                component "core/ModBus Device" "ModBus Device2" {
                }
                [
                    position = 8168, 7984
                    size = 184, 184
                ]

                port regD {
                    position = right:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7616, 8008
                    rotation = down
                    scale = -1, 1
                ]

                port n1 {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8544, 8064
                ]

                junction Junction10 sp
                [
                    position = 8440, 8064
                ]

                junction Junction11 sp
                [
                    position = 7824, 8056
                ]

                connect regD Product1.in as Connection83
                connect Constant1.out Product1.in1 as Connection73
                connect n1 Junction10 as Connection196
                connect Junction10 Gain1.out as Connection197
                connect Probe3.in Junction10 as Connection198
                connect C_u11.out "ModBus Device2.coil_in" as Connection200
                connect C_u12.out "ModBus Device2.discrete_in" as Connection201
                connect C_u13.out "ModBus Device2.holding_in" as Connection202
                connect "ModBus Device2.reg_in" Junction11 as Connection203
                connect Junction11 Product1.out as Connection204
                connect Probe1.in Junction11 as Connection205
                connect Termination1.in "ModBus Device2.coil_out" as Connection206
                connect Gain1.in "ModBus Device2.holding_out" as Connection207
            }
            [
                position = 7528, 8248
                scale = -1, 1
                size = 64, 80
            ]

            component gen_probe N1 {
            }
            [
                position = 7384, 8312
                scale = -1, 1
            ]

            tag Disel_Pref {
                value = "DGov_Pref"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8104, 8032
                scale = -1, 1
            ]

            tag VL1_Pref {
                value = "VL1_Pref"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8176, 8272
                scale = -1, 1
            ]

            tag VL2_Pref {
                value = "VL2_Pref"
                scope = global
                kind = sp
                direction = in
            }
            [
                position = 8176, 8472
                scale = -1, 1
            ]

            junction Junction1 sp
            [
                position = 8000, 8128
            ]

            junction Junction2 sp
            [
                position = 8000, 8312
            ]

            connect Disel_Pref P_ref_Diesel.P_ref_Diesel as Connection1
            connect VL1_Pref P_ref_VL1.P_ref_VL1 as Connection43
            connect VL2_Pref P_ref_VL2.P_ref_VL1 as Connection44
            connect N3.in Modbus3.n3 as Connection68
            [
                breakpoints = 7480, 8464
            ]
            connect RegD.out Junction1 as Connection70
            connect Junction1 P_ref_Diesel.In1 as Connection71
            connect P_ref_VL1.In1 Junction2 as Connection73
            connect Junction2 Junction1 as Connection74
            connect P_ref_VL2.In1 Junction2 as Connection75
        }
        [
            position = 7032, 8392
            size = 224, 128
        ]

        component Subsystem Feeder1_trafo7 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_500kVA_2"
                L2 = "L2_500kVA_2"
                Lm = "Lm_feeder1_transfo4"
                Poc1 = "5713.2"
                Psc1 = "3332.6668666"
                R1 = "R1_500kVA_2"
                R2 = "R2_500kVA_2"
                Rm = "Rm_feeder1_transfo4"
                Sn = "Sn_500kVA_2"
                V1 = "V1_500kVA_2"
                V2 = "V2_500kVA_2"
                clock_number = "1"
                current_vals_SI = "[0.07099970268944768, 29.5832094539223]"
                current_vals_pu = "[0.004156921938167208, 1.7320508075686942]"
                f = "sys_f"
                flux_vals_SI = "[35.866052856720586, 45.43033361848513]"
                flux_vals_pu = "[0.6928203230266023, 0.8775724091672871]"
                input = "SI"
                ioc1 = "15.1977491464"
                l1 = "0.00408251691158"
                l2 = "0.0122475507347"
                lm = "6.59859830622"
                r1 = "0.0016663334333"
                r2 = "0.0049990002999"
                rm = "87.5166281594"
                usc1 = "1.76379642563"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8272, 8384
                rotation = down
            ]

            connect A1 Tr1.prm_1 as Connection1
            connect B1 Tr1.prm_2 as Connection2
            connect C1 Tr1.prm_3 as Connection3
            connect Tr1.sec_3 c2 as Connection4
            connect Tr1.n2 Ground as Connection5
            connect b2 Tr1.sec_2 as Connection6
            connect Tr1.sec_1 a2 as Connection7
        }
        [
            position = 5232, 8512
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem F1_VL_CB1 {
            layout = dynamic
            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8144, 8192
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7352, 7768
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7384, 7608
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7384, 7656
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7264, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7376, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection117
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.in Junction50 as Connection110
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 "PQ Power Meter1.Qdc" as Connection111
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection116
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto34 {
                        value = "F1_CB7_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 7816
                        hide_name = True
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag Goto31 {
                        value = "F1_CB7_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 7744
                        hide_name = True
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto30 {
                        value = "F1_CB7_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 7720
                        hide_name = True
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag Goto33 {
                        value = "F1_CB7_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 7792
                        hide_name = True
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag Goto32 {
                        value = "F1_CB7_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 7768
                        hide_name = True
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7264, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7280, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7152, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7328, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7280, 7720
                    ]

                    junction Junction129 sp
                    [
                        position = 7312, 7744
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "0.1"
                    R51P_pickup2 = "0.1"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 

he relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF1_CB7"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7992, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7480, 8304
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7464, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7480, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7496, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection401
                connect B Junction1474 as Connection404
                connect C Junction1475 as Connection407
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1470 as Connection402
                connect Junction1474 Junction1471 as Connection405
                connect Junction1475 Junction1472 as Connection408
                connect Junction1476 Junction1421 as Connection411
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1476 as Connection410
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P1 Junction1473 as Connection403
                connect res_for_meas.P2 Junction1474 as Connection406
                connect res_for_meas.P3 Junction1475 as Connection409
                connect res_for_meas.P4 Junction1476 as Connection412
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7320, 8216
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7240, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7240, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7240, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1470 pe
                [
                    position = 7304, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7320, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7336, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1470 as Connection394
                connect B Junction1471 as Connection397
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1472 as Connection400
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1473 as Connection406
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1470 IA.p_node as Connection395
                connect Junction1471 IB.p_node as Connection398
                connect Junction1472 IC.p_node as Connection401
                connect Junction1473 VC.n_node as Connection404
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P1 Junction1470 as Connection396
                connect res_for_meas.P2 Junction1471 as Connection399
                connect res_for_meas.P3 Junction1472 as Connection402
                connect res_for_meas.P4 Junction1473 as Connection405
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8008, 8312
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F1_CB7 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8056, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7976, 8088
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8008, 8104
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect Brk.B Meas1.b as Connection2612
            connect Brk.c Meas2.C as Connection2614
            connect Brk.a Meas2.A as Connection2616
            connect C Meas1.C as Connection2608
            connect Meas1.A A as Connection2610
            connect Meas1.B B as Connection2609
            connect Meas1.a Brk.A as Connection2611
            connect Meas1.c Brk.C as Connection2613
            connect Meas2.B Brk.b as Connection2615
            connect Meas2.a a as Connection2617
            connect Meas2.c c as Connection2619
            connect b Meas2.b as Connection2618
            connect F1_CB7.out Brk.control as Connection2620
            connect Termination3.in Meas2.V as Connection2621
            connect Termination5.in Meas1.V as Connection2622
            connect Meas1.I Termination4.in as Connection2623
        }
        [
            position = 5232, 8376
            size = 80, 48
        ]

        component "core/VBR Variable Load" "VBR Variable Load1" {
            Sn = "650e3"
            Vn = "208"
        }
        [
            position = 5232, 8680
            size = 96, 80
        ]

        component Subsystem "VBR Variable Load1_out" {
            layout = dynamic
            component gen_probe S {
            }
            [
                position = 8224, 8160
                rotation = left
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "4"
            }
            [
                position = 8192, 8224
                rotation = right
                hide_name = True
                scale = -1, -1
            ]

            component gen_probe Q {
            }
            [
                position = 8152, 8160
                rotation = left
            ]

            component gen_probe P {
            }
            [
                position = 8096, 8160
                rotation = left
            ]

            component gen_probe pf {
            }
            [
                position = 8288, 8160
                rotation = left
            ]

            port In1 {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 8192, 8296
                rotation = left
            ]

            connect "Bus Split1.out3" pf.in as Connection15
            connect "Bus Split1.out2" S.in as Connection14
            connect "Bus Split1.out1" Q.in as Connection13
            connect "Bus Split1.out" P.in as Connection12
            connect "Bus Split1.in" In1 as Connection16
        }
        [
            position = 5096, 8728
            rotation = right
            scale = -1, 1
            size = 48, 48
        ]

        component Subsystem "VBR Variable Load1_in" {
            layout = dynamic
            component src_scada_input Qref {
                def_value = "50e3"
                unit = "VAR"
            }
            [
                position = 8112, 8248
            ]

            component src_scada_input Enable {
                def_value = "1"
                max = "3"
                min = "0"
                unit = ""
            }
            [
                position = 8112, 8136
            ]

            component gen_bus_join "Bus Join1" {
                inputs = "3"
            }
            [
                position = 8272, 8192
                hide_name = True
            ]

            port Out1 {
                position = right:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8344, 8192
            ]

            tag From1 {
                value = "VL1_Pref"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 8104, 8200
            ]

            connect Enable.out "Bus Join1.in" as Connection896
            connect Qref.out "Bus Join1.in2" as Connection26
            connect "Bus Join1.out" Out1 as Connection897
            connect From1 "Bus Join1.in1" as Connection898
        }
        [
            position = 5096, 8656
            size = 48, 48
        ]

        component Subsystem Feeder1_trafo8 {
            layout = dynamic
            component "core/Three Phase Two Winding Transformer" Tr1 {
                L1 = "L1_500kVA_2"
                L2 = "L2_500kVA_2"
                Lm = "Lm_feeder1_transfo4"
                Poc1 = "5713.2"
                Psc1 = "3332.6668666"
                R1 = "R1_500kVA_2"
                R2 = "R2_500kVA_2"
                Rm = "Rm_feeder1_transfo4"
                Sn = "Sn_500kVA_2"
                V1 = "V1_500kVA_2"
                V2 = "V2_500kVA_2"
                clock_number = "1"
                current_vals_SI = "[0.07099970268944768, 29.5832094539223]"
                current_vals_pu = "[0.004156921938167208, 1.7320508075686942]"
                f = "sys_f"
                flux_vals_SI = "[35.866052856720586, 45.43033361848513]"
                flux_vals_pu = "[0.6928203230266023, 0.8775724091672871]"
                input = "SI"
                ioc1 = "15.1977491464"
                l1 = "0.00408251691158"
                l2 = "0.0122475507347"
                lm = "6.59859830622"
                r1 = "0.0016663334333"
                r2 = "0.0049990002999"
                rm = "87.5166281594"
                usc1 = "1.76379642563"
                winding_1_connection = "D"
            }
            [
                position = 8192, 8192
                size = 126, 256
            ]

            port A1 {
                position = left:1
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8096
            ]

            port B1 {
                position = left:2
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8192
            ]

            port C1 {
                position = left:3
                kind = pe
                direction =  out
            }
            [
                position = 8080, 8288
            ]

            port a2 {
                position = right:1
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8096
                rotation = down
            ]

            port b2 {
                position = right:2
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8192
                rotation = down
            ]

            port c2 {
                position = right:3
                kind = pe
                direction =  out
            }
            [
                position = 8304, 8288
                rotation = down
            ]

            port Ground {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8272, 8384
                rotation = down
            ]

            connect A1 Tr1.prm_1 as Connection1
            connect B1 Tr1.prm_2 as Connection2
            connect C1 Tr1.prm_3 as Connection3
            connect Tr1.sec_3 c2 as Connection4
            connect Tr1.n2 Ground as Connection5
            connect b2 Tr1.sec_2 as Connection6
            connect Tr1.sec_1 a2 as Connection7
        }
        [
            position = 5640, 8488
            rotation = right
            scale = -1, 1
            size = 72, 64
        ]

        component Subsystem F1_VL_CB2 {
            layout = dynamic
            component Subsystem Brk {
                layout = dynamic
                component "core/Triple Pole Single Throw Contactor" S1 {
                    ctrl_src = "Model"
                }
                [
                    position = 8104, 8184
                    rotation = right
                ]

                port C {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8200, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 8104, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port A {
                    position = left:3
                    kind = pe
                }
                [
                    position = 8008, 8104
                    rotation = right
                    scale = -1, 1
                ]

                port c {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8200, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port b {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8104, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port a {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8008, 8264
                    rotation = left
                    scale = -1, 1
                ]

                port control {
                    position = bottom:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8320, 8184
                    scale = -1, 1
                ]

                connect A S1.c_in as Connection6
                connect B S1.b_in as Connection5
                connect S1.a_in C as Connection4
                connect S1.c_out a as Connection1
                connect S1.b_out b as Connection2
                connect S1.a_out c as Connection3
                connect control S1.ctrl_in as Connection7
            }
            [
                position = 8144, 8200
                rotation = right
                size = 64, 64
            ]

            component Subsystem MID_Rly1 {
                layout = dynamic
                component gen_bus_split "Bus Split2" {
                    outputs = "3"
                }
                [
                    position = 7704, 8000
                    rotation = right
                ]

                component gen_bus_split "Bus Split1" {
                    outputs = "3"
                }
                [
                    position = 7832, 8000
                    rotation = right
                ]

                component gen_probe CB_state {
                }
                [
                    position = 7592, 8344
                    rotation = down
                ]

                component gen_terminator Term4 {
                }
                [
                    position = 8152, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 8056, 7928
                ]

                component gen_terminator Term5 {
                }
                [
                    position = 8152, 8136
                    rotation = down
                    scale = -1, 1
                ]

                component sys_signal_switch "Signal switch1" {
                    threshold = "0.5"
                }
                [
                    position = 7792, 8400
                    rotation = right
                ]

                component src_constant Constant2 {
                    execution_rate = "Ts"
                    value = "[0]"
                }
                [
                    position = 7776, 8344
                    rotation = right
                ]

                component gen_terminator Term3 {
                }
                [
                    position = 8440, 7928
                ]

                component gen_bus_split "Bus Split3" {
                    outputs = "3"
                }
                [
                    position = 7576, 8000
                    rotation = right
                ]

                component gen_delay Delay1 {
                    del_length = "int(3.0/60.0/Ts)"
                    init_value = "[0]"
                }
                [
                    position = 7880, 8344
                    rotation = down
                ]

                component Subsystem SEL_787 {
                    layout = dynamic
                    component gen_gain Gain1 {
                        gain = "2"
                    }
                    [
                        position = 7536, 8328
                        rotation = right
                    ]

                    component gen_sum Sum1 {
                        signs = "5"
                    }
                    [
                        position = 7648, 8384
                    ]

                    component gen_gain Gain8 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8688
                    ]

                    component tm_delay "Unit Delay4" {
                    }
                    [
                        position = 9496, 8056
                    ]

                    component tm_delay "Unit Delay2" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7728, 8304
                        rotation = left
                    ]

                    component gen_c_function bitwise_faults {
                        in_terminal_dimensions_str = "Status inherit;R25 inherit;R27 inherit;R50 inherit;R51 inherit;R59 inherit;Reset inherit;"
                        in_terminal_properties = "inherit Status;inherit R25;inherit R27;inherit R50;inherit R51;inherit R59;inherit Reset;"
                        no_feed_inputs = "[]"
                        no_feed_outputs = "[]"
                        out_terminal_dimensions_str = "fault_status inherit;"
                        out_terminal_properties = "uint fault_status;"
                        output_fnc = "/*Begin code section*/
fault_status= (uint)Status<<1 | (uint)R25<<2 | (uint)R27<<3 | (uint)R50<<4 | (uint)R51<<5 | (uint)R59<<6 | (uint)Reset<<7;
/*End code section*/"
                    }
                    [
                        position = 9200, 8272
                    ]

                    component gen_logic_op "Logical operator1" {
                        inputs = "4"
                        operator = "OR"
                    }
                    [
                        position = 8720, 8128
                        rotation = left
                    ]

                    component gen_gain Gain7 {
                        gain = "2"
                    }
                    [
                        position = 7512, 8624
                    ]

                    component gen_gain Gain4 {
                        gain = "4"
                    }
                    [
                        position = 7480, 8384
                    ]

                    component src_scada_input "Control Panel Input1" {
                        execution_rate = "Ts"
                        max = "1"
                        min = "0"
                        unit = ""
                    }
                    [
                        position = 8144, 8192
                    ]

                    component gen_bus_join "Bus Join1" {
                        inputs = "25"
                    }
                    [
                        position = 7928, 8080
                    ]

                    component gen_c_function "pf bitwise" {
                        in_terminal_dimensions_str = "exp_imp inherit;lag_lead inherit;"
                        in_terminal_properties = "inherit exp_imp;inherit lag_lead;"
                        no_feed_inputs = "[u\'\']"
                        no_feed_outputs = "[u\'\']"
                        out_terminal_dimensions_str = "pf_states inherit;"
                        out_terminal_properties = "uint pf_states;"
                        output_fnc = "/*Begin code section*/
pf_states=(uint)exp_imp<<1 | (uint)lag_lead<<2;
/*End code section*/"
                    }
                    [
                        position = 9200, 8416
                    ]

                    component gen_gain Gain6 {
                        gain = "16"
                    }
                    [
                        position = 7584, 8456
                        rotation = left
                    ]

                    component gen_logic_op not {
                        operator = "NOT"
                    }
                    [
                        position = 7440, 8624
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 7640, 8624
                    ]

                    component gen_gain Gain5 {
                        gain = "8"
                    }
                    [
                        position = 7512, 8432
                        rotation = left
                    ]

                    component tm_delay "Unit Delay5" {
                        signal_out_type = "real"
                    }
                    [
                        position = 7840, 8392
                        rotation = left
                    ]

                    component gen_gain normalize {
                        gain = "np.sqrt(3.0)/13800.0"
                    }
                    [
                        position = 7352, 7768
                    ]

                    component gen_probe P {
                    }
                    [
                        position = 7384, 7608
                    ]

                    component gen_probe Q {
                    }
                    [
                        position = 7384, 7656
                    ]

                    component Subsystem "CALC FROM MEASUREMENTS" {
                        layout = dynamic
                        component gen_PQ_transform "PQ Power Meter1" {
                        }
                        [
                            position = 6936, 8952
                        ]

                        component gen_gain Gain2 {
                            gain = "10"
                        }
                        [
                            position = 7048, 7696
                        ]

                        component gen_gain Gain4 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8504
                        ]

                        component gen_terminator Termination4 {
                        }
                        [
                            position = 7088, 9072
                        ]

                        component "core/Three phase PLL" "Three phase PLL2" {
                        }
                        [
                            position = 6760, 9408
                        ]

                        component gen_terminator Termination10 {
                        }
                        [
                            position = 6856, 9472
                        ]

                        component gen_terminator Termination3 {
                        }
                        [
                            position = 7048, 9016
                        ]

                        component gen_terminator Termination13 {
                        }
                        [
                            position = 6864, 9368
                        ]

                        component gen_terminator Termination9 {
                        }
                        [
                            position = 7336, 8368
                        ]

                        component gen_gain Gain9 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7032, 9120
                        ]

                        component gen_terminator Termination7 {
                        }
                        [
                            position = 7336, 8256
                        ]

                        component "core/Three phase PLL" "Three phase PLL1" {
                        }
                        [
                            position = 7224, 8392
                        ]

                        component gen_rms_value "RMS value5" {
                        }
                        [
                            position = 7064, 8192
                        ]

                        component gen_gain Gain5 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8600
                        ]

                        component gen_gain Gain6 {
                            gain = "10"
                        }
                        [
                            position = 7064, 8704
                        ]

                        component gen_gain Gain3 {
                            gain = "10"
                        }
                        [
                            position = 7064, 7792
                        ]

                        component gen_rms_value "RMS value3" {
                        }
                        [
                            position = 7064, 8048
                        ]

                        component gen_gain Gain7 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8824
                        ]

                        component gen_gain Gain11 {
                            gain = "10.0"
                        }
                        [
                            position = 7432, 8400
                        ]

                        component gen_rms_value "RMS value6" {
                        }
                        [
                            position = 7064, 8256
                        ]

                        component msr_phasor_3ph "Three Phase Phasor2" {
                        }
                        [
                            position = 6968, 8560
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7064, 7984
                        ]

                        component gen_gain Gain1 {
                            gain = "10"
                        }
                        [
                            position = 7000, 7592
                        ]

                        component gen_gain Gain10 {
                            gain = "100.0"
                        }
                        [
                            position = 7064, 9168
                        ]

                        component gen_rms_value "RMS value4" {
                        }
                        [
                            position = 7064, 8128
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7064, 7920
                        ]

                        component msr_phasor_3ph "Three Phase Phasor1" {
                        }
                        [
                            position = 6904, 7752
                        ]

                        component gen_terminator Termination12 {
                        }
                        [
                            position = 6864, 9312
                        ]

                        component gen_gain Gain8 {
                            gain = "1.0/1000.0"
                        }
                        [
                            position = 7096, 8976
                        ]

                        component gen_terminator Termination8 {
                        }
                        [
                            position = 7336, 8312
                        ]

                        component gen_terminator Termination11 {
                        }
                        [
                            position = 6864, 9256
                        ]

                        component gen_terminator Termination5 {
                        }
                        [
                            position = 7304, 8488
                        ]

                        component Subsystem Subsystem1 {
                            layout = dynamic
                            component gen_rel_op "Relational operator4" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8096
                            ]

                            component gen_abs Abs2 {
                            }
                            [
                                position = 7720, 7896
                            ]

                            component gen_rel_op "Relational operator2" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7904
                            ]

                            component src_constant Constant1 {
                                execution_rate = "Ts"
                            }
                            [
                                position = 7768, 7856
                            ]

                            component gen_rel_op "Relational operator3" {
                                relational_op = ">"
                            }
                            [
                                position = 7856, 8000
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = ">"
                            }
                            [
                                position = 7840, 7800
                            ]

                            component gen_logic_op "Logical operator1" {
                            }
                            [
                                position = 7976, 7856
                            ]

                            component gen_abs Abs1 {
                            }
                            [
                                position = 7720, 7792
                            ]

                            component src_constant Constant2 {
                                execution_rate = "Ts"
                                value = "[0]"
                            }
                            [
                                position = 7752, 8048
                            ]

                            component Subsystem Subsystem3 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8008
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7656, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8032, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 Out1 as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect "Multiport signal switch1.ctrl" u as Connection4
                                connect "Unit Delay1.out" Junction1 as Connection5
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection6
                            }
                            [
                                position = 8152, 8104
                                size = 112, 56
                            ]

                            component Subsystem Subsystem2 {
                                layout = dynamic
                                component sys_mp_signal_switch "Multiport signal switch1" {
                                }
                                [
                                    position = 7752, 8056
                                ]

                                component tm_delay "Unit Delay1" {
                                    execution_rate = "Ts"
                                    init_value = "[1]"
                                    signal_out_type = "real"
                                }
                                [
                                    position = 7976, 8056
                                ]

                                port u {
                                    label = "In1"
                                    position = left:1
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7576, 8032
                                ]

                                port E {
                                    label = "In2"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 7648, 8056
                                ]

                                port Out1 {
                                    label = "Out1"
                                    position = auto:auto
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8128, 8056
                                ]

                                junction Junction1 sp
                                [
                                    position = 8072, 8056
                                ]

                                connect E "Multiport signal switch1.in" as Connection1
                                connect Junction1 "Unit Delay1.out" as Connection2
                                connect "Multiport signal switch1.in1" Junction1 as Connection3
                                connect Out1 Junction1 as Connection4
                                connect "Unit Delay1.in" "Multiport signal switch1.out" as Connection5
                                connect u "Multiport signal switch1.ctrl" as Connection6
                            }
                            [
                                position = 8152, 8008
                                size = 112, 56
                            ]

                            port P {
                                label = "P"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 7992
                            ]

                            port Q {
                                label = "Q"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7512, 8088
                            ]

                            port "Lagging or Leading" {
                                label = "Lag or Lead"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8104
                            ]

                            port "Exporting or Importing" {
                                label = "export or import"
                                position = auto:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8288, 8008
                            ]

                            junction Junction1 sp
                            [
                                position = 7560, 8088
                            ]

                            junction Junction4 sp
                            [
                                position = 7592, 7992
                            ]

                            junction Junction11 sp
                            [
                                position = 7808, 7856
                            ]

                            junction Junction13 sp
                            [
                                position = 7824, 8048
                            ]

                            junction Junction14 sp
                            [
                                position = 8040, 8016
                            ]

                            connect Abs1.in Junction1 as Connection1
                            connect Abs1.out "Relational operator1.in" as Connection2
                            connect Abs2.out "Relational operator2.in" as Connection3
                            connect Constant1.out Junction11 as Connection8
                            connect Constant2.out Junction13 as Connection9
                            connect "Exporting or Importing" Subsystem2.Out1 as Connection10
                            connect Junction11 "Relational operator1.in1" as Connection12
                            connect Junction13 "Relational operator3.in1" as Connection14
                            connect Junction14 Subsystem3.E as Connection45
                            connect Junction4 Abs2.in as Connection39
                            connect Junction4 P as Connection18
                            connect "Lagging or Leading" Subsystem3.Out1 as Connection22
                            connect "Logical operator1.out" Junction14 as Connection44
                            connect Q Junction1 as Connection26
                            connect "Relational operator1.out" "Logical operator1.in" as Connection27
                            connect "Relational operator2.in1" Junction11 as Connection28
                            connect "Relational operator2.out" "Logical operator1.in1" as Connection29
                            connect "Relational operator3.in" Junction4 as Connection42
                            connect "Relational operator3.out" Subsystem2.u as Connection31
                            connect "Relational operator4.in" Junction1 as Connection40
                            connect "Relational operator4.in1" Junction13 as Connection32
                            connect "Relational operator4.out" Subsystem3.u as Connection34
                            connect Subsystem2.E Junction14 as Connection46
                        }
                        [
                            position = 7264, 8912
                            size = 112, 80
                        ]

                        port Ia {
                            label = "Ia"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7920
                        ]

                        port Ia_rms {
                            label = "Ia_rms"
                            position = right:7
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7920
                        ]

                        port Ib {
                            label = "Ib"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 7984
                        ]

                        port Ib_rms {
                            label = "Ib_rms"
                            position = right:8
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7984
                        ]

                        port Ic {
                            label = "Ic"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8048
                        ]

                        port Ic_rms {
                            label = "Ic_rms"
                            position = right:9
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8048
                        ]

                        port Va {
                            label = "Va"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8128
                        ]

                        port Va_rms {
                            label = "Va_rms"
                            position = right:10
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8128
                        ]

                        port Vb {
                            label = "Vb"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8192
                        ]

                        port Vc {
                            label = "Vc"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6616, 8256
                        ]

                        port Vb_rms {
                            label = "Vb_rms"
                            position = right:11
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8192
                        ]

                        port Vc_rms {
                            label = "Vc_rms"
                            position = right:12
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8256
                        ]

                        port P {
                            label = "P"
                            position = right:19
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7160, 8824
                        ]

                        port Q {
                            label = "Q"
                            position = right:20
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7168, 8976
                        ]

                        port S {
                            label = "S"
                            position = right:21
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7112, 9120
                        ]

                        port pf {
                            label = "pf"
                            position = right:22
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7144, 9168
                        ]

                        port Ia_mag {
                            label = "Ia_mag"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7536
                        ]

                        port Ia_phase {
                            label = "Ia_phase"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7592
                        ]

                        port Ib_mag {
                            label = "Ib_mag"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7640
                        ]

                        port Ib_phase {
                            label = "Ib_phase"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7696
                        ]

                        port Ic_mag {
                            label = "Ic_mag"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7744
                        ]

                        port Ic_phase {
                            label = "Ic_phase"
                            position = right:6
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 7792
                        ]

                        port Va_mag {
                            label = "Va_mag"
                            position = right:13
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8456
                        ]

                        port Va_phase {
                            label = "Va_phase"
                            position = right:14
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8504
                        ]

                        port Vb_mag {
                            label = "Vb_mag"
                            position = right:15
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8552
                        ]

                        port Vb_phase {
                            label = "Vb_phase"
                            position = right:16
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8600
                        ]

                        port Vc_mag {
                            label = "Vc_mag"
                            position = right:17
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8648
                        ]

                        port Vc_phase {
                            label = "Vc_phase"
                            position = right:18
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7128, 8704
                        ]

                        port "Export Import" {
                            label = "Export Import"
                            position = right:28
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7376, 8928
                        ]

                        port "Lag Lead" {
                            label = "Lag Lead"
                            position = right:27
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 8888
                        ]

                        port bus_freq {
                            label = "Bus_freq"
                            position = right:23
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7512, 8400
                        ]

                        port bus_wt {
                            label = "Bus_wt"
                            position = right:24
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7440, 8456
                        ]

                        port Vline_a {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9352
                        ]

                        port Vline_b {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9408
                        ]

                        port Vline_c {
                            label = "In1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 6632, 9464
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = right:25
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9416
                        ]

                        port line_wt {
                            label = "Line_wt"
                            position = right:26
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7016, 9464
                        ]

                        junction Junction23 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction24 sp
                        [
                            position = 6768, 8192
                        ]

                        junction Junction25 sp
                        [
                            position = 6784, 8256
                        ]

                        junction Junction34 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction35 sp
                        [
                            position = 6656, 7920
                        ]

                        junction Junction37 sp
                        [
                            position = 6672, 7984
                        ]

                        junction Junction39 sp
                        [
                            position = 6752, 8360
                        ]

                        junction Junction41 sp
                        [
                            position = 6768, 8392
                        ]

                        junction Junction42 sp
                        [
                            position = 6784, 8424
                        ]

                        junction Junction44 sp
                        [
                            position = 6768, 8568
                        ]

                        junction Junction45 sp
                        [
                            position = 6784, 8584
                        ]

                        junction Junction46 sp
                        [
                            position = 6688, 8048
                        ]

                        junction Junction48 sp
                        [
                            position = 6752, 8536
                        ]

                        junction Junction49 sp
                        [
                            position = 6928, 8536
                        ]

                        junction Junction50 sp
                        [
                            position = 7056, 8928
                        ]

                        junction Junction51 sp
                        [
                            position = 7056, 8888
                        ]

                        junction Junction52 sp
                        [
                            position = 6752, 8128
                        ]

                        junction Junction53 sp
                        [
                            position = 6656, 7920
                        ]

                        connect "Export Import" "Subsystem1.Exporting or Importing" as Connection117
                        connect Gain1.out Ia_phase as Connection87
                        connect Gain10.in "PQ Power Meter1.k_factor" as Connection105
                        connect Gain11.in "Three phase PLL1.freq" as Connection107
                        connect Gain2.out Ib_phase as Connection89
                        connect Gain3.in "Three Phase Phasor1.phase3" as Connection91
                        connect Gain4.in "Three Phase Phasor2.phase1" as Connection92
                        connect Gain4.out Va_phase as Connection93
                        connect Gain5.out Vb_phase as Connection95
                        connect Gain6.in "Three Phase Phasor2.phase3" as Connection97
                        connect Gain7.in Junction51 as Connection113
                        connect Gain8.in Junction50 as Connection110
                        connect Gain8.out Q as Connection101
                        connect Gain9.in "PQ Power Meter1.apparent" as Connection103
                        connect Ia Junction35 as Connection2
                        connect Ia_mag "Three Phase Phasor1.out1" as Connection3
                        connect Ia_rms "RMS value1.out" as Connection4
                        connect Ib Junction37 as Connection5
                        connect Ib_rms "RMS value2.out" as Connection6
                        connect Ic Junction34 as Connection7
                        connect Ic_phase Gain3.out as Connection90
                        connect Ic_rms "RMS value3.out" as Connection9
                        connect Junction23 Junction39 as Connection10
                        connect Junction23 Va as Connection11
                        connect Junction24 Junction41 as Connection12
                        connect Junction24 "RMS value5.in" as Connection13
                        connect Junction24 Vb as Connection14
                        connect Junction25 Junction42 as Connection15
                        connect Junction25 "RMS value6.in" as Connection16
                        connect Junction37 "RMS value2.in" as Connection18
                        connect Junction39 "Three phase PLL1.va" as Connection20
                        connect Junction41 "Three phase PLL1.vb" as Connection21
                        connect Junction42 "Three phase PLL1.vc" as Connection22
                        connect Junction44 Junction41 as Connection23
                        connect Junction45 Junction42 as Connection24
                        connect Junction46 Junction34 as Connection25
                        connect Junction48 Junction39 as Connection27
                        connect Junction49 Junction48 as Connection28
                        connect Junction50 "PQ Power Meter1.Qdc" as Connection111
                        connect Junction51 "PQ Power Meter1.Pdc" as Connection114
                        connect Junction52 Junction23 as Connection119
                        connect Junction53 Junction35 as Connection122
                        connect "Lag Lead" "Subsystem1.Lagging or Leading" as Connection116
                        connect P Gain7.out as Connection98
                        connect "PQ Power Meter1.ia" Junction35 as Connection30
                        connect "PQ Power Meter1.ib" Junction37 as Connection31
                        connect "PQ Power Meter1.vb" Junction44 as Connection33
                        connect "PQ Power Meter1.vc" Junction45 as Connection34
                        connect "PQ Power Meter1.ic" Junction46 as Connection35
                        connect "PQ Power Meter1.va" Junction48 as Connection36
                        connect "RMS value1.in" Junction53 as Connection121
                        connect "RMS value3.in" Junction34 as Connection38
                        connect "RMS value4.in" Junction52 as Connection118
                        connect S Gain9.out as Connection102
                        connect Subsystem1.Q Junction50 as Connection112
                        connect Subsystem1.P Junction51 as Connection115
                        connect Termination10.in "Three phase PLL2.sin_theta" as Connection45
                        connect Termination11.in "Three phase PLL2.d_axis" as Connection46
                        connect Termination12.in "Three phase PLL2.q_axis" as Connection47
                        connect Termination13.in "Three phase PLL2.zero_axis" as Connection48
                        connect Termination3.in "PQ Power Meter1.Pac" as Connection50
                        connect Termination4.in "PQ Power Meter1.Qac" as Connection51
                        connect Termination5.in "Three phase PLL1.sin_theta" as Connection52
                        connect Termination7.in "Three phase PLL1.d_axis" as Connection53
                        connect Termination8.in "Three phase PLL1.q_axis" as Connection54
                        connect Termination9.in "Three phase PLL1.zero_axis" as Connection55
                        connect "Three Phase Phasor1.phase1" Gain1.in as Connection86
                        connect "Three Phase Phasor1.phase2" Gain2.in as Connection88
                        connect "Three Phase Phasor1.out2" Ib_mag as Connection57
                        connect "Three Phase Phasor1.out3" Ic_mag as Connection59
                        connect "Three Phase Phasor1.in2" Junction37 as Connection60
                        connect "Three Phase Phasor1.in3" Junction46 as Connection61
                        connect "Three Phase Phasor1.in_ref" Junction52 as Connection120
                        connect "Three Phase Phasor1.in1" Junction53 as Connection123
                        connect "Three Phase Phasor2.phase2" Gain5.in as Connection94
                        connect "Three Phase Phasor2.in2" Junction44 as Connection64
                        connect "Three Phase Phasor2.in3" Junction45 as Connection65
                        connect "Three Phase Phasor2.in1" Junction49 as Connection67
                        connect "Three Phase Phasor2.in_ref" Junction49 as Connection66
                        connect "Three Phase Phasor2.out1" Va_mag as Connection68
                        connect "Three Phase Phasor2.out2" Vb_mag as Connection70
                        connect "Three Phase Phasor2.out3" Vc_mag as Connection72
                        connect "Three phase PLL2.freq" line_freq as Connection73
                        connect Va_rms "RMS value4.out" as Connection74
                        connect Vb_rms "RMS value5.out" as Connection75
                        connect Vc Junction25 as Connection76
                        connect Vc_phase Gain6.out as Connection96
                        connect Vc_rms "RMS value6.out" as Connection78
                        connect Vline_a "Three phase PLL2.va" as Connection79
                        connect Vline_b "Three phase PLL2.vb" as Connection80
                        connect Vline_c "Three phase PLL2.vc" as Connection81
                        connect bus_freq Gain11.out as Connection106
                        connect bus_wt "Three phase PLL1.theta" as Connection83
                        connect line_wt "Three phase PLL2.theta" as Connection84
                        connect pf Gain10.out as Connection104
                    }
                    [
                        position = 6992, 8104
                        size = 112, 664
                    ]

                    component Subsystem R50512761 {
                        layout = dynamic
                        component gen_bus_split "Bus Split1" {
                            outputs = "10"
                        }
                        [
                            position = 7560, 8248
                            rotation = left
                        ]

                        component src_constant Ts {
                            execution_rate = "Ts"
                            value = "Ts"
                        }
                        [
                            position = 7696, 7712
                            rotation = right
                        ]

                        component gen_c_function Relays {
                            global_variables = "real R50;real R51;real R27;real R59;real n50;real n51;real n59;real n27;real t59;real t50;real t51;real bool_27;real t27;real bool_59;uint i;real bool_51;real bool_50;real A;real B;real P;real Ipu50;real Ipu51;real CT_tap;real ratio[3];real M[3];real t51s[3];real Iinst[3];real Irms[3];real Vrms[3];"
                            in_terminal_dimensions_str = "enable inherit;Ts inherit;Reset inherit;IinstA inherit;IinstB inherit;IinstC inherit;IrmsA inherit;IrmsB inherit;IrmsC inherit;VrmsA inherit;VrmsB inherit;VrmsC inherit;VRMSLN inherit;CT_p inherit;IOC_pickup inherit;IOC_tripDelay inherit;TOC_pickup inherit;curveType inherit;timeDial inherit;UV_pickup inherit;OV_pickup inherit;UVOV_tripDelay inherit;"
                            in_terminal_properties = "real enable;inherit Ts;inherit Reset;inherit IinstA;inherit IinstB;inherit IinstC;inherit IrmsA;inherit IrmsB;inherit IrmsC;inherit VrmsA;inherit VrmsB;inherit VrmsC;inherit VRMSLN;inherit CT_p;inherit IOC_pickup;inherit IOC_tripDelay;inherit TOC_pickup;inherit curveType;inherit timeDial;inherit UV_pickup;inherit OV_pickup;inherit UVOV_tripDelay;"
                            init_fnc = "/*Begin code section*/
R50=0;
R51=0;
R27=0;
R59=0;

n50=0;
n51=0;
n59=0;
n27=0;

CT_tap = 1.0;

A = 5.67;
B = 0.0352;
P = 2.0;

t59 = 0;
t50 = 0;
t51 = 0;
t27 = 0;

bool_27 = 0;
bool_59 = 0;
bool_51 = 0;
bool_50 = 0;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip50 inherit;trip51 inherit;trip27 inherit;trip59 inherit;"
                            out_terminal_properties = "real trip50;real trip51;real trip27;real trip59;"
                            output_fnc = "/*Begin code section*/
Iinst[0] = fabs(IinstA);
Iinst[1] = fabs(IinstB);
Iinst[2] = fabs(IinstC);

Irms[0] = IrmsA;
Irms[1] = IrmsB;
Irms[2] = IrmsC;

Vrms[0] = VrmsA;
Vrms[1] = VrmsB;
Vrms[2] = VrmsC;

if (Reset==1) {
    R50=0;
    R51=0;
    R59=0;
    R27=0;
    bool_50 = 0.0;
}

for(i=0; i<3; i++){
    Iinst[i] = Iinst[i]*5.0/CT_p;
    Irms[i] = Irms[i]*5.0/CT_p;
}

if(curveType==1){
    A = 0.0104;
    B = 0.0226;
    P = 0.02;
}
else if(curveType==2){
    A = 5.95;
    B = 0.180;
    P = 2.0;
}
else if(curveType==3){
    A = 3.88;
    B = 0.0923;
    P = 2.0;
}
else{
    A = 5.67;
    B = 0.0352;
    P = 2.0;
}

if (!((R50 == 1) || (R51 == 1))&&(enable==1)){
    
    if((UV_pickup>1)||(UV_pickup==0)){
        UV_pickup = 0.9;
    }
    if((OV_pickup<1)||(OV_pickup==0)){
        OV_pickup = 1.1;
    }
    
    Ipu50 = IOC_pickup*CT_tap*sqrt(2.0);
    Ipu51 = TOC_pickup*CT_tap;
    
    for(i=0; i<3; i++){
        ratio[i] = Vrms[i]/VRMSLN;
        M[i] = Irms[i]/Ipu51;
        if(M[i]<=1.0){
            t51s[i] = 1e6;
        }
        else{
            t51s[i] = timeDial*(B+(A/(pow(M[i],P)-1)));
        }
    }
    
    t27 = 0.004167 + UVOV_tripDelay;
    t50 = 0.004167 + IOC_tripDelay;
    t59 = 0.004167 + UVOV_tripDelay;
    
    if((t51s[0]<=t51s[1])&&(t51s[0]<=t51s[2])){
        t51 = t51s[0];
    }
    else if(t51s[1]<=t51s[2]){
        t51 = t51s[1];
    }
    else{
        t51 = t51s[2];
    }
    
    for(i=0; i<3; i++){
        if(ratio[i]<=UV_pickup){
            bool_27 = 1;
            break;
        }
        else{
            bool_27 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Irms[i]>Ipu51){
            bool_51 = 1;
            break;
        }
        else{
            bool_51 = 0;
        }
    }
    for(i=0; i<3; i++){
        if(Iinst[i]>Ipu50){
            bool_50 = 1;
            break;
        }
    }
    for(i=0; i<3; i++){
        if(ratio[i]>=OV_pickup){
            bool_59 = 1;
            break;
        }
        else{
            bool_59 = 0;
        }
    }
    //bool_27 = ((ratio[0]<=UV_pickup)+(ratio[1]<=UV_pickup)+(ratio[2]<=UV_pickup))>0;
    //bool_59 = ((ratio[0]>=OV_pickup)+(ratio[1]>=OV_pickup)+(ratio[2]>=OV_pickup))>0;
    //bool_50 = ((Iinst[0]>Ipu50)+(Iinst[1]>Ipu50)+(Iinst[2]>Ipu50))>0;
    //bool_51 = ((Irms[0]>Ipu51)+(Irms[1]>Ipu51)+(Irms[2]>Ipu51))>0;
    
    n50 *= bool_50;
    n51 *= bool_51;
    n27 *= bool_27;
    n59 *= bool_59;

    n50 += bool_50  * Ts;
    n51 += bool_51  * Ts;
    n27 += bool_27  * Ts;
    n59 += bool_59  * Ts;

    if(n50 > t50)
        R50 = 1;
    else
        R50 = 0;

    if(n51 > t51)
        R51 = 1;
    else
        R51 = 0;

    if(n27 > t27)
        R27 = 1;
    else
        R27 = 0;

    if(n59 > t59)
        R59 = 1;
    else
        R59 = 0;
}

trip50 = R50;
trip51 = R51;
trip27 = R27;
trip59 = R59;
/*End code section*/"
                        }
                        [
                            position = 7784, 8008
                        ]

                        port trip_50 {
                            label = "trip_50"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7848
                        ]

                        port trip_51 {
                            label = "trip_51"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 7952
                        ]

                        port trip_59 {
                            label = "trip_59"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8160
                        ]

                        port trip_27 {
                            label = "trip_27"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7984, 8056
                        ]

                        port relay_param {
                            label = "Relay Param"
                            position = left:12
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7560, 8328
                            rotation = left
                        ]

                        port Irms_c {
                            label = "Irms_c"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7368, 7752
                            rotation = right
                        ]

                        port Irms_a {
                            label = "Irms_a"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 7752
                            rotation = right
                        ]

                        port Enable {
                            label = "Enable"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7736, 7752
                            rotation = right
                        ]

                        port Iinst_a {
                            label = "Iinst_a"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7608, 7712
                            rotation = right
                        ]

                        port Irms_b {
                            label = "Irms_b"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7424, 7712
                            rotation = right
                        ]

                        port Iinst_b {
                            label = "Iinst_b"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7568, 7752
                            rotation = right
                        ]

                        port Reset {
                            label = "Reset"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7656, 7752
                            rotation = right
                        ]

                        port Iinst_c {
                            label = "Iinst_c"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 7712
                            rotation = right
                        ]

                        port Vrms_b {
                            label = "Vrms_b"
                            position = left:10
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7256, 7752
                            rotation = right
                        ]

                        port Vrms_c {
                            label = "Vrms_c"
                            position = left:11
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7200, 7712
                            rotation = right
                        ]

                        port Vrms_a {
                            label = "Vrms_a"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7312, 7712
                            rotation = right
                        ]

                        comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus split:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">out9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                        [
                            position = 7728, 8224
                        ]

                        connect "Bus Split1.out5" Relays.curveType as Connection41
                        connect "Bus Split1.out3" Relays.IOC_tripDelay as Connection43
                        connect "Bus Split1.out4" Relays.TOC_pickup as Connection42
                        connect "Bus Split1.out1" Relays.CT_p as Connection45
                        connect "Bus Split1.out9" Relays.UVOV_tripDelay as Connection37
                        connect "Bus Split1.out2" Relays.IOC_pickup as Connection44
                        connect "Bus Split1.out6" Relays.timeDial as Connection40
                        connect "Bus Split1.out" Relays.VRMSLN as Connection46
                        connect "Bus Split1.out8" Relays.OV_pickup as Connection38
                        connect "Bus Split1.out7" Relays.UV_pickup as Connection39
                        connect "Bus Split1.in" relay_param as Connection36
                        connect Enable Relays.enable as Connection47
                        connect Iinst_a Relays.IinstA as Connection50
                        connect Iinst_b Relays.IinstB as Connection51
                        connect Iinst_c Relays.IinstC as Connection52
                        connect Irms_a Relays.IrmsA as Connection53
                        connect Irms_b Relays.IrmsB as Connection54
                        connect Irms_c Relays.IrmsC as Connection55
                        connect Reset Relays.Reset as Connection49
                        connect Ts.out Relays.Ts as Connection48
                        connect Vrms_a Relays.VrmsA as Connection56
                        connect Vrms_b Relays.VrmsB as Connection57
                        connect Vrms_c Relays.VrmsC as Connection58
                        connect trip_27 Relays.trip27 as Connection77
                        connect trip_50 Relays.trip50 as Connection76
                        connect trip_51 Relays.trip51 as Connection75
                        connect trip_59 Relays.trip59 as Connection78
                    }
                    [
                        position = 8424, 8328
                        size = 144, 304
                    ]

                    component Subsystem "State Condition Mng" {
                        layout = dynamic
                        component gen_c_function "Trip_out mng fnc" {
                            in_terminal_dimensions_str = "bool_R25 inherit;op_mode_in inherit;trip_in inherit;enable inherit;initial_condition inherit;activate_logic inherit;"
                            in_terminal_properties = "real bool_R25;inherit op_mode_in;inherit trip_in;inherit enable;inherit initial_condition;inherit activate_logic;"
                            init_fnc = "/*Begin code section*/
trip_out = initial_condition;
/*End code section*/"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "trip_out inherit;"
                            out_terminal_properties = "real trip_out;"
                            output_fnc = "/*Begin code section*/
if(enable && activate_logic){
    if(op_mode_in==0){
        trip_out = trip_in*bool_R25;
    }
    else if(op_mode_in==1){
        trip_out = 1*bool_R25;
    }
    else if(op_mode_in==2){
        trip_out=0;
    }
}
/*End code section*/"
                        }
                        [
                            position = 8424, 8208
                        ]

                        component gen_logic_op not1 {
                            operator = "NOT"
                        }
                        [
                            position = 8032, 8264
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8120, 8352
                            scale = 1, -1
                        ]

                        component gen_logic_op not {
                            operator = "NOT"
                        }
                        [
                            position = 7840, 8200
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8200, 8336
                            scale = 1, -1
                        ]

                        component Subsystem detect_change {
                            layout = dynamic
                            component tm_delay "Unit Delay1" {
                            }
                            [
                                position = 8144, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "!="
                            }
                            [
                                position = 8240, 8192
                            ]

                            port Out1 {
                                label = "Out"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8304, 8192
                            ]

                            port In3 {
                                label = "In"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8032, 8200
                            ]

                            junction Junction1 sp
                            [
                                position = 8080, 8200
                            ]

                            connect Junction1 In3 as Connection1
                            connect "Relational operator1.in" Junction1 as Connection2
                            connect "Relational operator1.out" Out1 as Connection3
                            connect "Unit Delay1.in" Junction1 as Connection4
                            connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                        }
                        [
                            position = 7960, 8368
                            size = 48, 48
                        ]

                        port Trip_in {
                            label = "Trip_in"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7768, 8200
                        ]

                        port R25 {
                            label = "R25"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8232, 8128
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8272, 8160
                        ]

                        port trip_out {
                            label = "trip_out"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8536, 8208
                        ]

                        port enable {
                            label = "enable"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7952, 8264
                        ]

                        port initial_condition {
                            label = "initial_condition"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8248, 8232
                        ]

                        junction Junction2 sp
                        [
                            position = 7984, 8264
                        ]

                        junction Junction3 sp
                        [
                            position = 7904, 8200
                        ]

                        connect Junction2 enable as Connection150
                        connect Junction3 not.out as Connection158
                        connect R25 "Trip_out mng fnc.bool_R25" as Connection144
                        connect "SR Flip Flop1.r_in" not1.out as Connection136
                        connect Termination1.in "SR Flip Flop1.out_n" as Connection138
                        connect "Trip_out mng fnc.enable" Junction2 as Connection151
                        connect "Trip_out mng fnc.trip_in" Junction3 as Connection157
                        connect "Trip_out mng fnc.activate_logic" "SR Flip Flop1.out" as Connection154
                        connect detect_change.In3 Junction3 as Connection159
                        connect detect_change.Out1 "SR Flip Flop1.s_in" as Connection156
                        connect initial_condition "Trip_out mng fnc.initial_condition" as Connection152
                        connect not.in Trip_in as Connection139
                        connect not1.in Junction2 as Connection149
                        connect op_mode "Trip_out mng fnc.op_mode_in" as Connection145
                        connect trip_out "Trip_out mng fnc.trip_out" as Connection167
                    }
                    [
                        position = 9336, 8056
                        size = 128, 136
                    ]

                    component Subsystem "Relay 25-Sync Check1" {
                        layout = dynamic
                        component gen_gain Gain2 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7832
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "4"
                        }
                        [
                            position = 7808, 8424
                        ]

                        component src_constant Constant2 {
                            execution_rate = "Ts"
                            value = "[2]"
                        }
                        [
                            position = 8368, 7848
                        ]

                        component gen_rms_value "RMS value1" {
                        }
                        [
                            position = 7784, 7776
                        ]

                        component gen_logic_op "Logical operator3" {
                            inputs = "3"
                        }
                        [
                            position = 8336, 8104
                        ]

                        component gen_terminator Termination1 {
                        }
                        [
                            position = 8808, 7904
                        ]

                        component gen_rel_op "Relational operator1" {
                        }
                        [
                            position = 8464, 7856
                        ]

                        component gen_rms_value "RMS value2" {
                        }
                        [
                            position = 7784, 7832
                        ]

                        component gen_sr_ff "SR Flip Flop1" {
                        }
                        [
                            position = 8736, 7864
                        ]

                        component gen_c_function "Deadbus fcn" {
                            global_variables = "real threshold;uint a;uint c;uint b;"
                            in_terminal_dimensions_str = "Vbus inherit;Vline inherit;VRMSLL inherit;"
                            in_terminal_properties = "real Vbus;real Vline;real VRMSLL;"
                            no_feed_inputs = "[u\'\']"
                            no_feed_outputs = "[u\'\']"
                            out_terminal_dimensions_str = "out inherit;"
                            output_fnc = "/*Begin code section*/
if (VRMSLL > 400)
    threshold=VRMSLL*0.003;
else
    threshold = VRMSLL*0.05;

if ((Vbus > (VRMSLL*0.90)) && (Vbus < (VRMSLL*1.20)) && (Vline < threshold))
    a = 1;
else
    a = 0;

if ((Vline > (VRMSLL*0.90)) && (Vline < (VRMSLL*1.20)) && (Vbus < threshold))
    b = 1;
else
    b = 0;

if ((Vline < threshold) && (Vbus < threshold))
    c = 1;
else
    c = 0;

out = a || b || c;
/*End code section*/"
                        }
                        [
                            position = 8208, 7672
                        ]

                        component gen_gain Gain1 {
                            gain = "np.sqrt(3)"
                        }
                        [
                            position = 7864, 7776
                        ]

                        component gen_logic_op "Logical operator5" {
                            operator = "OR"
                        }
                        [
                            position = 8544, 7848
                        ]

                        component gen_gain Gain3 {
                            gain = "1.0/10.0"
                        }
                        [
                            position = 7776, 8080
                        ]

                        component gen_logic_op "Logical operator4" {
                            operator = "OR"
                        }
                        [
                            position = 8888, 8096
                        ]

                        component gen_logic_op "Logical operator7" {
                            operator = "OR"
                        }
                        [
                            position = 8632, 7888
                        ]

                        component Subsystem "Phase Comparator" {
                            layout = dynamic
                            component gen_probe c_out {
                                addr = "17943"
                            }
                            [
                                position = 7768, 8000
                            ]

                            component gen_c_function "C function1" {
                                global_variables = "real mod_L;real wrap_out1;real wrap_out2;real mod_B;real k;real alpha;real PI2;real PI;"
                                in_terminal_dimensions_str = "phase_bus inherit;phase_line inherit;"
                                in_terminal_properties = "real phase_bus;real phase_line;"
                                init_fnc = "/*Begin code section*/
PI = 3.1415926536;
PI2 = 2*PI;
/*End code section*/"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
mod_L=fmod(phase_line, PI2);
mod_B=fmod(phase_bus, PI2);

if (fabs(mod_L - mod_B) > PI) {
    if (mod_L < mod_B)
        mod_B -= PI2;
    else
        mod_B += PI2;
}

out=fabs(mod_L-mod_B)*180.0/PI;
/*End code section*/"
                            }
                            [
                                position = 7656, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7808, 8056
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8056
                            ]

                            port wt_grid {
                                label = "wt_grid"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8008
                            ]

                            port wt_gen {
                                label = "wt_gen"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7376, 8072
                            ]

                            port angle_threshold {
                                label = "angle_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7576, 8136
                            ]

                            junction Junction1 sp
                            [
                                position = 7736, 8048
                            ]

                            connect Junction1 "C function1.out" as Connection2
                            connect Locked "Relational operator1.out" as Connection3
                            connect "Relational operator1.in" Junction1 as Connection4
                            connect angle_threshold "Relational operator1.in1" as Connection8
                            connect c_out.in Junction1 as Connection5
                            connect wt_gen "C function1.phase_line" as Connection6
                            connect wt_grid "C function1.phase_bus" as Connection7
                        }
                        [
                            position = 8016, 8272
                            size = 112, 88
                        ]

                        component Subsystem "Freq Comparator" {
                            layout = dynamic
                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "fbus inherit;fline inherit;"
                                in_terminal_properties = "real fbus;inherit fline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(fline-fbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7832, 8048
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7912, 8048
                            ]

                            port f_bus {
                                label = "f_bus"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port f_line {
                                label = "f_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port dF_threshold {
                                label = "dF_threshold"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7728, 8112
                            ]

                            connect "Relational operator1.in" "C function1.out" as Connection6
                            connect "Relational operator1.out" Locked as Connection8
                            connect "Relational operator1.in1" dF_threshold as Connection7
                            connect f_bus "C function1.fbus" as Connection4
                            connect f_line "C function1.fline" as Connection5
                        }
                        [
                            position = 8016, 8104
                            size = 112, 88
                        ]

                        component Subsystem "Voltage Comparator" {
                            layout = dynamic
                            component gen_product Product1 {
                            }
                            [
                                position = 7760, 8160
                            ]

                            component gen_c_function "C function1" {
                                in_terminal_dimensions_str = "Vbus inherit;Vline inherit;"
                                in_terminal_properties = "real Vbus;inherit Vline;"
                                no_feed_inputs = "[u\'\']"
                                no_feed_outputs = "[u\'\']"
                                out_terminal_dimensions_str = "out inherit;"
                                output_fnc = "/*Begin code section*/
out=fabs(Vline-Vbus);
/*End code section*/"
                            }
                            [
                                position = 7736, 8040
                            ]

                            component gen_gain Gain1 {
                                gain = "0.01"
                            }
                            [
                                position = 7680, 8200
                            ]

                            component gen_rel_op "Relational operator1" {
                                relational_op = "<="
                            }
                            [
                                position = 7856, 8048
                            ]

                            port V_bus {
                                label = "V_bus"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8016
                            ]

                            port V_line {
                                label = "V_line"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8080
                            ]

                            port Locked {
                                label = "locked"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 7928, 8048
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8152
                            ]

                            port dV_threshold {
                                label = "dV_threshold"
                                position = left:4
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 7600, 8200
                            ]

                            connect Gain1.in dV_threshold as Connection8
                            connect Product1.in1 Gain1.out as Connection7
                            connect Product1.out "Relational operator1.in1" as Connection9
                            connect Product1.in VRMSLL as Connection6
                            connect "Relational operator1.in" "C function1.out" as Connection2
                            connect "Relational operator1.out" Locked as Connection3
                            connect V_bus "C function1.Vbus" as Connection4
                            connect V_line "C function1.Vline" as Connection5
                        }
                        [
                            position = 8016, 7864
                            size = 112, 208
                        ]

                        port trip_or {
                            label = "trip_or"
                            position = left:8
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7792
                        ]

                        port mode_in {
                            label = "mode_in"
                            position = left:7
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8368, 7896
                        ]

                        port bool_R25 {
                            label = "bool_R25"
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9032, 8096
                        ]

                        port Va {
                            label = "Va"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7776
                        ]

                        port Vline_a {
                            label = "Vline_A"
                            position = left:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 7832
                        ]

                        port bus_freq {
                            label = "bus_freq"
                            position = left:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8080
                        ]

                        port line_freq {
                            label = "line_freq"
                            position = left:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7824, 8104
                        ]

                        port bus_wt {
                            label = "bus_wt"
                            position = left:5
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7776, 8248
                        ]

                        port line_wt {
                            label = "line_wt"
                            position = left:6
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7832, 8272
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = left:9
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7712, 8424
                        ]

                        tag Goto1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8056, 8400
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From2 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8128
                        ]

                        tag From3 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7944
                        ]

                        tag From1 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 8296
                        ]

                        tag Goto2 {
                            value = "dV_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8416
                            rotation = down
                            scale = -1, 1
                        ]

                        tag From4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 7896, 7888
                        ]

                        tag Goto3 {
                            value = "angle_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7912, 8432
                        ]

                        tag From5 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 7688
                        ]

                        tag Goto4 {
                            value = "dF_threshold"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 7984, 8448
                        ]

                        junction Junction4 sp
                        [
                            position = 7920, 7832
                        ]

                        junction Junction5 sp
                        [
                            position = 8536, 8104
                        ]

                        junction Junction23 sp
                        [
                            position = 7904, 7776
                        ]

                        connect "Bus Split1.in" relay_paramR25 as Connection69
                        connect Constant2.out "Relational operator1.in" as Connection1
                        connect "Deadbus fcn.Vbus" Junction23 as Connection103
                        connect "Deadbus fcn.out" "SR Flip Flop1.s_in" as Connection137
                        connect "Freq Comparator.Locked" "Logical operator3.in1" as Connection135
                        connect "Freq Comparator.f_line" line_freq as Connection133
                        connect From1 "Phase Comparator.angle_threshold" as Connection74
                        connect From2 "Freq Comparator.dF_threshold" as Connection79
                        connect From3 "Voltage Comparator.dV_threshold" as Connection80
                        connect From4 "Voltage Comparator.VRMSLL" as Connection81
                        connect From5 "Deadbus fcn.VRMSLL" as Connection90
                        connect Gain3.out "Freq Comparator.f_bus" as Connection132
                        connect Goto1 "Bus Split1.out" as Connection70
                        connect Goto2 "Bus Split1.out1" as Connection71
                        connect Goto3 "Bus Split1.out2" as Connection72
                        connect Goto4 "Bus Split1.out3" as Connection73
                        connect Junction23 Gain1.out as Connection16
                        connect Junction4 "Deadbus fcn.Vline" as Connection104
                        connect Junction4 Gain2.out as Connection21
                        connect Junction5 "Logical operator4.in1" as Connection22
                        connect "Logical operator3.out" Junction5 as Connection24
                        connect "Logical operator3.in2" "Phase Comparator.Locked" as Connection134
                        connect "Logical operator5.out" "Logical operator7.in" as Connection26
                        connect "Logical operator5.in1" "Relational operator1.out" as Connection27
                        connect "Logical operator5.in" trip_or as Connection28
                        connect "Logical operator7.in1" Junction5 as Connection29
                        connect "Logical operator7.out" "SR Flip Flop1.r_in" as Connection30
                        connect "Phase Comparator.wt_grid" bus_wt as Connection110
                        connect "RMS value1.out" Gain1.in as Connection93
                        connect "RMS value2.out" Gain2.in as Connection97
                        connect "Relational operator1.in1" mode_in as Connection36
                        connect "SR Flip Flop1.out" "Logical operator4.in" as Connection37
                        connect "SR Flip Flop1.out_n" Termination1.in as Connection38
                        connect Va "RMS value1.in" as Connection101
                        connect Vline_a "RMS value2.in" as Connection102
                        connect "Voltage Comparator.V_bus" Junction23 as Connection47
                        connect "Voltage Comparator.V_line" Junction4 as Connection48
                        connect "Voltage Comparator.Locked" "Logical operator3.in" as Connection136
                        connect bool_R25 "Logical operator4.out" as Connection138
                        connect bus_freq Gain3.in as Connection121
                        connect line_wt "Phase Comparator.wt_gen" as Connection111
                    }
                    [
                        position = 8888, 7800
                        size = 120, 232
                    ]

                    component Subsystem Relay_Param {
                        layout = dynamic
                        component src_constant dV_threshold {
                            execution_rate = "Ts"
                            value = "dV_threshold"
                        }
                        [
                            position = 8088, 7648
                        ]

                        component src_constant 27P_59P_tripDelay {
                            execution_rate = "Ts"
                            value = "R27P_R59P_tripDelay"
                        }
                        [
                            position = 8088, 7872
                        ]

                        component gen_bus_split "Bus Split1" {
                            outputs = "3"
                        }
                        [
                            position = 8104, 8192
                            rotation = down
                            scale = -1, -1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 9104, 7808
                            scale = 1, -1
                        ]

                        component src_constant angle_threshold {
                            execution_rate = "Ts"
                            value = "angle_threshold"
                        }
                        [
                            position = 8088, 7704
                        ]

                        component src_constant dF_threshold {
                            execution_rate = "Ts"
                            value = "dF_threshold"
                        }
                        [
                            position = 8088, 7760
                        ]

                        component src_constant VRMSLL {
                            execution_rate = "Ts"
                            value = "VRMSLL"
                        }
                        [
                            position = 8088, 7592
                        ]

                        component gen_bus_join "Bus Join1" {
                            inputs = "4"
                        }
                        [
                            position = 8296, 7800
                            rotation = right
                        ]

                        component src_constant Initial_status {
                            execution_rate = "Ts"
                            value = "Initial_status"
                        }
                        [
                            position = 8088, 7992
                        ]

                        component src_constant CT_primary {
                            execution_rate = "Ts"
                            value = "CT_primary"
                        }
                        [
                            position = 8088, 7928
                        ]

                        component Subsystem Reset {
                            layout = dynamic
                            component gen_logic_op or {
                                operator = "OR"
                            }
                            [
                                position = 8152, 8192
                            ]

                            component Subsystem detect_change {
                                layout = dynamic
                                component tm_delay "Unit Delay1" {
                                }
                                [
                                    position = 8144, 8200
                                ]

                                component gen_rel_op "Relational operator1" {
                                    relational_op = "!="
                                }
                                [
                                    position = 8240, 8192
                                ]

                                port Out1 {
                                    label = "Out"
                                    position = right:1
                                    kind = sp
                                    direction =  in
                                    sp_type {
                                        default = inherit
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8304, 8192
                                ]

                                port In3 {
                                    label = "In"
                                    position = left:2
                                    kind = sp
                                    direction =  out
                                    sp_type {
                                        default = auto
                                        readonly = True
                                    }
                                }
                                [
                                    position = 8032, 8200
                                ]

                                junction Junction1 sp
                                [
                                    position = 8080, 8200
                                ]

                                connect Junction1 In3 as Connection1
                                connect "Relational operator1.in" Junction1 as Connection2
                                connect "Relational operator1.out" Out1 as Connection3
                                connect "Unit Delay1.in" Junction1 as Connection4
                                connect "Unit Delay1.out" "Relational operator1.in1" as Connection5
                            }
                            [
                                position = 8248, 8192
                                size = 48, 48
                            ]

                            port reset {
                                label = "Reset"
                                position = right:2
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8336, 8152
                            ]

                            port op_mode {
                                label = "Op_mode"
                                position = right:1
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8344, 8240
                            ]

                            port "Reset in" {
                                label = "Reset in"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8168
                            ]

                            port "op_mode in" {
                                label = "op_mode in"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8064, 8224
                            ]

                            junction Junction1 sp
                            [
                                position = 8096, 8224
                            ]

                            connect Junction1 "op_mode in" as Connection1
                            connect detect_change.Out1 reset as Connection5
                            connect op_mode Junction1 as Connection6
                            connect or.in1 Junction1 as Connection3
                            connect or.in "Reset in" as Connection2
                            connect or.out detect_change.In3 as Connection4
                        }
                        [
                            position = 8280, 8192
                            rotation = down
                            scale = -1, -1
                            size = 104, 104
                        ]

                        component Subsystem Grid_Tied_param {
                            layout = dynamic
                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup1"
                            }
                            [
                                position = 8080, 7840
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType1"
                            }
                            [
                                position = 8240, 7880
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7904
                                rotation = right
                            ]

                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup1"
                            }
                            [
                                position = 8416, 7840
                                rotation = right
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial1"
                            }
                            [
                                position = 8200, 7840
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup1"
                            }
                            [
                                position = 8312, 7840
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup1"
                            }
                            [
                                position = 8120, 7880
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8552, 8040
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay1"
                            }
                            [
                                position = 8352, 7880
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7840
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7880
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7880
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8704, 8040
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8776, 7936
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 8872, 7728
                            size = 216, 104
                        ]

                        component Subsystem Islanded_param {
                            layout = dynamic
                            component src_constant 50P_pickup {
                                execution_rate = "Ts"
                                value = "R50P_pickup2"
                            }
                            [
                                position = 8400, 7856
                                rotation = right
                            ]

                            component src_constant 27P_pickup {
                                execution_rate = "Ts"
                                value = "R27P_pickup2"
                            }
                            [
                                position = 8120, 7888
                                rotation = right
                            ]

                            component gen_gain divide_sqrt3 {
                                gain = "1.0/np.sqrt(3.0)"
                            }
                            [
                                position = 8504, 7920
                                rotation = right
                            ]

                            component src_constant 59P_pickup {
                                execution_rate = "Ts"
                                value = "R59P_pickup2"
                            }
                            [
                                position = 8072, 7856
                                rotation = right
                            ]

                            component gen_bus_join "Bus Join1" {
                                inputs = "10"
                            }
                            [
                                position = 8544, 8048
                            ]

                            component src_constant 51P_timeDial {
                                execution_rate = "Ts"
                                value = "R51P_timeDial2"
                            }
                            [
                                position = 8192, 7856
                                rotation = right
                            ]

                            component src_constant 50P_tripDelay {
                                execution_rate = "Ts"
                                value = "R50P_tripDelay2"
                            }
                            [
                                position = 8352, 7888
                                rotation = right
                            ]

                            component src_constant 51P_curveType {
                                execution_rate = "Ts"
                                value = "R51P_curveType2"
                            }
                            [
                                position = 8240, 7888
                                rotation = right
                            ]

                            component src_constant 51P_pickup {
                                execution_rate = "Ts"
                                value = "R51P_pickup2"
                            }
                            [
                                position = 8296, 7856
                                rotation = right
                            ]

                            port VRMSLL {
                                label = "VRMSLL"
                                position = left:1
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8504, 7856
                                rotation = right
                            ]

                            port CT_primary {
                                label = "CT_primary"
                                position = left:3
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8448, 7888
                                rotation = right
                            ]

                            port 27P_59P_tripDelay {
                                label = "27P_59P_tripDelay"
                                position = left:2
                                kind = sp
                                direction =  out
                                sp_type {
                                    default = auto
                                    readonly = True
                                }
                            }
                            [
                                position = 8024, 7888
                                rotation = right
                            ]

                            port relay_param {
                                label = "relay_param"
                                position = right:auto
                                kind = sp
                                direction =  in
                                sp_type {
                                    default = inherit
                                    readonly = True
                                }
                            }
                            [
                                position = 8696, 8048
                            ]

                            comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">In bus join:</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in = VRMSLN</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in1 = CT_p</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in2 = IOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in3 = IOC_tripDelay</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in4 = TOC_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in5 = curveType</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in6 = timeDial</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in7 = UV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in8 = OV_pickup</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">in9 = UVOV_tripDelay</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                            [
                                position = 8744, 7928
                            ]

                            connect 27P_59P_tripDelay "Bus Join1.in9" as Connection11
                            connect 27P_pickup.out "Bus Join1.in7" as Connection6
                            connect 50P_pickup.out "Bus Join1.in2" as Connection1
                            connect 50P_tripDelay.out "Bus Join1.in3" as Connection2
                            connect 51P_curveType.out "Bus Join1.in5" as Connection4
                            connect 51P_pickup.out "Bus Join1.in4" as Connection3
                            connect 51P_timeDial.out "Bus Join1.in6" as Connection5
                            connect 59P_pickup.out "Bus Join1.in8" as Connection7
                            connect CT_primary "Bus Join1.in1" as Connection10
                            connect divide_sqrt3.out "Bus Join1.in" as Connection9
                            connect divide_sqrt3.in VRMSLL as Connection8
                            connect relay_param "Bus Join1.out" as Connection12
                        }
                        [
                            position = 9224, 8040
                            size = 216, 104
                        ]

                        port op_mode {
                            label = "op_mode"
                            position = right:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8160
                        ]

                        port reset {
                            label = "reset"
                            position = right:5
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8384, 8224
                        ]

                        port relay_paramR25 {
                            label = "relay_paramR25"
                            position = right:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8360, 7856
                        ]

                        port Initial_condition {
                            label = "Initial_condition"
                            position = right:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8192, 7992
                        ]

                        port from_Modbus {
                            label = "from_Modbus"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7992, 8192
                        ]

                        port relay_param {
                            label = "relay_param"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 9200, 7808
                        ]

                        tag From2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8616, 7728
                        ]

                        tag Goto2 {
                            value = "27P_59P_tripDelay"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7872
                        ]

                        tag Goto3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8192, 7928
                        ]

                        tag From4 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 9104, 7904
                            rotation = right
                            scale = 1, -1
                        ]

                        tag From1 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7696
                        ]

                        tag From3 {
                            value = "CT_primary"
                            scope = local
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8536, 7760
                        ]

                        tag Goto4 {
                            value = "VRMSLL"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8208, 7544
                        ]

                        tag Goto1 {
                            value = "protection_mode"
                            scope = local
                            kind = sp
                            direction = in
                        }
                        [
                            position = 8232, 8280
                        ]

                        junction Junction1 sp
                        [
                            position = 8152, 7592
                        ]

                        junction Junction2 sp
                        [
                            position = 8736, 7696
                        ]

                        junction Junction3 sp
                        [
                            position = 8712, 7728
                        ]

                        junction Junction4 sp
                        [
                            position = 8688, 7760
                        ]

                        connect "Bus Join1.in" Junction1 as Connection54
                        connect "Bus Join1.in2" angle_threshold.out as Connection48
                        connect "Bus Join1.in3" dF_threshold.out as Connection49
                        connect "Bus Join1.in1" dV_threshold.out as Connection47
                        connect "Bus Split1.out1" "Reset.Reset in" as Connection75
                        connect "Bus Split1.in" from_Modbus as Connection42
                        connect From1 Junction2 as Connection60
                        connect From2 Junction3 as Connection63
                        connect From3 Junction4 as Connection66
                        connect From4 "Signal switch1.in2" as Connection71
                        connect Goto1 "Bus Split1.out2" as Connection45
                        connect Goto2 27P_59P_tripDelay.out as Connection51
                        connect Goto3 CT_primary.out as Connection52
                        connect Goto4 Junction1 as Connection56
                        connect Initial_condition Initial_status.out as Connection53
                        connect Islanded_param.VRMSLL Junction2 as Connection62
                        connect Islanded_param.27P_59P_tripDelay Junction3 as Connection65
                        connect Islanded_param.CT_primary Junction4 as Connection68
                        connect Junction1 VRMSLL.out as Connection55
                        connect Junction2 Grid_Tied_param.VRMSLL as Connection61
                        connect Junction3 Grid_Tied_param.27P_59P_tripDelay as Connection64
                        connect Junction4 Grid_Tied_param.CT_primary as Connection67
                        connect "Reset.op_mode in" "Bus Split1.out" as Connection76
                        connect Reset.op_mode op_mode as Connection43
                        connect Reset.reset reset as Connection44
                        connect "Signal switch1.in1" Grid_Tied_param.relay_param as Connection73
                        connect "Signal switch1.in" Islanded_param.relay_param as Connection72
                        connect relay_param "Signal switch1.out" as Connection74
                        connect relay_paramR25 "Bus Join1.out" as Connection50
                    }
                    [
                        position = 8344, 7976
                        size = 168, 160
                    ]

                    port OUTPUT {
                        label = "OUTPUT"
                        position = bottom:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9704, 8056
                    ]

                    port Ia {
                        label = "Ia"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7816
                    ]

                    port Ib {
                        label = "Ib"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7888
                    ]

                    port Ic {
                        label = "Ic"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 7960
                    ]

                    port Va {
                        label = "Va"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8032
                    ]

                    port Vb {
                        label = "Vb"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8104
                    ]

                    port Vc {
                        label = "Vc"
                        position = left:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8176
                    ]

                    port Vline_a {
                        label = "Vline_A"
                        position = left:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8248
                    ]

                    port faults_status {
                        label = "Fault_status"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8272
                    ]

                    port TO_MODBUS {
                        label = "To_Modbus"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8080
                    ]

                    port Vline_b {
                        label = "Vline_B"
                        position = left:8
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8320
                    ]

                    port Vline_c {
                        label = "Vline_C"
                        position = left:9
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 6592, 8392
                    ]

                    port cb_state {
                        label = "cb_state"
                        position = left:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7312, 8624
                    ]

                    port pf_states {
                        label = "pf_state"
                        position = right:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 9304, 8416
                        scale = 1, -1
                    ]

                    port from_Modbus {
                        label = "From Modbus"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 7976
                    ]

                    tag From22 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8288
                    ]

                    tag Goto3 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8336
                    ]

                    tag From7 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9072, 8224
                        rotation = down
                        scale = -1, -1
                    ]

                    tag Goto34 {
                        value = "F1_CB7_BREAKER"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 7816
                        hide_name = True
                    ]

                    tag From4 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7448, 8464
                    ]

                    tag From30 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9024, 8408
                    ]

                    tag Goto11 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7376, 8256
                    ]

                    tag From23 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8336
                    ]

                    tag Goto27 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7976
                        scale = 1, -1
                    ]

                    tag From25 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8360
                    ]

                    tag Goto26 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8296, 8152
                    ]

                    tag Goto31 {
                        value = "F1_CB7_P_REACTIVE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 7744
                        hide_name = True
                    ]

                    tag From11 {
                        value = "R27"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8880, 8256
                    ]

                    tag From10 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8272
                    ]

                    tag Goto21 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 7688
                        rotation = left
                    ]

                    tag Goto8 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8216
                    ]

                    tag From26 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8432
                    ]

                    tag Goto30 {
                        value = "F1_CB7_P_REAL"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 7720
                        hide_name = True
                    ]

                    tag Goto14 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7784
                    ]

                    tag Goto10 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8272
                    ]

                    tag From13 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8952, 8320
                    ]

                    tag Goto33 {
                        value = "F1_CB7_FREQUENCY"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 7792
                        hide_name = True
                    ]

                    tag From36 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8216
                    ]

                    tag From2 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7480, 8288
                    ]

                    tag Goto15 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7856
                    ]

                    tag Goto12 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7224, 8256
                    ]

                    tag From29 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8032
                    ]

                    tag Goto4 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8424
                    ]

                    tag From19 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7824
                    ]

                    tag Goto2 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8248
                    ]

                    tag Goto22 {
                        value = "Vc_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7248, 7832
                        rotation = left
                    ]

                    tag Goto23 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 8000
                        scale = 1, -1
                    ]

                    tag Goto20 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7232, 7760
                        rotation = left
                    ]

                    tag From21 {
                        value = "Ib"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8264
                    ]

                    tag Goto5 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9088, 7752
                    ]

                    tag From34 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7896
                    ]

                    tag From1 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7600, 8280
                        rotation = right
                    ]

                    tag Goto17 {
                        value = "Ib_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7104, 7760
                        rotation = left
                    ]

                    tag From31 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9096, 8424
                    ]

                    tag Goto9 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6744, 8000
                    ]

                    tag From33 {
                        value = "initial_condition"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9120, 8080
                    ]

                    tag From5 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7520, 8504
                    ]

                    tag From27 {
                        value = "Vb_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8408
                    ]

                    tag From28 {
                        value = "Va_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8384
                    ]

                    tag Goto19 {
                        value = "Ic_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 7832
                        rotation = left
                    ]

                    tag From20 {
                        value = "Ia"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8160, 8240
                    ]

                    tag From24 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8312
                    ]

                    tag Goto7 {
                        value = "Reset"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 8024
                        scale = 1, -1
                    ]

                    tag From6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7584, 8560
                        rotation = right
                    ]

                    tag Goto24 {
                        value = "lag_lead"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7216, 8304
                    ]

                    tag Goto32 {
                        value = "F1_CB7_VOLTAGE"
                        scope = global
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7440, 7768
                        hide_name = True
                    ]

                    tag From32 {
                        value = "enable"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9200, 8104
                    ]

                    tag Goto13 {
                        value = "line_wt"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7296, 8288
                    ]

                    tag Goto18 {
                        value = "Ia_rms"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7088, 7688
                        rotation = left
                    ]

                    tag From12 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9032, 8288
                    ]

                    tag From17 {
                        value = "bus_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7752
                    ]

                    tag From14 {
                        value = "Va"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7704
                    ]

                    tag From9 {
                        value = "R25"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8992, 8240
                        rotation = down
                        scale = -1, 1
                    ]

                    tag Goto6 {
                        value = "trip_cmd"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 9640, 8096
                    ]

                    tag From15 {
                        value = "Vline_a"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7728
                    ]

                    tag From18 {
                        value = "bus_wt"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 7800
                    ]

                    tag Goto28 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8496, 7928
                        scale = 1, -1
                    ]

                    tag Goto29 {
                        value = "relay_paramR25"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8576, 7952
                        scale = 1, -1
                    ]

                    tag Goto1 {
                        value = "R50"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8608, 8160
                    ]

                    tag Goto25 {
                        value = "exp_imp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 7120, 8320
                    ]

                    tag Goto16 {
                        value = "Ic"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 6712, 7928
                    ]

                    tag From16 {
                        value = "line_freq"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8528, 7776
                    ]

                    tag From8 {
                        value = "R59"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9104, 8304
                    ]

                    tag From3 {
                        value = "R51"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7392, 8384
                    ]

                    tag From35 {
                        value = "relay_param"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8232, 8456
                    ]

                    tag From37 {
                        value = "op_mode"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8760, 7848
                    ]

                    junction Junction51 sp
                    [
                        position = 8720, 8056
                    ]

                    junction Junction100 sp
                    [
                        position = 8536, 8192
                    ]

                    junction Junction101 sp
                    [
                        position = 8536, 8280
                    ]

                    junction Junction104 sp
                    [
                        position = 9016, 7800
                    ]

                    junction Junction105 sp
                    [
                        position = 9584, 8056
                    ]

                    junction Junction106 sp
                    [
                        position = 7368, 8624
                    ]

                    junction Junction108 sp
                    [
                        position = 6688, 8248
                    ]

                    junction Junction109 sp
                    [
                        position = 6696, 8032
                    ]

                    junction Junction110 sp
                    [
                        position = 7304, 8240
                    ]

                    junction Junction111 sp
                    [
                        position = 6640, 7816
                    ]

                    junction Junction112 sp
                    [
                        position = 6640, 7888
                    ]

                    junction Junction113 sp
                    [
                        position = 6640, 7960
                    ]

                    junction Junction114 sp
                    [
                        position = 7088, 7984
                    ]

                    junction Junction115 sp
                    [
                        position = 7104, 8000
                    ]

                    junction Junction116 sp
                    [
                        position = 7120, 8016
                    ]

                    junction Junction117 sp
                    [
                        position = 7216, 8032
                    ]

                    junction Junction118 sp
                    [
                        position = 7232, 8048
                    ]

                    junction Junction119 sp
                    [
                        position = 7248, 8064
                    ]

                    junction Junction120 sp
                    [
                        position = 8536, 8368
                    ]

                    junction Junction121 sp
                    [
                        position = 8536, 8456
                    ]

                    junction Junction122 sp
                    [
                        position = 8216, 8192
                    ]

                    junction Junction123 sp
                    [
                        position = 7264, 8176
                    ]

                    junction Junction124 sp
                    [
                        position = 7280, 8192
                    ]

                    junction Junction125 sp
                    [
                        position = 7152, 8032
                    ]

                    junction Junction126 sp
                    [
                        position = 7328, 8240
                    ]

                    junction Junction127 sp
                    [
                        position = 7336, 8624
                    ]

                    junction Junction128 sp
                    [
                        position = 7280, 7720
                    ]

                    junction Junction129 sp
                    [
                        position = 7312, 7744
                    ]

                    comment Comment5 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">pf_states </p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8400
                    ]

                    comment Comment2 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52A</p></body></html> ENDCOMMENT 
                    [
                        position = 7400, 8568
                    ]

                    comment Comment3 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">52B</p></body></html> ENDCOMMENT 
                    [
                        position = 7432, 8720
                    ]

                    comment Comment4 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Status</p></body></html> ENDCOMMENT 
                    [
                        position = 9336, 8256
                    ]

                    connect "Bus Join1.in20" "CALC FROM MEASUREMENTS.S" as Connection144
                    connect "Bus Join1.in5" "CALC FROM MEASUREMENTS.Ic_phase" as Connection133
                    connect "Bus Join1.in17" "CALC FROM MEASUREMENTS.Vc_phase" as Connection140
                    connect "Bus Join1.in3" "CALC FROM MEASUREMENTS.Ib_phase" as Connection132
                    connect "Bus Join1.in15" "CALC FROM MEASUREMENTS.Vb_phase" as Connection135
                    connect "Bus Join1.in13" "CALC FROM MEASUREMENTS.Va_phase" as Connection134
                    connect "Bus Join1.in21" "CALC FROM MEASUREMENTS.pf" as Connection149
                    connect "Bus Join1.in6" Junction114 as Connection268
                    connect "Bus Join1.in9" Junction117 as Connection283
                    connect "Bus Join1.in10" Junction118 as Connection286
                    connect "Bus Join1.in18" Junction123 as Connection382
                    connect "Bus Join1.in19" Junction124 as Connection385
                    connect "Bus Join1.in22" Junction126 as Connection391
                    connect "CALC FROM MEASUREMENTS.Ia_phase" "Bus Join1.in1" as Connection131
                    connect "CALC FROM MEASUREMENTS.Vb_mag" "Bus Join1.in14" as Connection1
                    connect "CALC FROM MEASUREMENTS.Ib_mag" "Bus Join1.in2" as Connection6
                    connect "CALC FROM MEASUREMENTS.Vc_mag" "Bus Join1.in16" as Connection4
                    connect "CALC FROM MEASUREMENTS.Ic_mag" "Bus Join1.in4" as Connection2
                    connect "CALC FROM MEASUREMENTS.Ia_mag" "Bus Join1.in" as Connection5
                    connect "CALC FROM MEASUREMENTS.Va_mag" "Bus Join1.in12" as Connection3
                    connect "CALC FROM MEASUREMENTS.line_freq" Goto10 as Connection224
                    connect "CALC FROM MEASUREMENTS.line_wt" Goto13 as Connection245
                    connect "CALC FROM MEASUREMENTS.Vline_a" Junction108 as Connection217
                    connect "CALC FROM MEASUREMENTS.Va" Junction109 as Connection218
                    connect "CALC FROM MEASUREMENTS.Ia" Junction111 as Connection257
                    connect "CALC FROM MEASUREMENTS.Ib" Junction112 as Connection256
                    connect "CALC FROM MEASUREMENTS.Ic" Junction113 as Connection258
                    connect "CALC FROM MEASUREMENTS.Ib_rms" Junction115 as Connection271
                    connect "CALC FROM MEASUREMENTS.Ic_rms" Junction116 as Connection274
                    connect "CALC FROM MEASUREMENTS.Vc_rms" Junction119 as Connection289
                    connect "Control Panel Input1.out" Junction122 as Connection381
                    connect From1 Sum1.in as Connection167
                    connect From10 bitwise_faults.R50 as Connection197
                    connect From11 bitwise_faults.R27 as Connection195
                    connect From12 bitwise_faults.R51 as Connection199
                    connect From13 bitwise_faults.Reset as Connection210
                    connect From14 "Relay 25-Sync Check1.Va" as Connection219
                    connect From15 "Relay 25-Sync Check1.Vline_a" as Connection220
                    connect From16 "Relay 25-Sync Check1.line_freq" as Connection225
                    connect From17 "Relay 25-Sync Check1.bus_freq" as Connection238
                    connect From18 "Relay 25-Sync Check1.bus_wt" as Connection244
                    connect From19 "Relay 25-Sync Check1.line_wt" as Connection246
                    connect From2 Gain1.in as Connection168
                    connect From20 R50512761.Iinst_a as Connection336
                    connect From21 R50512761.Iinst_b as Connection337
                    connect From22 R50512761.Iinst_c as Connection338
                    connect From23 R50512761.Irms_b as Connection340
                    connect From24 R50512761.Irms_a as Connection339
                    connect From25 R50512761.Irms_c as Connection341
                    connect From26 R50512761.Vrms_c as Connection344
                    connect From27 R50512761.Vrms_b as Connection343
                    connect From28 R50512761.Vrms_a as Connection342
                    connect From29 "State Condition Mng.op_mode" as Connection309
                    connect From3 Gain4.in as Connection169
                    connect From30 "pf bitwise.exp_imp" as Connection313
                    connect From31 "pf bitwise.lag_lead" as Connection312
                    connect From32 "State Condition Mng.enable" as Connection318
                    connect From33 "State Condition Mng.initial_condition" as Connection319
                    connect From34 "Relay 25-Sync Check1.relay_paramR25" as Connection320
                    connect From35 R50512761.relay_param as Connection321
                    connect From36 R50512761.Reset as Connection335
                    connect From37 "Relay 25-Sync Check1.mode_in" as Connection334
                    connect From4 Gain5.in as Connection171
                    connect From5 Gain6.in as Connection173
                    connect From7 bitwise_faults.Status as Connection203
                    connect From8 bitwise_faults.R59 as Connection201
                    connect From9 bitwise_faults.R25 as Connection193
                    connect Gain1.out Sum1.in1 as Connection21
                    connect Gain4.out Sum1.in2 as Connection170
                    connect Gain5.out Sum1.in3 as Connection172
                    connect Gain6.out Sum1.in4 as Connection174
                    connect Gain7.out Sum3.in1 as Connection180
                    connect Gain8.in Junction106 as Connection186
                    connect Gain8.out Sum3.in2 as Connection183
                    connect Goto1 Junction100 as Connection152
                    connect Goto11 Junction110 as Connection242
                    connect Goto12 "CALC FROM MEASUREMENTS.bus_wt" as Connection243
                    connect Goto14 Junction111 as Connection249
                    connect Goto15 Junction112 as Connection252
                    connect Goto16 Junction113 as Connection255
                    connect Goto17 Junction115 as Connection273
                    connect Goto19 Junction116 as Connection276
                    connect Goto2 Junction101 as Connection155
                    connect Goto22 Junction119 as Connection367
                    connect Goto23 Relay_Param.op_mode as Connection329
                    connect Goto24 "CALC FROM MEASUREMENTS.Lag Lead" as Connection310
                    connect Goto25 "CALC FROM MEASUREMENTS.Export Import" as Connection311
                    connect Goto27 Relay_Param.Initial_condition as Connection331
                    connect Goto28 Relay_Param.relay_param as Connection333
                    connect Goto29 Relay_Param.relay_paramR25 as Connection332
                    connect Goto30 Junction128 as Connection399
                    connect Goto31 Junction129 as Connection402
                    connect Goto32 normalize.out as Connection397
                    connect Goto33 Junction126 as Connection393
                    connect Goto34 Junction127 as Connection396
                    connect Goto4 Junction121 as Connection298
                    connect Goto5 Junction104 as Connection164
                    connect Goto6 Junction105 as Connection178
                    connect Goto7 Relay_Param.reset as Connection330
                    connect Goto8 Junction108 as Connection213
                    connect Goto9 Junction109 as Connection216
                    connect Ia Junction111 as Connection247
                    connect Ib Junction112 as Connection250
                    connect Ic Junction113 as Connection253
                    connect Junction100 "Logical operator1.in" as Connection196
                    connect Junction101 "Logical operator1.in1" as Connection198
                    connect Junction101 R50512761.trip_51 as Connection154
                    connect Junction104 "State Condition Mng.R25" as Connection303
                    connect Junction105 "Unit Delay4.out" as Connection202
                    connect Junction106 not.in as Connection185
                    connect Junction110 "CALC FROM MEASUREMENTS.bus_freq" as Connection241
                    connect Junction114 "CALC FROM MEASUREMENTS.Ia_rms" as Connection269
                    connect Junction114 Goto18 as Connection355
                    connect Junction115 "Bus Join1.in7" as Connection272
                    connect Junction116 "Bus Join1.in8" as Connection275
                    connect Junction117 Goto21 as Connection365
                    connect Junction117 Junction125 as Connection388
                    connect Junction118 "CALC FROM MEASUREMENTS.Vb_rms" as Connection287
                    connect Junction118 Goto20 as Connection366
                    connect Junction119 "Bus Join1.in11" as Connection290
                    connect Junction120 Goto3 as Connection296
                    connect Junction121 R50512761.trip_59 as Connection299
                    connect Junction122 Goto26 as Connection380
                    connect Junction123 "CALC FROM MEASUREMENTS.P" as Connection383
                    connect Junction124 "CALC FROM MEASUREMENTS.Q" as Connection386
                    connect Junction125 "CALC FROM MEASUREMENTS.Va_rms" as Connection389
                    connect Junction126 Junction110 as Connection392
                    connect Junction127 Junction106 as Connection395
                    connect Junction128 Junction123 as Connection400
                    connect Junction129 Junction124 as Connection403
                    connect Junction51 "State Condition Mng.Trip_in" as Connection302
                    connect "Logical operator1.in2" Junction120 as Connection297
                    connect "Logical operator1.in3" Junction121 as Connection300
                    connect "Logical operator1.out" Junction51 as Connection79
                    connect OUTPUT Junction105 as Connection176
                    connect P.in Junction128 as Connection401
                    connect Q.in Junction129 as Connection404
                    connect R50512761.trip_50 Junction100 as Connection150
                    connect R50512761.trip_27 Junction120 as Connection295
                    connect R50512761.Enable Junction122 as Connection379
                    connect "Relay 25-Sync Check1.bool_R25" Junction104 as Connection162
                    connect "Relay 25-Sync Check1.trip_or" Junction51 as Connection94
                    connect Sum3.in From6 as Connection179
                    connect Sum3.out "Unit Delay5.in" as Connection190
                    connect TO_MODBUS "Bus Join1.out" as Connection101
                    connect "Unit Delay2.out" "Bus Join1.in23" as Connection175
                    connect "Unit Delay2.in" Sum1.out as Connection104
                    connect "Unit Delay4.in" "State Condition Mng.trip_out" as Connection304
                    connect "Unit Delay5.out" "Bus Join1.in24" as Connection191
                    connect Va Junction109 as Connection214
                    connect Vb "CALC FROM MEASUREMENTS.Vb" as Connection108
                    connect Vc "CALC FROM MEASUREMENTS.Vc" as Connection109
                    connect Vline_a Junction108 as Connection211
                    connect Vline_b "CALC FROM MEASUREMENTS.Vline_b" as Connection111
                    connect Vline_c "CALC FROM MEASUREMENTS.Vline_c" as Connection112
                    connect cb_state Junction127 as Connection394
                    connect faults_status bitwise_faults.fault_status as Connection368
                    connect from_Modbus Relay_Param.from_Modbus as Connection328
                    connect normalize.in Junction125 as Connection398
                    connect not.out Gain7.in as Connection181
                    connect "pf bitwise.pf_states" pf_states as Connection369

                    CT_primary = "1200.0"
                    R27P_R59P_tripDelay = "2"
                    R27P_pickup1 = "0.7"
                    R27P_pickup2 = "0.5"
                    R50P_tripDelay2 = "0.0"
                    R51P_curveType2 = "1.0"
                    R51P_pickup1 = "0.1"
                    R51P_pickup2 = "0.1"
                    R51P_timeDial2 = "1.0"
                    R59P_pickup1 = "1.2"
                    R59P_pickup2 = "1.2"

                    mask {
                        description = "This block implements the relay SEL 787 with protective functions 25 (synchronism check), 27 (Under Voltage), 50 (Instantaneous Overcurrent), 51 (Time Overcurrent) and 59 (Overvoltage). 
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            The relay outputs to Modbus are: 0 - Ia_mag; 1 - Ia_phase; 2 - Ib_mag; 3 - Ib_phase; 4 - Ic_mag; 5 - Ic_phase; 6 - Ia_rms; 7 - Ib_rms; 8 - Ic_rms; 9 - Va_rms; 10 - Vb_rms; 11 - Vc_rms; 12 - Va_mag; 13 - Va_phase; 14 - Vb_mag; 15 - Vb_phase; 16 - Vc_mag; 17 - Vc_phase; 18 - P; 19 - Q; 20 - S; 21 - pf; 22 - Bus_freq; 23 - protection functions status; 24 - Circuit Breaker status.

he relay inputs from Modbus are: 2001 - op_mode; 2002 - Reset; 2003 - protection_mode.

he trip pickups for functions 50 and 51 are defined as currents in the secondary of the current transformer. The secondary ot the CT has 5 turns."

                        VRMSLL {
                            label = "Line to Line RMS voltage"
                            widget = edit
                            type = generic
                            default_value = "13800.0"
                            unit = "V"
                            group = "Base Parameters"
                        }

                        dV_threshold {
                            label = "Voltage deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "5.0"
                            unit = "%"
                            group = "Base Parameters"
                        }

                        angle_threshold {
                            label = "Angle deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "12.0"
                            unit = "degree"
                            group = "Base Parameters"
                        }

                        dF_threshold {
                            label = "Frequency deviation threshold"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Hz"
                            group = "Base Parameters"
                        }

                        R27P_R59P_tripDelay {
                            label = "R27 UV and R59 OV trip delay"
                            widget = edit
                            type = generic
                            default_value = "0.5"
                            unit = "Sec"
                            group = "Base Parameters"
                        }

                        CT_primary {
                            label = "CT primary turns number"
                            widget = edit
                            type = generic
                            default_value = "600"
                            group = "Base Parameters"
                        }

                        Initial_status {
                            label = "Initial relay status"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "Base Parameters"
                        }

                        R50P_pickup1 {
                            label = "R50 IOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R50P_tripDelay1 {
                            label = "R50 IOC trip delay 1"
                            widget = edit
                            type = generic
                            default_value = "0"
                            unit = "sec"
                            group = "GridTied Parameters"
                        }

                        R51P_pickup1 {
                            label = "R51 TOC trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.8"
                            unit = "Amp sec"
                            group = "GridTied Parameters"
                        }

                        R51P_curveType1 {
                            label = "R51 TOC curve type 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R51P_timeDial1 {
                            label = "R51 TOC time dial 1"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            group = "GridTied Parameters"
                        }

                        R27P_pickup1 {
                            label = "R27 UV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R59P_pickup1 {
                            label = "R59 OV trip pickup 1"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "GridTied Parameters"
                        }

                        R50P_pickup2 {
                            label = "R50 IOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "20.0"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R50P_tripDelay2 {
                            label = "R50 IOC trip delay 2"
                            widget = edit
                            type = generic
                            default_value = "1.0"
                            unit = "sec"
                            group = "Islanded Parameters"
                        }

                        R51P_pickup2 {
                            label = "R51 TOC trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.7"
                            unit = "Amp sec"
                            group = "Islanded Parameters"
                        }

                        R51P_curveType2 {
                            label = "R51 TOC curve type 2"
                            widget = edit
                            type = generic
                            default_value = "2.0"
                            group = "Islanded Parameters"
                        }

                        R51P_timeDial2 {
                            label = "R51 TOC time dial 2"
                            widget = edit
                            type = generic
                            default_value = "3.0"
                            group = "Islanded Parameters"
                        }

                        R27P_pickup2 {
                            label = "R27 UV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "0.9"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        R59P_pickup2 {
                            label = "R59 OV trip pickup 2"
                            widget = edit
                            type = generic
                            default_value = "1.1"
                            unit = "pu"
                            group = "Islanded Parameters"
                        }

                        CODE open
                            from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                        
                            dialog = RegularComponentPropertiesDialog(
                                component=component,
                                property_container=component.masks[-1],
                                current_diagram=current_diagram
                            )
                            dialog.exec_()
                            
                        ENDCODE
                    }
                }
                [
                    position = 7952, 8168
                    size = 152, 240
                ]

                component "core/ModBus Device" "ModBus Device1" {
                    configuration = "configF1_CB7"
                    execution_rate = "Ts"
                }
                [
                    position = 8272, 8000
                    size = 184, 184
                ]

                port Brk_cmd {
                    label = "Brk_cmd"
                    position = bottom:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7792, 8496
                    rotation = right
                ]

                port IABC {
                    label = "IABC"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 7936
                ]

                port VABC_grid {
                    label = "VABC_grid"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7664, 7936
                ]

                port VABC_load {
                    label = "VABC_load"
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7536, 7936
                ]

                junction Junction1391 sp
                [
                    position = 8120, 7928
                ]

                junction Junction1392 sp
                [
                    position = 8120, 7976
                ]

                junction Junction1393 sp
                [
                    position = 7952, 8344
                ]

                junction Junction1396 sp
                [
                    position = 7792, 8448
                ]

                junction Junction1397 sp
                [
                    position = 7648, 8344
                ]

                comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Reset the relay when input is 1</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Operation Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 1 force the breaker closed</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Op_mode == 0 turns on logic based operation</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Protection Mode:</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 1 use islanded parameters</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">protect_mode == 0 use grid tied parameters</p><p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><br /></p></body></html> ENDCOMMENT 
                [
                    position = 7968, 8328
                ]

                connect Brk_cmd Junction1396 as Connection899
                connect "Bus Split1.in" IABC as Connection907
                connect "Bus Split1.out" SEL_787.Ia as Connection908
                connect "Bus Split1.out1" SEL_787.Ib as Connection909
                connect "Bus Split1.out2" SEL_787.Ic as Connection910
                connect "Bus Split2.out" SEL_787.Va as Connection912
                connect "Bus Split2.out1" SEL_787.Vb as Connection913
                connect "Bus Split2.out2" SEL_787.Vc as Connection914
                connect "Bus Split3.out2" SEL_787.Vline_c as Connection930
                connect "Bus Split3.out" SEL_787.Vline_a as Connection928
                connect "Bus Split3.out1" SEL_787.Vline_b as Connection929
                connect CB_state.in Junction1397 as Connection905
                connect Constant2.out "Signal switch1.in1" as Connection880
                connect Delay1.out "Signal switch1.in" as Connection2
                connect Junction1391 Constant1.out as Connection852
                connect Junction1391 "ModBus Device1.coil_in" as Connection313
                connect Junction1392 Junction1391 as Connection314
                connect Junction1393 Delay1.in as Connection867
                connect Junction1396 "Signal switch1.out" as Connection902
                connect Junction1397 Junction1396 as Connection904
                connect "ModBus Device1.discrete_in" Junction1392 as Connection467
                connect "ModBus Device1.holding_in" Junction1392 as Connection466
                connect "ModBus Device1.holding_out" SEL_787.from_Modbus as Connection932
                connect "ModBus Device1.coil_out" Term3.in as Connection854
                connect SEL_787.OUTPUT Junction1393 as Connection868
                connect SEL_787.cb_state Junction1397 as Connection903
                connect SEL_787.TO_MODBUS "ModBus Device1.reg_in" as Connection931
                connect SEL_787.pf_states Term4.in as Connection897
                connect "Signal switch1.in2" Junction1393 as Connection866
                connect Term5.in SEL_787.faults_status as Connection870
                connect VABC_grid "Bus Split2.in" as Connection924
                connect VABC_load "Bus Split3.in" as Connection925
            }
            [
                position = 7992, 8200
                rotation = right
                scale = -1, 1
                size = 136, 72
            ]

            component Subsystem Meas2 {
                layout = dynamic
                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8256
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8320
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8192
                    rotation = right
                    size = 64, 32
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7960, 8120
                    rotation = left
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7480, 8304
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7400, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7400, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7400, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7960, 8064
                    rotation = left
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1470 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7464, 7928
                ]

                junction Junction1474 pe
                [
                    position = 7480, 8024
                ]

                junction Junction1475 pe
                [
                    position = 7496, 8120
                ]

                junction Junction1476 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1473 as Connection401
                connect B Junction1474 as Connection404
                connect C Junction1475 as Connection407
                connect Junction1470 VA.p_node as Connection389
                connect Junction1471 b as Connection392
                connect Junction1472 VC.p_node as Connection395
                connect Junction1473 Junction1470 as Connection402
                connect Junction1474 Junction1471 as Connection405
                connect Junction1475 Junction1472 as Connection408
                connect Junction1476 Junction1421 as Connection411
                connect V "Bus Join1.out" as Connection385
                connect VA.out "Bus Join1.in" as Connection397
                connect VA.n_node Junction1421 as Connection237
                connect VB.out "Bus Join1.in1" as Connection398
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1471 as Connection391
                connect VC.out "Bus Join1.in2" as Connection399
                connect VC.n_node Junction1476 as Connection410
                connect a Junction1470 as Connection388
                connect c Junction1472 as Connection394
                connect res_for_meas.P1 Junction1473 as Connection403
                connect res_for_meas.P2 Junction1474 as Connection406
                connect res_for_meas.P3 Junction1475 as Connection409
                connect res_for_meas.P4 Junction1476 as Connection412
            }
            [
                position = 8144, 8312
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component Subsystem Meas1 {
                layout = dynamic
                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7368, 7928
                ]

                component "core/Voltage Measurement" VC {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7568, 8352
                    rotation = right
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7936, 8168
                    rotation = left
                ]

                component gen_bus_join "Bus Join2" {
                    inputs = "3"
                }
                [
                    position = 7576, 7784
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7496, 8120
                ]

                component "core/Voltage Measurement" VB {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7648, 8288
                    rotation = right
                ]

                component "core/Voltage Measurement" VA {
                    addr = "267"
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7728, 8224
                    rotation = right
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7432, 8024
                ]

                component Subsystem res_for_meas {
                    layout = dynamic
                    component pas_resistor R1 {
                        resistance = "1e5"
                    }
                    [
                        position = 8136, 8192
                        rotation = right
                    ]

                    component pas_resistor R2 {
                        resistance = "1e5"
                    }
                    [
                        position = 8192, 8192
                        rotation = right
                    ]

                    component pas_resistor R3 {
                        resistance = "1e5"
                    }
                    [
                        position = 8248, 8192
                        rotation = right
                    ]

                    port P1 {
                        position = top:1
                        kind = pe
                    }
                    [
                        position = 8136, 8112
                        rotation = right
                    ]

                    port P2 {
                        position = top:2
                        kind = pe
                    }
                    [
                        position = 8192, 8112
                        rotation = right
                    ]

                    port P3 {
                        position = top:3
                        kind = pe
                    }
                    [
                        position = 8248, 8112
                        rotation = right
                    ]

                    port P4 {
                        position = bottom:1
                        kind = pe
                    }
                    [
                        position = 8192, 8272
                        rotation = left
                    ]

                    junction Junction1 pe
                    [
                        position = 8192, 8248
                    ]

                    junction Junction2 pe
                    [
                        position = 8192, 8240
                    ]

                    connect Junction1 P4 as Connection8
                    connect Junction2 Junction1 as Connection11
                    connect R1.n_node Junction1 as Connection7
                    connect R1.p_node P1 as Connection1
                    connect R2.n_node Junction2 as Connection10
                    connect R2.p_node P2 as Connection6
                    connect R3.n_node Junction2 as Connection12
                    connect R3.p_node P3 as Connection2
                }
                [
                    position = 7320, 8216
                    size = 64, 48
                ]

                port A {
                    position = left:1
                    kind = pe
                }
                [
                    position = 7240, 7928
                ]

                port B {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7240, 8024
                ]

                port C {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7240, 8120
                ]

                port a {
                    label = "a"
                    position = right:1
                    kind = pe
                }
                [
                    position = 7800, 7928
                    rotation = down
                ]

                port b {
                    label = "b"
                    position = right:2
                    kind = pe
                }
                [
                    position = 7800, 8024
                    rotation = down
                ]

                port c {
                    label = "c"
                    position = right:3
                    kind = pe
                }
                [
                    position = 7800, 8120
                    rotation = down
                ]

                port V {
                    label = "V"
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7936, 8112
                    rotation = left
                ]

                port I {
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7648, 7784
                ]

                junction Junction1421 pe
                [
                    position = 7648, 8432
                ]

                junction Junction1466 pe
                [
                    position = 7728, 7928
                ]

                junction Junction1467 pe
                [
                    position = 7648, 8024
                ]

                junction Junction1468 pe
                [
                    position = 7568, 8120
                ]

                junction Junction1470 pe
                [
                    position = 7304, 7928
                ]

                junction Junction1471 pe
                [
                    position = 7320, 8024
                ]

                junction Junction1472 pe
                [
                    position = 7336, 8120
                ]

                junction Junction1473 pe
                [
                    position = 7568, 8432
                ]

                connect A Junction1470 as Connection394
                connect B Junction1471 as Connection397
                connect "Bus Join1.in1" VB.out as Connection387
                connect "Bus Join1.in2" VC.out as Connection388
                connect "Bus Join2.out" I as Connection393
                connect "Bus Join2.in1" IB.out as Connection391
                connect "Bus Join2.in2" IC.out as Connection392
                connect C Junction1472 as Connection400
                connect IA.out "Bus Join2.in" as Connection390
                connect IA.n_node Junction1466 as Connection377
                connect Junction1421 Junction1473 as Connection406
                connect Junction1466 a as Connection299
                connect Junction1467 IB.n_node as Connection375
                connect Junction1467 b as Connection301
                connect Junction1468 IC.n_node as Connection376
                connect Junction1468 c as Connection302
                connect Junction1470 IA.p_node as Connection395
                connect Junction1471 IB.p_node as Connection398
                connect Junction1472 IC.p_node as Connection401
                connect Junction1473 VC.n_node as Connection404
                connect V "Bus Join1.out" as Connection385
                connect V "Bus Join1.out" as Connection389
                connect VA.out "Bus Join1.in" as Connection386
                connect VA.n_node Junction1421 as Connection237
                connect VA.p_node Junction1466 as Connection240
                connect VB.n_node Junction1421 as Connection203
                connect VB.p_node Junction1467 as Connection243
                connect VC.p_node Junction1468 as Connection246
                connect res_for_meas.P1 Junction1470 as Connection396
                connect res_for_meas.P2 Junction1471 as Connection399
                connect res_for_meas.P3 Junction1472 as Connection402
                connect res_for_meas.P4 Junction1473 as Connection405
            }
            [
                position = 8144, 8096
                rotation = right
                scale = -1, 1
                size = 56, 80
            ]

            component gen_terminator Termination3 {
            }
            [
                position = 8008, 8312
                hide_name = True
                scale = -1, 1
            ]

            component src_scada_input F1_CB7 {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8056, 8200
            ]

            component gen_terminator Termination4 {
            }
            [
                position = 7976, 8088
                hide_name = True
                scale = -1, 1
            ]

            component gen_terminator Termination5 {
            }
            [
                position = 8008, 8104
                hide_name = True
                scale = -1, 1
            ]

            port b {
                position = bottom:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 8432
                rotation = left
            ]

            port a {
                position = bottom:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 8472
                rotation = left
            ]

            port B {
                position = top:2
                kind = pe
                direction =  out
            }
            [
                position = 8144, 7976
                rotation = right
            ]

            port c {
                position = bottom:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8392
                rotation = left
            ]

            port A {
                position = top:1
                kind = pe
                direction =  out
            }
            [
                position = 8128, 7936
                rotation = right
            ]

            port C {
                position = top:3
                kind = pe
                direction =  out
            }
            [
                position = 8160, 8016
                rotation = right
            ]

            connect Brk.B Meas1.b as Connection2612
            connect Brk.c Meas2.C as Connection2614
            connect Brk.a Meas2.A as Connection2616
            connect C Meas1.C as Connection2608
            connect Meas1.A A as Connection2610
            connect Meas1.B B as Connection2609
            connect Meas1.a Brk.A as Connection2611
            connect Meas1.c Brk.C as Connection2613
            connect Meas2.B Brk.b as Connection2615
            connect Meas2.a a as Connection2617
            connect Meas2.c c as Connection2619
            connect b Meas2.b as Connection2618
            connect F1_CB7.out Brk.control as Connection2620
            connect Termination3.in Meas2.V as Connection2621
            connect Termination5.in Meas1.V as Connection2622
            connect Meas1.I Termination4.in as Connection2623
        }
        [
            position = 5640, 8352
            size = 80, 48
        ]

        component "core/VBR Variable Load" "VBR Variable Load2" {
            Sn = "650e3"
            Vn = "208"
        }
        [
            position = 5640, 8656
            size = 96, 80
        ]

        component Subsystem "VBR Variable Load2_out" {
            layout = dynamic
            component gen_probe S {
            }
            [
                position = 8224, 8160
                rotation = left
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "4"
            }
            [
                position = 8192, 8224
                rotation = right
                hide_name = True
                scale = -1, -1
            ]

            component gen_probe Q {
            }
            [
                position = 8152, 8160
                rotation = left
            ]

            component gen_probe P {
            }
            [
                position = 8096, 8160
                rotation = left
            ]

            component gen_probe pf {
            }
            [
                position = 8288, 8160
                rotation = left
            ]

            port In1 {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 8192, 8296
                rotation = left
            ]

            connect "Bus Split1.out3" pf.in as Connection15
            connect "Bus Split1.out2" S.in as Connection14
            connect "Bus Split1.out1" Q.in as Connection13
            connect "Bus Split1.out" P.in as Connection12
            connect "Bus Split1.in" In1 as Connection16
        }
        [
            position = 5504, 8704
            rotation = right
            scale = -1, 1
            size = 48, 48
        ]

        component Subsystem "VBR Variable Load2_in" {
            layout = dynamic
            component src_scada_input Qref {
                def_value = "50e3"
                unit = "VAR"
            }
            [
                position = 8112, 8248
            ]

            component src_scada_input Enable {
                def_value = "1"
                max = "3"
                min = "0"
                unit = ""
            }
            [
                position = 8112, 8136
            ]

            component gen_bus_join "Bus Join1" {
                inputs = "3"
            }
            [
                position = 8272, 8192
                hide_name = True
            ]

            port Out1 {
                position = right:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8344, 8192
            ]

            tag From1 {
                value = "VL2_Pref"
                scope = global
                kind = sp
                direction = out
            }
            [
                position = 8104, 8200
            ]

            connect Enable.out "Bus Join1.in" as Connection896
            connect Qref.out "Bus Join1.in2" as Connection26
            connect "Bus Join1.out" Out1 as Connection897
            connect From1 "Bus Join1.in1" as Connection898
        }
        [
            position = 5504, 8632
            size = 48, 48
        ]

        component Subsystem Microturbine1 {
            layout = dynamic
            component src_constant Constant1 {
                execution_rate = "Ts_sys"
                value = "0"
            }
            [
                position = 6544, 8248
                hide_name = True
            ]

            component sys_signal_switch "Signal switch1" {
                criterion = "ctrl != threshold"
                threshold = "1"
            }
            [
                position = 6624, 8000
                hide_name = True
                scale = 1, -1
            ]

            component src_constant Constant2 {
                execution_rate = "Ts_sys"
                value = "0"
            }
            [
                position = 6544, 8016
                hide_name = True
            ]

            component sys_signal_switch "Signal switch2" {
                criterion = "ctrl != threshold"
                threshold = "1"
            }
            [
                position = 6624, 8232
                hide_name = True
                scale = 1, -1
            ]

            component src_scada_input "Connect MT" {
                def_value = "1"
                execution_rate = "Ts_sys"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 7464, 8072
            ]

            component src_scada_input "Connect MCB" {
                def_value = "1"
                execution_rate = "Ts_sys"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 7464, 8136
            ]

            component Subsystem CB_control {
                layout = dynamic
                component gen_logic_op "Logical operator1" {
                }
                [
                    position = 8176, 8256
                    hide_name = True
                ]

                component gen_logic_op "Logical operator2" {
                }
                [
                    position = 8088, 8232
                    hide_name = True
                ]

                component gen_logic_op "Logical operator3" {
                    operator = "NOT"
                }
                [
                    position = 8424, 8304
                    rotation = right
                    hide_name = True
                ]

                component gen_digital_probe "GCB OFF" {
                }
                [
                    position = 8464, 8352
                ]

                component gen_digital_probe "GCB ON" {
                }
                [
                    position = 8464, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_logic_op "Logical operator4" {
                    operator = "NOT"
                }
                [
                    position = 8088, 8384
                    rotation = right
                    hide_name = True
                ]

                component gen_digital_probe "MCB OFF" {
                }
                [
                    position = 8176, 8424
                ]

                component gen_digital_probe "MCB ON" {
                }
                [
                    position = 8176, 8320
                    rotation = down
                    scale = -1, 1
                ]

                component gen_logic_op "Logical operator5" {
                    operator = "NOT"
                }
                [
                    position = 7632, 8496
                    rotation = right
                    hide_name = True
                ]

                component gen_digital_probe "Grid_Islanded OFF" {
                }
                [
                    position = 7680, 8528
                ]

                component gen_digital_probe "Grid_Islanded ON" {
                }
                [
                    position = 7680, 8408
                    rotation = down
                    scale = -1, 1
                ]

                component src_scada_input Grid_Islanded {
                    def_value = "1"
                    execution_rate = "Ts_sys"
                    format = "int"
                    max = "1"
                    min = "0"
                    signal_type = "int"
                    unit = ""
                }
                [
                    position = 7352, 8432
                ]

                component gen_logic_op "Logical operator6" {
                    operator = "OR"
                }
                [
                    position = 8304, 8688
                    hide_name = True
                ]

                component gen_digital_probe "MT_sync OFF" {
                }
                [
                    position = 7600, 8672
                ]

                component gen_digital_probe "MT_sync ON" {
                }
                [
                    position = 7528, 8600
                    rotation = down
                    scale = -1, -1
                ]

                component gen_logic_op "Logical operator7" {
                }
                [
                    position = 7560, 8440
                    hide_name = True
                ]

                component gen_logic_op "Logical operator8" {
                    inputs = "3"
                }
                [
                    position = 8224, 8696
                    hide_name = True
                ]

                component src_constant Constant10 {
                    execution_rate = "Ts_sys"
                    value = "5e-2"
                }
                [
                    position = 8088, 8712
                    hide_name = True
                ]

                component gen_abs Abs6 {
                }
                [
                    position = 8088, 8680
                    hide_name = True
                ]

                component gen_rel_op "Relational operator5" {
                    relational_op = "<"
                }
                [
                    position = 8152, 8696
                    hide_name = True
                ]

                component gen_sum Sum9 {
                    signs = "-+"
                }
                [
                    position = 8016, 8688
                    hide_name = True
                    scale = 1, -1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts_sys"
                }
                [
                    position = 7944, 8664
                    hide_name = True
                ]

                component src_constant Constant11 {
                    execution_rate = "Ts_sys"
                    value = "1e-3"
                }
                [
                    position = 8088, 8616
                    hide_name = True
                ]

                component gen_abs Abs7 {
                }
                [
                    position = 8088, 8648
                    hide_name = True
                ]

                component gen_rel_op "Relational operator6" {
                    relational_op = ">"
                }
                [
                    position = 8152, 8632
                    hide_name = True
                ]

                component gen_sum Sum10 {
                    signs = "-+"
                }
                [
                    position = 8016, 8640
                    hide_name = True
                    scale = 1, -1
                ]

                component gen_gain Gain13 {
                    gain = "1/w_0"
                }
                [
                    position = 7944, 8616
                    hide_name = True
                ]

                component gen_logic_op "Logical operator9" {
                    operator = "NOT"
                }
                [
                    position = 7408, 8496
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op "Logical operator10" {
                    operator = "NOT"
                }
                [
                    position = 7520, 8496
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op "Logical operator11" {
                }
                [
                    position = 7464, 8568
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op "Logical operator12" {
                    operator = "NOT"
                }
                [
                    position = 7528, 8672
                    hide_name = True
                ]

                component gen_c_function "stay connected1" {
                    global_variables = "int var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "connect inherit;disconnect inherit"
                    in_terminal_labels = "[(\'connect\', True), (\'disconnect\', True)]"
                    in_terminal_properties = "inherit connect;inherit disconnect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "action inherit"
                    out_terminal_labels = "[(\'action\', True)]"
                    out_terminal_properties = "int action;"
                    output_fnc = "/*Begin code section*/
action = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==1)
{
    var = 1;
}
if(disconnect==0)
{
    var = 0;
}
/*End code section*/"
                }
                [
                    position = 8328, 8240
                    hide_name = True
                    scale = 1, -1
                    size = 112, 72
                ]

                component gen_c_function "Hold after connect2" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in1 inherit;in2 inherit"
                    in_terminal_labels = "[(\'in1\', True), (\'in2\', True)]"
                    in_terminal_properties = "real in1;real in2;"
                    init_fnc = "/*Begin code section*/
var = 1;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    out_terminal_properties = "int out;"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if ((in1<1.1)&&(in1>0.9)&&(in2<1.1)&&(in2>0.9))
    var = 0;
else
    var = 1;
/*End code section*/"
                }
                [
                    position = 7464, 8368
                    hide_name = True
                    size = 80, 56
                ]

                port CB_status {
                    label = "CB_status"
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8552, 8240
                ]

                port Close_GCB {
                    label = "Close_GCB"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7880, 8152
                ]

                port Close_MCB {
                    label = "Close_MCB"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7888, 8296
                ]

                port MCB_control {
                    label = "MCB_control"
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8176, 8352
                ]

                tag Connect5 {
                    value = "synced"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8648
                    hide_name = True
                ]

                tag Connect6 {
                    value = "Connect MT"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8184, 8216
                    hide_name = True
                ]

                tag Connect1 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8560, 8296
                    hide_name = True
                ]

                tag Connect7 {
                    value = "Grid_Islanded"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7680, 8440
                    hide_name = True
                    size = 75, 20
                ]

                tag Connect8 {
                    value = "Grid_Islanded"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8120, 8744
                    hide_name = True
                    size = 94, 20
                ]

                tag Connect9 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8392, 8688
                    hide_name = True
                    size = 75, 20
                ]

                tag Connect10 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 8280
                    hide_name = True
                ]

                tag Connect11 {
                    value = "MT_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7528, 8632
                    hide_name = True
                    size = 58, 20
                ]

                tag "|V|2" {
                    value = "|E|"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7928, 8712
                    hide_name = True
                    size = 29, 20
                ]

                tag w_e8 {
                    value = "w_e"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7864, 8664
                    hide_name = True
                ]

                tag From1 {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 8352
                    hide_name = True
                ]

                tag w_bus3 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 8384
                    hide_name = True
                ]

                junction Junction3 sp
                [
                    position = 8136, 8232
                ]

                junction Junction5 sp
                [
                    position = 8016, 8296
                ]

                junction Junction8 sp
                [
                    position = 8088, 8352
                ]

                junction Junction9 sp
                [
                    position = 8088, 8352
                ]

                junction Junction108 sp
                [
                    position = 7632, 8440
                ]

                junction Junction109 sp
                [
                    position = 7632, 8440
                ]

                junction Junction81 sp
                [
                    position = 7976, 8664
                ]

                junction Junction113 sp
                [
                    position = 7464, 8600
                ]

                junction Junction115 sp
                [
                    position = 7464, 8632
                ]

                junction Junction116 sp
                [
                    position = 8424, 8240
                ]

                junction Junction117 sp
                [
                    position = 8424, 8240
                ]

                junction Junction120 sp
                [
                    position = 8016, 8152
                ]

                junction Junction121 sp
                [
                    position = 7408, 8432
                ]

                junction Junction122 sp
                [
                    position = 7520, 8448
                ]

                junction Junction123 sp
                [
                    position = 8480, 8240
                ]

                connect "Logical operator2.out" Junction3 as Connection29
                connect Junction3 "Logical operator1.in" as Connection30
                connect Connect6 Junction3 as Connection31
                connect Close_MCB Junction5 as Connection37
                connect Junction5 "Logical operator2.in1" as Connection38
                [
                    breakpoints = 8016, 8296; 8016, 8240
                ]
                connect "GCB OFF.in" "Logical operator3.out" as Connection155
                connect "MCB OFF.in" "Logical operator4.out" as Connection162
                connect Junction8 Junction5 as Connection164
                connect "MCB ON.in" Junction8 as Connection165
                connect MCB_control Junction9 as Connection166
                connect Junction9 Junction8 as Connection167
                connect "Logical operator4.in" Junction9 as Connection168
                connect Connect5 "Logical operator6.in" as Connection959
                connect "Logical operator6.out" Connect9 as Connection961
                connect Connect10 "Logical operator1.in1" as Connection962
                connect "Logical operator7.out" Junction108 as Connection980
                connect Junction108 Connect7 as Connection981
                connect "Logical operator5.in" Junction109 as Connection983
                connect Junction109 Junction108 as Connection984
                connect Abs6.out "Relational operator5.in" as Connection628
                connect Constant10.out "Relational operator5.in1" as Connection631
                connect Abs6.in Sum9.out as Connection632
                [
                    breakpoints = 8056, 8688
                ]
                connect "|V|2" Sum9.in as Connection634
                connect "Relational operator5.out" "Logical operator8.in1" as Connection635
                connect Constant11.out "Relational operator6.in" as Connection636
                connect "Relational operator6.in1" Abs7.out as Connection637
                connect "Relational operator6.out" "Logical operator8.in" as Connection638
                connect Sum10.out Abs7.in as Connection639
                connect w_e8 Gain13.in as Connection640
                connect Gain13.out Sum10.in1 as Connection641
                connect Constant1.out Junction81 as Connection642
                connect "Logical operator11.in1" "Logical operator9.out" as Connection998
                connect Junction81 Sum9.in1 as Connection643
                connect "Logical operator11.in" "Logical operator10.out" as Connection999
                connect Sum10.in Junction81 as Connection644
                connect Connect8 "Logical operator8.in2" as Connection990
                connect "Logical operator8.out" "Logical operator6.in1" as Connection991
                connect "Grid_Islanded ON.in" Junction109 as Connection1003
                [
                    breakpoints = 7632, 8408
                ]
                connect Junction113 "Logical operator11.out" as Connection1005
                connect "MT_sync ON.in" Junction113 as Connection1006
                connect "Grid_Islanded OFF.in" "Logical operator5.out" as Connection1011
                connect Connect11 Junction115 as Connection1012
                connect Junction115 Junction113 as Connection1013
                connect "Logical operator12.in" Junction115 as Connection1014
                connect "Logical operator12.out" "MT_sync OFF.in" as Connection1015
                connect "stay connected1.action" Junction116 as Connection1018
                connect Junction116 "Logical operator3.in" as Connection1019
                connect Junction117 Junction116 as Connection1022
                connect "GCB ON.in" Junction117 as Connection1023
                connect "stay connected1.connect" "Logical operator1.out" as Connection1032
                connect "stay connected1.disconnect" Junction120 as Connection1040
                [
                    breakpoints = 8256, 8152; 8128, 8152
                ]
                connect Junction120 Close_GCB as Connection1041
                [
                    breakpoints = 8016, 8152
                ]
                connect "Logical operator2.in" Junction120 as Connection1042
                connect "Logical operator7.in" Junction121 as Connection1187
                connect Junction121 Grid_Islanded.out as Connection1188
                connect "Logical operator9.in" Junction121 as Connection1189
                connect "Hold after connect2.out" Junction122 as Connection1196
                connect Junction122 "Logical operator7.in1" as Connection1197
                connect "Logical operator10.in" Junction122 as Connection1198
                connect From1 "Hold after connect2.in1" as Connection1199
                connect w_bus3 "Hold after connect2.in2" as Connection1200
                connect Junction117 Junction123 as Connection1204
                [
                    breakpoints = 8424, 8240
                ]
                connect Junction123 CB_status as Connection1205
                [
                    breakpoints = 8480, 8240
                ]
                connect Connect1 Junction123 as Connection1206
            }
            [
                position = 7640, 8104
                size = 176, 96
            ]

            component "core/Triple Pole Single Throw Contactor" S4 {
                ctrl_src = "Model"
            }
            [
                position = 7976, 8280
                hide_name = True
                size = 64, 256
            ]

            component "core/Voltage Measurement" Ea1 {
                execution_rate = "Ts_sys"
                sig_output = "True"
            }
            [
                position = 7240, 8424
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Eb1 {
                execution_rate = "Ts_sys"
                sig_output = "True"
            }
            [
                position = 7448, 8424
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ec1 {
                execution_rate = "Ts_sys"
                sig_output = "True"
            }
            [
                position = 7680, 8424
                rotation = right
                size = 64, 32
            ]

            component gen_probe "|V|" {
            }
            [
                position = 6744, 8408
            ]

            component gen_gain Gain1 {
                gain = "pms*(2*np.pi)/60"
            }
            [
                position = 7136, 8072
                hide_name = True
                scale = -1, 1
            ]

            component gen_probe w_M {
            }
            [
                position = 7232, 8072
            ]

            component gen_gain Gain18 {
                gain = "1/pms"
            }
            [
                position = 6608, 8096
                hide_name = True
            ]

            component Subsystem Engine {
                layout = dynamic
                component gen_integrator Integrator1 {
                }
                [
                    position = 8272, 8192
                    hide_name = True
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 8112, 8192
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    gain = "1/T_CH"
                }
                [
                    position = 8192, 8192
                    hide_name = True
                ]

                component gen_gain Gain2 {
                    gain = "TM_DQ"
                }
                [
                    position = 8352, 8192
                    hide_name = True
                ]

                port T_M2 {
                    label = "T_M"
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8416, 8192
                ]

                port P_SV {
                    label = "P_SV"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8016, 8216
                ]

                tag T_M {
                    value = "T_M"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8368, 8264
                ]

                tag T_M1 {
                    value = "T_M"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8016, 8152
                    hide_name = True
                ]

                junction Junction1 sp
                [
                    position = 8312, 8192
                ]

                connect Gain1.out Integrator1.in as Connection2
                connect Integrator1.out Junction1 as Connection6
                connect Sum1.out Gain1.in as Connection1
                connect Sum1.in1 P_SV as Connection5
                connect T_M Junction1 as Connection8
                connect T_M1 Sum1.in as Connection3
                connect Junction1 Gain2.in as Connection9
                connect Gain2.out T_M2 as Connection10
            }
            [
                position = 6912, 8048
                size = 80, 56
            ]

            component "core/Signal Controlled Voltage Source" V_F {
            }
            [
                position = 6912, 8280
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component gen_gain Gain17 {
                gain = "V_ABC*np.sqrt(3)/1000"
            }
            [
                position = 6656, 8376
                rotation = right
                hide_name = True
                scale = -1, 1
            ]

            component Subsystem "Synchonous Machine" {
                layout = dynamic
                component gen_gain Gain1 {
                    gain = "pms"
                }
                [
                    position = 7040, 9008
                    hide_name = True
                ]

                component gen_probe E_qp_M {
                }
                [
                    position = 7336, 8552
                ]

                component gen_probe Phi_1d_a_M {
                }
                [
                    position = 7352, 8720
                ]

                component gen_probe Phi_2q_a_M {
                }
                [
                    position = 7312, 8864
                    scale = -1, 1
                ]

                component gen_probe Phi_d_a_M {
                }
                [
                    position = 7808, 8592
                ]

                component gen_probe Phi_q_a_M {
                }
                [
                    position = 7456, 8704
                    scale = -1, 1
                ]

                component Subsystem Phi_1d_a {
                    layout = dynamic
                    component src_constant Constant1 {
                        execution_rate = "Ts"
                        value = "X_dp-X_ls"
                    }
                    [
                        position = 8024, 8224
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "1/T_dopp"
                    }
                    [
                        position = 8288, 8152
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8096, 8232
                        hide_name = True
                    ]

                    component gen_integrator Integrator1 {
                    }
                    [
                        position = 8352, 8152
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                        signs = "-+-"
                    }
                    [
                        position = 8208, 8152
                        hide_name = True
                    ]

                    port Phi_1d_a {
                        label = "Phi_1d_a"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8424, 8152
                    ]

                    port E_qp {
                        label = "E_qp"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8136, 8152
                    ]

                    port I_d_a {
                        label = "I_d_a"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8264
                    ]

                    junction Junction1 sp
                    [
                        position = 8392, 8152
                    ]

                    connect Constant1.out Product1.in as Connection26
                    connect Integrator1.in Gain1.out as Connection24
                    connect Integrator1.out Junction1 as Connection31
                    connect Junction1 Phi_1d_a as Connection32
                    connect Product1.in1 I_d_a as Connection29
                    connect Product1.out Sum1.in2 as Connection27
                    connect Sum1.in1 E_qp as Connection30
                    connect Sum1.out Gain1.in as Connection25
                    connect Sum1.in Junction1 as Connection33
                    [
                        breakpoints = 8168, 8096; 8392, 8096
                    ]
                }
                [
                    position = 7216, 8768
                    size = 96, 64
                ]

                component Subsystem Phi_2q_a {
                    layout = dynamic
                    component gen_gain Gain1 {
                        gain = "1/T_qopp"
                    }
                    [
                        position = 8288, 8152
                        hide_name = True
                    ]

                    component gen_integrator Integrator1 {
                    }
                    [
                        position = 8352, 8152
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                        signs = "--"
                    }
                    [
                        position = 8208, 8152
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8096, 8232
                        hide_name = True
                    ]

                    component src_constant Constant1 {
                        execution_rate = "Ts"
                        value = "X_qp-X_ls"
                    }
                    [
                        position = 8024, 8224
                        hide_name = True
                    ]

                    port Phi_2q_a {
                        label = "Phi_2q_a"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8424, 8152
                    ]

                    port I_q_a {
                        label = "I_q_a"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8264
                    ]

                    junction Junction1 sp
                    [
                        position = 8392, 8152
                    ]

                    connect Constant1.out Product1.in as Connection26
                    connect Integrator1.in Gain1.out as Connection24
                    connect Integrator1.out Junction1 as Connection31
                    connect Junction1 Phi_2q_a as Connection32
                    connect Product1.in1 I_q_a as Connection29
                    connect Sum1.out Gain1.in as Connection25
                    connect Sum1.in Junction1 as Connection33
                    [
                        breakpoints = 8168, 8096; 8392, 8096
                    ]
                    connect Product1.out Sum1.in1 as Connection34
                }
                [
                    position = 7448, 8912
                    scale = -1, 1
                    size = 96, 64
                ]

                component Subsystem w_m {
                    layout = dynamic
                    component gen_product Product3 {
                    }
                    [
                        position = 8032, 8096
                        hide_name = True
                    ]

                    component gen_integrator Integrator1 {
                    }
                    [
                        position = 8376, 8144
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8112, 8264
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "w_0/(2*H)"
                    }
                    [
                        position = 8312, 8144
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 8112, 8144
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "pms/w_0"
                    }
                    [
                        position = 8032, 8248
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+--"
                    }
                    [
                        position = 8248, 8144
                        hide_name = True
                    ]

                    component src_constant Constant1 {
                        execution_rate = "Ts"
                        value = "D_FW"
                    }
                    [
                        position = 7968, 8248
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8032, 8184
                        hide_name = True
                    ]

                    component gen_gain Gain16 {
                        gain = "1/TM_DQ"
                    }
                    [
                        position = 8176, 8056
                        hide_name = True
                    ]

                    port w_m2 {
                        label = "w_m"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8144
                    ]

                    port T_M {
                        label = "T_M"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8112, 8056
                    ]

                    port Phi_d_a {
                        label = "Phi_d_a"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7960, 8040
                    ]

                    port I_q_a {
                        label = "I_q_a"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7960, 8096
                    ]

                    port Phi_q_a {
                        label = "Phi_q_a"
                        position = left:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7960, 8144
                    ]

                    port I_d_a {
                        label = "I_d_a"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7960, 8192
                    ]

                    tag w_m1 {
                        value = "w_m"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7968, 8280
                        hide_name = True
                    ]

                    tag w_m {
                        value = "w_m"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8456, 8240
                        hide_name = True
                    ]

                    junction Junction1 sp
                    [
                        position = 8416, 8144
                    ]

                    connect Constant1.out Gain1.in as Connection1
                    connect Gain1.out Product1.in as Connection2
                    connect Gain2.out Integrator1.in as Connection8
                    connect Integrator1.out Junction1 as Connection16
                    connect Junction1 w_m2 as Connection17
                    connect Product1.out Sum2.in2 as Connection6
                    connect Product2.in1 I_d_a as Connection10
                    connect Product2.in Phi_q_a as Connection13
                    connect Product2.out Sum1.in1 as Connection3
                    connect Product3.in1 I_q_a as Connection14
                    connect Product3.in Phi_d_a as Connection11
                    connect Product3.out Sum1.in as Connection4
                    connect Sum2.out Gain2.in as Connection7
                    connect w_m Junction1 as Connection18
                    connect w_m1 Product1.in1 as Connection9
                    connect Gain16.in T_M as Connection26
                    connect Sum1.out Sum2.in1 as Connection27
                    [
                        breakpoints = 8144, 8144
                    ]
                    connect Gain16.out Sum2.in as Connection28
                    [
                        breakpoints = 8208, 8056; 8208, 8056; 8208, 8056; 8208, 8112; 8208, 8112; 8208, 8128
                    ]
                }
                [
                    position = 6896, 8928
                    size = 160, 96
                ]

                component Subsystem E_qp {
                    layout = dynamic
                    component gen_product Product3 {
                    }
                    [
                        position = 8016, 8272
                        hide_name = True
                    ]

                    component src_constant Constant1 {
                        execution_rate = "Ts"
                        value = "X_d-X_dp"
                    }
                    [
                        position = 8272, 8088
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8192, 8224
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                        signs = "++-"
                    }
                    [
                        position = 8096, 8272
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "(X_dp-X_dpp)/(X_dp-X_ls)**2"
                    }
                    [
                        position = 8096, 8200
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "X_dp-X_ls"
                    }
                    [
                        position = 7936, 8248
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                        signs = "--+"
                    }
                    [
                        position = 8448, 8112
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 8272, 8160
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8352, 8112
                        hide_name = True
                    ]

                    component gen_integrator Integrator1 {
                    }
                    [
                        position = 8568, 8112
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "1/T_dop"
                    }
                    [
                        position = 8512, 8112
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "1/V_DQ"
                    }
                    [
                        position = 8392, 8168
                        rotation = left
                        hide_name = True
                    ]

                    port E_qp3 {
                        label = "E_qp"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8632, 8112
                        hide_name = True
                    ]

                    port E_F {
                        label = "E_F"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8352, 8216
                    ]

                    port I_d_a {
                        label = "I_d_a"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7816, 8152
                    ]

                    port Phi_1d_a {
                        label = "Phi_1d_a"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8024, 8208
                    ]

                    tag E_qp1 {
                        value = "E_qp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8352, 8056
                        hide_name = True
                    ]

                    tag E_qp2 {
                        value = "E_qp"
                        scope = local
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8016, 8328
                        hide_name = True
                        size = 60, 20
                    ]

                    tag E_qp {
                        value = "E_qp"
                        scope = local
                        kind = sp
                        direction = in
                    }
                    [
                        position = 8656, 8192
                        hide_name = True
                    ]

                    junction Junction2 sp
                    [
                        position = 7856, 8152
                    ]

                    junction Junction3 sp
                    [
                        position = 8600, 8112
                    ]

                    connect Constant1.out Product1.in as Connection3
                    connect Constant2.out Product2.in as Connection6
                    connect Constant3.out Product3.in as Connection19
                    connect E_qp Junction3 as Connection29
                    connect E_qp1 Sum1.in as Connection1
                    connect E_qp2 Sum3.in2 as Connection9
                    connect Gain1.in Sum1.out as Connection26
                    [
                        breakpoints = 8480, 8112
                    ]
                    connect Integrator1.in Gain1.out as Connection24
                    connect Integrator1.out Junction3 as Connection27
                    connect Junction2 I_d_a as Connection21
                    connect Junction3 E_qp3 as Connection28
                    connect Product1.out Sum1.in1 as Connection2
                    connect Product2.out Sum2.in1 as Connection5
                    connect Product3.in1 Junction2 as Connection22
                    connect Product3.out Sum3.in1 as Connection8
                    connect Sum2.in Junction2 as Connection20
                    connect Sum2.out Product1.in1 as Connection4
                    connect Sum3.in Phi_1d_a as Connection15
                    connect Sum3.out Product2.in1 as Connection7
                    connect Sum1.in2 Gain2.out as Connection30
                    connect Gain2.in E_F as Connection31
                }
                [
                    position = 7216, 8632
                    size = 96, 88
                ]

                component Subsystem "Phi_q_a 2" {
                    layout = dynamic
                    component gen_product Product2 {
                    }
                    [
                        position = 8144, 8208
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                        signs = "-+"
                    }
                    [
                        position = 8256, 8168
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "(X_qp-X_qpp)/(X_qp-X_ls)"
                    }
                    [
                        position = 8040, 8184
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "X_qpp"
                    }
                    [
                        position = 8136, 8128
                        hide_name = True
                    ]

                    port Phi_2q_a {
                        label = "Phi_2q_a"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8040, 8232
                    ]

                    port Phi_q_a {
                        label = "Phi_q_a"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8336, 8168
                    ]

                    port I_q_a {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8040, 8128
                    ]

                    connect Constant2.out Product2.in as Connection5
                    connect Phi_q_a Sum1.out as Connection13
                    connect Product2.in1 Phi_2q_a as Connection9
                    connect I_q_a Gain1.in as Connection16
                    connect Gain1.out Sum1.in as Connection17
                    connect Product2.out Sum1.in1 as Connection18
                }
                [
                    position = 7624, 8744
                    scale = -1, 1
                    size = 128, 64
                ]

                component Subsystem "Phi_d_a 2" {
                    layout = dynamic
                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "(X_dp-X_dpp)/(X_dp-X_ls)"
                    }
                    [
                        position = 8040, 8184
                        hide_name = True
                    ]

                    component src_constant Constant1 {
                        execution_rate = "Ts"
                        value = "(X_dpp-X_ls)/(X_dp-X_ls)"
                    }
                    [
                        position = 8040, 8288
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8144, 8312
                        hide_name = True
                    ]

                    component gen_sum Sum1 {
                        signs = "-++"
                    }
                    [
                        position = 8256, 8208
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8144, 8208
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "X_dpp"
                    }
                    [
                        position = 8144, 8120
                        hide_name = True
                    ]

                    port E_qp {
                        label = "E_qp"
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8040, 8328
                    ]

                    port Phi_1d_a {
                        label = "Phi_1d_a"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8040, 8232
                    ]

                    port Phi_d_a {
                        label = "Phi_d_a"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8360, 8208
                    ]

                    port I_d_a {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8040, 8120
                    ]

                    connect Constant1.out Product1.in as Connection4
                    connect Constant2.out Product2.in as Connection5
                    connect E_qp Product1.in1 as Connection10
                    connect Phi_d_a Sum1.out as Connection13
                    connect Product2.in1 Phi_1d_a as Connection9
                    connect Product2.out Sum1.in1 as Connection14
                    connect Product1.out Sum1.in2 as Connection15
                    connect I_d_a Gain1.in as Connection16
                    connect Gain1.out Sum1.in as Connection17
                }
                [
                    position = 7624, 8632
                    size = 128, 64
                ]

                component Subsystem V_qG2 {
                    layout = dynamic
                    component gen_product Product3 {
                        signs = "*/"
                    }
                    [
                        position = 8184, 8176
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8280, 8224
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                    }
                    [
                        position = 8384, 8264
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "w_0"
                    }
                    [
                        position = 8112, 8208
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "1/w_0"
                    }
                    [
                        position = 8256, 8304
                        hide_name = True
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8384, 8328
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 8280, 8272
                        hide_name = True
                    ]

                    component gen_differentiator Differentiator1 {
                    }
                    [
                        position = 8496, 8328
                        hide_name = True
                    ]

                    component gen_z_domain_transfer "Discrete Transfer Function1" {
                        a_coeff = "[EM_delay,1]"
                        b_coeff = "[1,0 ]"
                        domain = "S-domain"
                    }
                    [
                        position = 8312, 8304
                        hide_name = True
                    ]

                    port w_e {
                        label = "w_e"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8112, 8144
                    ]

                    port Phi_d_a {
                        label = "Phi_d_a"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8208, 8232
                    ]

                    port Phi_q_a {
                        label = "Phi_q_a"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8208, 8304
                    ]

                    port V_qG {
                        label = "V_qG"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8488, 8264
                    ]

                    connect Constant2.out Product3.in1 as Connection5
                    connect Gain1.in Phi_q_a as Connection17
                    connect Product2.in1 Phi_d_a as Connection13
                    connect Product2.out Sum2.in as Connection22
                    connect Product3.out Product2.in as Connection4
                    connect Product3.in w_e as Connection11
                    connect V_qG Sum2.out as Connection32
                    connect Constant3.out Termination1.in as Connection38
                    [
                        breakpoints = 8336, 8272
                    ]
                    connect "Discrete Transfer Function1.in" Gain1.out as Connection39
                    connect "Discrete Transfer Function1.out" Sum2.in1 as Connection40
                }
                [
                    position = 7224, 9024
                    size = 80, 80
                ]

                component Subsystem V_dG2 {
                    layout = dynamic
                    component gen_product Product3 {
                        signs = "*/"
                    }
                    [
                        position = 8032, 8216
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8128, 8264
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "-+"
                    }
                    [
                        position = 8304, 8288
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "w_0"
                    }
                    [
                        position = 7960, 8248
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "1/w_0"
                    }
                    [
                        position = 8176, 8336
                        hide_name = True
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8312, 8344
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "0"
                    }
                    [
                        position = 8128, 8304
                        hide_name = True
                    ]

                    component gen_z_domain_transfer "Discrete Transfer Function1" {
                        a_coeff = "[EM_delay,1]"
                        b_coeff = "[1,0 ]"
                        domain = "S-domain"
                    }
                    [
                        position = 8224, 8336
                        hide_name = True
                    ]

                    component gen_differentiator Differentiator1 {
                    }
                    [
                        position = 8408, 8352
                        hide_name = True
                    ]

                    port w_e {
                        label = "w_e"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7960, 8184
                    ]

                    port Phi_q_a {
                        label = "Phi_q_a"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8056, 8272
                    ]

                    port Phi_d_a {
                        label = "Phi_d_a"
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8128, 8336
                    ]

                    port V_d_a {
                        label = "V_d_a"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8408, 8288
                    ]

                    connect Constant2.out Product3.in1 as Connection5
                    connect Gain1.in Phi_d_a as Connection16
                    connect Product2.in1 Phi_q_a as Connection13
                    connect Product2.out Sum2.in as Connection14
                    connect Product3.out Product2.in as Connection4
                    connect Product3.in w_e as Connection11
                    connect Sum2.out V_d_a as Connection24
                    connect Termination1.in Constant3.out as Connection34
                    [
                        breakpoints = 8280, 8344; 8280, 8320; 8232, 8304
                    ]
                    connect "Discrete Transfer Function1.out" Sum2.in1 as Connection35
                    connect "Discrete Transfer Function1.in" Gain1.out as Connection36
                }
                [
                    position = 7224, 9136
                    size = 80, 80
                ]

                component gen_gain Gain8 {
                    gain = "V_DQ"
                }
                [
                    position = 7360, 9024
                    hide_name = True
                ]

                component gen_gain Gain9 {
                    gain = "V_DQ"
                }
                [
                    position = 7360, 9072
                    hide_name = True
                ]

                component gen_gain Gain10 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7744, 9160
                    hide_name = True
                ]

                component gen_gain Gain11 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7744, 9256
                    hide_name = True
                ]

                component gen_probe I_q_a1 {
                }
                [
                    position = 7896, 9112
                ]

                component gen_probe I_d_a1 {
                }
                [
                    position = 7896, 9256
                ]

                component gen_probe Ed_phi {
                }
                [
                    position = 7320, 9136
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe Eq_phi {
                }
                [
                    position = 7320, 8984
                ]

                component Subsystem "abc to qd" {
                    layout = dynamic
                    component gen_trigonometric "Trigonometric function3" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 7936
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8224, 7912
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8024
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8216, 8024
                        hide_name = True
                    ]

                    component gen_product Product3 {
                    }
                    [
                        position = 8216, 8136
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function2" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8048
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function4" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8160
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 7736, 8160
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8168
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 7736, 8048
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8056
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function5" {
                    }
                    [
                        position = 8120, 8256
                        hide_name = True
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 8216, 8224
                        hide_name = True
                    ]

                    component gen_sum Sum5 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8336
                        hide_name = True
                    ]

                    component gen_product Product5 {
                    }
                    [
                        position = 8200, 8336
                        hide_name = True
                    ]

                    component gen_product Product6 {
                    }
                    [
                        position = 8200, 8448
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function6" {
                    }
                    [
                        position = 8120, 8368
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function7" {
                    }
                    [
                        position = 8120, 8480
                        hide_name = True
                    ]

                    component gen_c_function "confine phase" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 7592, 7936
                        size = 56, 48
                    ]

                    component gen_gain Gain1 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8024
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8336
                        hide_name = True
                    ]

                    port q {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8024
                    ]

                    port d {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8336
                    ]

                    port theta {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7512, 7936
                    ]

                    port a {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 7904
                        rotation = down
                        scale = -1, 1
                    ]

                    port b {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8016
                        rotation = down
                        scale = -1, 1
                    ]

                    port c {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8128
                        rotation = down
                        scale = -1, 1
                    ]

                    junction Junction3 sp
                    [
                        position = 8056, 7904
                    ]

                    junction Junction4 sp
                    [
                        position = 7688, 8040
                    ]

                    junction Junction5 sp
                    [
                        position = 7688, 7936
                    ]

                    junction Junction6 sp
                    [
                        position = 8032, 7936
                    ]

                    junction Junction7 sp
                    [
                        position = 7960, 8016
                    ]

                    junction Junction8 sp
                    [
                        position = 7936, 8048
                    ]

                    junction Junction9 sp
                    [
                        position = 7864, 8128
                    ]

                    junction Junction10 sp
                    [
                        position = 7840, 8160
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">q = (2/3)*( a*cos(wt) + b*cos(wt-(2*pi/3)) + c*cos(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">d = (2/3)*( a*sin(wt) + b*sin(wt-(2*pi/3)) + c*sin(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">zero = (1/3)*( a + b + c );</p></body></html> ENDCOMMENT 
                    [
                        position = 8512, 7952
                    ]

                    connect "Trigonometric function3.out" Product1.in1 as Connection1151
                    connect Product1.out Sum3.in as Connection1153
                    connect Product2.out Sum3.in1 as Connection1154
                    connect "Trigonometric function2.out" Product2.in1 as Connection1155
                    connect "Trigonometric function4.out" Product3.in1 as Connection1164
                    connect Constant2.out Sum2.in1 as Connection1148
                    connect Product3.out Sum3.in2 as Connection1171
                    connect "Trigonometric function5.out" Product4.in1 as Connection1173
                    connect Product4.out Sum5.in as Connection1174
                    connect Product5.out Sum5.in1 as Connection1175
                    connect "Trigonometric function6.out" Product5.in1 as Connection1176
                    connect "Trigonometric function7.out" Product6.in1 as Connection1179
                    connect Junction5 "confine phase.out" as Connection1230
                    connect "confine phase.in" theta as Connection1231
                    connect Product6.out Sum5.in2 as Connection1183
                    connect Sum3.out Gain1.in as Connection1186
                    connect Gain1.out q as Connection1187
                    connect Sum5.out Gain2.in as Connection1188
                    connect Gain2.out d as Connection1189
                    connect a Junction3 as Connection1190
                    connect Junction3 Product1.in as Connection1191
                    connect Product4.in Junction3 as Connection1192
                    connect Sum2.in Junction4 as Connection1204
                    connect Sum4.in Junction4 as Connection1206
                    connect Junction4 Junction5 as Connection1207
                    connect "Trigonometric function3.in" Junction6 as Connection1210
                    connect Junction6 Junction5 as Connection1211
                    connect "Trigonometric function5.in" Junction6 as Connection1212
                    connect b Junction7 as Connection1213
                    connect Junction7 Product2.in as Connection1214
                    connect Product5.in Junction7 as Connection1215
                    connect Sum2.out Junction8 as Connection1216
                    connect Junction8 "Trigonometric function2.in" as Connection1217
                    connect "Trigonometric function6.in" Junction8 as Connection1218
                    connect Constant3.out Sum4.in1 as Connection1219
                    connect c Junction9 as Connection1220
                    connect Junction9 Product3.in as Connection1221
                    connect Product6.in Junction9 as Connection1222
                    connect Sum4.out Junction10 as Connection1227
                    connect Junction10 "Trigonometric function4.in" as Connection1228
                    [
                        breakpoints = 7840, 8160
                    ]
                    connect "Trigonometric function7.in" Junction10 as Connection1229
                }
                [
                    position = 7656, 9208
                    size = 80, 136
                ]

                component Subsystem "qd to abc" {
                    layout = dynamic
                    component gen_trigonometric "Trigonometric function3" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 7936
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8224, 7912
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                    }
                    [
                        position = 8304, 8024
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8216, 8032
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function2" {
                    }
                    [
                        position = 8128, 8056
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 7888, 8432
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7800, 8440
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 7960, 8184
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7880, 8192
                        hide_name = True
                    ]

                    component gen_c_function "confine phase" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 7584, 7936
                        size = 56, 48
                    ]

                    component gen_trigonometric "Trigonometric function4" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8120, 8184
                        hide_name = True
                    ]

                    component gen_product Product3 {
                    }
                    [
                        position = 8216, 8160
                        hide_name = True
                    ]

                    component gen_sum Sum5 {
                    }
                    [
                        position = 8296, 8272
                        hide_name = True
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 8208, 8280
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function5" {
                    }
                    [
                        position = 8120, 8304
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function6" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8120, 8432
                        hide_name = True
                    ]

                    component gen_product Product5 {
                    }
                    [
                        position = 8216, 8408
                        hide_name = True
                    ]

                    component gen_sum Sum6 {
                    }
                    [
                        position = 8296, 8520
                        hide_name = True
                    ]

                    component gen_product Product6 {
                    }
                    [
                        position = 8208, 8528
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function7" {
                    }
                    [
                        position = 8120, 8552
                        hide_name = True
                    ]

                    port a {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8024
                    ]

                    port b {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8272
                    ]

                    port theta {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7504, 7936
                    ]

                    port q {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 7904
                        rotation = down
                        scale = -1, 1
                    ]

                    port d {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8024
                        rotation = down
                        scale = -1, 1
                    ]

                    port c {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8520
                    ]

                    junction Junction1 sp
                    [
                        position = 8072, 7936
                    ]

                    junction Junction3 sp
                    [
                        position = 8016, 8024
                    ]

                    junction Junction4 sp
                    [
                        position = 8024, 7904
                    ]

                    junction Junction5 sp
                    [
                        position = 7912, 7936
                    ]

                    junction Junction6 sp
                    [
                        position = 8000, 8184
                    ]

                    junction Junction7 sp
                    [
                        position = 7816, 7904
                    ]

                    junction Junction8 sp
                    [
                        position = 7840, 7936
                    ]

                    junction Junction9 sp
                    [
                        position = 7744, 8024
                    ]

                    junction Junction10 sp
                    [
                        position = 8032, 8432
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">a = (q*cos(wt)) + (d*sin(wt));</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">b = (q*cos(wt-(2*pi/3))) + (d*sin(wt-(2*pi/3)));</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">c = (q*cos(wt+(2*pi/3))) + (d*sin(wt+(2*pi/3)));</p></body></html> ENDCOMMENT 
                    [
                        position = 7192, 8280
                    ]

                    connect "Trigonometric function3.out" Product1.in1 as Connection1151
                    connect Product1.out Sum3.in as Connection1153
                    connect Product2.out Sum3.in1 as Connection1154
                    connect "Trigonometric function2.out" Product2.in1 as Connection1155
                    connect Constant2.out Sum2.in1 as Connection1148
                    connect "confine phase.in" theta as Connection1231
                    connect Junction1 "Trigonometric function3.in" as Connection1243
                    connect "Trigonometric function2.in" Junction1 as Connection1244
                    connect Sum3.out a as Connection1245
                    connect "Trigonometric function4.out" Product3.in1 as Connection1246
                    connect Product3.out Sum5.in as Connection1247
                    connect Product4.out Sum5.in1 as Connection1248
                    connect "Trigonometric function5.out" Product4.in1 as Connection1249
                    connect Sum5.out b as Connection1250
                    connect Junction3 Product2.in as Connection1255
                    connect Product4.in Junction3 as Connection1256
                    connect Junction4 Product1.in as Connection1259
                    connect Product3.in Junction4 as Connection1260
                    connect Constant3.out Sum4.in1 as Connection1219
                    connect Junction1 Junction5 as Connection1265
                    [
                        breakpoints = 8072, 7936; 8032, 7936
                    ]
                    connect Sum2.in Junction5 as Connection1267
                    connect Sum2.out Junction6 as Connection1269
                    connect Junction6 "Trigonometric function4.in" as Connection1270
                    connect "Trigonometric function5.in" Junction6 as Connection1271
                    connect "Trigonometric function6.out" Product5.in1 as Connection1272
                    connect Product5.out Sum6.in as Connection1273
                    connect Product6.out Sum6.in1 as Connection1274
                    connect "Trigonometric function7.out" Product6.in1 as Connection1275
                    connect q Junction7 as Connection1276
                    connect Junction7 Junction4 as Connection1277
                    connect Product5.in Junction7 as Connection1278
                    connect Junction5 Junction8 as Connection1280
                    [
                        breakpoints = 7840, 7936
                    ]
                    connect Junction8 "confine phase.out" as Connection1281
                    [
                        breakpoints = 7688, 7936
                    ]
                    connect Sum4.in Junction8 as Connection1282
                    [
                        breakpoints = 7840, 8424; 7840, 8216
                    ]
                    connect d Junction9 as Connection1283
                    connect Junction9 Junction3 as Connection1284
                    [
                        breakpoints = 7960, 8024
                    ]
                    connect Product6.in Junction9 as Connection1285
                    connect Sum4.out Junction10 as Connection1286
                    connect Junction10 "Trigonometric function6.in" as Connection1287
                    connect "Trigonometric function7.in" Junction10 as Connection1288
                    connect Sum6.out c as Connection1289
                }
                [
                    position = 7440, 9072
                    size = 80, 136
                ]

                component gen_c_function "C function1" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    parameters = "real Ts;"
                    update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                }
                [
                    position = 7224, 9256
                    hide_name = True
                    size = 80, 48
                ]

                component "core/Voltage Measurement" E_F {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6760, 8600
                    rotation = right
                    size = 64, 32
                ]

                component "core/Signal Controlled Voltage Source" Ea1 {
                    execution_rate = "Ts"
                }
                [
                    position = 8000, 8880
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Signal Controlled Voltage Source" Eb1 {
                    execution_rate = "Ts"
                }
                [
                    position = 8208, 8952
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Signal Controlled Voltage Source" Ec1 {
                    execution_rate = "Ts"
                }
                [
                    position = 8424, 9008
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component pas_resistor Ra {
                    resistance = "Rs"
                }
                [
                    position = 8112, 8768
                ]

                component pas_resistor Rb {
                    resistance = "Rs"
                }
                [
                    position = 8328, 8864
                ]

                component pas_resistor Rc {
                    resistance = "Rs"
                }
                [
                    position = 8480, 8960
                ]

                component "core/Current Measurement" Ia1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8208, 8768
                    size = 64, 32
                ]

                component "core/Current Measurement" Ib1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8424, 8864
                    size = 64, 32
                ]

                component "core/Current Measurement" Ic1 {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 8576, 8960
                    size = 64, 32
                ]

                component gen_gain Gain17 {
                    gain = "60/(2*np.pi)"
                }
                [
                    position = 7048, 8928
                    hide_name = True
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "Ts"
                }
                [
                    position = 6656, 8880
                    hide_name = True
                    size = 32, 32
                ]

                component "core/Rate Transition" "Rate Transition2" {
                    execution_rate = "Ts_sys"
                }
                [
                    position = 7120, 8928
                    hide_name = True
                    size = 32, 32
                ]

                port ground {
                    position = bottom:5
                    kind = pe
                }
                [
                    position = 8720, 9056
                    rotation = down
                ]

                port "+ E_F" {
                    position = left:1
                    kind = pe
                }
                [
                    position = 6640, 8504
                ]

                port Ec {
                    position = right:4
                    kind = pe
                }
                [
                    position = 8720, 8960
                    rotation = down
                ]

                port Ea {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8720, 8768
                    rotation = down
                ]

                port Eb {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8720, 8864
                    rotation = down
                ]

                port "- E_F" {
                    position = left:4
                    kind = pe
                }
                [
                    position = 6640, 8696
                ]

                port Torque {
                    position = top:auto
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 6592, 8880
                ]

                port "Speed (rpm)" {
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7224, 8928
                ]

                tag Phi_d_a4 {
                    value = "Phi_d_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6744, 8904
                    hide_name = True
                ]

                tag I_q_a6 {
                    value = "I_q_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8912
                    hide_name = True
                    scale = -1, 1
                ]

                tag E_qp1 {
                    value = "E_qp"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7336, 8632
                    hide_name = True
                ]

                tag I_q_a {
                    value = "I_q_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7896, 9160
                    hide_name = True
                ]

                tag E_qp3 {
                    value = "E_qp"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7112, 8752
                    hide_name = True
                ]

                tag Phi_q_a4 {
                    value = "Phi_q_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6744, 8976
                    hide_name = True
                ]

                tag I_d_a5 {
                    value = "I_d_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6744, 8952
                    hide_name = True
                ]

                tag Phi_2q_a1 {
                    value = "Phi_2q_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7312, 8912
                    hide_name = True
                    scale = -1, 1
                ]

                tag I_d_a3 {
                    value = "I_d_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7096, 8632
                    hide_name = True
                ]

                tag Phi_1d_a3 {
                    value = "Phi_1d_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7096, 8664
                    hide_name = True
                ]

                tag I_d_a2 {
                    value = "I_d_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7112, 8784
                    hide_name = True
                ]

                tag I_q_a4 {
                    value = "I_q_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6744, 8928
                    hide_name = True
                ]

                tag Phi_1d_a1 {
                    value = "Phi_1d_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7352, 8768
                    hide_name = True
                ]

                tag I_d_a {
                    value = "I_d_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7896, 9304
                    hide_name = True
                ]

                tag Phi_d_a1 {
                    value = "Phi_d_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7808, 8656
                    hide_name = True
                ]

                tag Phi_q_a1 {
                    value = "Phi_q_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7456, 8768
                    hide_name = True
                    scale = -1, 1
                ]

                tag Phi_2q_a4 {
                    value = "Phi_2q_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7768, 8760
                    hide_name = True
                    scale = -1, 1
                ]

                tag E_qp4 {
                    value = "E_qp"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7456, 8664
                    hide_name = True
                ]

                tag Phi_1d_a4 {
                    value = "Phi_1d_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7456, 8632
                    hide_name = True
                ]

                tag I_q_a7 {
                    value = "I_q_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7768, 8728
                    hide_name = True
                    scale = -1, 1
                ]

                tag I_d_a7 {
                    value = "I_d_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7456, 8600
                    hide_name = True
                ]

                tag Phi_q_a6 {
                    value = "Phi_q_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7120, 9048
                    hide_name = True
                ]

                tag Phi_d_a6 {
                    value = "Phi_d_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7120, 9024
                    hide_name = True
                ]

                tag Phi_q_a5 {
                    value = "Phi_q_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7120, 9136
                    hide_name = True
                ]

                tag Phi_d_a5 {
                    value = "Phi_d_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7120, 9160
                    hide_name = True
                ]

                tag V_a {
                    value = "E_a"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7552, 9024
                    hide_name = True
                ]

                tag V_b {
                    value = "E_b"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7552, 9072
                    hide_name = True
                ]

                tag V_c {
                    value = "E_c"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7552, 9120
                    hide_name = True
                ]

                tag I_a1 {
                    value = "I_a"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7552, 9160
                    hide_name = True
                ]

                tag I_b1 {
                    value = "I_b"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7552, 9192
                    hide_name = True
                ]

                tag I_c1 {
                    value = "I_c"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7552, 9224
                    hide_name = True
                ]

                tag V_a1 {
                    value = "E_a"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7840, 8880
                    hide_name = True
                ]

                tag V_b1 {
                    value = "E_b"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8056, 8952
                    hide_name = True
                ]

                tag V_c1 {
                    value = "E_c"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8272, 9008
                    hide_name = True
                ]

                tag I_a {
                    value = "I_a"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8352, 8728
                    hide_name = True
                ]

                tag I_b {
                    value = "I_b"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8568, 8824
                    hide_name = True
                ]

                tag I_c {
                    value = "I_c"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8720, 8920
                    hide_name = True
                ]

                junction Junction7 sp
                [
                    position = 7288, 8632
                ]

                junction Junction10 sp
                [
                    position = 7296, 8768
                ]

                junction Junction11 sp
                [
                    position = 7368, 8912
                ]

                junction Junction20 sp
                [
                    position = 7008, 8928
                ]

                junction Junction26 sp
                [
                    position = 7760, 8632
                ]

                junction Junction27 sp
                [
                    position = 7504, 8744
                ]

                junction Junction74 sp
                [
                    position = 7288, 9024
                ]

                junction Junction85 sp
                [
                    position = 7288, 9136
                ]

                junction Junction88 sp
                [
                    position = 7824, 9256
                ]

                junction Junction89 sp
                [
                    position = 7384, 9256
                ]

                junction Junction91 sp
                [
                    position = 7072, 9008
                ]

                junction Junction92 sp
                [
                    position = 7072, 9120
                ]

                junction Junction93 sp
                [
                    position = 7824, 9160
                ]

                junction Junction95 pe
                [
                    position = 8208, 9056
                ]

                junction Junction96 pe
                [
                    position = 8424, 9056
                ]

                connect E_qp.E_qp3 Junction7 as Connection128
                connect E_qp3 Phi_1d_a.E_qp as Connection34
                connect E_qp_M.in Junction7 as Connection130
                connect Junction10 Phi_1d_a1 as Connection138
                connect Junction11 Phi_2q_a.Phi_2q_a as Connection141
                connect Junction20 Gain1.in as Connection180
                connect Junction7 E_qp1 as Connection129
                connect Phi_1d_a.Phi_1d_a Junction10 as Connection137
                connect Phi_1d_a3 E_qp.Phi_1d_a as Connection36
                connect Phi_1d_a_M.in Junction10 as Connection139
                connect Phi_2q_a1 Junction11 as Connection140
                connect Phi_2q_a_M.in Junction11 as Connection142
                connect Phi_d_a4 w_m.Phi_d_a as Connection30
                connect Phi_q_a4 w_m.Phi_q_a as Connection25
                connect w_m.w_m2 Junction20 as Connection179
                connect E_qp4 "Phi_d_a 2.E_qp" as Connection97
                connect Phi_1d_a4 "Phi_d_a 2.Phi_1d_a" as Connection96
                connect Phi_2q_a4 "Phi_q_a 2.Phi_2q_a" as Connection88
                connect "Phi_d_a 2.Phi_d_a" Junction26 as Connection198
                connect Junction26 Phi_d_a_M.in as Connection199
                [
                    breakpoints = 7760, 8632; 7760, 8592
                ]
                connect Phi_d_a1 Junction26 as Connection200
                connect "Phi_q_a 2.Phi_q_a" Junction27 as Connection202
                connect Junction27 Phi_q_a1 as Connection203
                connect Phi_q_a_M.in Junction27 as Connection204
                connect Phi_d_a6 V_qG2.Phi_d_a as Connection110
                connect Phi_q_a6 V_qG2.Phi_q_a as Connection109
                connect Phi_d_a5 V_dG2.Phi_d_a as Connection106
                connect Phi_q_a5 V_dG2.Phi_q_a as Connection107
                connect I_d_a3 E_qp.I_d_a as Connection731
                connect I_d_a2 Phi_1d_a.I_d_a as Connection732
                connect I_q_a7 "Phi_q_a 2.I_q_a" as Connection734
                connect I_q_a4 w_m.I_q_a as Connection735
                connect I_d_a5 w_m.I_d_a as Connection736
                connect Phi_2q_a.I_q_a I_q_a6 as Connection737
                connect I_d_a7 "Phi_d_a 2.I_d_a" as Connection738
                connect V_qG2.V_qG Junction74 as Connection770
                connect Junction74 Gain8.in as Connection771
                connect Eq_phi.in Junction74 as Connection772
                connect Gain9.in Junction85 as Connection1274
                connect Junction85 V_dG2.V_d_a as Connection1275
                connect Ed_phi.in Junction85 as Connection1276
                connect I_a1 "abc to qd.a" as Connection1293
                connect I_b1 "abc to qd.b" as Connection1294
                connect I_c1 "abc to qd.c" as Connection1295
                connect "abc to qd.q" Gain10.in as Connection1296
                connect "abc to qd.d" Gain11.in as Connection1297
                connect Gain8.out "qd to abc.q" as Connection1306
                connect "qd to abc.a" V_a as Connection1307
                connect "qd to abc.b" V_b as Connection1308
                connect "qd to abc.c" V_c as Connection1309
                connect "qd to abc.d" Gain9.out as Connection1310
                connect I_d_a1.in Junction88 as Connection1317
                connect Junction88 Gain11.out as Connection1318
                connect I_d_a Junction88 as Connection1319
                connect "C function1.out" Junction89 as Connection1323
                connect Junction89 "qd to abc.theta" as Connection1324
                connect "abc to qd.theta" Junction89 as Connection1325
                connect E_F.out E_qp.E_F as Connection1436
                connect V_qG2.w_e Junction91 as Connection1443
                connect Junction91 Gain1.out as Connection1444
                connect V_dG2.w_e Junction92 as Connection1446
                connect Junction92 Junction91 as Connection1447
                connect "C function1.in" Junction92 as Connection1448
                connect Gain10.out Junction93 as Connection1450
                connect Junction93 I_q_a as Connection1451
                connect I_q_a1.in Junction93 as Connection1452
                connect Ia1.p_node Ra.n_node as Connection237
                connect Rb.n_node Ib1.p_node as Connection238
                connect Rc.n_node Ic1.p_node as Connection240
                connect Ec1.p_node Rc.p_node as Connection1513
                [
                    breakpoints = 8424, 8960
                ]
                connect Rb.p_node Eb1.p_node as Connection1515
                [
                    breakpoints = 8264, 8864
                ]
                connect Eb1.n_node Junction95 as Connection1556
                connect Ea1.n_node Junction95 as Connection1558
                connect Gain17.in Junction20 as Connection1563
                [
                    breakpoints = 7008, 8928; 7008, 8928
                ]
                connect Torque "Rate Transition1.in" as Connection1564
                connect "Rate Transition1.out" w_m.T_M as Connection1565
                connect "Speed (rpm)" "Rate Transition2.out" as Connection1566
                connect "Rate Transition2.in" Gain17.out as Connection1567
                connect E_F.p_node "+ E_F" as Connection1568
                connect E_F.n_node "- E_F" as Connection1569
                connect Ec1.n_node Junction96 as Connection1571
                connect Junction96 Junction95 as Connection1572
                [
                    breakpoints = 8400, 9056
                ]
                connect ground Junction96 as Connection1573
                connect Ec Ic1.n_node as Connection1574
                connect Eb Ib1.n_node as Connection1575
                connect Ea Ia1.n_node as Connection1576
                connect Ea1.p_node Ra.p_node as Connection1607
                connect V_a1 Ea1.in as Connection1608
                connect V_b1 Eb1.in as Connection1609
                connect V_c1 Ec1.in as Connection1610
                connect Ic1.out I_c as Connection1611
                connect Ib1.out I_b as Connection1612
                connect Ia1.out I_a as Connection1613
            }
            [
                position = 7104, 8280
                size = 208, 216
            ]

            component Subsystem "BE1-25A Synchronizer" {
                layout = dynamic
                component gen_trigonometric "Trigonometric function2" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7456, 8088
                    hide_name = True
                ]

                component gen_limiter Limit2 {
                    lower_limit = "1e-12"
                }
                [
                    position = 7384, 8104
                    hide_name = True
                ]

                component src_constant Constant9 {
                    execution_rate = "Ts_sys"
                    value = "5e-2"
                }
                [
                    position = 8456, 8224
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer1" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "dV inherit"
                    in_terminal_labels = "[(\'dV\', True)]"
                    in_terminal_properties = "real dV;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "del_V inherit"
                    out_terminal_labels = "[(\'del_V\', True)]"
                    out_terminal_properties = "real del_V;"
                    output_fnc = "/*Begin code section*/
if (dV>maxV_slip)
{
    del_V = maxV_pds;
}
else if ((dV<=maxV_slip) && (dV>0))
{
    del_V = maxV_pds*dV/maxV_slip;
}
else if ((dV<=0) && (dV>-1*(maxV_slip-minV_slip)))
{
    del_V = 0;
    //del_V = maxV_pds*dV/min_slip;
}
else if ((dV <= (-1*(maxV_slip-minV_slip)))&&(dV > (-1*maxV_slip)))
{
    del_V= maxV_pds*(dV+(maxV_slip-minV_slip))/minV_slip;
}
else if (dV <= (-1*maxV_slip))
{
    del_V = -1*maxV_pds;
}
/*End code section*/"
                    parameters = "real maxV_slip;real minV_slip;real maxV_pds;"
                }
                [
                    position = 8352, 8616
                    hide_name = True
                    size = 96, 96
                ]

                component gen_abs Abs2 {
                }
                [
                    position = 8456, 8192
                    hide_name = True
                ]

                component gen_gain Gain4 {
                    gain = "1/w_0"
                }
                [
                    position = 7832, 8368
                    hide_name = True
                ]

                component gen_trigonometric "Trigonometric function1" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7456, 8000
                    hide_name = True
                ]

                component gen_c_function "Hold after connect" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit;MT_sync inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True), (\'MT_sync\', True)]"
                    in_terminal_properties = "real in;int connect;inherit MT_sync;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if ((connect==0)&&(MT_sync==1))
    var = in;
else if (MT_sync==0)
    var =0;
/*End code section*/"
                }
                [
                    position = 8352, 8416
                    hide_name = True
                    size = 96, 96
                ]

                component gen_c_function "Hold after connect1" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit;inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit;MT_sync inherit;exc_state inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True), (\'MT_sync\', True), (\'exc_state\', True)]"
                    in_terminal_properties = "real in;int connect;inherit MT_sync;inherit exc_state;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if ((connect==0)&&(exc_state==1)&&(MT_sync==1))
    var = in;
else if (MT_sync==0)
    var =0;
/*End code section*/"
                }
                [
                    position = 8576, 8664
                    hide_name = True
                    size = 96, 136
                ]

                component gen_c_function "confine phase" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
if (in > 0)
{
    if (in > (6.283185307179586/2))
        out = in - 6.283185307179586;
    else
        out = in;
}
if (in < 0)
{
    if (in < (-6.283185307179586/2))
        out = in + 6.283185307179586;
    else
        out = in;
}
/*End code section*/"
                }
                [
                    position = 7824, 8048
                    size = 56, 48
                ]

                component gen_sum Sum5 {
                }
                [
                    position = 7344, 8352
                    hide_name = True
                ]

                component gen_probe frequency_diff3 {
                }
                [
                    position = 7920, 8128
                    scale = -1, 1
                ]

                component gen_product Product4 {
                }
                [
                    position = 7264, 8384
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe3" {
                    override_signal_name = "True"
                    signal_name = "ang_sync3"
                }
                [
                    position = 8616, 8040
                    hide_name = True
                ]

                component src_constant Constant7 {
                    execution_rate = "Ts_sys"
                    value = "1e-3"
                }
                [
                    position = 8088, 8112
                    hide_name = True
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7736, 8048
                    hide_name = True
                ]

                component gen_product Product3 {
                }
                [
                    position = 7264, 8320
                    hide_name = True
                ]

                component tm_delay "Unit Delay2" {
                }
                [
                    position = 7616, 8648
                    rotation = right
                    hide_name = True
                ]

                component gen_sum Sum2 {
                    signs = "-+"
                }
                [
                    position = 7920, 8392
                    hide_name = True
                ]

                component gen_rel_op "Relational operator1" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8040
                    hide_name = True
                ]

                component gen_rel_op "Relational operator4" {
                    relational_op = "<"
                }
                [
                    position = 8520, 8208
                    hide_name = True
                ]

                component gen_abs Abs4 {
                }
                [
                    position = 7920, 8048
                    hide_name = True
                ]

                component gen_probe volt_diff3 {
                }
                [
                    position = 8352, 8512
                ]

                component src_constant Constant6 {
                    execution_rate = "Ts_sys"
                    value = "5e-3"
                }
                [
                    position = 8056, 8024
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe1" {
                    override_signal_name = "True"
                    signal_name = "gridconnect2"
                }
                [
                    position = 9104, 8208
                    hide_name = True
                ]

                component gen_logic_op "Logical operator2" {
                    inputs = "4"
                    operator = "NOT"
                }
                [
                    position = 9040, 8248
                    rotation = right
                    hide_name = True
                ]

                component gen_gain Gain6 {
                    gain = "-1/V_DQ"
                }
                [
                    position = 7376, 8592
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe4" {
                    override_signal_name = "True"
                    signal_name = "freq_sync3"
                }
                [
                    position = 8616, 8008
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe5" {
                    override_signal_name = "True"
                    signal_name = "volt_sync3"
                }
                [
                    position = 8616, 8072
                    hide_name = True
                ]

                component gen_logic_op "Logical operator1" {
                    inputs = "3"
                }
                [
                    position = 8616, 8120
                    hide_name = True
                ]

                component gen_abs Abs5 {
                }
                [
                    position = 8056, 8128
                    hide_name = True
                ]

                component gen_probe angle_diff3 {
                }
                [
                    position = 8056, 7952
                ]

                component gen_sum Sum3 {
                    signs = "-+"
                }
                [
                    position = 8392, 8192
                    hide_name = True
                    scale = 1, -1
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7336, 8544
                    hide_name = True
                ]

                component gen_rel_op "Relational operator2" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8120
                    hide_name = True
                ]

                component Subsystem PLL {
                    layout = dynamic
                    component gen_pid_controller "PID controller1" {
                        controller_type = "PI"
                        enb_anti_windup_out = "True"
                        enb_output_limit_out = "True"
                        int_init_value = "w_0"
                        ki = "Ki_PLL"
                        kp = "Kp_PLL"
                        lower_sat_lim = "PLL_min"
                        upper_sat_lim = "PLL_max"
                    }
                    [
                        position = 8128, 8152
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        parameters = "real Ts_sys;"
                        update_fnc = "/*Begin code section*/
var += (Ts_sys*in);
/*End code section*/"
                    }
                    [
                        position = 8304, 8152
                        hide_name = True
                        size = 80, 48
                    ]

                    component gen_c_function "confine phase" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 8408, 8152
                        size = 56, 48
                    ]

                    port wt {
                        label = "wt"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8496, 8152
                    ]

                    port w {
                        label = "w"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8304, 8208
                    ]

                    port d {
                        label = "-d"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8064, 8152
                    ]

                    junction Junction1 sp
                    [
                        position = 8240, 8152
                    ]

                    connect wt "confine phase.out" as Connection14
                    connect "confine phase.in" "C function1.out" as Connection16
                    connect d "PID controller1.in" as Connection20
                    connect w Junction1 as Connection24
                    connect Junction1 "C function1.in" as Connection25
                    [
                        breakpoints = 8240, 8152
                    ]
                    connect "PID controller1.out" Junction1 as Connection26
                }
                [
                    position = 7544, 8592
                    scale = 1, -1
                    size = 96, 56
                ]

                component gen_limiter Limit1 {
                    lower_limit = "1e-12"
                }
                [
                    position = 7384, 8016
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe6" {
                    override_signal_name = "True"
                    signal_name = "griddisconnect2"
                }
                [
                    position = 9104, 8280
                    hide_name = True
                ]

                component gen_math_fnc "Mathematical function2" {
                    mathematical_fn = "sqrt"
                }
                [
                    position = 7416, 8352
                    hide_name = True
                ]

                component gen_probe Vd_G {
                }
                [
                    position = 7328, 8480
                    scale = -1, 1
                ]

                component gen_probe Vq_G {
                }
                [
                    position = 7432, 8472
                    scale = -1, 1
                ]

                component gen_probe del_P {
                }
                [
                    position = 8496, 8352
                ]

                component gen_probe del_V {
                }
                [
                    position = 8744, 8600
                ]

                component gen_c_function "stay connected1" {
                    global_variables = "real connect;"
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "ready inherit;connectMT inherit;MTsync inherit"
                    in_terminal_labels = "[(\'ready\', True), (\'connectMT\', True), (\'MTsync\', True)]"
                    in_terminal_properties = "inherit ready;inherit connectMT;inherit MTsync;"
                    init_fnc = "/*Begin code section*/
connect = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    out_terminal_properties = "int out;"
                    output_fnc = "/*Begin code section*/
out = connect;
/*End code section*/"
                    parameters = "real Ts;"
                    update_fnc = "/*Begin code section*/
if ((ready==1)&&(connectMT==1)&&(MTsync==1)){
    connect = 1;
}
else if((connectMT==0)||(MTsync==0)){
    connect = 0;
}
/*End code section*/"
                }
                [
                    position = 8760, 8176
                    hide_name = True
                    size = 160, 104
                ]

                component gen_probe "|V|" {
                }
                [
                    position = 7512, 8304
                ]

                component gen_probe w_G {
                }
                [
                    position = 7920, 8352
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe w_bus {
                }
                [
                    position = 7920, 8432
                ]

                component gen_probe E_d {
                }
                [
                    position = 7496, 8720
                ]

                component gen_probe E_q {
                }
                [
                    position = 7496, 8848
                    rotation = down
                    scale = -1, 1
                ]

                component gen_gain Gain7 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7336, 8736
                    hide_name = True
                ]

                component gen_gain Gain12 {
                    gain = "-1/V_DQ"
                }
                [
                    position = 7336, 8832
                    hide_name = True
                ]

                component tm_delay "Unit Delay5" {
                }
                [
                    position = 9000, 8176
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer2" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "df inherit"
                    in_terminal_labels = "[(\'df\', True)]"
                    in_terminal_properties = "real df;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "del_P inherit"
                    out_terminal_labels = "[(\'del_P\', True)]"
                    out_terminal_properties = "real del_P;"
                    output_fnc = "/*Begin code section*/
if (df>maxw_slip)
{
    del_P = 1.125*maxP_pds;
}
else if ((df<=maxw_slip) && (df>0))
{
    del_P = maxP_pds*df/maxw_slip + (0.125*maxP_pds);
    //del_P = maxP_pds*(df+1e-4)/max_slip + (angle_slip);
}
else if ((df<=0) && (df > (-minw_slip)))
{
    del_P = (0.125*maxP_pds)*(df)/minw_slip + (0.125*maxP_pds);
    //del_P = maxP_pds*((-1*df)+1e-4)/min_slip  + (angle_slip);
}
else if ((df <= (-1*minw_slip))&&(df > (-1*maxw_slip)))
{
    del_P = 0;
    //del_P = maxP_pds*((min_slip)+1e-4)/min_slip  + (angle_slip);
}
else if (df <= (-1*maxw_slip))
{
    del_P = (maxw_slip+df)*maxP_pds/maxw_slip;
}
/*End code section*/"
                    parameters = "real maxP_pds;real maxw_slip;real minw_slip;"
                }
                [
                    position = 8112, 8392
                    hide_name = True
                    scale = 1, -1
                    size = 128, 112
                ]

                component gen_c_function "BE1-25A Synchronizer (modified)" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "df inherit"
                    in_terminal_labels = "[(\'df\', True)]"
                    in_terminal_properties = "real df;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "del_w inherit"
                    out_terminal_labels = "[(\'del_w\', True)]"
                    out_terminal_properties = "real del_w;"
                    output_fnc = "/*Begin code section*/
if (df>maxw_slip)
{
    del_w = (df-maxw_slip)*maxw_pds/maxw_slip;
}
else if ((df <= maxw_slip)&&(df > minw_slip))
{
    del_w = 0;
}
else if ((df<=minw_slip) && (df > 0))
{
    del_w = (0.125*maxw_pds)*(df)/minw_slip - (0.125*maxw_pds);
}
else if ((df<=0) && (df>(-1*maxw_slip)))
{
    del_w = maxw_pds*df/maxw_slip - (0.125*maxw_pds);
}
else if (df <= (-1*maxw_slip))
{
    del_w = -1.125*maxw_pds;
}
/*End code section*/"
                    parameters = "real Ts;real maxw_pds;real maxw_slip;real minw_slip;"
                }
                [
                    position = 9112, 8016
                    scale = 1, -1
                    size = 128, 112
                ]

                component gen_probe thetaPLL {
                }
                [
                    position = 7672, 8704
                ]

                component gen_probe omegaPLL {
                }
                [
                    position = 7680, 8616
                ]

                component gen_probe theta_E {
                }
                [
                    position = 7632, 7960
                ]

                component gen_probe theta_V {
                }
                [
                    position = 7632, 8048
                ]

                component gen_c_function "Hold after connect2" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True)]"
                    in_terminal_properties = "real in;int connect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
/*End code section*/"
                }
                [
                    position = 8576, 8440
                    hide_name = True
                    size = 80, 88
                ]

                component gen_c_function "Hold after connect3" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True)]"
                    in_terminal_properties = "real in;int connect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
/*End code section*/"
                }
                [
                    position = 8824, 8688
                    hide_name = True
                    size = 80, 88
                ]

                component gen_gain Gain13 {
                    gain = "1/w_0"
                }
                [
                    position = 7672, 8584
                    hide_name = True
                ]

                component Subsystem "abc to qd" {
                    layout = dynamic
                    component gen_trigonometric "Trigonometric function3" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 7936
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8224, 7912
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8024
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8216, 8024
                        hide_name = True
                    ]

                    component gen_product Product3 {
                    }
                    [
                        position = 8216, 8136
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function2" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8048
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function4" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8160
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 7736, 8160
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts_sys"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8168
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 7736, 8048
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts_sys"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8056
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function5" {
                    }
                    [
                        position = 8120, 8256
                        hide_name = True
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 8216, 8224
                        hide_name = True
                    ]

                    component gen_sum Sum5 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8336
                        hide_name = True
                    ]

                    component gen_product Product5 {
                    }
                    [
                        position = 8200, 8336
                        hide_name = True
                    ]

                    component gen_product Product6 {
                    }
                    [
                        position = 8200, 8448
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function6" {
                    }
                    [
                        position = 8120, 8368
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function7" {
                    }
                    [
                        position = 8120, 8480
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8024
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8336
                        hide_name = True
                    ]

                    port q {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8024
                    ]

                    port d {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8336
                    ]

                    port theta {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7512, 7936
                    ]

                    port a {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 7904
                        rotation = down
                        scale = -1, 1
                    ]

                    port b {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8016
                        rotation = down
                        scale = -1, 1
                    ]

                    port c {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8128
                        rotation = down
                        scale = -1, 1
                    ]

                    junction Junction11 sp
                    [
                        position = 7688, 7936
                    ]

                    junction Junction12 sp
                    [
                        position = 7688, 8040
                    ]

                    junction Junction3 sp
                    [
                        position = 8056, 7904
                    ]

                    junction Junction13 sp
                    [
                        position = 8032, 7936
                    ]

                    junction Junction7 sp
                    [
                        position = 7960, 8016
                    ]

                    junction Junction8 sp
                    [
                        position = 7936, 8048
                    ]

                    junction Junction9 sp
                    [
                        position = 7864, 8128
                    ]

                    junction Junction10 sp
                    [
                        position = 7840, 8160
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">q = (2/3)*( a*cos(wt) + b*cos(wt-(2*pi/3)) + c*cos(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">d = (2/3)*( a*sin(wt) + b*sin(wt-(2*pi/3)) + c*sin(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">zero = (1/3)*( a + b + c );</p></body></html> ENDCOMMENT 
                    [
                        position = 8512, 7952
                    ]

                    connect "Trigonometric function3.out" Product1.in1 as Connection1151
                    connect Product1.out Sum3.in as Connection1153
                    connect Product2.out Sum3.in1 as Connection1154
                    connect "Trigonometric function2.out" Product2.in1 as Connection1155
                    connect "Trigonometric function4.out" Product3.in1 as Connection1164
                    connect Constant2.out Sum2.in1 as Connection1148
                    connect Product3.out Sum3.in2 as Connection1171
                    connect "Trigonometric function5.out" Product4.in1 as Connection1173
                    connect Product4.out Sum5.in as Connection1174
                    connect Product5.out Sum5.in1 as Connection1175
                    connect "Trigonometric function6.out" Product5.in1 as Connection1176
                    connect "Trigonometric function7.out" Product6.in1 as Connection1179
                    connect Product6.out Sum5.in2 as Connection1183
                    connect Sum3.out Gain1.in as Connection1186
                    connect Junction11 theta as Connection1232
                    connect Gain1.out q as Connection1187
                    connect Sum5.out Gain2.in as Connection1188
                    connect Sum2.in Junction12 as Connection1234
                    connect Gain2.out d as Connection1189
                    connect Junction12 Junction11 as Connection1235
                    connect Sum4.in Junction12 as Connection1236
                    connect a Junction3 as Connection1190
                    connect Junction3 Product1.in as Connection1191
                    connect "Trigonometric function3.in" Junction13 as Connection1237
                    connect Product4.in Junction3 as Connection1192
                    connect Junction13 Junction11 as Connection1238
                    connect "Trigonometric function5.in" Junction13 as Connection1239
                    connect b Junction7 as Connection1213
                    connect Junction7 Product2.in as Connection1214
                    connect Product5.in Junction7 as Connection1215
                    connect Sum2.out Junction8 as Connection1216
                    connect Junction8 "Trigonometric function2.in" as Connection1217
                    connect "Trigonometric function6.in" Junction8 as Connection1218
                    connect Constant3.out Sum4.in1 as Connection1219
                    connect c Junction9 as Connection1220
                    connect Junction9 Product3.in as Connection1221
                    connect Product6.in Junction9 as Connection1222
                    connect Sum4.out Junction10 as Connection1227
                    connect Junction10 "Trigonometric function4.in" as Connection1228
                    [
                        breakpoints = 7840, 8160
                    ]
                    connect "Trigonometric function7.in" Junction10 as Connection1229
                }
                [
                    position = 7256, 8592
                    size = 80, 136
                ]

                component Subsystem "abc to qd1" {
                    layout = dynamic
                    component gen_trigonometric "Trigonometric function3" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 7936
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8224, 7912
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8024
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8216, 8024
                        hide_name = True
                    ]

                    component gen_product Product3 {
                    }
                    [
                        position = 8216, 8136
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function2" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8048
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function4" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8160
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 7736, 8160
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts_sys"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8168
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 7736, 8048
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts_sys"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8056
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function5" {
                    }
                    [
                        position = 8120, 8256
                        hide_name = True
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 8216, 8224
                        hide_name = True
                    ]

                    component gen_sum Sum5 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8336
                        hide_name = True
                    ]

                    component gen_product Product5 {
                    }
                    [
                        position = 8200, 8336
                        hide_name = True
                    ]

                    component gen_product Product6 {
                    }
                    [
                        position = 8200, 8448
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function6" {
                    }
                    [
                        position = 8120, 8368
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function7" {
                    }
                    [
                        position = 8120, 8480
                        hide_name = True
                    ]

                    component gen_c_function "confine phase" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 7592, 7936
                        size = 56, 48
                    ]

                    component gen_gain Gain1 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8024
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8336
                        hide_name = True
                    ]

                    port q {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8024
                    ]

                    port d {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8336
                    ]

                    port theta {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7512, 7936
                    ]

                    port a {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 7904
                        rotation = down
                        scale = -1, 1
                    ]

                    port b {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8016
                        rotation = down
                        scale = -1, 1
                    ]

                    port c {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8128
                        rotation = down
                        scale = -1, 1
                    ]

                    junction Junction3 sp
                    [
                        position = 8056, 7904
                    ]

                    junction Junction4 sp
                    [
                        position = 7688, 8040
                    ]

                    junction Junction5 sp
                    [
                        position = 7688, 7936
                    ]

                    junction Junction6 sp
                    [
                        position = 8032, 7936
                    ]

                    junction Junction7 sp
                    [
                        position = 7960, 8016
                    ]

                    junction Junction8 sp
                    [
                        position = 7936, 8048
                    ]

                    junction Junction9 sp
                    [
                        position = 7864, 8128
                    ]

                    junction Junction10 sp
                    [
                        position = 7840, 8160
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">q = (2/3)*( a*cos(wt) + b*cos(wt-(2*pi/3)) + c*cos(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">d = (2/3)*( a*sin(wt) + b*sin(wt-(2*pi/3)) + c*sin(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">zero = (1/3)*( a + b + c );</p></body></html> ENDCOMMENT 
                    [
                        position = 8512, 7952
                    ]

                    connect "Trigonometric function3.out" Product1.in1 as Connection1151
                    connect Product1.out Sum3.in as Connection1153
                    connect Product2.out Sum3.in1 as Connection1154
                    connect "Trigonometric function2.out" Product2.in1 as Connection1155
                    connect "Trigonometric function4.out" Product3.in1 as Connection1164
                    connect Constant2.out Sum2.in1 as Connection1148
                    connect Product3.out Sum3.in2 as Connection1171
                    connect "Trigonometric function5.out" Product4.in1 as Connection1173
                    connect Product4.out Sum5.in as Connection1174
                    connect Product5.out Sum5.in1 as Connection1175
                    connect "Trigonometric function6.out" Product5.in1 as Connection1176
                    connect "Trigonometric function7.out" Product6.in1 as Connection1179
                    connect Junction5 "confine phase.out" as Connection1230
                    connect "confine phase.in" theta as Connection1231
                    connect Product6.out Sum5.in2 as Connection1183
                    connect Sum3.out Gain1.in as Connection1186
                    connect Gain1.out q as Connection1187
                    connect Sum5.out Gain2.in as Connection1188
                    connect Gain2.out d as Connection1189
                    connect a Junction3 as Connection1190
                    connect Junction3 Product1.in as Connection1191
                    connect Product4.in Junction3 as Connection1192
                    connect Sum2.in Junction4 as Connection1204
                    connect Sum4.in Junction4 as Connection1206
                    connect Junction4 Junction5 as Connection1207
                    connect "Trigonometric function3.in" Junction6 as Connection1210
                    connect Junction6 Junction5 as Connection1211
                    connect "Trigonometric function5.in" Junction6 as Connection1212
                    connect b Junction7 as Connection1213
                    connect Junction7 Product2.in as Connection1214
                    connect Product5.in Junction7 as Connection1215
                    connect Sum2.out Junction8 as Connection1216
                    connect Junction8 "Trigonometric function2.in" as Connection1217
                    connect "Trigonometric function6.in" Junction8 as Connection1218
                    connect Constant3.out Sum4.in1 as Connection1219
                    connect c Junction9 as Connection1220
                    connect Junction9 Product3.in as Connection1221
                    connect Product6.in Junction9 as Connection1222
                    connect Sum4.out Junction10 as Connection1227
                    connect Junction10 "Trigonometric function4.in" as Connection1228
                    [
                        breakpoints = 7840, 8160
                    ]
                    connect "Trigonometric function7.in" Junction10 as Connection1229
                }
                [
                    position = 7256, 8784
                    size = 80, 136
                ]

                component gen_gain Gain16 {
                    gain = "180/np.pi"
                }
                [
                    position = 7560, 8048
                    hide_name = True
                ]

                component gen_probe "|E|" {
                }
                [
                    position = 8128, 8544
                ]

                component Subsystem magnitude {
                    layout = dynamic
                    component gen_math_fnc "Mathematical function1" {
                        mathematical_fn = "sqrt"
                    }
                    [
                        position = 8272, 8192
                        hide_name = True
                    ]

                    component gen_product Product5 {
                    }
                    [
                        position = 8112, 8128
                        hide_name = True
                    ]

                    component gen_product Product6 {
                    }
                    [
                        position = 8112, 8256
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                    }
                    [
                        position = 8192, 8192
                        hide_name = True
                    ]

                    port q {
                        label = "q"
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8032, 8120
                    ]

                    port d {
                        label = "d"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8032, 8248
                    ]

                    port magnitude {
                        label = "magnitude"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8344, 8192
                    ]

                    junction Junction1 sp
                    [
                        position = 8064, 8248
                    ]

                    junction Junction2 sp
                    [
                        position = 8064, 8120
                    ]

                    connect Junction1 Product6.in as Connection149
                    connect Junction2 q as Connection152
                    connect "Mathematical function1.out" magnitude as Connection146
                    connect Product5.in Junction2 as Connection151
                    connect Product5.in1 Junction2 as Connection153
                    connect Product5.out Sum3.in as Connection56
                    connect Product6.in1 Junction1 as Connection150
                    connect Product6.out Sum3.in1 as Connection143
                    connect Sum3.out "Mathematical function1.in" as Connection58
                    connect d Junction1 as Connection148
                }
                [
                    position = 7984, 8648
                    hide_name = True
                    size = 80, 48
                ]

                component gen_gain Gain17 {
                    gain = "180/np.pi"
                }
                [
                    position = 7568, 7960
                    hide_name = True
                ]

                component gen_gain Gain18 {
                    gain = "V_ABC*np.sqrt(3)/1000"
                }
                [
                    position = 8072, 8600
                    rotation = left
                    hide_name = True
                ]

                component gen_probe "|E| pu" {
                }
                [
                    position = 8136, 8728
                ]

                tag From43 {
                    value = "Vd_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8312
                    hide_name = True
                ]

                tag w_bus1 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8584
                    hide_name = True
                ]

                tag Vb_G1 {
                    value = "VbG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7136, 8576
                    hide_name = True
                ]

                tag "|V|1" {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7512, 8352
                    hide_name = True
                ]

                tag theta_bus {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7136, 8640
                    hide_name = True
                    scale = -1, 1
                ]

                tag theta_bus5 {
                    value = "dV"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8232, 8616
                    hide_name = True
                ]

                tag From42 {
                    value = "Vq_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8392
                    hide_name = True
                ]

                tag Goto32 {
                    value = "Vq_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7544, 8472
                    hide_name = True
                    size = 60, 20
                ]

                tag Connect2 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8232, 8416
                    hide_name = True
                    size = 58, 20
                ]

                tag From44 {
                    value = "Vd_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7320, 8104
                    hide_name = True
                ]

                tag From45 {
                    value = "Vq_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7320, 8072
                    hide_name = True
                ]

                tag Goto30 {
                    value = "dV"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8504, 8160
                    hide_name = True
                ]

                tag Goto33 {
                    value = "Vd_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7440, 8544
                    hide_name = True
                    size = 60, 20
                ]

                tag Vc_G1 {
                    value = "VcG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7136, 8608
                    hide_name = True
                ]

                tag From41 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7320, 8016
                    hide_name = True
                ]

                tag Va_G1 {
                    value = "VaG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7136, 8544
                    hide_name = True
                ]

                tag w_bus3 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7736, 8416
                    hide_name = True
                ]

                tag Connect1 {
                    value = "synced"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9104, 8176
                    hide_name = True
                ]

                tag From1 {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 8176
                    hide_name = True
                ]

                tag From40 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7320, 7984
                    hide_name = True
                ]

                tag V_t9 {
                    value = "exc_state"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8456, 8712
                    hide_name = True
                ]

                tag MT_ON2 {
                    value = "MT_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8232, 8440
                    hide_name = True
                ]

                tag MT_ON3 {
                    value = "MT_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8456, 8680
                    hide_name = True
                ]

                tag MT_ON4 {
                    value = "MT_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8616, 8208
                    hide_name = True
                ]

                tag w_e7 {
                    value = "w_e"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7736, 8368
                    hide_name = True
                ]

                tag Goto28 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7432, 8832
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto29 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7432, 8736
                    hide_name = True
                    size = 60, 20
                ]

                tag From34 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7160, 8800
                    hide_name = True
                    size = 60, 20
                ]

                tag From33 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7160, 8736
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7160, 8768
                    hide_name = True
                    size = 60, 20
                ]

                tag theta_bus1 {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7160, 8832
                    hide_name = True
                ]

                tag Connect5 {
                    value = "Connect MT"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8616, 8176
                    hide_name = True
                ]

                tag Connect6 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8456, 8648
                    hide_name = True
                    size = 58, 20
                ]

                tag Connect3 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8472, 8464
                    hide_name = True
                    size = 58, 20
                ]

                tag Goto34 {
                    value = "P_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8744, 8440
                    hide_name = True
                ]

                tag Connect7 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8720, 8712
                    hide_name = True
                    size = 58, 20
                ]

                tag Goto35 {
                    value = "|V|_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9000, 8688
                    hide_name = True
                ]

                tag "|V|5" {
                    value = "|E|"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8120, 8648
                    hide_name = True
                ]

                tag From52 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7840, 8624
                    hide_name = True
                ]

                tag From53 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7840, 8672
                    hide_name = True
                ]

                tag From54 {
                    value = "|E|"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 8208
                    hide_name = True
                ]

                junction Junction38 sp
                [
                    position = 8304, 8120
                ]

                junction Junction42 sp
                [
                    position = 7216, 8392
                ]

                junction Junction43 sp
                [
                    position = 7216, 8312
                ]

                junction Junction49 sp
                [
                    position = 7872, 8048
                ]

                junction Junction35 sp
                [
                    position = 8424, 8192
                ]

                junction Junction56 sp
                [
                    position = 8280, 8616
                ]

                junction Junction58 sp
                [
                    position = 7368, 8544
                ]

                junction Junction63 sp
                [
                    position = 9040, 8176
                ]

                junction Junction66 sp
                [
                    position = 8552, 8136
                ]

                junction Junction67 sp
                [
                    position = 8576, 8040
                ]

                junction Junction69 sp
                [
                    position = 7456, 8352
                ]

                junction Junction71 sp
                [
                    position = 7880, 8368
                ]

                junction Junction73 sp
                [
                    position = 7992, 8128
                ]

                junction Junction78 sp
                [
                    position = 9040, 8208
                ]

                junction Junction61 sp
                [
                    position = 7376, 8736
                ]

                junction Junction81 sp
                [
                    position = 7992, 8392
                ]

                junction Junction85 sp
                [
                    position = 7640, 8584
                ]

                junction Junction86 sp
                [
                    position = 7520, 8088
                ]

                junction Junction87 sp
                [
                    position = 7520, 8000
                ]

                junction Junction90 sp
                [
                    position = 7880, 8416
                ]

                junction Junction99 sp
                [
                    position = 7200, 8640
                ]

                junction Junction100 sp
                [
                    position = 7616, 8680
                ]

                junction Junction101 sp
                [
                    position = 7376, 8832
                ]

                junction Junction46 sp
                [
                    position = 8072, 8648
                ]

                junction Junction102 sp
                [
                    position = 7472, 8592
                ]

                junction Junction103 sp
                [
                    position = 7472, 8472
                ]

                junction Junction104 sp
                [
                    position = 8072, 8648
                ]

                junction Junction105 sp
                [
                    position = 8416, 8416
                ]

                junction Junction106 sp
                [
                    position = 8672, 8664
                ]

                connect "Digital Probe4.in" Junction38 as Connection366
                connect From41 Limit1.in as Connection285
                connect Sum3.in1 From1 as Connection81
                connect angle_diff3.in Junction49 as Connection430
                connect Abs2.out "Relational operator4.in" as Connection84
                connect Connect2 "Hold after connect.connect" as Connection156
                connect Goto30 Junction35 as Connection308
                connect From45 "Trigonometric function2.in" as Connection401
                connect Constant7.out "Relational operator2.in" as Connection70
                connect Junction49 Abs4.in as Connection429
                connect Abs2.in Junction35 as Connection306
                connect From44 Limit2.in as Connection402
                connect "Digital Probe6.in" "Logical operator2.out" as Connection454
                connect Limit2.out "Trigonometric function2.in1" as Connection398
                connect Product3.out Sum5.in as Connection390
                connect Junction38 "Relational operator2.out" as Connection365
                [
                    breakpoints = 8288, 8120; 8288, 8120
                ]
                connect Product3.in Junction43 as Connection386
                connect Limit1.out "Trigonometric function1.in1" as Connection286
                connect From40 "Trigonometric function1.in" as Connection284
                connect "Relational operator2.in1" Abs5.out as Connection357
                connect From42 Junction42 as Connection384
                connect Junction43 From43 as Connection389
                connect Sum5.out "Mathematical function2.in" as Connection387
                connect Product3.in1 Junction43 as Connection391
                connect Junction35 Sum3.out as Connection307
                connect Product4.out Sum5.in1 as Connection388
                connect Constant9.out "Relational operator4.in1" as Connection85
                connect Product4.in Junction42 as Connection385
                connect "confine phase.out" Junction49 as Connection428
                connect Constant6.out "Relational operator1.in" as Connection69
                connect Junction42 Product4.in1 as Connection392
                connect "Logical operator1.in1" Junction38 as Connection364
                [
                    breakpoints = 8576, 8120
                ]
                connect theta_bus5 Junction56 as Connection464
                connect Junction56 "BE1-25A Synchronizer1.dV" as Connection465
                connect volt_diff3.in Junction56 as Connection466
                connect Goto33 Junction58 as Connection471
                connect Junction58 Gain5.out as Connection472
                connect Vd_G.in Junction58 as Connection473
                connect PLL.wt "Unit Delay2.in" as Connection474
                connect MT_ON2 "Hold after connect.MT_sync" as Connection492
                connect V_t9 "Hold after connect1.exc_state" as Connection493
                connect MT_ON3 "Hold after connect1.MT_sync" as Connection494
                connect "Hold after connect1.in" "BE1-25A Synchronizer1.del_V" as Connection495
                connect Connect1 Junction63 as Connection508
                connect MT_ON4 "stay connected1.MTsync" as Connection512
                connect w_e7 Gain4.in as Connection513
                connect "Logical operator1.in2" Junction66 as Connection530
                connect Junction66 "Relational operator4.out" as Connection531
                connect "Digital Probe5.in" Junction66 as Connection532
                connect "Relational operator1.out" Junction67 as Connection534
                connect Junction67 "Logical operator1.in" as Connection535
                connect "Digital Probe3.in" Junction67 as Connection536
                connect "Logical operator1.out" "stay connected1.ready" as Connection537
                connect "Mathematical function2.out" Junction69 as Connection544
                connect Junction69 "|V|1" as Connection545
                [
                    breakpoints = 7456, 8352
                ]
                connect "|V|.in" Junction69 as Connection546
                connect Gain4.out Junction71 as Connection550
                connect Junction71 Sum2.in as Connection551
                connect w_G.in Junction71 as Connection552
                connect Abs5.in Junction73 as Connection557
                connect frequency_diff3.in Junction73 as Connection559
                connect Junction63 Junction78 as Connection609
                [
                    breakpoints = 9040, 8176
                ]
                connect Junction78 "Logical operator2.in" as Connection610
                [
                    breakpoints = 9040, 8208
                ]
                connect "Digital Probe1.in" Junction78 as Connection611
                connect Goto29 Junction61 as Connection444
                connect Junction61 Gain7.out as Connection445
                connect E_d.in Junction61 as Connection618
                [
                    breakpoints = 7472, 8720; 7376, 8720; 7376, 8736
                ]
                connect Junction63 "Unit Delay5.out" as Connection623
                connect Connect5 "stay connected1.connectMT" as Connection625
                connect Connect6 "Hold after connect1.connect" as Connection626
                connect Abs4.out "Relational operator1.in1" as Connection627
                [
                    breakpoints = 8024, 8048; 8128, 8048
                ]
                connect "BE1-25A Synchronizer2.del_P" "Hold after connect.in" as Connection633
                connect Sum2.out Junction81 as Connection634
                [
                    breakpoints = 7968, 8392
                ]
                connect Junction81 Junction73 as Connection635
                [
                    breakpoints = 7992, 8200; 7992, 8128
                ]
                connect "BE1-25A Synchronizer2.df" Junction81 as Connection636
                connect PLL.w Junction85 as Connection649
                connect omegaPLL.in Junction85 as Connection651
                connect "Trigonometric function2.out" Junction86 as Connection654
                connect Junction86 Sum1.in1 as Connection655
                connect "Trigonometric function1.out" Junction87 as Connection657
                connect Connect3 "Hold after connect2.connect" as Connection1234
                connect Connect7 "Hold after connect3.connect" as Connection1243
                connect Gain13.out w_bus1 as Connection1252
                connect w_bus3 Junction90 as Connection1254
                connect Junction90 Sum2.in1 as Connection1255
                connect w_bus.in Junction90 as Connection1256
                connect Gain13.in Junction85 as Connection1340
                [
                    breakpoints = 7640, 8584
                ]
                connect From33 "abc to qd1.a" as Connection1356
                connect "abc to qd1.b" From35 as Connection1357
                connect From34 "abc to qd1.c" as Connection1358
                connect "abc to qd1.theta" theta_bus1 as Connection1359
                connect "abc to qd1.q" Gain7.in as Connection1360
                connect Gain12.in "abc to qd1.d" as Connection1361
                connect Gain6.in "abc to qd.d" as Connection1362
                connect Gain5.in "abc to qd.q" as Connection1363
                connect "abc to qd.c" Vc_G1 as Connection1364
                connect Vb_G1 "abc to qd.b" as Connection1365
                connect "abc to qd.a" Va_G1 as Connection1366
                connect "abc to qd.theta" Junction99 as Connection1375
                connect theta_bus Junction99 as Connection1377
                connect Junction99 Junction100 as Connection1382
                [
                    breakpoints = 7200, 8640
                ]
                connect Junction100 "Unit Delay2.out" as Connection1383
                [
                    breakpoints = 7616, 8680; 7616, 8680
                ]
                connect thetaPLL.in Junction100 as Connection1384
                connect Gain12.out Junction101 as Connection1386
                connect Junction101 Goto28 as Connection1387
                connect E_q.in Junction101 as Connection1388
                connect magnitude.magnitude Junction46 as Connection326
                connect Junction46 "|V|5" as Connection327
                connect From52 magnitude.d as Connection745
                connect From53 magnitude.q as Connection746
                connect "confine phase.in" Sum1.out as Connection1446
                [
                    breakpoints = 7776, 8048
                ]
                connect Sum1.in Junction87 as Connection1451
                [
                    breakpoints = 7696, 8000; 7632, 8000; 7632, 8000
                ]
                connect theta_E.in Gain17.out as Connection1452
                connect Gain17.in Junction87 as Connection1453
                connect theta_V.in Gain16.out as Connection1454
                connect Gain16.in Junction86 as Connection1455
                connect From54 Sum3.in as Connection1456
                connect Gain6.out Junction102 as Connection1466
                connect Junction102 PLL.d as Connection1467
                [
                    breakpoints = 7480, 8592
                ]
                connect Goto32 Junction103 as Connection1469
                connect Junction103 Junction102 as Connection1470
                connect Vq_G.in Junction103 as Connection1471
                connect Goto35 "Hold after connect3.out" as Connection1476
                connect Goto34 "Hold after connect2.out" as Connection1477
                connect "Unit Delay5.in" "stay connected1.out" as Connection1478
                connect "|E|.in" Gain18.out as Connection1479
                connect Gain18.in Junction104 as Connection1481
                connect Junction104 Junction46 as Connection1482
                connect "|E| pu.in" Junction104 as Connection1483
                connect "Hold after connect.out" Junction105 as Connection1489
                connect Junction105 del_P.in as Connection1490
                [
                    breakpoints = 8416, 8408
                ]
                connect "Hold after connect2.in" Junction105 as Connection1491
                connect "Hold after connect1.out" Junction106 as Connection1493
                connect Junction106 del_V.in as Connection1494
                [
                    breakpoints = 8672, 8664; 8672, 8664
                ]
                connect "Hold after connect3.in" Junction106 as Connection1495
            }
            [
                position = 7640, 7912
                size = 112, 144
            ]

            component Subsystem GovernorX {
                layout = dynamic
                component gen_gain Gain36 {
                    gain = "1/T1"
                }
                [
                    position = 8248, 8160
                    hide_name = True
                ]

                component gen_sum Sum10 {
                    signs = "++"
                }
                [
                    position = 8160, 8248
                    hide_name = True
                ]

                component gen_gain Gain30 {
                    gain = "1/T1"
                }
                [
                    position = 8320, 8248
                    hide_name = True
                ]

                component gen_integrator Integrator12 {
                }
                [
                    position = 8680, 8456
                    hide_name = True
                ]

                component gen_gain Gain28 {
                    gain = "pms/w_0"
                }
                [
                    position = 7800, 8376
                    hide_name = True
                ]

                component Subsystem "Exciter Activation" {
                    layout = dynamic
                    component gen_abs Abs1 {
                    }
                    [
                        position = 8192, 8208
                        hide_name = True
                    ]

                    component gen_comparator Comparator1 {
                    }
                    [
                        position = 8264, 8232
                        hide_name = True
                        scale = 1, -1
                    ]

                    component src_constant Constant1 {
                        execution_rate = "Ts_sys"
                        value = "4*maxw_slip"
                    }
                    [
                        position = 8192, 8256
                        hide_name = True
                    ]

                    component gen_probe "speed difference" {
                    }
                    [
                        position = 8096, 8144
                    ]

                    component gen_c_function "Activate Exciter" {
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "boolean inherit"
                        in_terminal_labels = "[(\'boolean\', True)]"
                        in_terminal_properties = "inherit boolean;"
                        init_fnc = "/*Begin code section*/
Activate = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "Activate inherit"
                        out_terminal_labels = "[(\'Activate\', True)]"
                        out_terminal_properties = "int Activate;"
                        output_fnc = "/*Begin code section*/
if(boolean==1){
    Activate = 1;
}
/*End code section*/"
                    }
                    [
                        position = 8360, 8232
                        size = 112, 48
                    ]

                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 8008, 8144
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts_sys"
                    }
                    [
                        position = 7936, 8120
                        hide_name = True
                    ]

                    port w_PU {
                        label = "w_PU"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7936, 8168
                    ]

                    port "exciter state" {
                        position = auto:auto
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8480, 8232
                    ]

                    junction Junction14 sp
                    [
                        position = 8048, 8144
                    ]

                    connect Abs1.out Comparator1.in2 as Connection105
                    connect Constant1.out Comparator1.in1 as Connection18
                    connect w_PU Sum1.in1 as Connection199
                    connect "speed difference.in" Junction14 as Connection195
                    connect Junction14 Sum1.out as Connection196
                    connect Abs1.in Junction14 as Connection197
                    connect Constant2.out Sum1.in as Connection201
                    connect Comparator1.out "Activate Exciter.boolean" as Connection206
                    connect "Activate Exciter.Activate" "exciter state" as Connection207
                }
                [
                    position = 7912, 8376
                    size = 112, 48
                ]

                component gen_sum Sum7 {
                    signs = "+-"
                }
                [
                    position = 7896, 8320
                    hide_name = True
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 7896, 8224
                    hide_name = True
                ]

                component gen_gain Gain29 {
                    gain = "R_D"
                }
                [
                    position = 7992, 8224
                    hide_name = True
                ]

                component gen_sum Sum3 {
                    signs = "-+"
                }
                [
                    position = 8376, 8240
                    hide_name = True
                ]

                component gen_gain Gain31 {
                    gain = "T3"
                }
                [
                    position = 7992, 8048
                    hide_name = True
                ]

                component gen_sum Sum4 {
                }
                [
                    position = 8072, 7992
                    hide_name = True
                ]

                component gen_gain Gain32 {
                    gain = "K*gov_Kp"
                }
                [
                    position = 8176, 7992
                    hide_name = True
                ]

                component gen_sum Sum5 {
                    signs = "+-"
                }
                [
                    position = 8288, 7976
                    hide_name = True
                ]

                component gen_gain Gain33 {
                    gain = "1/(T5+T6)"
                }
                [
                    position = 8408, 7976
                    hide_name = True
                ]

                component gen_sum Sum8 {
                    signs = "--"
                }
                [
                    position = 8512, 7952
                    hide_name = True
                ]

                component gen_gain Gain34 {
                    gain = "(T5+T6)/(T5*T6)"
                }
                [
                    position = 8608, 7952
                    hide_name = True
                ]

                component gen_gain Gain35 {
                    gain = "T4"
                }
                [
                    position = 7992, 7784
                    hide_name = True
                ]

                component gen_sum Sum9 {
                }
                [
                    position = 8064, 7760
                    hide_name = True
                ]

                component gen_integrator Integrator9 {
                }
                [
                    position = 8680, 8376
                    hide_name = True
                ]

                component gen_integrator Integrator10 {
                }
                [
                    position = 8696, 7952
                    hide_name = True
                ]

                component gen_integrator Integrator11 {
                }
                [
                    position = 8288, 7760
                    hide_name = True
                ]

                component src_scada_input AGC {
                    execution_rate = "Ts"
                    max = "S"
                    min = "-S"
                    unit = "W"
                }
                [
                    position = 7680, 8232
                ]

                component gen_probe P_b2 {
                }
                [
                    position = 8568, 8480
                    scale = -1, 1
                ]

                component gen_probe P_a2 {
                }
                [
                    position = 8568, 8400
                    scale = -1, 1
                ]

                component gen_probe P_a1 {
                }
                [
                    position = 8776, 8400
                ]

                component gen_probe P_b1 {
                }
                [
                    position = 8776, 8480
                ]

                component gen_probe P_sv {
                }
                [
                    position = 8800, 7816
                ]

                component gen_probe frequency_diff {
                }
                [
                    position = 8376, 8320
                ]

                component src_constant "AGC offset" {
                    execution_rate = "Ts"
                    value = "18345.5+400.3"
                }
                [
                    position = 7688, 8168
                ]

                component gen_sum Sum11 {
                    signs = "++"
                }
                [
                    position = 7760, 8200
                    hide_name = True
                ]

                component gen_rate_limiter "Rate Limiter2" {
                    falling_limit = "inner_w_fall"
                    rising_limit = "inner_w_rise"
                }
                [
                    position = 8080, 8320
                    hide_name = True
                ]

                component gen_gain Gain37 {
                    gain = "1/S"
                }
                [
                    position = 7816, 8200
                    hide_name = True
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "Ts"
                }
                [
                    position = 7992, 8320
                    hide_name = True
                    size = 32, 32
                ]

                port w_ref {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8312
                ]

                port w_m3 {
                    label = "w_m"
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8376
                ]

                port P_SV {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8936, 7760
                ]

                port "exciter state" {
                    label = "exc ON/OFF"
                    position = bottom:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8016, 8376
                ]

                tag From13 {
                    value = "P_b2"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8568, 8456
                    hide_name = True
                ]

                tag Goto6 {
                    value = "P_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8776, 8456
                    hide_name = True
                ]

                tag From1 {
                    value = "P_SV"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7800, 8248
                    hide_name = True
                    size = 54, 20
                ]

                tag From3 {
                    value = "P_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8160, 8160
                    hide_name = True
                ]

                tag Goto1 {
                    value = "P_b2"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8648, 8240
                    hide_name = True
                ]

                tag From5 {
                    value = "P_a2"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8568, 8376
                    hide_name = True
                ]

                tag Goto2 {
                    value = "P_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8776, 8376
                    hide_name = True
                ]

                tag From6 {
                    value = "P_b2"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 8048
                    hide_name = True
                ]

                tag From7 {
                    value = "P_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 7944
                    hide_name = True
                ]

                tag From8 {
                    value = "P_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8176, 7928
                    hide_name = True
                ]

                tag From9 {
                    value = "P_a2"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8400, 7928
                    hide_name = True
                ]

                tag Goto4 {
                    value = "P_a2"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8800, 7952
                    hide_name = True
                ]

                tag From10 {
                    value = "P_a2"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 7784
                    hide_name = True
                ]

                tag From11 {
                    value = "P_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 7736
                    hide_name = True
                ]

                tag Goto5 {
                    value = "P_SV"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8400, 7848
                    hide_name = True
                ]

                junction Junction3 sp
                [
                    position = 7832, 8376
                ]

                junction Junction4 sp
                [
                    position = 8352, 7760
                ]

                junction Junction5 sp
                [
                    position = 8624, 8456
                ]

                junction Junction6 sp
                [
                    position = 8624, 8376
                ]

                junction Junction7 sp
                [
                    position = 8728, 8376
                ]

                junction Junction8 sp
                [
                    position = 8728, 8456
                ]

                junction Junction10 sp
                [
                    position = 8120, 8320
                ]

                junction Junction11 sp
                [
                    position = 8728, 7760
                ]

                connect From3 Gain36.in as Connection748
                connect Gain36.out Sum3.in as Connection749
                connect Gain30.out Sum3.in1 as Connection752
                connect Gain28.in w_m3 as Connection7
                connect Sum2.out Gain29.in as Connection207
                [
                    breakpoints = 7944, 8224
                ]
                connect From6 Gain31.in as Connection19
                connect From7 Sum4.in as Connection21
                connect Gain31.out Sum4.in1 as Connection22
                connect Sum4.out Gain32.in as Connection23
                connect Gain32.out Sum5.in1 as Connection24
                connect From8 Sum5.in as Connection742
                connect Sum5.out Gain33.in as Connection26
                connect Gain33.out Sum8.in1 as Connection27
                connect From9 Sum8.in as Connection28
                connect Sum8.out Gain34.in as Connection29
                connect Gain35.in From10 as Connection33
                connect Gain35.out Sum9.in1 as Connection743
                connect Sum9.in From11 as Connection744
                [
                    breakpoints = 8024, 7736; 7936, 7736
                ]
                connect Integrator10.out Goto4 as Connection222
                connect Gain34.out Integrator10.in as Connection223
                connect Sum9.out Integrator11.in as Connection226
                connect Sum3.out Goto1 as Connection788
                connect Gain28.out Junction3 as Connection799
                connect Junction3 Sum7.in1 as Connection800
                [
                    breakpoints = 7832, 8376; 7832, 8344
                ]
                connect "Exciter Activation.w_PU" Junction3 as Connection801
                connect Integrator11.out Junction4 as Connection821
                connect Junction4 Goto5 as Connection822
                [
                    breakpoints = 8352, 7760
                ]
                connect From13 Junction5 as Connection824
                connect Junction5 Integrator12.in as Connection825
                connect P_b2.in Junction5 as Connection826
                connect From5 Junction6 as Connection827
                connect Junction6 Integrator9.in as Connection828
                connect P_a2.in Junction6 as Connection829
                connect Integrator9.out Junction7 as Connection830
                connect Junction7 Goto2 as Connection831
                connect P_a1.in Junction7 as Connection832
                connect Integrator12.out Junction8 as Connection833
                connect Junction8 Goto6 as Connection834
                connect P_b1.in Junction8 as Connection835
                connect "AGC offset.out" Sum11.in as Connection846
                connect From1 Sum2.in1 as Connection849
                connect w_ref Sum7.in as Connection853
                connect Gain30.in Sum10.out as Connection856
                connect Gain29.out Sum10.in as Connection857
                connect AGC.out Sum11.in1 as Connection858
                connect Sum11.out Gain37.in as Connection859
                connect Gain37.out Sum2.in as Connection860
                connect "Exciter Activation.exciter state" "exciter state" as Connection861
                connect Sum10.in1 Junction10 as Connection867
                connect Junction10 frequency_diff.in as Connection868
                [
                    breakpoints = 8120, 8320
                ]
                connect "Rate Limiter2.out" Junction10 as Connection869
                connect "Rate Limiter2.in" "Rate Transition1.out" as Connection870
                connect "Rate Transition1.in" Sum7.out as Connection871
                connect P_sv.in Junction11 as Connection873
                connect Junction11 Junction4 as Connection874
                [
                    breakpoints = 8728, 7760
                ]
                connect P_SV Junction11 as Connection875

                Ts = "Ts*4"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">DEGOV1 model</p></body></html>"

                    Ts {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "0"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE define_icon
                        mdl.disp_component_icon_text(item_handle, "DEGOV1")
                    ENDCODE

                    CODE init
                    ENDCODE
                }
            }
            [
                position = 6760, 7648
                size = 144, 136
            ]

            component Subsystem Governor {
                layout = dynamic
                component gen_sum Sum10 {
                    signs = "+++"
                }
                [
                    position = 8160, 8248
                    hide_name = True
                ]

                component gen_gain Gain28 {
                    gain = "pms/w_0"
                }
                [
                    position = 7800, 8376
                    hide_name = True
                ]

                component Subsystem "Exciter Activation" {
                    layout = dynamic
                    component gen_abs Abs1 {
                    }
                    [
                        position = 8192, 8208
                        hide_name = True
                    ]

                    component gen_comparator Comparator1 {
                    }
                    [
                        position = 8264, 8232
                        hide_name = True
                        scale = 1, -1
                    ]

                    component src_constant Constant1 {
                        execution_rate = "Ts_gov"
                        value = "4*maxw_slip"
                    }
                    [
                        position = 8192, 8256
                        hide_name = True
                    ]

                    component gen_probe "speed difference" {
                    }
                    [
                        position = 8096, 8144
                    ]

                    component gen_c_function "Activate Exciter" {
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "boolean inherit"
                        in_terminal_labels = "[(\'boolean\', True)]"
                        in_terminal_properties = "inherit boolean;"
                        init_fnc = "/*Begin code section*/
Activate = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "Activate inherit"
                        out_terminal_labels = "[(\'Activate\', True)]"
                        out_terminal_properties = "int Activate;"
                        output_fnc = "/*Begin code section*/
if(boolean==1){
    Activate = 1;
}
/*End code section*/"
                    }
                    [
                        position = 8360, 8232
                        size = 112, 48
                    ]

                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 8008, 8144
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts_gov"
                    }
                    [
                        position = 7936, 8120
                        hide_name = True
                    ]

                    port w_PU {
                        label = "w_PU"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7936, 8168
                    ]

                    port "exciter state" {
                        position = auto:auto
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8480, 8232
                    ]

                    junction Junction14 sp
                    [
                        position = 8048, 8144
                    ]

                    connect Abs1.out Comparator1.in2 as Connection105
                    connect Constant1.out Comparator1.in1 as Connection18
                    connect w_PU Sum1.in1 as Connection199
                    connect "speed difference.in" Junction14 as Connection195
                    connect Junction14 Sum1.out as Connection196
                    connect Abs1.in Junction14 as Connection197
                    connect Constant2.out Sum1.in as Connection201
                    connect Comparator1.out "Activate Exciter.boolean" as Connection206
                    connect "Activate Exciter.Activate" "exciter state" as Connection207
                }
                [
                    position = 7912, 8376
                    size = 112, 48
                ]

                component gen_sum Sum7 {
                    signs = "+-"
                }
                [
                    position = 7896, 8320
                    hide_name = True
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 7896, 8248
                    hide_name = True
                ]

                component gen_gain Gain29 {
                    gain = "R_D"
                }
                [
                    position = 7992, 8248
                    hide_name = True
                ]

                component gen_probe P_sv {
                }
                [
                    position = 8648, 8312
                ]

                component gen_probe fP_diff {
                }
                [
                    position = 8376, 8320
                ]

                component src_constant w_ref {
                    execution_rate = "Ts_gov"
                }
                [
                    position = 7680, 8312
                ]

                component gen_rate_limiter "Rate Limiter2" {
                    falling_limit = "inner_w_fall"
                    rising_limit = "inner_w_rise"
                }
                [
                    position = 8080, 8320
                    hide_name = True
                ]

                component gen_gain Gain37 {
                    gain = "1/S"
                }
                [
                    position = 7800, 8240
                    hide_name = True
                ]

                component gen_z_domain_transfer "Discrete Transfer Function1" {
                    a_coeff = "[T1*T2, T1, 1]"
                    b_coeff = "[T3, 1]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8256, 8248
                    hide_name = True
                ]

                component gen_gain Gain38 {
                    gain = "gov_Kp"
                }
                [
                    position = 8328, 8248
                    hide_name = True
                ]

                component gen_gain Gain39 {
                    gain = "K"
                }
                [
                    position = 8400, 8248
                    hide_name = True
                ]

                component gen_z_domain_transfer "Discrete Transfer Function2" {
                    a_coeff = "[T5*T6, (T5+T6), 1]"
                    b_coeff = "[T4, 1]"
                    domain = "S-domain"
                    method = "Bilinear"
                }
                [
                    position = 8472, 8248
                    hide_name = True
                ]

                component gen_integrator Integrator1 {
                }
                [
                    position = 8544, 8248
                    hide_name = True
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "Ts_gov"
                }
                [
                    position = 7872, 8176
                    hide_name = True
                    size = 32, 32
                ]

                component "core/Rate Transition" "Rate Transition2" {
                    execution_rate = "Ts_gov"
                }
                [
                    position = 7752, 8376
                    hide_name = True
                    size = 32, 32
                ]

                component "core/Rate Transition" "Rate Transition3" {
                    execution_rate = "Ts_sys"
                }
                [
                    position = 8016, 8376
                    hide_name = True
                    size = 32, 32
                ]

                component Subsystem Subsystem1 {
                    layout = dynamic
                    component "core/Rate Transition" "Rate Transition4" {
                        execution_rate = "Ts_gov"
                    }
                    [
                        position = 8248, 8192
                        size = 32, 32
                    ]

                    port Out1 {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8312, 8192
                    ]

                    tag From2 {
                        value = "DGov_Pref"
                        scope = global
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8136, 8192
                    ]

                    connect "Rate Transition4.out" Out1 as Connection892
                    connect "Rate Transition4.in" From2 as Connection891
                }
                [
                    position = 7888, 8056
                    size = 48, 48
                ]

                component src_scada_input AGC {
                    execution_rate = "Ts_gov"
                    max = "S"
                    min = "-S"
                    unit = "W"
                }
                [
                    position = 7736, 8240
                ]

                component "core/Rate Transition" "Rate Transition4" {
                    execution_rate = "Ts_gov"
                }
                [
                    position = 7520, 7992
                    size = 32, 32
                ]

                port "AGC offset" {
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7792, 8176
                ]

                port w_m3 {
                    label = "w_m"
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7680, 8376
                ]

                port P_SV {
                    position = auto:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8688, 8248
                ]

                port "exciter state" {
                    label = "exc ON/OFF"
                    position = bottom:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8080, 8376
                ]

                tag From1 {
                    value = "P_SV"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7808, 8280
                    hide_name = True
                    size = 54, 20
                ]

                tag Goto1 {
                    value = "P_SV"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8688, 8184
                    hide_name = True
                ]

                tag From2 {
                    value = "DGov_Pref"
                    scope = global
                    kind = sp
                    direction = out
                }
                [
                    position = 7408, 7992
                ]

                junction Junction3 sp
                [
                    position = 7832, 8376
                ]

                junction Junction11 sp
                [
                    position = 8616, 8248
                ]

                junction Junction12 sp
                [
                    position = 8616, 8248
                ]

                junction Junction13 sp
                [
                    position = 8208, 8248
                ]

                connect Sum2.out Gain29.in as Connection207
                [
                    breakpoints = 7944, 8248
                ]
                connect Gain28.out Junction3 as Connection799
                connect Junction3 Sum7.in1 as Connection800
                [
                    breakpoints = 7832, 8376; 7832, 8344
                ]
                connect "Exciter Activation.w_PU" Junction3 as Connection801
                connect Gain39.in Gain38.out as Connection872
                connect "Discrete Transfer Function1.out" Gain38.in as Connection873
                connect "Discrete Transfer Function2.in" Gain39.out as Connection874
                connect Integrator1.in "Discrete Transfer Function2.out" as Connection875
                connect Integrator1.out Junction11 as Connection878
                connect Junction11 P_SV as Connection879
                connect P_sv.in Junction12 as Connection881
                connect Junction12 Junction11 as Connection882
                connect Goto1 Junction12 as Connection883
                connect "Rate Limiter2.in" Sum7.out as Connection884
                connect "AGC offset" "Rate Transition1.in" as Connection885
                connect Gain28.in "Rate Transition2.out" as Connection887
                connect "Rate Transition2.in" w_m3 as Connection888
                connect "Exciter Activation.exciter state" "Rate Transition3.in" as Connection889
                connect "Rate Transition3.out" "exciter state" as Connection890
                connect "Rate Transition4.in" From2 as Connection893
                connect w_ref.out Sum7.in as Connection896
                connect Gain37.in AGC.out as Connection899
                connect Gain37.out Sum2.in as Connection900
                connect From1 Sum2.in1 as Connection901
                connect Gain29.out Sum10.in1 as Connection906
                connect Sum10.in2 "Rate Limiter2.out" as Connection908
                [
                    breakpoints = 8120, 8320; 8120, 8320; 8120, 8320
                ]
                connect Sum10.out Junction13 as Connection909
                connect Junction13 "Discrete Transfer Function1.in" as Connection910
                connect fP_diff.in Junction13 as Connection911
                connect "Rate Transition1.out" Sum10.in as Connection912

                Ts_gov = "Ts_sys"

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">DEGOV1 model</p></body></html>"

                    Ts_gov {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE define_icon
                        mdl.disp_component_icon_text(item_handle, "DEGOV1")
                    ENDCODE

                    CODE init
                    ENDCODE
                }
            }
            [
                position = 6744, 8048
                size = 144, 136
            ]

            component Subsystem Exciter {
                layout = dynamic
                component gen_integrator Integrator2 {
                    show_reset = "either"
                }
                [
                    position = 8368, 8104
                    hide_name = True
                ]

                component gen_gain Gain4 {
                    gain = "1/T_F"
                }
                [
                    position = 8296, 8096
                    hide_name = True
                ]

                component gen_gain Gain8 {
                    gain = "K_A"
                }
                [
                    position = 8136, 8336
                    hide_name = True
                ]

                component gen_gain Gain2 {
                    gain = "K_E+S_E"
                }
                [
                    position = 8136, 7904
                    hide_name = True
                ]

                component gen_gain Gain7 {
                    gain = "K_A"
                }
                [
                    position = 8136, 8232
                    hide_name = True
                ]

                component gen_sum Sum3 {
                    signs = "-+-+"
                }
                [
                    position = 8240, 8264
                    hide_name = True
                ]

                component gen_gain Gain5 {
                    gain = "K_A*K_F/T_F"
                }
                [
                    position = 8136, 8296
                    hide_name = True
                ]

                component gen_gain Gain6 {
                    gain = "1/T_A"
                }
                [
                    position = 8296, 8264
                    hide_name = True
                ]

                component gen_gain Gain3 {
                    gain = "K_F/T_F"
                }
                [
                    position = 8136, 8128
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    gain = "1/T_E"
                }
                [
                    position = 8296, 7936
                    hide_name = True
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 8240, 7936
                    hide_name = True
                ]

                component gen_sum Sum2 {
                    signs = "-+"
                }
                [
                    position = 8240, 8096
                    hide_name = True
                ]

                component gen_integrator Integrator1 {
                    limit_lower = "-2"
                    limit_upper = "2"
                    show_reset = "either"
                }
                [
                    position = 8368, 7944
                    hide_name = True
                ]

                component gen_integrator Integrator3 {
                    limit_lower = "V_R_min"
                    limit_output = "True"
                    limit_upper = "V_R_max"
                    show_reset = "either"
                }
                [
                    position = 8368, 8272
                    hide_name = True
                ]

                component sys_signal_switch "|V|1" {
                    criterion = "ctrl != threshold"
                    threshold = "1"
                }
                [
                    position = 7976, 8360
                    hide_name = True
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts_exc"
                    value = "0"
                }
                [
                    position = 7872, 8344
                    hide_name = True
                ]

                component gen_probe V_R_M {
                }
                [
                    position = 8560, 8216
                ]

                component gen_rate_limiter "Rate Limit" {
                    falling_limit = "V_fall"
                    rising_limit = "V_rise"
                }
                [
                    position = 8024, 8360
                    hide_name = True
                ]

                component gen_probe E_t_M {
                }
                [
                    position = 8560, 8432
                ]

                component gen_integrator Integrator4 {
                    show_reset = "either"
                }
                [
                    position = 8368, 8496
                    hide_name = True
                ]

                component gen_sum Sum5 {
                    signs = "-+"
                }
                [
                    position = 8216, 8488
                    hide_name = True
                ]

                component gen_gain Gain9 {
                    gain = "1/(T_R)"
                }
                [
                    position = 8288, 8488
                    hide_name = True
                ]

                component gen_probe R_F_M {
                }
                [
                    position = 8560, 8048
                ]

                component gen_digital_probe "exciter ON" {
                }
                [
                    position = 7872, 8216
                ]

                component gen_logic_op "Logical operator1" {
                    operator = "NOT"
                }
                [
                    position = 7784, 8176
                    rotation = right
                    hide_name = True
                    scale = 1, -1
                ]

                component gen_digital_probe "exciter OFF" {
                }
                [
                    position = 7872, 8136
                ]

                component Subsystem PI {
                    layout = dynamic
                    component gen_integrator Integrator1 {
                        limit_lower = "[\'-inf\']"
                        limit_upper = "[\'inf\']"
                        show_reset = "either"
                    }
                    [
                        position = 8216, 8232
                        hide_name = True
                    ]

                    component gen_gain Kp {
                        gain = "exc_Kp"
                    }
                    [
                        position = 7992, 8152
                    ]

                    component gen_sum Sum7 {
                    }
                    [
                        position = 8088, 8224
                        hide_name = True
                    ]

                    component gen_gain Kb {
                    }
                    [
                        position = 8216, 8312
                        scale = -1, 1
                    ]

                    component gen_sum Sum6 {
                        signs = "-+"
                    }
                    [
                        position = 8320, 8312
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Ki {
                        gain = "exc_Ki"
                    }
                    [
                        position = 7992, 8216
                    ]

                    component gen_sum Sum5 {
                    }
                    [
                        position = 8320, 8224
                        hide_name = True
                    ]

                    component gen_limiter Limit1 {
                        lower_limit = "E_F_min"
                        upper_limit = "E_F_max"
                    }
                    [
                        position = 8408, 8224
                        hide_name = True
                    ]

                    port Out {
                        label = "Out"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8472, 8224
                    ]

                    port Reset {
                        label = "Reset"
                        position = top:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8144, 8264
                    ]

                    port In {
                        label = "In"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7824, 8184
                    ]

                    junction Junction2 sp
                    [
                        position = 8368, 8224
                    ]

                    junction Junction3 sp
                    [
                        position = 8440, 8224
                    ]

                    junction Junction4 sp
                    [
                        position = 7928, 8184
                    ]

                    connect Integrator1.reset Reset as Connection2
                    connect Junction2 Limit1.in as Connection45
                    connect Junction3 Out as Connection48
                    connect Junction4 In as Connection57
                    connect Kb.in Sum6.out as Connection50
                    connect Ki.in Junction4 as Connection56
                    connect Ki.out Sum7.in as Connection54
                    connect Kp.in Junction4 as Connection58
                    connect Kp.out Sum5.in as Connection59
                    connect Limit1.out Junction3 as Connection47
                    connect Sum5.in1 Integrator1.out as Connection5
                    connect Sum5.out Junction2 as Connection44
                    connect Sum6.in Junction2 as Connection46
                    connect Sum6.in1 Junction3 as Connection49
                    connect Sum7.out Integrator1.in as Connection52
                    connect Sum7.in1 Kb.out as Connection53
                }
                [
                    position = 8504, 7944
                    size = 64, 48
                ]

                component gen_sum Sum4 {
                    signs = "++-"
                }
                [
                    position = 7872, 8408
                    hide_name = True
                ]

                component gen_probe E_f_M {
                }
                [
                    position = 8448, 8032
                ]

                component gen_probe voltage_diff {
                }
                [
                    position = 8240, 8360
                ]

                component gen_gain Gain18 {
                    gain = "V_DQ"
                }
                [
                    position = 8584, 7944
                    hide_name = True
                ]

                component "core/Rate Transition" "Rate Transition1" {
                    execution_rate = "Ts_exc"
                }
                [
                    position = 7696, 8216
                    hide_name = True
                    size = 32, 32
                ]

                component "core/Rate Transition" "Rate Transition2" {
                    execution_rate = "Ts_exc"
                }
                [
                    position = 7792, 8360
                    hide_name = True
                    size = 32, 32
                ]

                component "core/Rate Transition" "Rate Transition3" {
                    execution_rate = "Ts_exc"
                }
                [
                    position = 8136, 8520
                    hide_name = True
                    size = 32, 32
                ]

                component src_constant E_ref {
                    execution_rate = "Ts_exc"
                }
                [
                    position = 7728, 8408
                ]

                port V_F {
                    label = "V_F"
                    position = right:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8664, 7944
                ]

                port "|E|" {
                    label = "|E|"
                    position = left:2
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8072, 8520
                    rotation = down
                    scale = -1, 1
                ]

                port "E_ref offset" {
                    label = "E_ref"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7728, 8360
                ]

                port exc_state {
                    label = "ON/OFF"
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7600, 8216
                ]

                tag R_F2 {
                    value = "R_F"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8040, 8232
                    hide_name = True
                ]

                tag E_F1 {
                    value = "E_F"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8040, 7904
                    hide_name = True
                ]

                tag V_R {
                    value = "V_R"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8560, 8272
                    hide_name = True
                ]

                tag E_F3 {
                    value = "E_F"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8040, 8296
                    hide_name = True
                ]

                tag V_t {
                    value = "E_t"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8560, 8496
                    hide_name = True
                ]

                tag E_F {
                    value = "E_F"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8504, 8000
                    hide_name = True
                ]

                tag V_R1 {
                    value = "V_R"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8136, 7960
                    hide_name = True
                ]

                tag R_F {
                    value = "R_F"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8560, 8104
                    hide_name = True
                ]

                tag V_R2 {
                    value = "V_R"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8136, 8200
                    hide_name = True
                ]

                tag E_F2 {
                    value = "E_F"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8040, 8128
                    hide_name = True
                ]

                tag R_F1 {
                    value = "R_F"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8136, 8072
                    hide_name = True
                ]

                tag V_t1 {
                    value = "E_t"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8456
                    hide_name = True
                ]

                tag V_t2 {
                    value = "E_t"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7744, 8456
                    hide_name = True
                ]

                tag V_t5 {
                    value = "exc_state"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8320
                    hide_name = True
                ]

                tag V_t6 {
                    value = "exc_state"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 8536
                    hide_name = True
                ]

                tag V_t7 {
                    value = "exc_state"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 8144
                    hide_name = True
                ]

                tag V_t8 {
                    value = "exc_state"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 7984
                    hide_name = True
                ]

                tag V_t9 {
                    value = "exc_state"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8440, 7880
                    hide_name = True
                ]

                tag V_t11 {
                    value = "exc_state"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7872, 8304
                    hide_name = True
                ]

                tag w_e1 {
                    value = "exc_state"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7872, 8272
                    rotation = down
                    hide_name = True
                    scale = -1, 1
                ]

                junction Junction4 sp
                [
                    position = 8512, 8272
                ]

                junction Junction10 sp
                [
                    position = 8512, 8496
                ]

                junction Junction12 sp
                [
                    position = 8504, 8104
                ]

                junction Junction18 sp
                [
                    position = 8416, 7944
                ]

                junction Junction26 sp
                [
                    position = 8416, 8000
                ]

                junction Junction27 sp
                [
                    position = 8104, 8360
                ]

                junction Junction28 sp
                [
                    position = 7784, 8216
                ]

                junction Junction29 sp
                [
                    position = 7784, 8216
                ]

                connect Constant1.out "|V|1.in" as Connection42
                connect E_F1 Gain2.in as Connection4
                connect E_F2 Gain3.in as Connection7
                connect E_F3 Gain5.in as Connection12
                connect Gain1.out Integrator1.in as Connection1
                connect Gain1.in Sum1.out as Connection2
                connect Gain2.out Sum1.in as Connection3
                connect Gain3.out Sum2.in1 as Connection8
                connect Gain4.out Integrator2.in as Connection9
                connect Gain5.out Sum3.in2 as Connection21
                [
                    breakpoints = 8192, 8288; 8192, 8272
                ]
                connect Gain6.out Integrator3.in as Connection16
                connect Gain7.out Sum3.in1 as Connection20
                [
                    breakpoints = 8192, 8232; 8192, 8256
                ]
                connect Gain8.out Sum3.in3 as Connection22
                connect Integrator1.out Junction18 as Connection165
                connect Integrator4.in Gain9.out as Connection60
                connect Junction10 Integrator4.out as Connection123
                connect Junction12 Integrator2.out as Connection138
                connect Junction18 PI.In as Connection166
                connect Junction4 Integrator3.out as Connection93
                connect R_F Junction12 as Connection137
                connect R_F1 Sum2.in as Connection6
                connect R_F2 Gain7.in as Connection19
                connect R_F_M.in Junction12 as Connection139
                connect Sum2.out Gain4.in as Connection10
                connect Sum3.out Gain6.in as Connection14
                connect Sum5.out Gain9.in as Connection26
                connect V_R Junction4 as Connection92
                connect V_R1 Sum1.in1 as Connection5
                connect V_R2 Sum3.in as Connection18
                connect V_R_M.in Junction4 as Connection94
                connect V_t Junction10 as Connection122
                connect V_t1 Sum5.in as Connection25
                connect E_t_M.in Junction10 as Connection124
                connect "exciter OFF.in" "Logical operator1.out" as Connection155
                connect V_t5 Integrator3.reset as Connection200
                connect V_t6 Integrator4.reset as Connection201
                connect V_t7 Integrator2.reset as Connection202
                connect V_t8 Integrator1.reset as Connection203
                connect V_t9 PI.Reset as Connection204
                connect V_t11 "|V|1.in2" as Connection213
                connect Sum4.out "|V|1.in1" as Connection816
                connect "|V|1.out" "Rate Limit.in" as Connection817
                [
                    breakpoints = 8008, 8360
                ]
                connect E_F Junction26 as Connection818
                connect Junction26 Junction18 as Connection819
                connect E_f_M.in Junction26 as Connection820
                connect "Rate Limit.out" Junction27 as Connection1246
                connect Junction27 Gain8.in as Connection1247
                connect voltage_diff.in Junction27 as Connection1248
                connect PI.Out Gain18.in as Connection1249
                connect Gain18.out V_F as Connection1250
                connect "exciter ON.in" Junction28 as Connection1252
                connect "Logical operator1.in" Junction29 as Connection1255
                connect Junction29 Junction28 as Connection1256
                connect w_e1 Junction29 as Connection1257
                connect Junction28 "Rate Transition1.out" as Connection1258
                connect "Rate Transition1.in" exc_state as Connection1259
                connect "Rate Transition2.in" "E_ref offset" as Connection1261
                connect "|E|" "Rate Transition3.in" as Connection1262
                connect "Rate Transition3.out" Sum5.in1 as Connection1263
                connect V_t2 Sum4.in2 as Connection1264
                connect E_ref.out Sum4.in1 as Connection1265
                connect "Rate Transition2.out" Sum4.in as Connection1266

                mask {
                    description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">IEEE DC1A exciter</p></body></html>"

                    Ts_exc {
                        label = "Execution rate"
                        widget = edit
                        type = generic
                        default_value = "Ts_sys"
                    }

                    CODE open
                        from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                    
                        dialog = RegularComponentPropertiesDialog(
                            component=component,
                            property_container=component.masks[-1],
                            current_diagram=current_diagram
                        )
                        dialog.exec_()
                        
                    ENDCODE

                    CODE define_icon
                        mdl.disp_component_icon_text(item_handle, "IEEE DC1A")
                    ENDCODE

                    CODE init
                    ENDCODE
                }
            }
            [
                position = 6744, 8280
                size = 128, 144
            ]

            component Subsystem "Three-phase Meter1" {
                layout = dynamic
                component "core/Voltage Measurement" Va_G1 {
                    execution_rate = "Ts_sys"
                    sig_output = "True"
                }
                [
                    position = 8096, 8224
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Vb_G1 {
                    execution_rate = "Ts_sys"
                    sig_output = "True"
                }
                [
                    position = 8000, 8320
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Voltage Measurement" Vc_G1 {
                    execution_rate = "Ts_sys"
                    sig_output = "True"
                }
                [
                    position = 7904, 8416
                    rotation = right
                    scale = -1, 1
                    size = 64, 32
                ]

                component "core/Current Measurement" Ia {
                    addr = "22"
                    execution_rate = "Ts_sys"
                    frequency = "10000.0"
                    sig_output = "True"
                }
                [
                    position = 8576, 8176
                    size = 64, 32
                ]

                component gen_probe POWER_Q {
                    addr = "17938"
                }
                [
                    position = 7856, 7936
                    scale = -1, 1
                ]

                component "core/Current Measurement" Ic {
                    addr = "26"
                    execution_rate = "Ts_sys"
                    frequency = "10000.0"
                    sig_output = "True"
                }
                [
                    position = 8384, 8368
                    size = 64, 32
                ]

                component gen_probe POWER_P {
                    addr = "17965"
                }
                [
                    position = 7856, 7888
                    scale = -1, 1
                ]

                component "core/Current Measurement" Ib {
                    addr = "24"
                    execution_rate = "Ts_sys"
                    frequency = "10000.0"
                    sig_output = "True"
                }
                [
                    position = 8480, 8272
                    size = 64, 32
                ]

                component gen_probe POWER_S {
                    addr = "17951"
                }
                [
                    position = 7856, 8000
                    scale = -1, 1
                ]

                component Subsystem "PQ measure" {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7936, 8184
                        scale = -1, 1
                    ]

                    component gen_terminator Termination4 {
                    }
                    [
                        position = 8104, 8248
                        scale = -1, 1
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 7992, 8208
                        scale = -1, 1
                    ]

                    component gen_PQ_transform "PQ Power Meter1" {
                    }
                    [
                        position = 8192, 8192
                        scale = -1, 1
                    ]

                    port P_meas_out {
                        label = "P_meas_out"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8128, 8136
                        rotation = down
                    ]

                    port Q_meas_out {
                        label = "Q_meas_out"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8056, 8152
                        rotation = down
                    ]

                    port Va_in {
                        label = "Va_in"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8272, 8048
                        rotation = down
                    ]

                    port Vb_in {
                        label = "Vb_in"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8304, 8096
                        rotation = down
                    ]

                    port Vc_in {
                        label = "Vc_in"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8360, 8144
                        rotation = down
                    ]

                    port Ia_in {
                        label = "Ia_in"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8360, 8240
                        rotation = down
                    ]

                    port Ib_in {
                        label = "Ib_in"
                        position = right:7
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8312, 8280
                        rotation = down
                    ]

                    port Ic_in {
                        label = "Ic_in"
                        position = right:10
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8280, 8328
                        rotation = down
                    ]

                    port S_meas_out {
                        label = "S_meas_out"
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7944, 8272
                        rotation = down
                    ]

                    connect "PQ Power Meter1.ia" Ia_in as Connection1
                    connect "PQ Power Meter1.ib" Ib_in as Connection2
                    connect "PQ Power Meter1.ic" Ic_in as Connection3
                    connect "PQ Power Meter1.Pdc" P_meas_out as Connection4
                    connect "PQ Power Meter1.Qdc" Q_meas_out as Connection5
                    connect "PQ Power Meter1.va" Va_in as Connection6
                    connect "PQ Power Meter1.vb" Vb_in as Connection7
                    connect "PQ Power Meter1.vc" Vc_in as Connection8
                    connect S_meas_out "PQ Power Meter1.apparent" as Connection9
                    connect Termination1.in "PQ Power Meter1.Pac" as Connection10
                    connect Termination2.in "PQ Power Meter1.Qac" as Connection11
                    connect Termination4.in "PQ Power Meter1.k_factor" as Connection12
                }
                [
                    position = 7968, 7936
                    size = 88, 152
                ]

                port B- {
                    position = right:2
                    kind = pe
                }
                [
                    position = 8560, 8272
                    rotation = down
                ]

                port ground {
                    position = bottom:4
                    kind = pe
                }
                [
                    position = 7856, 8496
                ]

                port A- {
                    position = right:1
                    kind = pe
                }
                [
                    position = 8656, 8176
                    rotation = down
                ]

                port A+ {
                    position = left:1
                    kind = pe
                }
                [
                    position = 8048, 8176
                ]

                port C+ {
                    position = left:3
                    kind = pe
                }
                [
                    position = 7856, 8368
                ]

                port B+ {
                    position = left:2
                    kind = pe
                }
                [
                    position = 7952, 8272
                ]

                port C- {
                    position = right:3
                    kind = pe
                }
                [
                    position = 8464, 8368
                    rotation = down
                ]

                tag V_d_a3 {
                    value = "VbG"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7904, 8320
                    hide_name = True
                    scale = -1, 1
                ]

                tag V_q_a3 {
                    value = "VaG"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8000, 8224
                    hide_name = True
                    scale = -1, 1
                ]

                tag V_q_a4 {
                    value = "VcG"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7808, 8416
                    hide_name = True
                    scale = -1, 1
                ]

                tag Vb_G2 {
                    value = "VbG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8208, 7912
                    hide_name = True
                    scale = -1, 1
                ]

                tag Vc_G2 {
                    value = "VcG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8208, 7928
                    hide_name = True
                    scale = -1, 1
                ]

                tag Va_G2 {
                    value = "VaG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8208, 7896
                    hide_name = True
                    scale = -1, 1
                ]

                junction Junction236 pe
                [
                    position = 7904, 8496
                ]

                junction Junction237 pe
                [
                    position = 8000, 8496
                ]

                junction Junction238 pe
                [
                    position = 7904, 8368
                ]

                junction Junction239 pe
                [
                    position = 8000, 8272
                ]

                junction Junction240 pe
                [
                    position = 8096, 8176
                ]

                connect Ib.n_node B- as Connection2025
                connect Junction240 A+ as Connection2028
                connect Ic.n_node C- as Connection2031
                connect Ia.n_node A- as Connection2027
                connect Junction236 ground as Connection2026
                connect Junction238 C+ as Connection2029
                connect Junction239 B+ as Connection2030
                connect Junction236 Vc_G1.n_node as Connection1963
                [
                    breakpoints = 7904, 8496; 7904, 8496
                ]
                connect Junction237 Junction236 as Connection1966
                connect Vb_G1.n_node Junction237 as Connection1967
                connect V_q_a4 Vc_G1.out as Connection1989
                connect V_d_a3 Vb_G1.out as Connection1990
                connect V_q_a3 Va_G1.out as Connection1991
                connect Junction237 Va_G1.n_node as Connection1995
                [
                    breakpoints = 8000, 8496; 8096, 8496
                ]
                connect Ia.out "PQ measure.Ia_in" as Connection239
                connect Ib.out "PQ measure.Ib_in" as Connection240
                connect Ic.out "PQ measure.Ic_in" as Connection241
                connect POWER_P.in "PQ measure.P_meas_out" as Connection498
                connect "PQ measure.Q_meas_out" POWER_Q.in as Connection499
                connect "PQ measure.S_meas_out" POWER_S.in as Connection500
                connect Vc_G2 "PQ measure.Vc_in" as Connection501
                connect Vb_G2 "PQ measure.Vb_in" as Connection502
                connect Va_G2 "PQ measure.Va_in" as Connection503
                connect Vc_G1.p_node Junction238 as Connection2013
                connect Ic.p_node Junction238 as Connection2015
                connect Vb_G1.p_node Junction239 as Connection2017
                connect Ib.p_node Junction239 as Connection2019
                connect Va_G1.p_node Junction240 as Connection2022
                connect Ia.p_node Junction240 as Connection2024
            }
            [
                position = 8232, 8280
                size = 88, 240
            ]

            port V_aG {
                position = top:1
                kind = pe
            }
            [
                position = 8408, 8184
                scale = -1, 1
            ]

            port V_bG {
                position = top:2
                kind = pe
            }
            [
                position = 8408, 8280
                scale = -1, 1
            ]

            port V_cG {
                position = top:3
                kind = pe
            }
            [
                position = 8408, 8376
                scale = -1, 1
            ]

            port "MCB Control" {
                position = left:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 7848, 8104
            ]

            port ground {
                position = bottom:3
                kind = pe
            }
            [
                position = 8408, 8512
                scale = -1, 1
            ]

            tag MT_ON1 {
                value = "MT_sync"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6544, 8056
                hide_name = True
            ]

            tag MT_ON2 {
                value = "MT_sync"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6544, 8280
                hide_name = True
            ]

            tag theta_bus5 {
                value = "P_sync"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6544, 7984
                hide_name = True
            ]

            tag From1 {
                value = "|V|_sync"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6544, 8216
                hide_name = True
            ]

            tag Ea_G {
                value = "Ea1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7368, 8424
            ]

            tag Eb_G {
                value = "Eb1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7600, 8424
            ]

            tag Ec_G {
                value = "Ec1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7816, 8424
            ]

            tag w_e1 {
                value = "w_e"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7240, 8024
                rotation = down
                hide_name = True
                scale = -1, 1
            ]

            tag w_m2 {
                value = "w_e"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6544, 8096
                hide_name = True
            ]

            tag "|V|2" {
                value = "|E|"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6544, 8328
                hide_name = True
            ]

            tag w_e2 {
                value = "exc_state"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6792, 8160
                rotation = down
                hide_name = True
                scale = -1, 1
            ]

            junction Junction205 pe
            [
                position = 7240, 8512
            ]

            junction Junction206 pe
            [
                position = 7448, 8512
            ]

            junction Junction221 sp
            [
                position = 7184, 8072
            ]

            junction Junction225 sp
            [
                position = 6744, 8160
            ]

            junction Junction226 sp
            [
                position = 6656, 8328
            ]

            junction Junction230 pe
            [
                position = 7680, 8368
            ]

            junction Junction232 pe
            [
                position = 7448, 8280
            ]

            junction Junction233 pe
            [
                position = 7240, 8192
            ]

            junction Junction234 pe
            [
                position = 7680, 8512
            ]

            junction Junction235 pe
            [
                position = 8232, 8512
            ]

            connect Constant1.out "Signal switch2.in" as Connection360
            connect Constant2.out "Signal switch1.in" as Connection362
            connect MT_ON2 "Signal switch2.in2" as Connection366
            connect "Connect MT.out" CB_control.Close_GCB as Connection1050
            connect "Connect MCB.out" CB_control.Close_MCB as Connection1051
            connect theta_bus5 "Signal switch1.in1" as Connection1234
            connect From1 "Signal switch2.in1" as Connection1235
            connect MT_ON1 "Signal switch1.in2" as Connection1653
            connect "|V|.in" Gain17.out as Connection1416
            connect Gain1.out w_e1 as Connection1418
            connect V_F.n_node "Synchonous Machine.- E_F" as Connection1419
            connect Gain18.in w_m2 as Connection1426
            connect V_F.p_node "Synchonous Machine.+ E_F" as Connection1410
            connect "Synchonous Machine.ground" Junction205 as Connection1790
            connect Ea1.n_node Junction205 as Connection1792
            connect Junction205 Junction206 as Connection1793
            connect Eb1.n_node Junction206 as Connection1795
            connect Engine.T_M2 "Synchonous Machine.Torque" as Connection1873
            connect w_M.in Junction221 as Connection1875
            connect Junction221 "Synchonous Machine.Speed (rpm)" as Connection1876
            connect Gain1.in Junction221 as Connection1877
            connect Exciter.exc_state Junction225 as Connection1904
            connect Junction225 "Governor.exciter state" as Connection1905
            [
                breakpoints = 6744, 8168
            ]
            connect w_e2 Junction225 as Connection1906
            connect "Exciter.|E|" Junction226 as Connection1909
            connect Junction226 "|V|2" as Connection1910
            connect Gain17.in Junction226 as Connection1911
            connect Governor.w_m3 Gain18.out as Connection1912
            connect Governor.P_SV Engine.P_SV as Connection1914
            connect Exciter.V_F V_F.in as Connection1915
            connect "Synchonous Machine.Ec" Junction230 as Connection1938
            connect Junction230 S4.c_in as Connection1939
            connect Ec1.p_node Junction230 as Connection1940
            connect Eb1.p_node Junction232 as Connection1944
            connect Junction232 "Synchonous Machine.Eb" as Connection1945
            [
                breakpoints = 7448, 8280
            ]
            connect S4.b_in Junction232 as Connection1946
            connect Ea1.p_node Junction233 as Connection1948
            connect Junction233 "Synchonous Machine.Ea" as Connection1949
            [
                breakpoints = 7240, 8192; 7240, 8192; 7240, 8192
            ]
            connect S4.a_in Junction233 as Connection1950
            [
                breakpoints = 7928, 8192; 7848, 8192; 7848, 8192; 7240, 8192
            ]
            connect Ec1.out Ec_G as Connection1986
            connect Eb1.out Eb_G as Connection1987
            connect Ea1.out Ea_G as Connection1988
            connect CB_control.MCB_control "MCB Control" as Connection1992
            connect CB_control.CB_status S4.ctrl_in as Connection1993
            connect Junction206 Junction234 as Connection2003
            [
                breakpoints = 7448, 8512
            ]
            connect Junction234 Ec1.n_node as Connection2004
            [
                breakpoints = 7680, 8512
            ]
            connect "Three-phase Meter1.C+" S4.c_out as Connection2006
            connect ground Junction235 as Connection2007
            connect Junction235 Junction234 as Connection2008
            connect "Three-phase Meter1.ground" Junction235 as Connection2009
            connect "Three-phase Meter1.C-" V_cG as Connection2010
            connect V_bG "Three-phase Meter1.B-" as Connection2011
            connect "Three-phase Meter1.A-" V_aG as Connection2012
            connect "Three-phase Meter1.A+" S4.a_out as Connection2013
            connect S4.b_out "Three-phase Meter1.B+" as Connection2014
            connect "Signal switch1.out" "Governor.AGC offset" as Connection2015
            connect "Signal switch2.out" "Exciter.E_ref offset" as Connection2016

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A salient-pole synchronous machine with DEGOV1 governor and IEEE type DC1A exciter, powered by a diesel genset</p></body></html>"

                S {
                    label = "Rated Power (system)"
                    widget = edit
                    type = generic
                    default_value = "3.5e+6"
                    unit = "VA"
                    group = "1. Synchronous Machine"
                }

                V_ABC {
                    label = "Rated RMS Voltage (genset)"
                    widget = edit
                    type = generic
                    default_value = "13800/np.sqrt(3)"
                    unit = "V"
                    group = "1. Synchronous Machine"
                }

                w_0 {
                    label = "Nominal Frequency"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*60"
                    unit = "rad/s"
                    group = "1. Synchronous Machine"
                }

                pms {
                    label = "Pole-pairs"
                    widget = edit
                    type = generic
                    default_value = "2"
                    group = "1. Synchronous Machine"
                }

                Jm {
                    label = "Moment of Inertia"
                    widget = edit
                    type = generic
                    default_value = "68.32425"
                    unit = "kg.m^2"
                    group = "1. Synchronous Machine"
                }

                Fc {
                    label = "Friction Coefficient"
                    widget = edit
                    type = generic
                    default_value = "0.5720"
                    unit = "N.m.s"
                    group = "1. Synchronous Machine"
                }

                Ts {
                    label = "Execution rate (machine)"
                    widget = edit
                    type = generic
                    default_value = "Ts_gen"
                    unit = "s"
                    group = "1. Synchronous Machine"
                }

                Ts_sys {
                    label = "Execution rate (system)"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                    group = "1. Synchronous Machine"
                }

                R_g {
                    label = "Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.35"
                    unit = "Ω/mile"
                    group = "2. Electrical Line"
                }

                L_g {
                    label = "Inductance"
                    widget = edit
                    type = generic
                    default_value = "5.5e-4"
                    unit = "H/mile"
                    group = "2. Electrical Line"
                }

                line_len {
                    label = "Length"
                    widget = edit
                    type = generic
                    default_value = "1"
                    unit = "miles"
                    group = "2. Electrical Line"
                }

                Rs {
                    label = "Armature Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.4886"
                    unit = "Ω"
                    group = "3. Windings"
                }

                Lls {
                    label = "Armature Leakage Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.0072"
                    unit = "H"
                    group = "3. Windings"
                }

                Rf {
                    label = "Field Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.1121"
                    unit = "Ω"
                    group = "3. Windings"
                }

                Llfd {
                    label = "Field Leakage Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.0738"
                    unit = "H"
                    group = "3. Windings"
                }

                Rkq {
                    label = "Damper q Resistance"
                    widget = edit
                    type = generic
                    default_value = "1.3848"
                    unit = "Ω"
                    group = "3. Windings"
                }

                Llkq {
                    label = "Damper q Leakage Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.0345"
                    unit = "H"
                    group = "3. Windings"
                }

                Rkd {
                    label = "Damper d Resistance"
                    widget = edit
                    type = generic
                    default_value = "15.3767"
                    unit = "Ω"
                    group = "3. Windings"
                }

                Llkd {
                    label = "Damper d Leakage Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.5395"
                    unit = "H"
                    group = "3. Windings"
                }

                Lmq {
                    label = "q Mutual Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.2482"
                    unit = "H"
                    group = "3. Windings"
                }

                Lmd {
                    label = "d Mutual Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.3392"
                    unit = "H"
                    group = "3. Windings"
                }

                EM_delay {
                    label = "dλ/dt delay"
                    widget = edit
                    type = generic
                    default_value = "Ts*5"
                    group = "3. Windings"
                }

                gov_Kp {
                    label = "Governor gain (gov_Kp)"
                    widget = edit
                    type = generic
                    default_value = "0.75"
                    group = "4. Governor and Engine"
                }

                K {
                    label = "Governor gain (K)"
                    widget = edit
                    type = generic
                    default_value = "10"
                    group = "4. Governor and Engine"
                }

                R_D {
                    label = "Governor Droop"
                    widget = edit
                    type = generic
                    default_value = "0.1"
                    group = "4. Governor and Engine"
                }

                T_CH {
                    label = "Engine time constant"
                    widget = edit
                    type = generic
                    default_value = "24e-3"
                    unit = "s"
                    group = "4. Governor and Engine"
                }

                T1 {
                    label = "Time constant 1"
                    widget = edit
                    type = generic
                    default_value = "1e-4"
                    unit = "s"
                    group = "4. Governor and Engine"
                }

                T2 {
                    label = "Time constant 2"
                    widget = edit
                    type = generic
                    default_value = "0"
                    unit = "s"
                    group = "4. Governor and Engine"
                }

                T3 {
                    label = "Time constant 3"
                    widget = edit
                    type = generic
                    default_value = "5e-1"
                    unit = "s"
                    group = "4. Governor and Engine"
                }

                T4 {
                    label = "Time constant 4"
                    widget = edit
                    type = generic
                    default_value = "25e-3"
                    unit = "s"
                    group = "4. Governor and Engine"
                }

                T5 {
                    label = "Time constant 5"
                    widget = edit
                    type = generic
                    default_value = "9e-4"
                    unit = "s"
                    group = "4. Governor and Engine"
                }

                T6 {
                    label = "Time constant 6"
                    widget = edit
                    type = generic
                    default_value = "5.74e-3"
                    unit = "s"
                    group = "4. Governor and Engine"
                }

                K_A {
                    label = "Gain 1 (K_A)"
                    widget = edit
                    type = generic
                    default_value = "20"
                    group = "5. Exciter and Voltage Regulator"
                }

                K_E {
                    label = "Gain 2 (K_E)"
                    widget = edit
                    type = generic
                    default_value = "1"
                    group = "5. Exciter and Voltage Regulator"
                }

                K_F {
                    label = "Gain 3 (K_F)"
                    widget = edit
                    type = generic
                    default_value = "0"
                    group = "5. Exciter and Voltage Regulator"
                }

                S_E {
                    label = "Gain 4 (S_E)"
                    widget = edit
                    type = generic
                    default_value = "0"
                    group = "5. Exciter and Voltage Regulator"
                }

                V_R_max {
                    label = "Saturation upper limit"
                    widget = edit
                    type = generic
                    default_value = "5"
                    group = "5. Exciter and Voltage Regulator"
                }

                V_R_min {
                    label = "Saturation lower limit"
                    widget = edit
                    type = generic
                    default_value = "-5"
                    group = "5. Exciter and Voltage Regulator"
                }

                T_A {
                    label = "Time constant 1 (T_A)"
                    widget = edit
                    type = generic
                    default_value = "2e-3"
                    unit = "s"
                    group = "5. Exciter and Voltage Regulator"
                }

                T_E {
                    label = "Time constant 2 (T_E)"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "s"
                    group = "5. Exciter and Voltage Regulator"
                }

                T_F {
                    label = "Time constant 3 (T_F)"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "s"
                    group = "5. Exciter and Voltage Regulator"
                }

                T_R {
                    label = "Time constant 4 (T_R)"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "s"
                    group = "5. Exciter and Voltage Regulator"
                }

                inner_w_rise {
                    label = "Governor (inner_w_rise)"
                    widget = edit
                    type = generic
                    default_value = "5"
                    unit = "pu/s"
                    group = "4. Governor and Engine"
                }

                inner_w_fall {
                    label = "Governor (inner_w_fall)"
                    widget = edit
                    type = generic
                    default_value = "-5"
                    unit = "pu/s"
                    group = "4. Governor and Engine"
                }

                V_rise {
                    label = "Exciter (V_rise)"
                    widget = edit
                    type = generic
                    default_value = "5"
                    unit = "pu/s"
                    group = "5. Exciter and Voltage Regulator"
                }

                V_fall {
                    label = "Exciter (V_fall)"
                    widget = edit
                    type = generic
                    default_value = "-5"
                    unit = "pu/s"
                    group = "5. Exciter and Voltage Regulator"
                }

                exc_Kp {
                    label = "Exciter proportional gain"
                    widget = edit
                    type = generic
                    default_value = "1.16"
                    group = "5. Exciter and Voltage Regulator"
                }

                exc_Ki {
                    label = "Exciter integral gain"
                    widget = edit
                    type = generic
                    default_value = "1.19"
                    group = "5. Exciter and Voltage Regulator"
                }

                E_F_max {
                    label = "Field voltage upper limit"
                    widget = edit
                    type = generic
                    default_value = "3"
                    group = "5. Exciter and Voltage Regulator"
                }

                E_F_min {
                    label = "Field voltage lower limit"
                    widget = edit
                    type = generic
                    default_value = "-3"
                    group = "5. Exciter and Voltage Regulator"
                }

                maxV_slip {
                    label = "Maximum slip (voltage)"
                    widget = edit
                    type = generic
                    default_value = "2e-3"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                minV_slip {
                    label = "Minimum slip (voltage)"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                maxw_slip {
                    label = "Maximum slip (frequency)"
                    widget = edit
                    type = generic
                    default_value = "2e-3"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                minw_slip {
                    label = "Minimum slip (frequency)"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                maxV_pds {
                    label = "Maximum difference signal (voltage)"
                    widget = edit
                    type = generic
                    default_value = "5e-2"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                maxP_pds {
                    label = "Maximum difference signal (active power)"
                    widget = edit
                    type = generic
                    default_value = "8e-2"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                Kp_PLL {
                    label = "Proportional gain"
                    widget = edit
                    type = generic
                    default_value = "5"
                    group = "7. Phase Locked Loop"
                }

                Ki_PLL {
                    label = "Integral gain"
                    widget = edit
                    type = generic
                    default_value = "2"
                    group = "7. Phase Locked Loop"
                }

                PLL_max {
                    label = "Saturation upper limit"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*63"
                    group = "7. Phase Locked Loop"
                }

                PLL_min {
                    label = "Saturation lower limit"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*57"
                    group = "7. Phase Locked Loop"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    pms = mdl.get_property_value(mdl.prop(item_handle, "pms"))
                    Jm = mdl.get_property_value(mdl.prop(item_handle, "Jm"))
                    Fc = mdl.get_property_value(mdl.prop(item_handle, "Fc"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_g = mdl.get_property_value(mdl.prop(item_handle, "R_g"))
                    L_g = mdl.get_property_value(mdl.prop(item_handle, "L_g"))
                    line_len = mdl.get_property_value(mdl.prop(item_handle, "line_len"))
                    Rs = mdl.get_property_value(mdl.prop(item_handle, "Rs"))
                    Lls = mdl.get_property_value(mdl.prop(item_handle, "Lls"))
                    Rf = mdl.get_property_value(mdl.prop(item_handle, "Rf"))
                    Llfd = mdl.get_property_value(mdl.prop(item_handle, "Llfd"))
                    Rkq = mdl.get_property_value(mdl.prop(item_handle, "Rkq"))
                    Llkq = mdl.get_property_value(mdl.prop(item_handle, "Llkq"))
                    Rkd = mdl.get_property_value(mdl.prop(item_handle, "Rkd"))
                    Llkd = mdl.get_property_value(mdl.prop(item_handle, "Llkd"))
                    Lmq = mdl.get_property_value(mdl.prop(item_handle, "Lmq"))
                    Lmd = mdl.get_property_value(mdl.prop(item_handle, "Lmd"))
                    EM_delay = mdl.get_property_value(mdl.prop(item_handle, "EM_delay"))
                    gov_Kp = mdl.get_property_value(mdl.prop(item_handle, "gov_Kp"))
                    K = mdl.get_property_value(mdl.prop(item_handle, "K"))
                    R_D = mdl.get_property_value(mdl.prop(item_handle, "R_D"))
                    T_CH = mdl.get_property_value(mdl.prop(item_handle, "T_CH"))
                    T1 = mdl.get_property_value(mdl.prop(item_handle, "T1"))
                    T2 = mdl.get_property_value(mdl.prop(item_handle, "T2"))
                    T3 = mdl.get_property_value(mdl.prop(item_handle, "T3"))
                    T4 = mdl.get_property_value(mdl.prop(item_handle, "T4"))
                    T5 = mdl.get_property_value(mdl.prop(item_handle, "T5"))
                    T6 = mdl.get_property_value(mdl.prop(item_handle, "T6"))
                    K_A = mdl.get_property_value(mdl.prop(item_handle, "K_A"))
                    K_E = mdl.get_property_value(mdl.prop(item_handle, "K_E"))
                    K_F = mdl.get_property_value(mdl.prop(item_handle, "K_F"))
                    S_E = mdl.get_property_value(mdl.prop(item_handle, "S_E"))
                    V_R_max = mdl.get_property_value(mdl.prop(item_handle, "V_R_max"))
                    V_R_min = mdl.get_property_value(mdl.prop(item_handle, "V_R_min"))
                    T_A = mdl.get_property_value(mdl.prop(item_handle, "T_A"))
                    T_E = mdl.get_property_value(mdl.prop(item_handle, "T_E"))
                    T_F = mdl.get_property_value(mdl.prop(item_handle, "T_F"))
                    T_R = mdl.get_property_value(mdl.prop(item_handle, "T_R"))
                    inner_w_rise = mdl.get_property_value(mdl.prop(item_handle, "inner_w_rise"))
                    inner_w_fall = mdl.get_property_value(mdl.prop(item_handle, "inner_w_fall"))
                    V_rise = mdl.get_property_value(mdl.prop(item_handle, "V_rise"))
                    V_fall = mdl.get_property_value(mdl.prop(item_handle, "V_fall"))
                    exc_Kp = mdl.get_property_value(mdl.prop(item_handle, "exc_Kp"))
                    exc_Ki = mdl.get_property_value(mdl.prop(item_handle, "exc_Ki"))
                    E_F_max = mdl.get_property_value(mdl.prop(item_handle, "E_F_max"))
                    E_F_min = mdl.get_property_value(mdl.prop(item_handle, "E_F_min"))
                    maxV_slip = mdl.get_property_value(mdl.prop(item_handle, "maxV_slip"))
                    minV_slip = mdl.get_property_value(mdl.prop(item_handle, "minV_slip"))
                    maxw_slip = mdl.get_property_value(mdl.prop(item_handle, "maxw_slip"))
                    minw_slip = mdl.get_property_value(mdl.prop(item_handle, "minw_slip"))
                    maxV_pds = mdl.get_property_value(mdl.prop(item_handle, "maxV_pds"))
                    maxw_pds = mdl.get_property_value(mdl.prop(item_handle, "maxw_pds"))
                    Kp_PLL = mdl.get_property_value(mdl.prop(item_handle, "Kp_PLL"))
                    Ki_PLL = mdl.get_property_value(mdl.prop(item_handle, "Ki_PLL"))
                    PLL_max = mdl.get_property_value(mdl.prop(item_handle, "PLL_max"))
                    PLL_min = mdl.get_property_value(mdl.prop(item_handle, "PLL_min"))
                    
                    w_m = w_0/pms
                    
                    V_DQ = V_ABC*np.sqrt(2)
                    T_nom = S/w_m
                    TM_DQ = T_nom
                    I_DQ = (2*S)/(3*V_DQ)
                    Z_DQ = V_DQ/I_DQ
                    L_DQ = Z_DQ/w_0
                    sq_Z = (R_g/Z_DQ)**2+(L_g/L_DQ)**2
                    
                    X_q = w_0*(Lls+Lmq)/Z_DQ
                    X_d = w_0*(Lls+Lmd)/Z_DQ
                    X_ls = w_0*Lls/Z_DQ
                    X_lfd = w_0*Llfd/Z_DQ
                    X_lkd = w_0*Llkd/Z_DQ
                    X_lkq = w_0*Llkq/Z_DQ
                    X_md = w_0*Lmd/Z_DQ
                    X_mq = w_0*Lmq/Z_DQ
                    X_fd = w_0*(Llfd+Lmd)/Z_DQ
                    X_kd = w_0*(Llkd+Lmd)/Z_DQ
                    X_kq = w_0*(Llkq+Lmq)/Z_DQ
                    R_fd = Rf/Z_DQ
                    R_kd = Rkd/Z_DQ
                    R_kq = Rkq/Z_DQ
                    R_s = Rs/Z_DQ
                    
                    L_DQ = Z_DQ/w_0
                    C_DQ = 1/(Z_DQ*w_0)
                    
                    R_G = R_g/Z_DQ
                    X_G = L_g/L_DQ
                    
                    H = 0.5*Jm*(w_0*(2/pms))**2/S
                    D_FW = Fc*(w_m/T_nom)
                    
                    X_dp = X_d - (X_md**2/X_fd)
                    X_qp = X_q
                    T_dop = X_fd/(w_0*R_fd)
                    T_qop = 0
                    
                    X_dpp = X_ls + (X_md*(X_lkd*X_lfd/(X_lkd+X_lfd)))/(X_md+(X_lkd*X_lfd/(X_lkd+X_lfd)))
                    X_qpp = X_ls + (X_mq*X_lkq/(X_mq+X_lkq))
                    T_dopp = (1/(w_0*R_kd))*(X_lkd+(X_md*X_lfd/(X_md+X_lfd)))
                    T_qopp = (1/(w_0*R_kq))*X_kq
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, 'diesel_genset_image.jpg')
                    mdl.set_color(item_handle, "black")
                ENDCODE
            }
        }
        [
            position = 6256, 8888
            size = 200, 96
        ]

        tag Tag36 {
            value = "Ground"
            scope = global
            kind = pe
        }
        [
            position = 8680, 6600
            hide_name = True
            scale = -1, 1
        ]

        tag Tag38 {
            value = "Ground"
            scope = global
            kind = pe
        }
        [
            position = 5352, 7464
            hide_name = True
            scale = -1, 1
        ]

        tag Tag56 {
            value = "GroundF1"
            scope = global
            kind = pe
        }
        [
            position = 5336, 7632
            rotation = down
            hide_name = True
        ]

        tag Tag57 {
            value = "Ground"
            scope = global
            kind = pe
        }
        [
            position = 5336, 7552
            rotation = down
            hide_name = True
        ]

        tag Tag46 {
            value = "GroundF1"
            scope = global
            kind = pe
        }
        [
            position = 5376, 7752
            hide_name = True
            scale = -1, 1
        ]

        tag Tag59 {
            value = "GroundF1"
            scope = global
            kind = pe
        }
        [
            position = 4296, 7760
            rotation = down
            hide_name = True
        ]

        tag Tag63 {
            value = "GroundF1_1"
            scope = global
            kind = pe
        }
        [
            position = 4296, 7864
            rotation = down
            hide_name = True
        ]

        tag Tag47 {
            value = "GroundF1_2"
            scope = global
            kind = pe
        }
        [
            position = 5376, 7824
            hide_name = True
            scale = -1, 1
            size = 56, 20
        ]

        tag Tag61 {
            value = "GroundF1_4"
            scope = global
            kind = pe
        }
        [
            position = 4784, 8856
            hide_name = True
            scale = -1, 1
            size = 56, 20
        ]

        tag Tag66 {
            value = "GroundF1_6"
            scope = global
            kind = pe
        }
        [
            position = 5040, 9464
            hide_name = True
            scale = -1, 1
            size = 56, 20
        ]

        tag Tag16 {
            value = "GroundF1_1"
            scope = global
            kind = pe
        }
        [
            position = 4376, 8640
            rotation = left
            hide_name = True
            scale = -1, 1
        ]

        tag Tag68 {
            value = "GroundF1_4"
            scope = global
            kind = pe
        }
        [
            position = 5040, 9376
            hide_name = True
            scale = -1, 1
            size = 56, 20
        ]

        tag Tag15 {
            value = "GroundF1_1"
            scope = global
            kind = pe
        }
        [
            position = 4088, 8672
            rotation = left
            hide_name = True
            scale = -1, 1
        ]

        tag Tag62 {
            value = "GroundF1_4"
            scope = global
            kind = pe
        }
        [
            position = 4784, 8920
            hide_name = True
            scale = -1, 1
            size = 56, 20
        ]

        tag Tag67 {
            value = "GroundF1_2"
            scope = global
            kind = pe
        }
        [
            position = 4768, 8768
            hide_name = True
            scale = -1, 1
        ]

        tag Tag18 {
            value = "GroundF1_4"
            scope = global
            kind = pe
        }
        [
            position = 5032, 9312
            rotation = left
            hide_name = True
            scale = -1, 1
        ]

        tag Tag64 {
            value = "GroundF1_6"
            scope = global
            kind = pe
        }
        [
            position = 4840, 9800
            rotation = left
            hide_name = True
            scale = -1, 1
        ]

        tag Tag19 {
            value = "GroundF1_4"
            scope = global
            kind = pe
        }
        [
            position = 5344, 9152
            rotation = left
            hide_name = True
            scale = -1, 1
        ]

        tag Tag60 {
            value = "GroundF1"
            scope = global
            kind = pe
        }
        [
            position = 6168, 8144
            rotation = down
            hide_name = True
        ]

        tag Tag65 {
            value = "GroundF1_3"
            scope = global
            kind = pe
        }
        [
            position = 6168, 8248
            rotation = down
            hide_name = True
        ]

        tag Tag83 {
            value = "GroundF1_3"
            scope = global
            kind = pe
        }
        [
            position = 6328, 8992
            rotation = down
            hide_name = True
        ]

        tag Tag84 {
            value = "GroundF1_2"
            scope = global
            kind = pe
        }
        [
            position = 5328, 8576
            rotation = left
            hide_name = True
            scale = -1, 1
        ]

        tag Tag85 {
            value = "GroundF1_2"
            scope = global
            kind = pe
        }
        [
            position = 5736, 8552
            rotation = left
            hide_name = True
            scale = -1, 1
        ]

        junction Junction495 pe
        [
            position = 8584, 6600
        ]

        junction Junction317 pe
        [
            position = 4176, 8360
        ]

        junction Junction318 pe
        [
            position = 4192, 8376
        ]

        junction Junction352 pe
        [
            position = 4960, 9024
        ]

        junction Junction361 pe
        [
            position = 4944, 9504
        ]

        junction Junction363 pe
        [
            position = 4928, 9488
        ]

        junction Junction368 pe
        [
            position = 4928, 8992
        ]

        junction Junction370 pe
        [
            position = 4944, 9008
        ]

        junction Junction373 pe
        [
            position = 4960, 9520
        ]

        junction Junction375 pe
        [
            position = 4160, 8344
        ]

        junction Junction377 pe
        [
            position = 5232, 7688
        ]

        junction Junction487 pe
        [
            position = 5264, 7720
        ]

        junction Junction488 pe
        [
            position = 5248, 7704
        ]

        junction Junction498 pe
        [
            position = 4736, 7688
        ]

        junction Junction499 pe
        [
            position = 4768, 7704
        ]

        junction Junction500 pe
        [
            position = 4208, 8344
        ]

        junction Junction501 pe
        [
            position = 4240, 8360
        ]

        junction Junction502 pe
        [
            position = 4280, 8688
        ]

        junction Junction504 pe
        [
            position = 4840, 8208
        ]

        junction Junction505 pe
        [
            position = 4872, 8224
        ]

        junction Junction506 pe
        [
            position = 4808, 8992
        ]

        junction Junction507 pe
        [
            position = 4840, 9008
        ]

        junction Junction508 pe
        [
            position = 5032, 9488
        ]

        junction Junction509 pe
        [
            position = 5064, 9504
        ]

        junction Junction557 pe
        [
            position = 5064, 8992
        ]

        junction Junction558 pe
        [
            position = 5080, 9008
        ]

        junction Junction559 pe
        [
            position = 5096, 9024
        ]

        junction Junction566 pe
        [
            position = 6056, 8280
        ]

        junction Junction567 pe
        [
            position = 6072, 8296
        ]

        junction Junction590 pe
        [
            position = 5232, 7688
        ]

        junction Junction591 pe
        [
            position = 5248, 7704
        ]

        junction Junction592 pe
        [
            position = 5264, 7720
        ]

        junction Junction596 pe
        [
            position = 8240, 6952
        ]

        junction Junction597 pe
        [
            position = 8272, 6968
        ]

        junction Junction600 pe
        [
            position = 5832, 7688
        ]

        junction Junction603 pe
        [
            position = 4240, 8728
        ]

        junction Junction652 pe
        [
            position = 6056, 8280
        ]

        junction Junction653 pe
        [
            position = 6072, 8296
        ]

        junction Junction654 pe
        [
            position = 6088, 8312
        ]

        junction Junction661 pe
        [
            position = 5200, 8208
        ]

        junction Junction662 pe
        [
            position = 5224, 8224
        ]

        junction Junction663 pe
        [
            position = 5248, 8240
        ]

        junction Junction664 pe
        [
            position = 5232, 8208
        ]

        junction Junction665 pe
        [
            position = 5248, 8224
        ]

        junction Junction666 pe
        [
            position = 5264, 8240
        ]

        connect Junction495 Tag36 as Connection4156
        [
            breakpoints = 8584, 6600
        ]
        connect Vs1.n_node Junction495 as Connection4157
        connect gnd2.node Junction495 as Connection4155
        connect "3ph Fault 106.A" Junction557 as Connection4404
        connect "3ph Fault 106.C" Junction559 as Connection4410
        connect CIL_F1_Critical2.A Feeder1_trafo6.a2 as Connection3395
        connect CIL_F1_Interruptible1.A Feeder1_trafo1.a2 as Connection3615
        connect CIL_F1_Priority1.A F1_CB14.a as Connection3392
        connect Coupling10.c Feeder1_trafo3.C1 as Connection3586
        connect Coupling10.a Feeder1_trafo3.A1 as Connection3579
        connect Coupling10.b Feeder1_trafo3.B1 as Connection3567
        connect Coupling11.A Junction377 as Connection3625
        connect Coupling11.C Junction487 as Connection4102
        connect Coupling6.A F1_PCC.a as Connection4097
        connect Coupling6.C F1_PCC.c as Connection4099
        connect Coupling6.c Junction487 as Connection4104
        connect Coupling6.b Junction488 as Connection4107
        connect Coupling8.c F1_CB1.C as Connection3105
        connect Coupling8.b F1_CB1.B as Connection3104
        connect Coupling8.A Junction498 as Connection4170
        connect Coupling8.G Tag59 as Connection2168
        connect Coupling8.g Tag63 as Connection2169
        connect Coupling9.B Feeder1_trafo5.b2 as Connection3370
        connect Coupling9.a Junction363 as Connection3372
        connect Coupling9.c Junction373 as Connection3374
        connect F1_CB1.A Coupling8.a as Connection3103
        connect F1_CB1.b Feeder1_line1.b_out as Connection3101
        connect F1_CB1.a Feeder1_line1.a_out as Connection3100
        connect F1_CB1.c Feeder1_line1.c_out as Connection3102
        connect F1_CB10.c Feeder1_trafo5.C1 as Connection2969
        connect F1_CB10.a Feeder1_trafo5.A1 as Connection2967
        connect F1_CB10.b Feeder1_trafo5.B1 as Connection2968
        connect F1_CB10.C Junction352 as Connection3336
        connect F1_CB14.c CIL_F1_Priority1.C as Connection3394
        connect F1_CB14.b CIL_F1_Priority1.B as Connection3393
        connect F1_CB14.B Junction509 as Connection4211
        connect F1_CB2.B Coupling11.b as Connection3565
        connect F1_CB2.A Coupling11.a as Connection3596
        connect F1_CB2.C Coupling11.c as Connection3290
        connect F1_CB2.c Feeder1_line2.c_out as Connection3167
        connect F1_CB2.a Feeder1_line2.a_out as Connection3165
        connect F1_CB2.b Feeder1_line2.b_out as Connection3166
        connect F1_CB4.c Feeder1_trafo1.C1 as Connection3073
        connect F1_CB4.a Feeder1_trafo1.A1 as Connection3071
        connect F1_CB4.b Feeder1_trafo1.B1 as Connection3072
        connect F1_CB5.b Feeder1_trafo2.B1 as Connection3088
        connect F1_CB5.a Feeder1_trafo2.A1 as Connection3087
        connect F1_CB5.c Feeder1_trafo2.C1 as Connection3089
        connect F1_CB5.C Junction318 as Connection3098
        connect F1_CB5.A Junction500 as Connection4180
        connect F1_CB6.b Feeder1_line6.b_out as Connection2998
        connect F1_CB6.c Feeder1_line6.c_out as Connection2999
        connect F1_CB6.a Feeder1_line6.a_out as Connection2997
        connect F1_CB6.A Junction504 as Connection4196
        connect F1_CB6.B Junction505 as Connection4199
        connect F1_Motor.B Junction361 as Connection3359
        connect F1_Motor.A Junction363 as Connection3365
        connect F1_Motor.C Junction373 as Connection3362
        connect F1_PCC.b Coupling6.B as Connection4098
        connect F1_PCC.B F1_line.b_in as Connection3403
        connect F1_PCC.G Tag38 as Connection3404
        connect F1_line.a_in F1_PCC.A as Connection3401
        connect F1_line.c_in F1_PCC.C as Connection3402
        connect Feeder1_line1.c_in Junction318 as Connection3096
        connect Feeder1_line1.a_in Junction375 as Connection3090
        connect Feeder1_line6.a_in Coupling10.A as Connection3588
        connect Feeder1_line6.b_in Coupling10.B as Connection3590
        connect Feeder1_line6.c_in Coupling10.C as Connection3343
        connect Feeder1_trafo1.b2 CIL_F1_Interruptible1.B as Connection3563
        connect Feeder1_trafo1.c2 CIL_F1_Interruptible1.C as Connection3379
        connect Feeder1_trafo5.c2 Coupling9.C as Connection3373
        connect Feeder1_trafo5.a2 Coupling9.A as Connection3371
        connect Feeder1_trafo6.b2 CIL_F1_Critical2.B as Connection3396
        connect Feeder1_trafo6.c2 CIL_F1_Critical2.C as Connection3397
        connect Feeder1_trafo6.B1 Junction558 as Connection4405
        connect Junction317 Feeder1_line1.b_in as Connection3094
        [
            breakpoints = 4176, 8360
        ]
        connect Junction317 Junction501 as Connection4187
        [
            breakpoints = 4176, 8360
        ]
        connect Junction352 Junction559 as Connection4408
        [
            breakpoints = 4960, 9024
        ]
        connect Junction361 Coupling9.b as Connection3369
        connect Junction363 Junction508 as Connection4208
        [
            breakpoints = 4928, 9488; 4928, 9488; 4928, 9488
        ]
        connect Junction368 F1_CB10.A as Connection3574
        [
            breakpoints = 4928, 8992
        ]
        connect Junction368 Junction506 as Connection4202
        connect Junction368 Junction557 as Connection4402
        [
            breakpoints = 4928, 8992; 4928, 8992; 4928, 8992
        ]
        connect Junction370 F1_CB10.B as Connection3332
        [
            breakpoints = 4944, 9008
        ]
        connect Junction370 Junction507 as Connection4205
        connect Junction373 F1_CB14.C as Connection3361
        [
            breakpoints = 4960, 9520; 4960, 9520; 4992, 9520
        ]
        connect Junction377 Junction498 as Connection4361
        [
            breakpoints = 5232, 7688; 5128, 7688
        ]
        connect Junction488 Coupling11.B as Connection4106
        [
            breakpoints = 5248, 7704; 5248, 7704; 5248, 7704; 5248, 7704
        ]
        connect Junction499 Coupling8.B as Connection4174
        [
            breakpoints = 4768, 7704; 4176, 7704
        ]
        connect Junction500 Junction375 as Connection4181
        connect Junction501 F1_CB5.B as Connection4188
        [
            breakpoints = 4240, 8360
        ]
        connect Junction502 Feeder1_trafo2.a2 as Connection4191
        connect Junction508 F1_CB14.A as Connection4209
        connect Junction509 Junction361 as Connection4212
        connect Junction557 Feeder1_trafo6.A1 as Connection4403
        connect Junction558 "3ph Fault 106.B" as Connection4407
        connect Junction558 Junction370 as Connection4406
        connect Junction559 Feeder1_trafo6.C1 as Connection4409
        connect Tag15 Feeder1_trafo1.Ground as Connection1895
        [
            breakpoints = 4064, 8608
        ]
        connect Tag16 Feeder1_trafo2.Ground as Connection1896
        connect Tag18 Feeder1_trafo5.Ground as Connection1898
        connect Tag19 Feeder1_trafo6.Ground as Connection1899
        connect Tag46 Coupling11.G as Connection3292
        connect Tag47 Coupling11.g as Connection3602
        connect Tag56 Coupling6.g as Connection4101
        connect Tag57 Coupling6.G as Connection4100
        connect Tag61 Coupling10.g as Connection3569
        connect Tag62 Feeder1_trafo3.Ground as Connection3368
        connect Tag64 F1_Motor.g as Connection3589
        connect Tag66 Coupling9.g as Connection3376
        connect Tag67 Coupling10.G as Connection3675
        connect Tag68 Coupling9.G as Connection3614
        connect Vrms_bus101.p_node Junction498 as Connection4172
        connect Vrms_bus101.n_node Junction499 as Connection4175
        connect Vrms_bus102.p_node Junction500 as Connection4182
        connect Vrms_bus102.n_node Junction501 as Connection4189
        connect Vrms_bus104.p_node Junction502 as Connection4192
        connect Vrms_bus105.p_node Junction504 as Connection4198
        connect Vrms_bus105.n_node Junction505 as Connection4201
        connect Vrms_bus106.p_node Junction506 as Connection4204
        connect Vrms_bus106.n_node Junction507 as Connection4207
        connect Vrms_bus107.p_node Junction508 as Connection4210
        connect Vrms_bus107.n_node Junction509 as Connection4213
        connect "3ph Fault 103.A" Junction566 as Connection4448
        connect "3ph Fault 103.B" Junction567 as Connection4451
        connect DIESEL_MCB.c Feeder1_lineDiesel.c_out as Connection4032
        connect DIESEL_MCB.a Feeder1_lineDiesel.a_out as Connection4037
        connect DIESEL_MCB.A Junction566 as Connection4446
        connect DIESEL_MCB.B Junction567 as Connection4449
        connect F1_CB3.a Feeder1_line3.a_out as Connection4374
        connect F1_CB3.c Feeder1_line3.c_out as Connection4376
        connect Feeder1_line3.b_out F1_CB3.b as Connection4375
        connect Feeder1_lineDiesel.b_out DIESEL_MCB.b as Connection4031
        connect Coupling6.a Junction590 as Connection4648
        connect Junction590 Junction377 as Connection4649
        [
            breakpoints = 5232, 7688
        ]
        connect Junction499 Junction591 as Connection4651
        [
            breakpoints = 4768, 7704
        ]
        connect Junction591 Junction488 as Connection4652
        [
            breakpoints = 5248, 7704
        ]
        connect F1_CB3.B Junction591 as Connection4653
        connect Coupling8.C Junction592 as Connection4654
        connect Junction592 Junction487 as Connection4655
        [
            breakpoints = 5264, 7720; 5264, 7720; 5264, 7720; 5264, 7720
        ]
        connect F1_CB3.C Junction592 as Connection4656
        [
            breakpoints = 5760, 7720; 5264, 7720; 5264, 7624; 5264, 7624
        ]
        connect Vrms_grid.p_node Junction596 as Connection4690
        connect F1_line.a_out Junction596 as Connection4692
        connect Junction597 Vrms_grid.n_node as Connection4694
        [
            breakpoints = 8272, 6968; 8272, 6968; 8272, 6968
        ]
        connect F1_line.b_out Junction597 as Connection4695
        connect F1_CB3.A Junction600 as Connection4712
        connect Junction600 Junction590 as Connection4713
        connect "Device Marker3.node" Junction600 as Connection4714
        connect CIL_F1_Critical1.B Junction603 as Connection4723
        connect Vrms_bus104.n_node Junction603 as Connection4725
        connect Coupling7.G Tag60 as Connection4425
        connect Coupling7.g Tag65 as Connection4436
        connect Coupling7.A Feeder1_line3.a_in as Connection4926
        connect Junction566 Junction652 as Connection4927
        connect Coupling7.a Junction652 as Connection4929
        [
            breakpoints = 6056, 8232; 6056, 8280
        ]
        connect Feeder1_line3.b_in Coupling7.B as Connection4930
        connect Junction567 Junction653 as Connection4931
        connect Coupling7.b Junction653 as Connection4933
        connect Junction654 "3ph Fault 103.C" as Connection4935
        [
            breakpoints = 6088, 8312; 6088, 8312; 6088, 8312
        ]
        connect Coupling7.c Junction654 as Connection4936
        connect Coupling7.C Feeder1_line3.c_in as Connection4937
        connect Vs1.b_node Junction597 as Connection4993
        [
            breakpoints = 8584, 6968; 8584, 6968; 8584, 6968; 8584, 6968; 8584, 6968; 8584, 6968; 8488, 6968; 8272, 6968
        ]
        connect F1_line.c_out Vs1.c_node as Connection4992
        [
            breakpoints = 8600, 6984; 8600, 6984; 8680, 6984; 8680, 6984; 8680, 6984
        ]
        connect Vrms_bus103.p_node Junction652 as Connection4996
        [
            breakpoints = 5984, 8280; 6056, 8280; 6056, 8280
        ]
        connect Junction654 DIESEL_MCB.C as Connection4995
        [
            breakpoints = 6088, 8312; 6088, 8312
        ]
        connect Junction653 Vrms_bus103.n_node as Connection4997
        [
            breakpoints = 6072, 8296; 6072, 8296; 6072, 8296; 5928, 8296
        ]
        connect Junction507 Feeder1_trafo3.b2 as Connection5001
        [
            breakpoints = 4840, 9008; 4840, 9008; 4664, 9008; 4664, 9008; 4664, 9008; 4664, 9008; 4664, 9008; 4664, 9008; 4664, 9008; 4664, 9008; 4664, 9008; 4664, 9008
        ]
        connect Junction506 Feeder1_trafo3.a2 as Connection5003
        [
            breakpoints = 4808, 8992; 4808, 8992; 4648, 8992; 4648, 8992; 4648, 8992; 4648, 8992; 4648, 8992; 4648, 8992; 4648, 8992; 4648, 8992; 4648, 8992
        ]
        connect Junction352 Feeder1_trafo3.c2 as Connection5002
        [
            breakpoints = 4960, 9024; 4960, 9024; 4680, 9024; 4680, 9024; 4680, 9024
        ]
        connect CIL_F1_Critical1.A Junction502 as Connection5006
        [
            breakpoints = 4176, 8712; 4280, 8712; 4280, 8712; 4280, 8712; 4280, 8688
        ]
        connect CIL_F1_Critical1.C Feeder1_trafo2.c2 as Connection5005
        [
            breakpoints = 4312, 8744
        ]
        connect Junction603 Feeder1_trafo2.b2 as Connection5004
        [
            breakpoints = 4240, 8728; 4296, 8728; 4296, 8728
        ]
        connect Tag84 Feeder1_trafo7.Ground as Connection5013
        connect "VBR Variable Load1_in.Out1" "VBR Variable Load1.Inputs" as Connection5023
        connect "VBR Variable Load1_out.In1" "VBR Variable Load1.Output" as Connection5024
        connect "VBR Variable Load1.A" Feeder1_trafo7.a2 as Connection5025
        connect "VBR Variable Load1.B" Feeder1_trafo7.b2 as Connection5026
        connect "VBR Variable Load1.C" Feeder1_trafo7.c2 as Connection5027
        connect F1_VL_CB1.A Junction661 as Connection5048
        [
            breakpoints = 5200, 8344; 5200, 8208
        ]
        connect F1_VL_CB1.B Junction662 as Connection5051
        [
            breakpoints = 5224, 8344; 5224, 8224
        ]
        connect F1_VL_CB1.C Junction663 as Connection5054
        connect Feeder1_trafo7.A1 F1_VL_CB1.a as Connection5073
        connect Feeder1_trafo7.B1 F1_VL_CB1.b as Connection5074
        connect Feeder1_trafo7.C1 F1_VL_CB1.c as Connection5075
        connect Junction317 F1_CB4.B as Connection5099
        [
            breakpoints = 4176, 8360; 4176, 8360; 4016, 8360; 4024, 8360
        ]
        connect F1_CB4.A Junction375 as Connection5098
        [
            breakpoints = 4000, 8344; 4008, 8344; 4160, 8344; 4160, 8344
        ]
        connect F1_CB4.C Junction318 as Connection5097
        [
            breakpoints = 4032, 8400; 4032, 8376; 4032, 8376; 4032, 8376; 4192, 8376; 4192, 8376
        ]
        connect Junction596 Vs1.a_node as Connection5100
        [
            breakpoints = 8240, 6952; 8240, 6952; 8240, 6952; 8240, 6952; 8400, 6952; 8400, 6952; 8488, 6952; 8488, 6952; 8488, 6952; 8488, 6952
        ]
        connect Junction663 F1_CB6.C as Connection5101
        [
            breakpoints = 5248, 8240; 5216, 8240; 5104, 8240; 5104, 8240; 5104, 8240; 5104, 8240; 5000, 8240
        ]
        connect Junction504 Junction661 as Connection5102
        [
            breakpoints = 4840, 8208; 4968, 8208; 4968, 8208; 5072, 8208; 5072, 8208; 5144, 8208; 5144, 8208
        ]
        connect Junction505 Junction662 as Connection5103
        [
            breakpoints = 4872, 8224; 4872, 8224; 4984, 8224; 5088, 8224; 5088, 8224; 5176, 8224
        ]
        connect Tag85 Feeder1_trafo8.Ground as Connection5104
        connect "VBR Variable Load2_in.Out1" "VBR Variable Load2.Inputs" as Connection5105
        connect "VBR Variable Load2_out.In1" "VBR Variable Load2.Output" as Connection5106
        connect "VBR Variable Load2.A" Feeder1_trafo8.a2 as Connection5107
        connect "VBR Variable Load2.B" Feeder1_trafo8.b2 as Connection5108
        connect "VBR Variable Load2.C" Feeder1_trafo8.c2 as Connection5109
        connect Feeder1_trafo8.A1 F1_VL_CB2.a as Connection5110
        connect Feeder1_trafo8.B1 F1_VL_CB2.b as Connection5111
        connect Feeder1_trafo8.C1 F1_VL_CB2.c as Connection5112
        connect Junction661 Junction664 as Connection5113
        connect Junction664 Feeder1_line2.a_in as Connection5114
        [
            breakpoints = 5232, 8208; 5232, 8208; 5232, 8208; 5232, 8208
        ]
        connect F1_VL_CB2.A Junction664 as Connection5115
        connect Feeder1_line2.b_in Junction665 as Connection5116
        connect Junction665 Junction662 as Connection5117
        [
            breakpoints = 5248, 8224; 5248, 8224; 5248, 8224; 5248, 8224
        ]
        connect F1_VL_CB2.B Junction665 as Connection5118
        connect Feeder1_line2.c_in Junction666 as Connection5119
        connect Junction666 Junction663 as Connection5120
        [
            breakpoints = 5264, 8240; 5264, 8240
        ]
        connect F1_VL_CB2.C Junction666 as Connection5121
        connect Microturbine1.ground Tag83 as Connection5122
        connect "Microturbine1.MCB Control" DIESEL_MCB.DG_MCB_Control as Connection5123
        connect Feeder1_lineDiesel.a_in Microturbine1.V_aG as Connection5124
        connect Feeder1_lineDiesel.b_in Microturbine1.V_bG as Connection5125
        connect Feeder1_lineDiesel.c_in Microturbine1.V_cG as Connection5126
    }

    logically_deleted {
        "Device Marker1"
        "Coupling6.Device Coupling 1"
        "F1_CB2.MID_Rly1"
        "F1_CB1.MID_Rly1"
        "F1_CB14.MID_Rly1"
        "F1_CB10.MID_Rly1"
        "F1_CB5.MID_Rly1"
        "F1_CB6.MID_Rly1"
        "F1_CB4.MID_Rly1"
        "F1_CB3.MID_Rly1"
        "RegD_Control.P_ref_Diesel.Subsystem1"
        "RegD_Control.RegD_Signal"
        "RegD_Control.N2"
        "RegD_Control.N3"
        "RegD_Control.Modbus2"
        "RegD_Control.Modbus3"
        "RegD_Control.Modbus1"
        "RegD_Control.N1"
        "RegD_Control.Connection68"
        "F1_VL_CB1.MID_Rly1"
        "F1_VL_CB2.MID_Rly1"
        "Microturbine1.Synchonous Machine.V_qG2.Differentiator1"
        "Microturbine1.Synchonous Machine.V_dG2.Differentiator1"
        "Microturbine1.BE1-25A Synchronizer.BE1-25A Synchronizer (modified)"
        "Microturbine1.GovernorX"
        "Microturbine1.Governor.Subsystem1"
        "Microturbine1.Governor.Rate Transition4"
        "Microturbine1.Governor.From2"
        "Microturbine1.Governor.Connection893"
    }

    default {
        gen_PQ_transform {
            filter_order = "first order"
            filter_cutoff_Hz = "30"
            initial_filter_input = "0"
            initial_filter_output = "0"
            enable_inst_ports = "True"
            enable_zero_ports = "False"
            execution_rate = "inherit"
        }

        gen_abs {
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_data_type_conversion {
            output_type = "real"
            execution_rate = "inherit"
        }

        gen_delay {
            delay_type = "Fixed delay"
            del_length = "2"
            max_delay_length = "20"
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_differentiator {
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_math_fnc {
            mathematical_fn = "exponential"
            execution_rate = "inherit"
        }

        gen_pid_controller {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            upper_sat_lim = "1"
            lower_sat_lim = "-1"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_rate_limiter {
            rising_limit = "1"
            falling_limit = "-1"
            execution_rate = "inherit"
        }

        gen_rel_op {
            relational_op = "=="
            execution_rate = "inherit"
        }

        gen_rms_value {
            op_mode = "PLL based"
            frequency = "50"
            period_timeout = "0.5"
            execution_rate = "inherit"
        }

        gen_sr_ff {
            init_value = "0"
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_trigonometric {
            trigonometric_fn = "sin"
            angle = "Radians"
            execution_rate = "inherit"
        }

        gen_z_domain_transfer {
            domain = "Z-domain"
            method = "Zero-order hold"
            b_coeff = "[1,1]"
            a_coeff = "[1,1]"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        msr_phasor_3ph {
            period_timeout = "0.5"
            angle = "Degrees"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_digital_input {
            addr = "1"
            invert = "false"
            signal_type = "uint"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        sys_hil_marker {
            hil_device_id = "0"
            override_hw_settings = "False"
            hw_configuration_id = "1"
            override_sim_settings = "False"
            simulation_method = "exact"
            simulation_time_step = "auto"
            ss_calc_method = "systematic elimination"
            enb_pole_shift = "True"
            enb_gds_oversampling = "True"
            show_modes = "False"
            cpl_stb = "False"
            cpl_dynamics_analysis = "False"
            matrix_based_reduction = "True"
            enb_dep_sw_detect = "False"
            override_user_sp_settings = "False"
            user_cpu_optimization = "high"
            code_section = "Internal Memory"
            data_section = "Internal Memory"
            override_sys_sp_settings = "False"
            sys_cpu_optimization = "high"
            sys_sp_rate_1 = "100e-6"
            sys_sp_rate_2 = "50e-3"
        }

        sys_mp_signal_switch {
            number_of_input_terminals = "2"
            execution_rate = "inherit"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Four Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100e3"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
            cpl_connection = "star"
        }

        "core/Four Phase Device Coupling" {
            snb_type_i = "R1"
            R1 = "inf"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "True"
            snb_type_u = "R2"
            R2 = "0.0"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "True"
        }

        "core/Induction Machine with Squirrel Cage" {
            model_type = "linear"
            Rs = "13.12"
            Rr = "11.202"
            Lls = "0.0276"
            Llr = "0.0194"
            Lm = "0.3482"
            curve_type = "flux vs current"
            im_vector = "[0.0, 0.0]"
            psim_vector = "[0.0, 0.0]"
            Lm_vector = "[0.0, 0.0]"
            pms = "2"
            Jm = "10e-6"
            friction_coeff = "0"
            unconstrained_angle = "disabled"
            load_src = "SCADA / external"
            ext_mdl_load_type = "torque"
            load_ai_pin_addr = "1"
            load_ai_offset = "0"
            load_ai_gain = "1"
            enc_ppr = "1024"
            res_pole_pairs = "1"
            res_carr_source = "internal"
            res_int_carr_f = "5e+3"
            res_ai_pin_addr = "1"
            res_ai_offset = "0"
            res_ai_gain = "1"
            absenc_type = "None"
            endat_clock_di_addr = "1"
            endat_clock_di_logic = "active high"
            endat_data_di_addr = "2"
            endat_data_di_logic = "active high"
            biss_clock_di_addr = "1"
            biss_clock_di_logic = "active high"
            biss_data_di_addr = "2"
            ssi_clock_di_addr = "1"
            ssi_clock_di_logic = "active high"
            ssi_data_di_addr = "2"
            Rsnb_stator = "20e3"
            calculate_max_snubber = "Calculate"
            enb_sig_out = "False"
            execution_rate = "100e-6"
            fault_sim = "False"
            fault_type = "Interturn Short Circuit"
            fault_location = "phase A"
            execution_rate_fault = "inherit"
        }

        "core/ModBus Device" {
            hil_id = "0"
            configuration = "config1"
            preview = "Configuration preview"
            network_settings_src = "Configuration dictionary"
            ip_addr = "192.168.0.210"
            netmask = "255.255.255.0"
            port = "502"
            gateway = "192.168.0.210"
            gateway_enable = "False"
            ip_address_port = "False"
            request_counter_port = "None"
            defines = ""
            modbus_sunspec = "False"
            logging = "False"
            execution_rate = "100e-6"
        }

        "core/Rate Transition" {
            init_value = "0.0"
            execution_rate = "100e-6"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Three Phase Non-Ideal Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            switching = "zero current"
            execution_rate = "inherit"
            resistance = "1.0"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            core_sat = "False"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            ioc1 = "0.7"
            Poc1 = "460.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[1910.3, 2419.7]"
            current_vals_SI = "[0.66653, 277.72]"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[1.2, 1.52]"
            current_vals_pu = "[0.0024, 1]"
            flux_vals_SCOC = "[1.2, 1.52]"
            current_vals_SCOC = "[0.0024, 1]"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "false"
            coupling_type = "core"
            Rshunt = "inf"
        }

        "core/Three Phase Voltage Source" {
            init_rms_value = "0.0"
            init_frequency = "50.0"
            init_phase = "0.0"
        }

        "core/Three phase PLL" {
            initial_filter_output = "60"
            wn = "157.0796"
            zeta = "0.707"
            rate_high = "12"
            rate_low = "-12"
            freq_unit = "Hz"
            kp = "100"
            ki = "3200"
            kd = "1"
            N = "714.2857"
            initial_pid_output = "376.99111843"
            up_lim = "1e4"
            low_lim = "-1e4"
            kb = "1"
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "False"
            wn_LPFdq = "62.83185307"
            execution_rate = "inherit"
            enable_pk = "False"
            enable_zero = "True"
            enable_sin = "True"
        }

        "core/Transmission Line" {
            model = "RL coupled"
            num_of_phases = "3"
            model_def = "Geometry"
            unit_sys = "imperial"
            Length_metric = "100.0"
            Length_miles = "62.1371"
            Frequency = "60.0"
            Earth_resistivity = "100"
            X_axis_1_metric = "-1.0668"
            Y_axis_1_metric = "8.5344"
            GMR_1_metric = "0.00743712"
            RD_1_metric = "0.009156192"
            Rs_1_metric = "0.19013958482462417"
            X_axis_1_imperial = "-3.5"
            Y_axis_1_imperial = "28.0"
            GMR_1_imperial = "0.0244"
            RD_1_imperial = "0.03004"
            Rs_1_imperial = "0.306"
            X_axis_2_metric = "-0.3048"
            Y_axis_2_metric = "8.5344"
            GMR_2_metric = "0.00743712"
            RD_2_metric = "0.009156192"
            Rs_2_metric = "0.19013958482462417"
            X_axis_2_imperial = "-1.0"
            Y_axis_2_imperial = "28.0"
            GMR_2_imperial = "0.0244"
            RD_2_imperial = "0.03004"
            Rs_2_imperial = "0.306"
            X_axis_3_metric = "1.0668"
            Y_axis_3_metric = "8.5344"
            GMR_3_metric = "0.00743712"
            RD_3_metric = "0.009156192"
            Rs_3_metric = "0.19013958482462417"
            X_axis_3_imperial = "3.5"
            Y_axis_3_imperial = "28.0"
            GMR_3_imperial = "0.0244"
            RD_3_imperial = "0.03004"
            Rs_3_imperial = "0.306"
            X_axis_4_metric = "0.1524"
            Y_axis_4_metric = "7.3152"
            GMR_4_metric = "0.00248"
            RD_4_metric = "0.00714"
            Rs_4_metric = "0.3678"
            X_axis_4_imperial = "0.5"
            Y_axis_4_imperial = "24.0"
            GMR_4_imperial = "0.00814"
            RD_4_imperial = "0.02345"
            Rs_4_imperial = "0.592"
            R_metric = "[[0.2481, 0.0579, 0.0579], [0.0579, 0.2481, 0.0579], [0.0579, 0.0579, 0.2481]]"
            R_imperial = "[[0.4, 0.093, 0.093], [0.093, 0.4, 0.093], [0.093, 0.093, 0.4]]"
            L_metric = "[[0.00233, 0.00140, 0.00140], [0.00140, 0.00233, 0.00140], [0.00140, 0.00140, 0.00233]]"
            L_imperial = "[[0.00374, 0.0022, 0.0022], [0.0022, 0.00374, 0.0022], [0.0022, 0.0022, 0.00374]]"
            C_metric = "[[8.546e-9, 0, 0], [0, 8.546e-9, 0], [0, 0, 8.546e-9]]"
            C_imperial = "[[1.471e-8, 0, 0], [0, 1.530e-8, 0], [0, 0, 1.375e-8]]"
            R_sequence_metric = "[[0.3864, 0, 0],[0, 0.01273, 0], [0, 0, 0.01273]]"
            L_sequence_metric = "[[4.1264e-3, 0, 0],[0, 0.9337e-3, 0], [0, 0, 0.9337e-3]]"
            C_sequence_metric = "[[7.751e-9, 0, 0],[0, 12.74e-9, 0], [0, 0, 12.74e-9]]"
            R_sequence_imperial = "[[0.6218, 0, 0],[0, 0.0204, 0], [0, 0, 0.0204]]"
            L_sequence_imperial = "[[0.00664, 0, 0],[0, 0.00150, 0], [0, 0, 0.00150]]"
            C_sequence_imperial = "[[1.247e-8, 0, 0],[0, 2.0503e-8, 0], [0, 0, 2.0503e-8]]"
            import_from_geometry = "Import from Geometry"
            import_from_RLC = "Import from RLC"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/VBR Variable Load" {
            Vn = "480"
            Sn = "640e3"
            fn = "60"
            L = "1e-4"
            execution_rate = "inherit"
            Id_Kp = "0.003"
            Id_Ki = "30"
            Iq_Kp = "0.003"
            Iq_Ki = "30"
            powerRate = "1"
            Rsnub = "1e3"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Voltage RMS" {
            op_mode = "PLL based"
            frequency = "50"
            sig_output = "False"
            execution_rate = "inherit"
            feed_forward = "false"
            nd_msr_estimation = "false"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        
        Tfast=100e-6
        Ts = 1e-3
        Ts_gen = 20e-6
        Ts_gfeed = 100e-6
        Ts_gform = 100e-6
        sys_f = 60.0    # Hz
        sys_w = 2.0*np.pi*sys_f    #rad/s
        ft2mi = 1.0/5280.0     #mi/ft
        
        # Grid Specs
        
        Vgrid = 115000.0
        SCgrid = 100.0e6
        ratio_grid = 30.0
        
        Rgrid = ((Vgrid/np.sqrt(3))**2)/(SCgrid/3)/np.sqrt(1+ratio_grid**2)
        Lgrid = ratio_grid*Rgrid/sys_w
        
        # Transformer Specs
        
            # Utility
        
        Sn_50MVA       = 50.0e6    # VA
        V1_50MVA       = 115000.0    # V
        V2_50MVA       = 13800.0    # V
        Z_50MVA        = 15.0/100.0    # pu
        Z_ratio_50MVA = 30.0
        
        R_50MVA = Z_50MVA/np.sqrt(1.0+Z_ratio_50MVA**2.0)/2.0    # pu
        L_50MVA = Z_ratio_50MVA*R_50MVA/sys_w/2.0    # pu
        
        R1_50MVA = 3.0*R_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        R2_50MVA = R_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        L1_50MVA = 3.0*L_50MVA*(V1_50MVA**2.0)/Sn_50MVA
        L2_50MVA = L_50MVA*(V2_50MVA**2.0)/Sn_50MVA
        
            # Feeders
        
        Sn_500kVA_1       = 500.0e3    # VA
        V1_500kVA_1       = 13800.0    # V
        V2_500kVA_1       = 480.0    # V
        Z_500kVA_1        = 5.0/100.0    # pu
        Z_ratio_500kVA_1 = 4.9
        
        R_500kVA_1 = Z_500kVA_1/np.sqrt(1.0+Z_ratio_500kVA_1**2.0)/2.0    # pu
        L_500kVA_1 = Z_ratio_500kVA_1*R_500kVA_1/sys_w/2.0    # pu
        
        R1_500kVA_1 = 3.0*R_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        R2_500kVA_1 = R_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        L1_500kVA_1 = 3.0*L_500kVA_1*(V1_500kVA_1**2.0)/Sn_500kVA_1
        L2_500kVA_1 = L_500kVA_1*(V2_500kVA_1**2.0)/Sn_500kVA_1
        
        
        Sn_500kVA_2       = 500.0e3    # VA
        V1_500kVA_2       = 13800.0    # V
        V2_500kVA_2       = 208.0    # V
        Z_500kVA_2        = 5.0/100.0    # pu
        Z_ratio_500kVA_2 = 4.9
        Rm_500kVA_2 = 1e5
        Lm_500kVA_2 = 200
        
        R_500kVA_2 = Z_500kVA_2/np.sqrt(1.0+Z_ratio_500kVA_2**2.0)/2.0    # pu
        L_500kVA_2 = Z_ratio_500kVA_2*R_500kVA_2/sys_w/2.0    # pu
        
        R1_500kVA_2 = 3.0*R_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        R2_500kVA_2 = R_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        L1_500kVA_2 = 3.0*L_500kVA_2*(V1_500kVA_2**2.0)/Sn_500kVA_2
        L2_500kVA_2 = L_500kVA_2*(V2_500kVA_2**2.0)/Sn_500kVA_2
        
        
        Sn_1MVA       = 1000.0e3    # VA
        V1_1MVA       = 13800.0    # V
        V2_1MVA       = 480.0    # V
        Z_1MVA        = 5.56/100.0    # pu
        Z_ratio_1MVA = 5.49
        Rm_1MVA = 1e5
        Lm_1MVA = 200
        
        R_1MVA = Z_1MVA/np.sqrt(1.0+Z_ratio_1MVA**2.0)/2.0    # pu
        L_1MVA = Z_ratio_1MVA*R_1MVA/sys_w/2.0    # pu
        
        R1_1MVA = 3.0*R_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        R2_1MVA = R_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        L1_1MVA = 3.0*L_1MVA*(V1_1MVA**2.0)/Sn_1MVA
        L2_1MVA = L_1MVA*(V2_1MVA**2.0)/Sn_1MVA
        
        Sn_1500kVA       = 1500.0e3    # VA
        V1_1500kVA       = 4160.0    # V
        V2_1500kVA       = 480.0    # V
        Z_1500kVA        = 5.75/100.0    # pu
        Z_ratio_1500kVA = 5.04
        Rm_1500kVA = 1e5
        Lm_1500kVA = 200
        
        R_1500kVA = Z_1500kVA/np.sqrt(1.0+Z_ratio_1500kVA**2.0)/2.0    # pu
        L_1500kVA = Z_ratio_1500kVA*R_1500kVA/sys_w/2.0    # pu
        
        R1_1500kVA = 3.0*R_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        R2_1500kVA = R_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        L1_1500kVA = 3.0*L_1500kVA*(V1_1500kVA**2.0)/Sn_1500kVA
        L2_1500kVA = L_1500kVA*(V2_1500kVA**2.0)/Sn_1500kVA
        
        
        Sn_2MVA_1       = 2000.0e3    # VA
        V1_2MVA_1       = 4160.0    # V
        V2_2MVA_1       = 480.0    # V
        Z_2MVA_1        = 5.75/100.0    # pu
        Z_ratio_2MVA_1 = 5.7
        Rm_2MVA_1 = 1e5
        Lm_2MVA_1 = 200
        
        R_2MVA_1 = Z_2MVA_1/np.sqrt(1.0+Z_ratio_2MVA_1**2.0)/2.0    # pu
        L_2MVA_1 = Z_ratio_2MVA_1*R_2MVA_1/sys_w/2.0    # pu
        
        R1_2MVA_1 = 3.0*R_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        R2_2MVA_1 = R_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        L1_2MVA_1 = 3.0*L_2MVA_1*(V1_2MVA_1**2.0)/Sn_2MVA_1
        L2_2MVA_1 = L_2MVA_1*(V2_2MVA_1**2.0)/Sn_2MVA_1
        
        
        Sn_2MVA_2       = 2000.0e3    # VA
        V1_2MVA_2       = 13800.0    # V
        V2_2MVA_2       = 480.0    # V
        Z_2MVA_2        = 5.75/100.0    # pu
        Z_ratio_2MVA_2 = 5.7
        Rm_2MVA_2 = 1e5
        Lm_2MVA_2 = 200
        
        R_2MVA_2 = Z_2MVA_2/np.sqrt(1.0+Z_ratio_2MVA_2**2.0)/2.0    # pu
        L_2MVA_2 = Z_ratio_2MVA_2*R_2MVA_2/sys_w/2.0    # pu
        
        R1_2MVA_2 = 3.0*R_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        R2_2MVA_2 = R_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        L1_2MVA_2 = 3.0*L_2MVA_2*(V1_2MVA_2**2.0)/Sn_2MVA_2
        L2_2MVA_2 = L_2MVA_2*(V2_2MVA_2**2.0)/Sn_2MVA_2
        
        
        Sn_2500kVA_1       = 2500.0e3    # VA
        V1_2500kVA_1       = 13800.0    # V
        V2_2500kVA_1       = 480.0    # V
        Z_2500kVA_1        = 5.56/100.0    # pu
        Z_ratio_2500kVA_1 = 5.52
        Rm_2500kVA_1 = 1e5
        Lm_2500kVA_1 = 200
        
        R_2500kVA_1 = Z_2500kVA_1/np.sqrt(1.0+Z_ratio_2500kVA_1**2.0)/2.0    # pu
        L_2500kVA_1 = Z_ratio_2500kVA_1*R_2500kVA_1/sys_w/2.0    # pu
        
        R1_2500kVA_1 = 3.0*R_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        R2_2500kVA_1 = R_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        L1_2500kVA_1 = 3.0*L_2500kVA_1*(V1_2500kVA_1**2.0)/Sn_2500kVA_1
        L2_2500kVA_1 = L_2500kVA_1*(V2_2500kVA_1**2.0)/Sn_2500kVA_1
        
        
        Sn_2500kVA_2       = 2500.0e3    # VA
        V1_2500kVA_2       = 13800.0    # V
        V2_2500kVA_2       = 480.0    # V
        Z_2500kVA_2        = 5.75/100.0    # pu
        Z_ratio_2500kVA_2 = 6.6
        Rm_2500kVA_2 = 1e5
        Lm_2500kVA_2 = 200
        
        R_2500kVA_2 = Z_2500kVA_2/np.sqrt(1.0+Z_ratio_2500kVA_2**2.0)/2.0    # pu
        L_2500kVA_2 = Z_ratio_2500kVA_2*R_2500kVA_2/sys_w/2.0    # pu
        
        R1_2500kVA_2 = 3.0*R_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        R2_2500kVA_2 = R_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        L1_2500kVA_2 = 3.0*L_2500kVA_2*(V1_2500kVA_2**2.0)/Sn_2500kVA_2
        L2_2500kVA_2 = L_2500kVA_2*(V2_2500kVA_2**2.0)/Sn_2500kVA_2
        
        
        Sn_3750kVA       = 3750.0e3    # VA
        V1_3750kVA       = 13800.0    # V
        V2_3750kVA       = 4160.0    # V
        Z_3750kVA        = 4.75/100.0    # pu
        Z_ratio_3750kVA = 11.4
        Rm_3750kVA = 1e5
        Lm_3750kVA = 200
        
        R_3750kVA = Z_3750kVA/np.sqrt(1.0+Z_ratio_3750kVA**2.0)/2.0    # pu
        L_3750kVA = Z_ratio_3750kVA*R_3750kVA/sys_w/2.0    # pu
        
        R1_3750kVA = 3.0*R_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        R2_3750kVA = R_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        L1_3750kVA = 3.0*L_3750kVA*(V1_3750kVA**2.0)/Sn_3750kVA
        L2_3750kVA = L_3750kVA*(V2_3750kVA**2.0)/Sn_3750kVA
        
        
        Sn_5MVA       = 5000.0e3    # VA
        V1_5MVA       = 13800.0    # V
        V2_5MVA       = 480.0    # V
        Z_5MVA        = 5.50/100.0    # pu
        Z_ratio_5MVA = 5.44
        Rm_5MVA = 1e5
        Lm_5MVA = 200
        
        R_5MVA = Z_5MVA/np.sqrt(1.0+Z_ratio_5MVA**2.0)/2.0    # pu
        L_5MVA = Z_ratio_5MVA*R_5MVA/sys_w/2.0    # pu
        
        R1_5MVA = 3.0*R_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        R2_5MVA = R_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        L1_5MVA = 3.0*L_5MVA*(V1_5MVA**2.0)/Sn_5MVA
        L2_5MVA = L_5MVA*(V2_5MVA**2.0)/Sn_5MVA
        
        
        # Transmission Line Specs
        
            # The cable 6 impedance is equal to the cable 13 impedance. The differences of both
            # cables are Voltage insulation and Ampacity. Feeder1_line7, Feeder1_line8 and
            # Feeder1_line9 use cable 6.
            # Transmission lines 4, 5 and 6 from Feeder 2 use cable 6.
        
        R1_cable11 = 0.2685    # ohms/mi
        X1_cable11 = 0.207    # ohms/mi
        R0_cable11 = 2.1408    # ohms/mi
        X0_cable11 = 1.582    # ohms/mi
        #X0_cable11 = 0.1582    # ohms/mi
        B_cable11 = 308.7587e-6    # S/mi
        L0_cable11 = X0_cable11/sys_w    # H/mi
        L1_cable11 = X1_cable11/sys_w    # H/mi
        C0_cable11 = B_cable11/sys_w    # F/mi
        R_cable11  = [[R0_cable11,0.0,0.0],[0.0,R1_cable11,0.0],[0.0,0.0,R1_cable11]]
        L_cable11  = [[L0_cable11,0.0,0.0],[0.0,L1_cable11,0.0],[0.0,0.0,L1_cable11]]
        C_cable11  = [[C0_cable11,0.0,0.0],[0.0,C0_cable11,0.0],[0.0,0.0,C0_cable11]]
        
        R1_cable13 = 0.1206    # ohms/mi
        X1_cable13 = 0.1878    # ohms/mi
        R0_cable13 = 1.8354    # ohms/mi
        X0_cable13 = 1.2165    # ohms/mi
        B_cable13 = 384.0177e-6    # S/mi
        L0_cable13 = X0_cable13/sys_w    # H/mi
        L1_cable13 = X1_cable13/sys_w    # H/mi
        C0_cable13 = B_cable13/sys_w    # F/mi
        R_cable13  = [[R0_cable13,0.0,0.0],[0.0,R1_cable13,0.0],[0.0,0.0,R1_cable13]]
        L_cable13  = [[L0_cable13,0.0,0.0],[0.0,L1_cable13,0.0],[0.0,0.0,L1_cable13]]
        C_cable13  = [[C0_cable13,0.0,0.0],[0.0,C0_cable13,0.0],[0.0,0.0,C0_cable13]]
        
        
        # Transmission Line lengths
        
            # Utility
        
        l_U_L1 = 3000.0*ft2mi    # mi
        l_U_L2 = 500.0*ft2mi    # mi
        l_U_L3 = 500.0*ft2mi    # mi
        l_U_L4 = 500.0*ft2mi    # mi
        
            # Feeder1
        
        l_F1L1 = 1800.0*ft2mi    # mi
        l_F1L2 = 5500.0*ft2mi    # mi
        l_F1L3 = 1000.0*ft2mi    # mi
        l_F1L4 = 3000.0*ft2mi    # mi
        l_F1L5 = 3000.0*ft2mi    # mi
        l_F1L6 = 1500.0*ft2mi    # mi
        l_F1L7 = 2000.0*ft2mi    # mi
        l_F1L8 = 1000.0*ft2mi    # mi
        l_F1L9 = 2000.0*ft2mi    # mi
        l_F1DG = 2000.0*ft2mi    # mi
        
            # Fedeer2
        
        l_F2L0 = 10.0*ft2mi    # mi
        l_F2L1 = 5500.0*ft2mi    # mi
        l_F2L2 = 2000.0*ft2mi    # mi
        l_F2L3 = 3000.0*ft2mi    # mi
        l_F2L4 = 1500.0*ft2mi    # mi
        l_F2L5 = 1500.0*ft2mi    # mi
        l_F2L6 = 1500.0*ft2mi    # mi
        
            # Feeder3
        
        l_F3L1 = 2500.0*ft2mi    # mi
        l_F3L2 = 2000.0*ft2mi    # mi
        l_F3L3 = 2000.0*ft2mi    # mi
        l_F3L4 = 1500.0*ft2mi    # mi
        l_F3LNGG = 2000.0*ft2mi    # mi
        
        #EPC ESS specs
        L_inv_ess = 0.133e-3 #7.6573e-5 
        L_grid_ess = 0.08e-3 #4.5944e-5
        
        # Diesel Genset settings
        
            # Governor specs
        
        K = 10  # gain K
        T1 = 1.0E-4 # Time constant T1 of Electric Control Box
        T2 = 0.0 # Time constant T2 of Electric Control Box
        T3 = 0.5001 # Time constant T3 of Electric Control Box
        T4 = 0.025  # Time constant T4 of Actuator
        T5 = 0.0009  # Time constant T5 of Actuator
        T6 = 0.00574  # Time constant T6 of Actuator
        Pm0 = 0.0 #0.0005  # Initial value of Mechanic Power
        Tmax = 10 #1.1  # Max torque limit
        Tmin = -0.1  # Min torque limit
        Td = 0.024  # Engine time delay
        
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2]
        denTF4d = [coeff3, coeff4]
        
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2]
        denTF3d = [coeff3, coeff4]
        
        numTF1d = [(1.0+2.0*T3/Ts),2.0,(1.0-2.0*T3/Ts)]
        denTF1d = [(1.0+2.0*T1/Ts+4.0*T1*T2/(Ts**2)),(2.0-8.0*T1*T2/(Ts**2)),(4.0*T1*T2/(Ts**2)-2.0*T1/Ts+1)]
        
            # Synchronous machine specs from Simulink's 4 MVA machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen1 = 3.5e6  # Nominal/base power of machine in VA
        Vn_gen1 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen1 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen1 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen1 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen1 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen1 = 0.00206  # Field resistance in pu
        Llfd_pu_gen1 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen1 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen1 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen1 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen1 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen1 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen1 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen1 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen1 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen1 = 0.009238  # Friction factor in pu
        
            # Base calculation
        
        Vb_gen1 = Vn_gen1*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen1 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen1 = wb_gen1/pms  # Mechanical angular speed base
        Zb_gen1 = (Vn_gen1*Vn_gen1)/Sb_gen1  # Impedance base
        Trq_b_gen1 = Sb_gen1/wmb_gen1  # Torque base
        Fb_gen1 = Trq_b_gen1/wmb_gen1  # Friction Factor base
        Lb_gen1 = Zb_gen1/wb_gen1  # Inductance base
        
            # Stator data in SI
        
        Rs_gen1 = Rs_pu_gen1*Zb_gen1
        Lls_gen1 = Lls_pu_gen1*Lb_gen1
        Lmd_gen1 = Lmd_pu_gen1*Lb_gen1
        Lmq_gen1 = Lmq_pu_gen1*Lb_gen1
        Rkd_gen1 = Rkd_pu_gen1*Zb_gen1
        Rkq_gen1 = Rkq_pu_gen1*Zb_gen1
        Llkd_gen1 = Llkd_pu_gen1*Lb_gen1
        Llkq_gen1 = Llkq_pu_gen1*Lb_gen1
        
            # Mechanical data in SI
        
        F_gen1 = Fpu_gen1*Fb_gen1  # Friction Factor in Nm.s
        J_gen1 = 2*H_gen1*Sb_gen1/(wmb_gen1*wmb_gen1)  # Inertia in kg.m2
        
            # Field base calculation
        
        Lsfd_gen1 = (2.0/3.0)*Lmd_gen1*(1.0/Ns_fd_gen1)  # Mutual inductance between stator and field
        ifn_gen1 = Vb_gen1/(Lsfd_gen1*wb_gen1)  # Nominal field current
        ifb_gen1 = ifn_gen1*Lmd_pu_gen1  # Field current base
        Vfb_gen1 = Sb_gen1/ifb_gen1  # Field voltage base
        Zfb_gen1 = Vfb_gen1/ifb_gen1  # Field impedance base
        Lfb_gen1 = Zfb_gen1/wb_gen1  # Field inductance base
        
            # Field data in SI
        
        Rf_gen1 = Rf_pu_gen1*Zfb_gen1  # Field resistance (Field side)
        Llfd_gen1 = Llfd_pu_gen1*Lfb_gen1  # Field inductance (Field side)
        Rf_prime_gen1 = Rf_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field resistance referred to the stator side
        Llfd_prime_gen1 = Llfd_gen1*(3.0/2.0)*(Ns_fd_gen1*Ns_fd_gen1)  # Field inductance referred to the stator side
        
            # Exciter initialization
        
        Tr_gen1 = 20e-4  # Low pass filter time constant
        Ka_gen1 = 200  # Regulator gain
        Ta_gen1 = 2e-3  # Regulator time constant
        Ke_gen1 = 1.0  # Exciter constant
        Te_gen1 = 1e-8 #Exciter time constant
        Tb_gen1 = 1e-12  # Transient gain reduction time constant b
        Tc_gen1 = 1e-12  # Transient gain reduction time constant c
        Kf_gen1 = 0  # Damping filter gain
        Tf_gen1 = 1e-12  # Damping filter time constant
        Efmin_gen1 = -0.1 # Regulator output lower limit
        Efmax_gen1 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen1 = 0.0  # Initial terminal voltage
        Vf0_gen1 = 0.0  # Initial field voltage
        Const_gen1 = Vf0_gen1/Ka_gen1
        
            #Diesel settings from Unit Test (Mach_ex_gov_PQv3_4MVA_unit_test_woodward_updated_started_v2.tse)
        
        # Governor specs
        
        K = 10  # gain K
        T4 = 0.025  # Time constant T4
        T5 = 0.0009  # Time constant T5
        T6 = 0.00574  # Time constant T6
        Pm0 = 0.0005  # Initial value of Mechanic Power
        Tmax = 1.1  # Max torque limit
        Tmin = 0  # Min torque limit
        Td = 0.024  # Engine time delay
        
        # numTF4d = [27.7777777777778,-27.6726170945921]  # For Ts = 1e-4
        # denTF4d = [1,-0.894839316814370]  # For Ts = 1e-4
        # numTF4d = [27.7777777777778,-27.6056562658610]  # For Ts = 1.7e-4
        # denTF4d = [1,-0.827878488083238]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T5/Ts
        coeff1 = (1.0 + 2.0*T4/Ts)/dummy
        coeff2 = (1.0 - 2.0*T4/Ts)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T5/Ts)/dummy
        numTF4d = [coeff1, coeff2] #[27.7777777777778,-27.4943090883516]  # For Ts = 3e-4
        denTF4d = [coeff3, coeff4] # [1,-0.716531310573789]  # For Ts = 3e-4
        
        # numTF3d = [0,0.0172707241189214]  # For Ts = 1e-4
        # denTF3d = [1,-0.982729275881079]  # For Ts = 1e-4
        # numTF3d = [0,0.0291824473977244]  # For Ts = 1.7e-4
        # denTF3d = [1,-0.970817552602276]  # For Ts = 1.7e-4
        dummy = 1.0 + 2.0*T6/Ts
        coeff1 = (1.0)/dummy
        coeff2 = (1.0)/dummy
        coeff3 = 1.0
        coeff4 = (1.0 - 2.0*T6/Ts)/dummy
        numTF3d = [coeff1, coeff2] #[0,0.0509224900975103]  # For Ts = 3e-4
        denTF3d = [coeff3, coeff4] # [1,-0.949077509902490]  # For Ts = 3e-4
        
        
        # Synchronous machine specs from Simulink's machine in PU
        
        f = 60.0  # Synchronous speed
        pms = 2.0  # Number of mechanical pole pairs
        Sb_gen2 = 4.0e6  # Nominal/base power of machine in VA
        Vn_gen2 = 13800.0  # Machine terminal line to line rms voltage
        Rs_pu_gen2 = 0.008979  # Stator resistance per phase in pu
        Lls_pu_gen2 = 0.05  # Stator leakage inductance in pu
        Lmd_pu_gen2 = 2.35  # Direct-axis magnetizing inductance in pu
        Lmq_pu_gen2 = 1.72  # Quadrature-axis magnetizing inductance in pu
        Rf_pu_gen2 = 0.00206  # Field resistance in pu
        Llfd_pu_gen2 = 0.511  # Field leakage inductance in pu
        Rkd_pu_gen2 = 0.2826  # D-axis resistance in pu
        Rkq_pu_gen2 = 0.02545  # Q-axis resistance in pu
        Llkd_pu_gen2 = 3.738  # D-axis leakage inductance in pu
        Llkq_pu_gen2 = 0.2392  # Q-axis leakage inductance in pu
        Ns_fd_gen2 = 1.0  # Turn ratio between the stator and the field windings
        Ns_kd_gen2 = 1.0  # Turn ratio between stator and d-axis damper windings
        Ns_kq_gen2 = 1.0  # Turn ratio between stator and q-axis damper windings
        H_gen2 = 0.3468  # Inertia coefficient in seconds
        Fpu_gen2 = 0 #0.009238  # Friction factor in pu
        
        # Base calculation
        
        Vb_gen2 = Vn_gen2*((2.0/3.0)**0.5)  # Nominal/base voltage of machine terminal in V (Peak line to neutral voltage)
        wb_gen2 = 2.0*np.pi*f  # Electrical angular speed base
        wmb_gen2 = wb_gen2/pms  # Mechanical angular speed base
        Zb_gen2 = (Vn_gen2*Vn_gen2)/Sb_gen2  # Impedance base
        Trq_b_gen2 = Sb_gen2/wmb_gen2  # Torque base
        Fb_gen2 = Trq_b_gen2/wmb_gen2  # Friction Factor base
        Lb_gen2 = Zb_gen2/wb_gen2  # Inductance base
        
        # Stator data in SI
        
        Rs_gen2 = Rs_pu_gen2*Zb_gen2
        Lls_gen2 = Lls_pu_gen2*Lb_gen2
        Lmd_gen2 = Lmd_pu_gen2*Lb_gen2
        Lmq_gen2 = Lmq_pu_gen2*Lb_gen2
        Rkd_gen2 = Rkd_pu_gen2*Zb_gen2
        Rkq_gen2 = Rkq_pu_gen2*Zb_gen2
        Llkd_gen2 = Llkd_pu_gen2*Lb_gen2
        Llkq_gen2 = Llkq_pu_gen2*Lb_gen2
        
        # Mechanical data in SI
        
        F_gen2 = Fpu_gen2*Fb_gen2  # Friction Factor in Nm.s
        J_gen2 = 2*H_gen2*Sb_gen2/(wmb_gen2*wmb_gen2)  # Inertia in kg.m2
        
        # Field base calculation
        
        Lsfd_gen2 = (2.0/3.0)*Lmd_gen2*(1.0/Ns_fd_gen2)  # Mutual inductance between stator and field
        ifn_gen2 = Vb_gen2/(Lsfd_gen2*wb_gen2)  # Nominal field current
        ifb_gen2 = ifn_gen2*Lmd_pu_gen2  # Field current base
        Vfb_gen2 = Sb_gen2/ifb_gen2  # Field voltage base
        Zfb_gen2 = Vfb_gen2/ifb_gen2  # Field impedance base
        Lfb_gen2 = Zfb_gen2/wb_gen2  # Field inductance base
        
        # Field data in SI
        
        Rf_gen2 = Rf_pu_gen2*Zfb_gen2  # Field resistance (Field side)
        Llfd_gen2 = Llfd_pu_gen2*Lfb_gen2  # Field inductance (Field side)
        Rf_prime_gen2 = Rf_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field resistance referred to the stator side
        Llfd_prime_gen2 = Llfd_gen2*(3.0/2.0)*(Ns_fd_gen2*Ns_fd_gen2)  # Field inductance referred to the stator side
        
        # Exciter initialization
        
        Tr_gen2 = 1e-3  # Low pass filter time constant
        Ka_gen2 = 20.0  # Regulator gain
        Ta_gen2 = 2e-3  # Regulator time constant
        Ke_gen2 = 1.0  # Exciter constant
        Te_gen2 = 1e-3 #Exciter time constant
        Tb_gen2 = 0.0  # Transient gain reduction time constant b
        Tc_gen2 = 0.0  # Transient gain reduction time constant c
        Kf_gen2 = 0  # Damping filter gain
        Tf_gen2 = 1e-3  # Damping filter time constant
        Efmin_gen2 = -5.0 # 0.0 # Regulator output lower limit
        Efmax_gen2 = 5.0 #5.0  # Regulator output upper limit
        Vt0_gen2 = 0.0  # Initial terminal voltage
        Vf0_gen2 = 0.0  # Initial field voltage
        Const_gen2 = Vf0_gen2/Ka_gen2
        
        dummy_gain_exciter = 0.01
        
        #Rl = 14.283
        #Ll = 0.120472454546162
        
        Rl = 0.1
        Ll = 0.010
        
        Rl_mach = Rl
        Ll_mach = Ll
        
        Rl_shunt = 4761.0/1.0# 4761 Ohm is the resistance needed for 1% of nominal power at nominal voltage
        
        
        load = 0.196837209302326
        
        
            #End of settings from Unit Test 
        
        #Feeder 1 has to have slave_id = 1 to all Relays config
        #Feeder 2 has to have slave_id = 2 to all Relays config
        #Feeder 3 has to have slave_id = 3 to all Relays config
        
        #Relays init time
        cb_init_cond_time = 0.1+Ts
        time_flag_delay = 0.2
        
        
        #RegD Control
        scale_const=10e+3
        scale_back_const=1e-4
        
        #Modbus configuration
        config1 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.61',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 17,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0',
                                            'input_register_adresses': '0'
        }
        
        config2 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.62',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 18,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0',
                                            'input_register_adresses': ''
        }
        
        config3 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.63',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 19,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0',
                                            'input_register_adresses': ''
        }
        
        
            #Transformers Lm and Rm
        Rm_utility_transfo1 = 1e5
        Lm_utility_transfo1 = 200
        
        Rm_feeder1_transfo1 = 1e5
        Lm_feeder1_transfo1 = 200
        
        Rm_feeder1_transfo2 = 1e5
        Lm_feeder1_transfo2 = 200
        
        Rm_feeder1_transfo3 = 1e5
        Lm_feeder1_transfo3 = 200
        
        Rm_feeder1_transfo4 = 1e5
        Lm_feeder1_transfo4 = 200
        
        Rm_feeder1_transfo5 = 1e5
        Lm_feeder1_transfo5 = 200
        
        Rm_feeder1_transfo6 = 1e5
        Lm_feeder1_transfo6 = 200
        
        Rm_feeder1_transfo7 = 1e5
        Lm_feeder1_transfo7 = 200
    ENDCODE
}
