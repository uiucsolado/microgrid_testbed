version = 4.2

//
// Saved by sw version: 2020.1 SP2
// Save timestamp: 15-Jul-2020 @ 05:36:07 PM
//

model "gform_ho" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = 4e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = False
        enb_dep_sw_detect = False
        code_section = "external memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0005
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "double precision"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "medium"
    }

    component Subsystem Root {
        component "core/Signal Controlled Voltage Source" Va_G {
        }
        [
            position = 7816, 8064
            rotation = right
            size = 64, 32
        ]

        component "core/Signal Controlled Voltage Source" Vb_G {
        }
        [
            position = 7712, 8112
            rotation = right
            size = 64, 32
        ]

        component "core/Signal Controlled Voltage Source" Vc_G {
        }
        [
            position = 7608, 8160
            rotation = right
            size = 64, 32
        ]

        component "core/RL Section" RL2 {
            inductance_per_l_mile = "1.6e-3"
            length_mile = "1.5"
            resistance_per_l_mile = "0.57"
        }
        [
            position = 7400, 7976
            size = 256, 56
        ]

        component "core/Constant Impedance Load" "Constant Impedance Load1" {
            SAB = "1000000.0/3"
            SAn = "1000000.0/3"
            SBC = "1000000.0/3"
            SBn = "1000000.0/3"
            SCA = "1000000.0/3"
            SCn = "1000000.0/3"
            VAB = "26000.0"
            VAn = "26000.0/(3**0.5)"
            VBC = "26000.0"
            VBn = "26000.0/(3**0.5)"
            VCA = "26000.0"
            VCn = "26000.0/(3**0.5)"
            Vn_3ph = "26e3"
            enable_neutral = "True"
            pfA = "0.85"
            pfB = "0.85"
            pfC = "0.85"
            pf_3ph = "0.85"
        }
        [
            position = 7168, 8144
            hide_name = True
            size = 104, 152
        ]

        component "core/RL Section" RL1 {
            inductance_per_l_mile = "1.6e-3"
            length_mile = "1.5"
            resistance_per_l_mile = "0.57"
        }
        [
            position = 6952, 7976
            size = 256, 56
        ]

        component src_sine "Sinusoidal Source1" {
            execution_rate = "Ts"
            frequency = "60"
        }
        [
            position = 7864, 8144
            hide_name = True
        ]

        component src_sine "Sinusoidal Source2" {
            execution_rate = "Ts"
            frequency = "60"
            phase = "-120"
        }
        [
            position = 7864, 8192
            hide_name = True
        ]

        component src_sine "Sinusoidal Source3" {
            execution_rate = "Ts"
            frequency = "60"
            phase = "120"
        }
        [
            position = 7864, 8240
            hide_name = True
        ]

        component gen_gain Gain3 {
            gain = "480*np.sqrt(2)/np.sqrt(3)"
        }
        [
            position = 7952, 8144
            hide_name = True
        ]

        component gen_gain Gain4 {
            gain = "480*np.sqrt(2)/np.sqrt(3)"
        }
        [
            position = 7952, 8240
            hide_name = True
        ]

        component gen_gain Gain5 {
            gain = "480*np.sqrt(2)/np.sqrt(3)"
        }
        [
            position = 7952, 8192
            hide_name = True
        ]

        component src_ground gnd1 {
        }
        [
            position = 7816, 8352
        ]

        component src_scada_input Pref {
            execution_rate = "Ts"
            max = "70e3"
            min = "-70e3"
            unit = "W"
        }
        [
            position = 6808, 8120
            scale = -1, 1
        ]

        component src_scada_input Qref {
            execution_rate = "Ts"
            max = "70e3"
            min = "-70e3"
            unit = "Vars"
        }
        [
            position = 6808, 8184
            scale = -1, 1
        ]

        component Subsystem "Grid forming inverter (averaged)" {
            layout = dynamic
            component pas_capacitor Cc1 {
                capacitance = "C_s"
            }
            [
                position = 8176, 8352
                rotation = right
            ]

            component pas_resistor Rgridb_1 {
                resistance = "R"
            }
            [
                position = 9248, 8000
            ]

            component "core/Signal Controlled Voltage Source" Vc_inv {
            }
            [
                position = 7168, 8136
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rt0a1 {
                resistance = "R_s"
            }
            [
                position = 8016, 8256
                rotation = left
                scale = -1, 1
            ]

            component pas_resistor Ra1 {
                resistance = "R_o"
            }
            [
                position = 8776, 7904
            ]

            component "core/Current Measurement" Ia1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 7904
                size = 64, 32
            ]

            component gen_probe Ea_1 {
            }
            [
                position = 8352, 8176
            ]

            component pas_inductor L0b1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8000
                rotation = down
            ]

            component "core/Voltage Measurement" Vc2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7856, 8480
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_capacitor Cb1 {
                capacitance = "C_s"
            }
            [
                position = 8096, 8352
                rotation = right
            ]

            component Subsystem Controller {
                layout = dynamic
                component gen_product Product13 {
                }
                [
                    position = 7368, 8464
                    scale = -1, 1
                ]

                component gen_gain Gain4 {
                    gain = "1/T_m"
                }
                [
                    position = 6992, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain15 {
                    gain = "S"
                }
                [
                    position = 7136, 8168
                    rotation = right
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe Q1 {
                }
                [
                    position = 7072, 8488
                    rotation = down
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8120
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain6 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7856, 7816
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_integrator Integrator2 {
                }
                [
                    position = 6896, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 7192, 8224
                    scale = -1, 1
                ]

                component Subsystem Current_abc_to_dq2 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Eq2 {
                        label = "Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Ed2 {
                        label = "Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Eb2 {
                        label = "Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Ec2 {
                        label = "Ec2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Ea2 {
                        label = "Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    connect "abc to dq1.q_axis" Eq2 as Connection6
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect Ea2 "abc to dq1.va" as Connection1
                    connect Eb2 "abc to dq1.vb" as Connection2
                    connect Ec2 "abc to dq1.vc" as Connection3
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" Ed2 as Connection5
                }
                [
                    position = 7936, 8184
                    size = 80, 168
                ]

                component gen_gain Gain8 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7856, 8248
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain1 {
                    gain = "1/(2*np.pi)"
                }
                [
                    position = 8336, 8312
                    scale = -1, 1
                ]

                component gen_gain Gain13 {
                    gain = "1/T_m"
                }
                [
                    position = 7000, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_product Product12 {
                }
                [
                    position = 7368, 8376
                    scale = -1, 1
                ]

                component gen_gain Gain10 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8520
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain14 {
                    gain = "S"
                }
                [
                    position = 7136, 8456
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7200, 7952
                    scale = -1, 1
                ]

                component gen_gain Gain9 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7856, 8392
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe E_d1 {
                    addr = "8965"
                }
                [
                    position = 7752, 8336
                    scale = -1, 1
                ]

                component gen_integrator Integrator3 {
                }
                [
                    position = 6904, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe E_dREF1 {
                }
                [
                    position = 7568, 7848
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 7912, 8776
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 7192, 8368
                    scale = -1, 1
                ]

                component gen_product Product10 {
                }
                [
                    position = 7368, 8296
                    scale = -1, 1
                ]

                component Subsystem Current_abc_to_dq {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Xi_d2 {
                        label = "Xi_d2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Xi_c2 {
                        label = "Xi_c2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Xi_a2 {
                        label = "Xi_a2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port Xi_q2 {
                        label = "Xi_q2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Xi_b2 {
                        label = "Xi_b2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    connect Xi_c2 "abc to dq1.vc" as Connection3
                    connect "abc to dq1.q_axis" Xi_q2 as Connection6
                    connect "abc to dq1.d_axis" Xi_d2 as Connection5
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect Xi_a2 "abc to dq1.va" as Connection1
                    connect Xi_b2 "abc to dq1.vb" as Connection2
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                }
                [
                    position = 7936, 7880
                    size = 80, 168
                ]

                component gen_gain Gain7 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7856, 7944
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain12 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8744
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_product Product111 {
                }
                [
                    position = 7368, 8216
                    scale = -1, 1
                ]

                component Subsystem "Frequency droop" {
                    layout = dynamic
                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 8024, 8168
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "++"
                    }
                    [
                        position = 7880, 8216
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain3 {
                        gain = "1/D_f"
                    }
                    [
                        position = 7952, 8168
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_scada_input wref {
                        def_value = "1"
                        execution_rate = "Ts"
                        max = "1.3"
                        min = "0.7"
                        unit = "pu"
                    }
                    [
                        position = 8016, 8224
                        scale = -1, 1
                    ]

                    component gen_gain Gain4 {
                        gain = "w_0"
                    }
                    [
                        position = 7952, 8224
                        hide_name = True
                        scale = -1, 1
                    ]

                    component sys_signal_switch "Signal switch3" {
                        criterion = "ctrl != threshold"
                        threshold = "1"
                    }
                    [
                        position = 7632, 8248
                        hide_name = True
                        scale = -1, -1
                    ]

                    component sys_signal_switch "Signal switch4" {
                        criterion = "ctrl != threshold"
                        threshold = "1"
                    }
                    [
                        position = 7792, 8280
                        hide_name = True
                        scale = -1, -1
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "w_0"
                    }
                    [
                        position = 7904, 8296
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain5 {
                        gain = "w_0"
                    }
                    [
                        position = 7856, 8264
                        hide_name = True
                        scale = -1, 1
                    ]

                    port w1 {
                        label = "w1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7544, 8248
                        scale = -1, 1
                    ]

                    port U_P {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8112, 8144
                        scale = -1, 1
                    ]

                    tag From17 {
                        value = "P1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8112, 8192
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag MT_ON3 {
                        value = "ref_ctrl"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7904, 8352
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag w_bus3 {
                        value = "w_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7936, 8264
                        hide_name = True
                        scale = -1, -1
                    ]

                    tag MT_ON4 {
                        value = "INV_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7904, 8328
                        hide_name = True
                        scale = -1, 1
                    ]

                    connect U_P Sum1.in as Connection368
                    connect From17 Sum1.in1 as Connection316
                    connect Gain3.out Sum4.in as Connection391
                    connect Gain3.in Sum1.out as Connection392
                    connect wref.out Gain4.in as Connection404
                    connect "Signal switch4.out" "Signal switch3.in" as Connection411
                    connect MT_ON3 "Signal switch3.in2" as Connection412
                    connect Constant3.out "Signal switch4.in" as Connection415
                    connect MT_ON4 "Signal switch4.in2" as Connection417
                    connect Gain4.out Sum4.in1 as Connection418
                    connect Sum4.out "Signal switch3.in1" as Connection419
                    connect w1 "Signal switch3.out" as Connection420
                    connect w_bus3 Gain5.in as Connection421
                    connect Gain5.out "Signal switch4.in1" as Connection422
                }
                [
                    position = 8296, 8184
                    size = 96, 120
                ]

                component gen_sum Sum4 {
                    signs = "+-"
                }
                [
                    position = 7072, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain11 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8616
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe E_qREF1 {
                }
                [
                    position = 7568, 8056
                ]

                component gen_probe E_q1 {
                }
                [
                    position = 7752, 8192
                    scale = -1, 1
                ]

                component Subsystem "Voltage droop" {
                    layout = dynamic
                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 8064, 8160
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain3 {
                        gain = "1/D_V"
                    }
                    [
                        position = 7984, 8160
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 7872, 8208
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_scada_input Vref {
                        def_value = "1"
                        execution_rate = "Ts"
                        max = "2"
                        min = "0.8"
                        unit = "pu"
                    }
                    [
                        position = 7992, 8216
                        scale = -1, 1
                    ]

                    component sys_signal_switch "Signal switch1" {
                        criterion = "ctrl != threshold"
                        threshold = "1"
                    }
                    [
                        position = 7760, 8272
                        hide_name = True
                        scale = -1, -1
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 7872, 8288
                        hide_name = True
                        scale = -1, 1
                    ]

                    component sys_signal_switch "Signal switch2" {
                        criterion = "ctrl != threshold"
                        threshold = "1"
                    }
                    [
                        position = 7640, 8240
                        hide_name = True
                        scale = -1, -1
                    ]

                    port E_magnitude {
                        label = "E_magnitude1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7544, 8240
                        scale = -1, 1
                    ]

                    port Q_ref1 {
                        label = "Q_ref1"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8208, 8136
                        scale = -1, 1
                    ]

                    tag From18 {
                        value = "Q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8208, 8184
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag w_bus2 {
                        value = "|V|_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7872, 8256
                        hide_name = True
                        scale = -1, -1
                    ]

                    tag MT_ON1 {
                        value = "INV_sync"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7872, 8320
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag MT_ON2 {
                        value = "ref_ctrl"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 7872, 8360
                        hide_name = True
                        scale = -1, 1
                    ]

                    connect From18 Sum2.in1 as Connection323
                    connect Gain3.in Sum2.out as Connection325
                    connect Q_ref1 Sum2.in as Connection360
                    connect Gain3.out Sum4.in as Connection362
                    connect Vref.out Sum4.in1 as Connection368
                    connect Constant2.out "Signal switch1.in" as Connection399
                    connect MT_ON2 "Signal switch2.in2" as Connection401
                    connect "Signal switch1.out" "Signal switch2.in" as Connection404
                    connect w_bus2 "Signal switch1.in1" as Connection409
                    connect MT_ON1 "Signal switch1.in2" as Connection410
                    connect Sum4.out "Signal switch2.in1" as Connection411
                    connect E_magnitude "Signal switch2.out" as Connection412
                }
                [
                    position = 8296, 7944
                    size = 120, 96
                ]

                component Subsystem Current_abc_to_dq3 {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Ec2" "abc to dq1.vc" as Connection3
                }
                [
                    position = 7936, 8456
                    size = 80, 168
                ]

                component gen_probe Qpu {
                }
                [
                    position = 7072, 8544
                    rotation = down
                ]

                component gen_probe f1 {
                }
                [
                    position = 8248, 8312
                    rotation = down
                ]

                component Subsystem Current_abc_to_dq4 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Ec2" "abc to dq1.vc" as Connection3
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                }
                [
                    position = 7480, 8680
                    size = 80, 168
                ]

                component gen_sum Sum5 {
                    signs = "+-"
                }
                [
                    position = 7080, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe P1 {
                }
                [
                    position = 7080, 8136
                    rotation = down
                ]

                component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                    layout = dynamic
                    component Subsystem "Outer voltage control loop" {
                        layout = dynamic
                        component gen_sum Sum12 {
                            signs = "++"
                        }
                        [
                            position = 7616, 8512
                            scale = -1, 1
                        ]

                        component gen_gain Gain4 {
                            gain = "Cs"
                        }
                        [
                            position = 8240, 8352
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8168
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8064, 8768
                            scale = -1, -1
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8272, 8848
                            scale = -1, 1
                        ]

                        component gen_product Product8 {
                        }
                        [
                            position = 8144, 8680
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 7960, 8768
                            scale = -1, 1
                        ]

                        component gen_sum Sum10 {
                            signs = "+-"
                        }
                        [
                            position = 7952, 8248
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8160, 8808
                            scale = -1, 1
                        ]

                        component gen_product Product6 {
                        }
                        [
                            position = 8152, 8320
                            scale = -1, 1
                        ]

                        component gen_sum Sum11 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8504
                            scale = -1, 1
                        ]

                        component gen_product Product5 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8256
                            scale = -1, 1
                        ]

                        component gen_product Product7 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8592
                            scale = -1, 1
                        ]

                        component gen_probe ED_error {
                        }
                        [
                            position = 8376, 8104
                        ]

                        component gen_gain Gain6 {
                            gain = "Cs"
                        }
                        [
                            position = 8216, 8712
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller4" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8504
                            scale = -1, 1
                        ]

                        component gen_sum Sum13 {
                            signs = "++"
                        }
                        [
                            position = 7936, 8584
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "++"
                        }
                        [
                            position = 7632, 8176
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller3" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8168
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8152, 8752
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_probe EQ_error {
                        }
                        [
                            position = 8376, 8440
                        ]

                        component gen_probe ED_ctrl {
                        }
                        [
                            position = 8208, 8112
                        ]

                        component gen_probe EQ_ctrl {
                        }
                        [
                            position = 8208, 8456
                        ]

                        component gen_gain Gain7 {
                            gain = "1/w_0"
                        }
                        [
                            position = 8240, 8280
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_gain Gain8 {
                            gain = "1/w_0"
                        }
                        [
                            position = 8216, 8640
                            hide_name = True
                            scale = -1, 1
                        ]

                        port Xi_rd1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8176
                            scale = -1, 1
                        ]

                        port Xi_rq1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8512
                            scale = -1, 1
                        ]

                        port "^E_q_ref" {
                            label = "^E_q_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8464
                            scale = -1, 1
                        ]

                        port "^E_d_ref" {
                            label = "^E_d_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8128
                            scale = -1, 1
                        ]

                        port "^E_q" {
                            label = "^E_q1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8512
                            scale = -1, 1
                        ]

                        port "^E_d" {
                            label = "^E_d1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8176
                            scale = -1, 1
                        ]

                        tag From33 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8336, 8280
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From35 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8280, 8640
                            hide_name = True
                            scale = -1, 1
                        ]

                        tag From32 {
                            value = "Id1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8424, 8224
                            scale = -1, 1
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8320, 8784
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From36 {
                            value = "Iq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8376, 8560
                            scale = -1, 1
                        ]

                        junction Junction170 sp
                        [
                            position = 8216, 8784
                        ]

                        junction Junction159 sp
                        [
                            position = 8480, 8176
                        ]

                        junction Junction158 sp
                        [
                            position = 8448, 8512
                        ]

                        junction Junction153 sp
                        [
                            position = 7872, 8600
                        ]

                        junction Junction172 sp
                        [
                            position = 8336, 8168
                        ]

                        junction Junction173 sp
                        [
                            position = 8336, 8504
                        ]

                        junction Junction174 sp
                        [
                            position = 8136, 8168
                        ]

                        junction Junction175 sp
                        [
                            position = 8168, 8504
                        ]

                        connect "^E_d_ref" Sum8.in as Connection215
                        connect Gain4.in Junction158 as Connection117
                        connect Comparator1.in1 Junction170 as Connection256
                        connect Product5.in1 Junction153 as Connection94
                        connect Sum11.in "^E_q_ref" as Connection217
                        connect Junction170 "Signal switch1.in" as Connection257
                        connect Sum13.in1 Product8.out as Connection233
                        connect From32 Sum10.in as Connection259
                        connect Gain6.out Product8.in1 as Connection84
                        connect Xi_rd1 Sum9.out as Connection104
                        connect Sum8.in1 Junction159 as Connection118
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Gain6.in Junction159 as Connection120
                        connect "^E_d" Junction159 as Connection216
                        connect Sum10.in1 Product6.out as Connection67
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect From27 Junction170 as Connection258
                        connect "^E_q" Junction158 as Connection218
                        connect Gain5.out Junction153 as Connection92
                        connect From36 Sum13.in as Connection260
                        connect Product5.in Sum10.out as Connection71
                        connect Sum11.in1 Junction158 as Connection115
                        connect Xi_rq1 Sum12.out as Connection105
                        connect Sum9.in1 Product5.out as Connection243
                        connect Junction153 Product7.in1 as Connection93
                        connect Sum12.in1 Product7.out as Connection244
                        connect Comparator1.out "Signal switch1.in2" as Connection2
                        connect Limit_zero.out Comparator1.in2 as Connection19
                        connect Gain4.out Product6.in1 as Connection69
                        connect Product7.in Sum13.out as Connection89
                        connect "PID controller3.in" Junction172 as Connection270
                        connect Junction172 Sum8.out as Connection271
                        [
                            breakpoints = 8336, 8168
                        ]
                        connect ED_error.in Junction172 as Connection272
                        connect Sum11.out Junction173 as Connection274
                        connect Junction173 "PID controller4.in" as Connection275
                        [
                            breakpoints = 8336, 8504
                        ]
                        connect EQ_error.in Junction173 as Connection276
                        connect Sum9.in Junction174 as Connection277
                        connect Junction174 "PID controller3.out" as Connection278
                        [
                            breakpoints = 8240, 8168
                        ]
                        connect ED_ctrl.in Junction174 as Connection279
                        connect Sum12.in Junction175 as Connection280
                        connect Junction175 "PID controller4.out" as Connection281
                        [
                            breakpoints = 8232, 8504
                        ]
                        connect EQ_ctrl.in Junction175 as Connection282
                        connect From33 Gain7.in as Connection283
                        connect Gain7.out Product6.in as Connection284
                        connect From35 Gain8.in as Connection285
                        connect Gain8.out Product8.in as Connection286
                    }
                    [
                        position = 8864, 8400
                        scale = -1, 1
                        size = 152, 168
                    ]

                    component gen_gain Gain5 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8464, 8392
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_sum Sum7 {
                    }
                    [
                        position = 9128, 8552
                        scale = -1, 1
                    ]

                    component gen_sum Sum10 {
                        signs = "+-"
                    }
                    [
                        position = 9368, 8496
                        scale = -1, 1
                    ]

                    component gen_sum Sum11 {
                        signs = "+-"
                    }
                    [
                        position = 9376, 8192
                        scale = -1, 1
                    ]

                    component gen_gain Gain6 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8496, 8456
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain3 {
                        gain = "R_s/Z_DQ"
                    }
                    [
                        position = 9272, 8496
                        scale = -1, 1
                    ]

                    component gen_sum Sum8 {
                    }
                    [
                        position = 9160, 8232
                        scale = -1, 1
                    ]

                    component Subsystem "dq to abc" {
                        layout = dynamic
                        component src_constant o_ref {
                            execution_rate = "Ts"
                            value = "[0]"
                        }
                        [
                            position = 7520, 8200
                        ]

                        component "core/dq to abc" "dq to abc1" {
                            execution_rate = "inherit"
                        }
                        [
                            position = 7744, 8184
                            size = 48, 80
                        ]

                        port c {
                            label = "c"
                            position = left:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8216
                        ]

                        port d {
                            label = "Ud1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 8136
                        ]

                        port alpha {
                            label = "alpha1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7600, 8232
                        ]

                        port a {
                            label = "a"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8152
                        ]

                        port q {
                            label = "Uq1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8168
                        ]

                        port b {
                            label = "b"
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8184
                        ]

                        connect q "dq to abc1.q_input" as Connection6
                        connect d "dq to abc1.d_input" as Connection3
                        connect "dq to abc1.phase_b" b as Connection4
                        connect c "dq to abc1.phase_c" as Connection2
                        connect a "dq to abc1.phase_a" as Connection1
                        connect o_ref.out "dq to abc1.zero_input" as Connection5
                        connect alpha "dq to abc1.wt" as Connection7
                    }
                    [
                        position = 8344, 8456
                        size = 80, 168
                    ]

                    component gen_gain Gain4 {
                        gain = "R_s/Z_DQ"
                    }
                    [
                        position = 9280, 8192
                        scale = -1, 1
                    ]

                    component Subsystem "inner current control loop" {
                        layout = dynamic
                        component gen_probe XiD_ctrl {
                        }
                        [
                            position = 8208, 7952
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8128, 8432
                            scale = -1, -1
                        ]

                        component gen_pid_controller "PID controller2" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8208, 8224
                            scale = -1, 1
                        ]

                        component gen_gain Gain7 {
                            gain = "Li"
                        }
                        [
                            position = 8272, 8368
                            scale = -1, 1
                        ]

                        component gen_sum Sum3 {
                        }
                        [
                            position = 7760, 8048
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8216, 8416
                            scale = -1, 1
                        ]

                        component gen_sum Sum5 {
                            signs = "+-"
                        }
                        [
                            position = 8024, 8104
                            scale = -1, 1
                        ]

                        component gen_sum Sum7 {
                        }
                        [
                            position = 7760, 8232
                            scale = -1, 1
                        ]

                        component gen_sum Sum6 {
                        }
                        [
                            position = 8032, 8272
                            scale = -1, 1
                        ]

                        component gen_product Product3 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8112
                            scale = -1, 1
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8168, 8336
                            scale = -1, 1
                        ]

                        component gen_gain Gain6 {
                            gain = "Li"
                        }
                        [
                            position = 8256, 8176
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8328, 8040
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "+-"
                        }
                        [
                            position = 8320, 8224
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 8024, 8432
                            scale = -1, 1
                        ]

                        component gen_probe XiQ_ctrl {
                        }
                        [
                            position = 8288, 8264
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8336, 8512
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8200, 8040
                            scale = -1, 1
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8168, 8144
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8224, 8472
                            scale = -1, 1
                        ]

                        component gen_product Product4 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8280
                            scale = -1, 1
                        ]

                        component gen_probe XiD_error {
                        }
                        [
                            position = 8440, 7960
                        ]

                        component gen_probe XiQ_error {
                        }
                        [
                            position = 8512, 8184
                        ]

                        component gen_gain Gain8 {
                            gain = "1/w_0"
                        }
                        [
                            position = 8264, 8112
                            hide_name = True
                            scale = -1, 1
                        ]

                        component gen_gain Gain9 {
                            gain = "1/w_0"
                        }
                        [
                            position = 8264, 8312
                            hide_name = True
                            scale = -1, 1
                        ]

                        port Uq1 {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8232
                            rotation = down
                        ]

                        port Xi_q_meas1 {
                            label = "Xi_q_meas1"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8456, 8264
                            rotation = down
                        ]

                        port Xi_q_ref1 {
                            label = "Xi_q_ref1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8456, 8216
                            rotation = down
                        ]

                        port Ud1 {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8048
                            rotation = down
                        ]

                        port Xi_d_ref1 {
                            label = "Xi_d_ref1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8032
                            rotation = down
                        ]

                        port Xi_d_meas1 {
                            label = "Xi_d_meas1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8112
                            rotation = down
                        ]

                        tag From23 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8344, 8112
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From24 {
                            value = "Ed1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 8056
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From26 {
                            value = "Eq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8128, 8264
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8384, 8448
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From25 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8360, 8312
                            scale = -1, 1
                            size = 60, 20
                        ]

                        junction Junction171 sp
                        [
                            position = 7944, 8288
                        ]

                        junction Junction177 sp
                        [
                            position = 8400, 8112
                        ]

                        junction Junction179 sp
                        [
                            position = 8160, 8224
                        ]

                        junction Junction178 sp
                        [
                            position = 8160, 8040
                        ]

                        junction Junction172 sp
                        [
                            position = 8280, 8448
                        ]

                        junction Junction176 sp
                        [
                            position = 8400, 8232
                        ]

                        junction Junction180 sp
                        [
                            position = 8288, 8224
                        ]

                        junction Junction181 sp
                        [
                            position = 8288, 8040
                        ]

                        connect Product4.out Sum7.in1 as Connection19
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Sum6.out Product4.in as Connection27
                        connect From26 Sum6.in as Connection3
                        connect Sum5.in1 Product1.out as Connection24
                        connect Gain6.out Product1.in1 as Connection289
                        connect Sum5.out Product3.in as Connection25
                        connect Junction177 Gain7.in as Connection300
                        connect Junction172 Comparator1.in1 as Connection267
                        connect Gain7.out Product2.in1 as Connection293
                        connect Xi_q_meas1 Junction176 as Connection290
                        connect Junction178 Sum3.in as Connection304
                        connect XiQ_ctrl.in Junction179 as Connection309
                        connect Sum7.in Junction179 as Connection307
                        connect Comparator1.out "Signal switch1.in2" as Connection57
                        connect Sum6.in1 Product2.out as Connection26
                        connect From27 Junction172 as Connection268
                        connect Gain5.out Junction171 as Connection254
                        connect Junction176 Sum9.in1 as Connection291
                        connect Sum5.in From24 as Connection23
                        connect Junction171 Product3.in1 as Connection253
                        connect Sum8.in1 Junction177 as Connection301
                        connect "PID controller1.out" Junction178 as Connection303
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect Uq1 Sum7.out as Connection264
                        connect Product3.out Sum3.in1 as Connection17
                        connect XiD_ctrl.in Junction178 as Connection305
                        connect "Signal switch1.in" Junction172 as Connection266
                        connect Sum8.in Xi_d_ref1 as Connection297
                        connect Sum9.in Xi_q_ref1 as Connection283
                        connect Product4.in1 Junction171 as Connection252
                        connect Limit_zero.out Comparator1.in2 as Connection251
                        connect Sum3.out Ud1 as Connection263
                        connect Gain6.in Junction176 as Connection292
                        connect Xi_d_meas1 Junction177 as Connection299
                        connect Junction179 "PID controller2.out" as Connection308
                        connect "PID controller2.in" Junction180 as Connection310
                        [
                            breakpoints = 8240, 8224
                        ]
                        connect Junction180 Sum9.out as Connection311
                        connect XiQ_error.in Junction180 as Connection312
                        connect Sum8.out Junction181 as Connection313
                        connect Junction181 "PID controller1.in" as Connection314
                        [
                            breakpoints = 8240, 8040
                        ]
                        connect XiD_error.in Junction181 as Connection315
                        connect From23 Gain8.in as Connection316
                        connect Gain8.out Product1.in as Connection317
                        connect From25 Gain9.in as Connection318
                        connect Gain9.out Product2.in as Connection319
                    }
                    [
                        position = 8608, 8424
                        size = 96, 184
                    ]

                    port Ua1 {
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8392
                        rotation = down
                    ]

                    port E_q_ref1 {
                        label = "E_q_ref1"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9424, 8304
                        rotation = down
                    ]

                    port Uc1 {
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8520
                        rotation = down
                    ]

                    port E_d_ref1 {
                        label = "E_d_ref1"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9408, 8632
                        rotation = down
                    ]

                    port Ub1 {
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8456
                        rotation = down
                    ]

                    tag From36 {
                        value = "E_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8416
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From29 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8400
                        scale = -1, 1
                    ]

                    tag From40 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8232
                        rotation = down
                    ]

                    tag From38 {
                        value = "Id1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8448
                        rotation = down
                        size = 56, 20
                    ]

                    tag From1 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 8560
                        scale = -1, 1
                        size = 63, 25
                    ]

                    tag From30 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8496
                        scale = -1, 1
                    ]

                    tag From31 {
                        value = "Iq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8152
                        rotation = down
                    ]

                    tag From39 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8544
                        rotation = down
                    ]

                    tag From37 {
                        value = "E_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8464
                        scale = -1, 1
                        size = 60, 20
                    ]

                    connect Sum11.out Gain4.in as Connection290
                    connect From31 Sum11.in as Connection293
                    connect "dq to abc.alpha" From1 as Connection229
                    [
                        breakpoints = 8400, 8560; 8544, 8560
                    ]
                    connect From29 "inner current control loop.Xi_d_meas1" as Connection253
                    connect Sum7.in1 E_d_ref1 as Connection324
                    connect From36 "Outer voltage control loop.^E_q" as Connection322
                    connect "inner current control loop.Xi_q_ref1" "Outer voltage control loop.Xi_rq1" as Connection327
                    connect From30 "inner current control loop.Xi_q_meas1" as Connection257
                    connect Sum10.out Gain3.in as Connection287
                    connect Sum8.out "Outer voltage control loop.^E_q_ref" as Connection347
                    connect "dq to abc.d" Gain5.out as Connection337
                    connect "dq to abc.q" Gain6.out as Connection339
                    connect "dq to abc.c" Uc1 as Connection284
                    connect "dq to abc.b" Ub1 as Connection282
                    connect Gain6.in "inner current control loop.Uq1" as Connection346
                    [
                        breakpoints = 8544, 8496
                    ]
                    connect From40 Sum11.in1 as Connection294
                    connect From39 Sum10.in1 as Connection286
                    connect "Outer voltage control loop.^E_d" From37 as Connection301
                    connect "Outer voltage control loop.^E_d_ref" Sum7.out as Connection317
                    connect E_q_ref1 Sum8.in1 as Connection344
                    connect "inner current control loop.Xi_d_ref1" "Outer voltage control loop.Xi_rd1" as Connection326
                    connect "dq to abc.a" Ua1 as Connection283
                    connect Gain5.in "inner current control loop.Ud1" as Connection345
                    [
                        breakpoints = 8544, 8352
                    ]
                    connect Gain3.out Sum7.in as Connection289
                    connect Gain4.out Sum8.in as Connection343
                    connect From38 Sum10.in as Connection285
                }
                [
                    position = 7360, 7952
                    size = 128, 152
                ]

                component gen_probe Ppu {
                }
                [
                    position = 7080, 8080
                    rotation = down
                ]

                component gen_gain Gain16 {
                    gain = "S/S_i"
                }
                [
                    position = 7168, 8120
                    rotation = right
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain17 {
                    gain = "S/S_i"
                }
                [
                    position = 7168, 8496
                    rotation = left
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain18 {
                    gain = "1/S"
                }
                [
                    position = 8448, 7912
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain19 {
                    gain = "1/S"
                }
                [
                    position = 8456, 8144
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_c_function integrator {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    parameters = "real Ts;"
                    update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                }
                [
                    position = 8496, 8536
                    scale = -1, 1
                    size = 80, 48
                ]

                component gen_c_function "confine phase" {
                    global_variables = "real x;real floor_in;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                }
                [
                    position = 8360, 8536
                    scale = -1, 1
                    size = 56, 48
                ]

                component gen_rate_limiter "Rate Limiter1" {
                }
                [
                    position = 8512, 7912
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_rate_limiter "Rate Limiter2" {
                }
                [
                    position = 8520, 8144
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe E_mag {
                }
                [
                    position = 8512, 8032
                    rotation = down
                    scale = -1, 1
                ]

                port U_P {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8600, 8144
                    scale = -1, 1
                ]

                port U_Q {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8592, 7912
                    scale = -1, 1
                ]

                tag Goto29 {
                    value = "E_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From6 {
                    value = "Xi_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7856
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto19 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8616
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto37 {
                    value = "P1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8232
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From24 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8656
                    scale = -1, 1
                ]

                tag Goto47 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8512, 7976
                    hide_name = True
                ]

                tag From28 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7904
                    scale = -1, 1
                ]

                tag From42 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8008
                    scale = -1, 1
                ]

                tag Goto22 {
                    value = "Xi_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 7816
                    scale = -1, 1
                ]

                tag From37 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8256
                    scale = -1, 1
                ]

                tag From9 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8160
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From7 {
                    value = "Xi_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7944
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto28 {
                    value = "E_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto23 {
                    value = "Xi_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 7944
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From34 {
                    value = "E_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8048, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From36 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8208
                    scale = -1, 1
                ]

                tag From8 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From26 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8704
                    scale = -1, 1
                ]

                tag Goto17 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 8224
                    size = 60, 20
                ]

                tag From5 {
                    value = "Xi_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7816
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto20 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8744
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From23 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8616
                    scale = -1, 1
                ]

                tag From20 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 7896
                    scale = -1, 1
                    size = 67, 20
                ]

                tag From40 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8640, 8536
                    scale = -1, 1
                ]

                tag Goto45 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8648
                    scale = -1, 1
                    size = 64, 20
                ]

                tag Goto2 {
                    value = "modulator1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7096, 7952
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From10 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From33 {
                    value = "E_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8048, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From25 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8744
                    scale = -1, 1
                ]

                tag From27 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8208
                    scale = -1, 1
                ]

                tag From43 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 8648
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto36 {
                    value = "Q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8376
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From32 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8048, 8480
                    scale = -1, 1
                ]

                tag Goto21 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8248, 8536
                    scale = -1, 1
                ]

                tag Goto46 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7784, 8776
                    scale = -1, 1
                ]

                tag From35 {
                    value = "E_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8048, 8432
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From38 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8472
                    scale = -1, 1
                ]

                tag From39 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8400
                    scale = -1, 1
                ]

                tag Goto48 {
                    value = "w_e"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 8312
                    hide_name = True
                    size = 60, 20
                ]

                junction Junction228 sp
                [
                    position = 7520, 8400
                ]

                junction Junction230 sp
                [
                    position = 7472, 8472
                ]

                junction Junction231 sp
                [
                    position = 7520, 7896
                ]

                junction Junction258 sp
                [
                    position = 7520, 8008
                ]

                junction Junction267 sp
                [
                    position = 7136, 8368
                ]

                junction Junction268 sp
                [
                    position = 7136, 8224
                ]

                junction Junction159 sp
                [
                    position = 7472, 8208
                ]

                junction Junction269 sp
                [
                    position = 7816, 8392
                ]

                junction Junction229 sp
                [
                    position = 7520, 8256
                ]

                junction Junction158 sp
                [
                    position = 7816, 8248
                ]

                junction Junction272 sp
                [
                    position = 8544, 8224
                ]

                junction Junction273 sp
                [
                    position = 8544, 8312
                ]

                junction Junction274 sp
                [
                    position = 6856, 8376
                ]

                junction Junction275 sp
                [
                    position = 6856, 8232
                ]

                junction Junction276 sp
                [
                    position = 7152, 8224
                ]

                junction Junction277 sp
                [
                    position = 7152, 8368
                ]

                junction Junction278 sp
                [
                    position = 8416, 7976
                ]

                connect From10 Current_abc_to_dq2.Ec2 as Connection234
                connect From25 "Current_abc_to_dq4.^Ec2" as Connection699
                connect Gain10.in "Current_abc_to_dq3.^Eq2" as Connection875
                connect E_d1.in Junction269 as Connection965
                connect Junction231 From20 as Connection728
                connect E_q1.in Junction158 as Connection718
                connect Current_abc_to_dq4.wt2 From26 as Connection702
                connect Product111.in Junction159 as Connection703
                connect Gain5.out Goto4 as Connection959
                [
                    breakpoints = 7816, 8120
                ]
                connect Sum4.in Junction268 as Connection955
                connect Current_abc_to_dq2.Ed2 Gain5.in as Connection870
                connect Junction228 From39 as Connection680
                connect Gain11.out Goto19 as Connection877
                connect Current_abc_to_dq.Xi_d2 Gain6.in as Connection864
                connect Gain13.out Integrator3.in as Connection925
                connect From7 Current_abc_to_dq.Xi_c2 as Connection40
                connect Junction158 Gain8.out as Connection868
                connect Sum1.in1 Product13.out as Connection719
                connect From6 Current_abc_to_dq.Xi_b2 as Connection39
                connect Junction231 "Outer Voltage Loop + Inner Current Loop.E_d_ref1" as Connection736
                connect "Current_abc_to_dq4.^Ea2" From23 as Connection701
                connect From9 Current_abc_to_dq2.Eb2 as Connection235
                connect "Outer Voltage Loop + Inner Current Loop.Ua1" "Bus Join1.in" as Connection839
                connect Goto23 Gain7.out as Connection962
                connect Product12.out Sum2.in1 as Connection721
                connect Sum5.in Junction267 as Connection952
                connect f1.in Gain1.out as Connection318
                connect E_dREF1.in Junction231 as Connection729
                [
                    breakpoints = 7520, 7848; 7520, 7896
                ]
                connect E_qREF1.in Junction258 as Connection861
                connect Product111.out Sum1.in as Connection684
                connect Product13.in Junction228 as Connection679
                connect Product12.in Junction159 as Connection720
                connect "Current_abc_to_dq4.^Eb2" From24 as Connection700
                connect "Outer Voltage Loop + Inner Current Loop.Uc1" "Bus Join1.in2" as Connection840
                connect From43 Goto45 as Connection881
                connect Junction159 From36 as Connection698
                connect Junction272 Goto17 as Connection990
                connect P1.in Gain15.out as Connection966
                connect Product10.out Sum2.in as Connection672
                connect Gain15.in Junction268 as Connection967
                connect Sum5.out Gain13.in as Connection926
                connect Q1.in Gain14.out as Connection968
                connect Product10.in Junction229 as Connection723
                connect "Current_abc_to_dq4.^Ed2" Gain11.in as Connection876
                connect Product12.in1 Junction230 as Connection678
                connect Junction229 From37 as Connection683
                connect Gain14.in Junction267 as Connection969
                connect Current_abc_to_dq.wt2 From28 as Connection247
                [
                    breakpoints = 8000, 7904; 8040, 7904
                ]
                connect Product10.in1 Junction228 as Connection681
                connect Goto2 "Bus Join1.out" as Connection51
                connect "Frequency droop.w1" Junction272 as Connection991
                connect From35 "Current_abc_to_dq3.^Eb2" as Connection276
                connect Gain8.in Current_abc_to_dq2.Eq2 as Connection869
                connect "Bus Join1.in1" "Outer Voltage Loop + Inner Current Loop.Ub1" as Connection838
                connect Gain9.out Junction269 as Connection963
                connect Gain6.out Goto22 as Connection961
                connect From42 Junction258 as Connection859
                connect Current_abc_to_dq2.Ea2 From8 as Connection236
                connect From34 "Current_abc_to_dq3.^Ec2" as Connection279
                connect "Current_abc_to_dq3.^Ea2" From33 as Connection278
                connect Junction269 Goto29 as Connection964
                connect Junction258 "Outer Voltage Loop + Inner Current Loop.E_q_ref1" as Connection860
                connect Junction230 From38 as Connection677
                connect Product13.in1 Junction230 as Connection676
                connect Sum4.out Gain4.in as Connection330
                connect Constant1.out Goto46 as Connection882
                connect From5 Current_abc_to_dq.Xi_a2 as Connection38
                connect Gain12.in "Current_abc_to_dq4.^Eq2" as Connection879
                connect Gain4.out Integrator2.in as Connection335
                connect From27 Current_abc_to_dq2.wt2 as Connection246
                connect From32 Current_abc_to_dq3.wt2 as Connection275
                connect Product111.in1 Junction229 as Connection682
                connect Goto20 Gain12.out as Connection878
                connect "Current_abc_to_dq3.^Ed2" Gain9.in as Connection872
                connect Goto28 Gain10.out as Connection874
                connect Goto3 Junction158 as Connection292
                connect Current_abc_to_dq.Xi_q2 Gain7.in as Connection866
                connect Gain1.in Junction273 as Connection998
                connect Junction273 Junction272 as Connection999
                connect Goto48 Junction273 as Connection1000
                connect Integrator3.out Junction274 as Connection1003
                connect Junction274 Sum5.in1 as Connection1004
                [
                    breakpoints = 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8424; 7120, 8424
                ]
                connect Goto36 Junction274 as Connection1005
                connect Integrator2.out Junction275 as Connection1006
                connect Junction275 Sum4.in1 as Connection1007
                [
                    breakpoints = 6856, 8232; 6856, 8232; 6856, 8232; 6856, 8280; 7112, 8280
                ]
                connect Goto37 Junction275 as Connection1008
                connect Sum1.out Junction276 as Connection1014
                connect Junction276 Junction268 as Connection1015
                [
                    breakpoints = 7152, 8224
                ]
                connect Sum2.out Junction277 as Connection1018
                connect Junction277 Junction267 as Connection1019
                [
                    breakpoints = 7152, 8368
                ]
                connect Ppu.in Gain16.out as Connection1021
                connect Gain16.in Junction276 as Connection1022
                connect Qpu.in Gain17.out as Connection1023
                connect Gain17.in Junction277 as Connection1024
                connect Gain18.out "Voltage droop.Q_ref1" as Connection1026
                connect Gain19.out "Frequency droop.U_P" as Connection1028
                connect integrator.in From40 as Connection1030
                connect integrator.out "confine phase.in" as Connection1031
                connect "confine phase.out" Goto21 as Connection1032
                connect U_Q "Rate Limiter1.in" as Connection1033
                connect "Rate Limiter1.out" Gain18.in as Connection1034
                connect U_P "Rate Limiter2.in" as Connection1035
                connect "Rate Limiter2.out" Gain19.in as Connection1036
                connect "Voltage droop.E_magnitude" Junction278 as Connection1037
                connect Junction278 Goto47 as Connection1038
                connect E_mag.in Junction278 as Connection1039
            }
            [
                position = 6816, 7568
                size = 296, 128
            ]

            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 9504, 8000
                size = 64, 256
            ]

            component pas_inductor L0c1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8096
                rotation = down
            ]

            component pas_inductor L0a1 {
                inductance = "L_i"
            }
            [
                position = 7744, 7904
                rotation = down
            ]

            component "core/Three Phase Two Winding Transformer" Tr1 {
                Poc1 = "344.99999999952564"
                Psc1 = "1762.5"
                Sn = "120000"
                V1 = "277/np.sqrt(3)"
                V2 = "480/np.sqrt(3)"
                current_vals_SCOC = "[0.0024, 1.0]"
                ioc1 = "0.6999999999992988"
                usc1 = "3.9999999999957394"
            }
            [
                position = 10088, 8000
                size = 126, 256
            ]

            component pas_resistor Rt0b1 {
                resistance = "R_s"
            }
            [
                position = 8096, 8256
                rotation = left
                scale = -1, 1
            ]

            component "core/Voltage Measurement" Va2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7600, 8384
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_inductor La1 {
                inductance = "L_o"
            }
            [
                position = 8872, 7904
                rotation = down
            ]

            component pas_inductor Lgrida_1 {
                inductance = "L"
            }
            [
                position = 9144, 7904
                rotation = down
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 6912, 7760
                hide_name = True
            ]

            component gen_probe Ec_1 {
            }
            [
                position = 8512, 8400
            ]

            component "core/Signal Controlled Voltage Source" Va_inv {
            }
            [
                position = 7008, 7944
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rt0c1 {
                resistance = "R_s"
            }
            [
                position = 8176, 8256
                rotation = left
                scale = -1, 1
            ]

            component pas_resistor R0b1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8000
            ]

            component gen_probe Eb_1 {
            }
            [
                position = 8400, 8288
            ]

            component pas_resistor Rgrida_1 {
                resistance = "R"
            }
            [
                position = 9248, 7904
            ]

            component "core/Voltage Measurement" Vb2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7728, 8432
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rgridc_1 {
                resistance = "R"
            }
            [
                position = 9248, 8096
            ]

            component "core/Signal Controlled Voltage Source" Vb_inv {
            }
            [
                position = 7088, 8040
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_inductor Lgridc_1 {
                inductance = "L"
            }
            [
                position = 9144, 8096
                rotation = down
            ]

            component "core/Voltage Measurement" VaG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9616, 8216
                rotation = right
                size = 64, 32
            ]

            component pas_resistor Rc1 {
                resistance = "R_o"
            }
            [
                position = 8776, 8096
            ]

            component "core/Voltage Measurement" VbG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9744, 8288
                rotation = right
                size = 64, 32
            ]

            component pas_resistor R0c1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8096
            ]

            component pas_inductor Lb1 {
                inductance = "L_o"
            }
            [
                position = 8872, 8000
                rotation = down
            ]

            component pas_resistor R0a1 {
                resistance = "R_i"
            }
            [
                position = 7632, 7904
            ]

            component "core/Current Measurement" Ic1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 8096
                size = 64, 32
            ]

            component "core/Voltage Measurement" Eb1 {
                addr = "9"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8464, 8208
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ea1 {
                addr = "7"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8400, 8144
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Xi_b1 {
                addr = "15"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7888, 8000
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Current Measurement" Ib1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 8000
                size = 64, 32
            ]

            component "core/Current Measurement" Xi_a1 {
                addr = "14"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7840, 7904
                scale = 1, -1
                size = 64, 32
            ]

            component gen_product Product1 {
            }
            [
                position = 6816, 7760
                hide_name = True
            ]

            component pas_capacitor Ca1 {
                capacitance = "C_s"
            }
            [
                position = 8016, 8352
                rotation = right
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "900"
            }
            [
                position = 6624, 8232
                hide_name = True
            ]

            component "core/Voltage Measurement" VcG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9864, 8408
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ec1 {
                addr = "11"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8544, 8272
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component gen_gain Gain1 {
                gain = "0.5"
            }
            [
                position = 6744, 7792
                hide_name = True
            ]

            component pas_inductor Lgridb_1 {
                inductance = "L"
            }
            [
                position = 9144, 8000
                rotation = down
            ]

            component "core/Current Measurement" Xi_c1 {
                addr = "16"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7952, 8096
                scale = 1, -1
                size = 64, 32
            ]

            component pas_inductor Lc1 {
                inductance = "L_o"
            }
            [
                position = 8872, 8096
                rotation = down
            ]

            component pas_resistor Rb1 {
                resistance = "R_o"
            }
            [
                position = 8776, 8000
            ]

            component src_scada_input "Connect GFM" {
                def_value = "1"
                execution_rate = "Ts"
                max = "1"
                min = "0"
                unit = ""
            }
            [
                position = 9056, 7768
            ]

            component Subsystem "BE1-25A Synchronizer" {
                layout = dynamic
                component gen_trigonometric "Trigonometric function2" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7456, 8088
                    hide_name = True
                ]

                component gen_limiter Limit2 {
                    lower_limit = "1e-12"
                }
                [
                    position = 7384, 8104
                    hide_name = True
                ]

                component src_constant Constant9 {
                    execution_rate = "Ts"
                    value = "5e-2"
                }
                [
                    position = 8456, 8224
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer1" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "dV inherit"
                    in_terminal_labels = "[(\'dV\', True)]"
                    in_terminal_properties = "real dV;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "del_V inherit"
                    out_terminal_labels = "[(\'del_V\', True)]"
                    out_terminal_properties = "real del_V;"
                    output_fnc = "/*Begin code section*/
if (dV>maxV_slip)
{
    del_V = maxV_pds;
}
else if ((dV<=maxV_slip) && (dV>0))
{
    del_V = maxV_pds*dV/maxV_slip;
}
else if ((dV<=0) && (dV>-1*(maxV_slip-minV_slip)))
{
    del_V = 0;
    //del_V = maxV_pds*dV/min_slip;
}
else if ((dV <= (-1*(maxV_slip-minV_slip)))&&(dV > (-1*maxV_slip)))
{
    del_V= maxV_pds*(dV+(maxV_slip-minV_slip))/minV_slip;
}
else if (dV <= (-1*maxV_slip))
{
    del_V = -1*maxV_pds;
}
/*End code section*/"
                    parameters = "real Ts;real maxV_slip;real minV_slip;real maxV_pds;"
                }
                [
                    position = 8352, 8616
                    hide_name = True
                    size = 96, 96
                ]

                component gen_abs Abs2 {
                }
                [
                    position = 8456, 8192
                    hide_name = True
                ]

                component gen_gain Gain4 {
                    gain = "1/w_0"
                }
                [
                    position = 7736, 8176
                    hide_name = True
                ]

                component gen_trigonometric "Trigonometric function1" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7456, 8000
                    hide_name = True
                ]

                component gen_c_function "Hold after connect" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit;INV_sync inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True), (\'INV_sync\', True)]"
                    in_terminal_properties = "real in;int connect;inherit INV_sync;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if ((connect==0)&&(INV_sync==1))
    var = in;
else if (INV_sync==0)
    var =0;
/*End code section*/"
                }
                [
                    position = 8352, 8416
                    hide_name = True
                    size = 96, 96
                ]

                component gen_c_function "Hold after connect1" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit;INV_sync inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True), (\'INV_sync\', True)]"
                    in_terminal_properties = "real in;int connect;inherit INV_sync;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if ((connect==0)&&(INV_sync==1))
    var = in;
else if (INV_sync==0)
    var =0;
/*End code section*/"
                }
                [
                    position = 8576, 8648
                    hide_name = True
                    size = 96, 104
                ]

                component gen_c_function "confine phase" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
if (in > 0)
{
    if (in > (6.283185307179586/2))
        out = in - 6.283185307179586;
    else
        out = in;
}
if (in < 0)
{
    if (in < (-6.283185307179586/2))
        out = in + 6.283185307179586;
    else
        out = in;
}
/*End code section*/"
                }
                [
                    position = 7824, 8048
                    size = 56, 48
                ]

                component gen_sum Sum5 {
                }
                [
                    position = 7344, 8352
                    hide_name = True
                ]

                component gen_probe frequency_diff3 {
                }
                [
                    position = 7920, 8128
                    scale = -1, 1
                ]

                component gen_product Product4 {
                }
                [
                    position = 7264, 8384
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe3" {
                    override_signal_name = "True"
                    signal_name = "ang_sync3"
                }
                [
                    position = 8616, 8040
                    hide_name = True
                ]

                component src_constant Constant7 {
                    execution_rate = "Ts"
                    value = "1e-3"
                }
                [
                    position = 8088, 8112
                    hide_name = True
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7736, 8048
                    hide_name = True
                ]

                component gen_product Product3 {
                }
                [
                    position = 7264, 8320
                    hide_name = True
                ]

                component tm_delay "Unit Delay2" {
                }
                [
                    position = 7616, 8648
                    rotation = right
                    hide_name = True
                ]

                component gen_sum Sum2 {
                    signs = "-+"
                }
                [
                    position = 7824, 8200
                    hide_name = True
                ]

                component gen_rel_op "Relational operator1" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8040
                    hide_name = True
                ]

                component gen_rel_op "Relational operator4" {
                    relational_op = "<"
                }
                [
                    position = 8520, 8208
                    hide_name = True
                ]

                component gen_abs Abs4 {
                }
                [
                    position = 7920, 8048
                    hide_name = True
                ]

                component gen_probe volt_diff3 {
                }
                [
                    position = 8352, 8512
                ]

                component src_constant Constant6 {
                    execution_rate = "Ts"
                    value = "5e-3"
                }
                [
                    position = 8056, 8024
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe1" {
                    override_signal_name = "True"
                    signal_name = "gridconnect2"
                }
                [
                    position = 9104, 8208
                    hide_name = True
                ]

                component gen_logic_op "Logical operator2" {
                    inputs = "4"
                    operator = "NOT"
                }
                [
                    position = 9040, 8248
                    rotation = right
                    hide_name = True
                ]

                component gen_gain Gain6 {
                    gain = "-1/V_DQ"
                }
                [
                    position = 7376, 8592
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe4" {
                    override_signal_name = "True"
                    signal_name = "freq_sync3"
                }
                [
                    position = 8616, 8008
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe5" {
                    override_signal_name = "True"
                    signal_name = "volt_sync3"
                }
                [
                    position = 8616, 8072
                    hide_name = True
                ]

                component gen_logic_op "Logical operator1" {
                    inputs = "3"
                }
                [
                    position = 8616, 8120
                    hide_name = True
                ]

                component gen_abs Abs5 {
                }
                [
                    position = 8056, 8128
                    hide_name = True
                ]

                component gen_probe angle_diff3 {
                }
                [
                    position = 8056, 7952
                ]

                component gen_sum Sum3 {
                    signs = "-+"
                }
                [
                    position = 8392, 8192
                    hide_name = True
                    scale = 1, -1
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7336, 8544
                    hide_name = True
                ]

                component gen_rel_op "Relational operator2" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8120
                    hide_name = True
                ]

                component Subsystem PLL {
                    layout = dynamic
                    component gen_pid_controller "PID controller1" {
                        controller_type = "PI"
                        enb_anti_windup_out = "True"
                        enb_output_limit_out = "True"
                        int_init_value = "w_0"
                        ki = "Ki_PLL"
                        kp = "Kp_PLL"
                        lower_sat_lim = "PLL_min"
                        upper_sat_lim = "PLL_max"
                    }
                    [
                        position = 8192, 8152
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        parameters = "real Ts;"
                        update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                    }
                    [
                        position = 8304, 8152
                        hide_name = True
                        size = 80, 48
                    ]

                    component gen_c_function "confine phase" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 8408, 8152
                        size = 56, 48
                    ]

                    port wt {
                        label = "wt"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8496, 8152
                    ]

                    port w {
                        label = "w"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8304, 8208
                    ]

                    port d {
                        label = "-d"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8064, 8152
                    ]

                    junction Junction1 sp
                    [
                        position = 8240, 8152
                    ]

                    connect w Junction1 as Connection19
                    connect "C function1.in" Junction1 as Connection17
                    connect wt "confine phase.out" as Connection14
                    connect "confine phase.in" "C function1.out" as Connection16
                    connect Junction1 "PID controller1.out" as Connection18
                    connect d "PID controller1.in" as Connection20
                }
                [
                    position = 7544, 8592
                    size = 96, 56
                ]

                component gen_limiter Limit1 {
                    lower_limit = "1e-12"
                }
                [
                    position = 7384, 8016
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe6" {
                    override_signal_name = "True"
                    signal_name = "griddisconnect2"
                }
                [
                    position = 9104, 8280
                    hide_name = True
                ]

                component gen_math_fnc "Mathematical function2" {
                    mathematical_fn = "sqrt"
                }
                [
                    position = 7416, 8352
                    hide_name = True
                ]

                component gen_probe Vd_G {
                }
                [
                    position = 7328, 8480
                    scale = -1, 1
                ]

                component gen_probe Vq_G {
                }
                [
                    position = 7432, 8472
                    scale = -1, 1
                ]

                component gen_probe del_w {
                }
                [
                    position = 8496, 8352
                ]

                component gen_probe del_V {
                }
                [
                    position = 8744, 8584
                ]

                component gen_c_function "stay connected1" {
                    global_variables = "real connect;"
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "ready inherit;connectINV inherit;INVsync inherit"
                    in_terminal_labels = "[(\'ready\', True), (\'connectINV\', True), (\'INVsync\', True)]"
                    in_terminal_properties = "inherit ready;inherit connectINV;inherit INVsync;"
                    init_fnc = "/*Begin code section*/
connect = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    out_terminal_properties = "int out;"
                    output_fnc = "/*Begin code section*/
out = connect;
/*End code section*/"
                    parameters = "real Ts;"
                    update_fnc = "/*Begin code section*/
if ((ready==1)&&(connectINV==1)&&(INVsync==1)){
    connect = 1;
}
else if((connectINV==0)||(INVsync==0)){
    connect = 0;
}
/*End code section*/"
                }
                [
                    position = 8832, 8176
                    hide_name = True
                    size = 160, 104
                ]

                component gen_probe "|V|" {
                }
                [
                    position = 7512, 8304
                ]

                component gen_probe w_G {
                }
                [
                    position = 7824, 8160
                    rotation = down
                    scale = -1, 1
                ]

                component gen_probe w_bus {
                }
                [
                    position = 7824, 8240
                ]

                component gen_probe E_d {
                }
                [
                    position = 7496, 8720
                ]

                component gen_probe E_q {
                }
                [
                    position = 7496, 8848
                    rotation = down
                    scale = -1, 1
                ]

                component gen_gain Gain7 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7336, 8736
                    hide_name = True
                ]

                component gen_gain Gain12 {
                    gain = "-1/V_DQ"
                }
                [
                    position = 7336, 8832
                    hide_name = True
                ]

                component tm_delay "Unit Delay5" {
                }
                [
                    position = 8968, 8176
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer2" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "df inherit"
                    in_terminal_labels = "[(\'df\', True)]"
                    in_terminal_properties = "real df;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "del_w inherit"
                    out_terminal_labels = "[(\'del_w\', True)]"
                    out_terminal_properties = "real del_w;"
                    output_fnc = "/*Begin code section*/
if (df>maxw_slip)
{
    del_w = 1.125*maxw_pds;
}
else if ((df<=maxw_slip) && (df>0))
{
    del_w = maxw_pds*df/maxw_slip + (0.125*maxw_pds);
    //del_w = maxw_pds*(df+1e-4)/max_slip + (angle_slip);
}
else if ((df<=0) && (df > (-minw_slip)))
{
    del_w = (0.125*maxw_pds)*(df)/minw_slip + (0.125*maxw_pds);
    //del_w = maxw_pds*((-1*df)+1e-4)/min_slip  + (angle_slip);
}
else if ((df <= (-1*minw_slip))&&(df > (-1*maxw_slip)))
{
    del_w = 0;
    //del_w = maxw_pds*((min_slip)+1e-4)/min_slip  + (angle_slip);
}
else if (df <= (-1*maxw_slip))
{
    del_w = (maxw_slip+df)*maxw_pds/maxw_slip;
}
/*End code section*/"
                    parameters = "real Ts;real maxw_pds;real maxw_slip;real minw_slip;"
                }
                [
                    position = 8112, 8392
                    hide_name = True
                    scale = 1, -1
                    size = 128, 112
                ]

                component gen_probe thetaPLL {
                }
                [
                    position = 7680, 8680
                ]

                component gen_probe omegaPLL {
                }
                [
                    position = 7680, 8624
                ]

                component gen_probe theta_E {
                }
                [
                    position = 7592, 7960
                ]

                component gen_probe theta_V {
                }
                [
                    position = 7592, 8048
                ]

                component gen_c_function "Hold after connect2" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True)]"
                    in_terminal_properties = "real in;int connect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
/*End code section*/"
                }
                [
                    position = 8688, 8432
                    hide_name = True
                    size = 80, 88
                ]

                component gen_sum Sum9 {
                }
                [
                    position = 8584, 8408
                    hide_name = True
                ]

                component gen_c_function "Hold after connect3" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True)]"
                    in_terminal_properties = "real in;int connect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
/*End code section*/"
                }
                [
                    position = 8936, 8664
                    hide_name = True
                    size = 80, 88
                ]

                component gen_sum Sum10 {
                }
                [
                    position = 8832, 8640
                    hide_name = True
                ]

                component gen_gain Gain13 {
                    gain = "1/w_0"
                }
                [
                    position = 7672, 8600
                    hide_name = True
                ]

                component Subsystem "abc to qd" {
                    layout = dynamic
                    component gen_trigonometric "Trigonometric function3" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 7936
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8224, 7912
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8024
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8216, 8024
                        hide_name = True
                    ]

                    component gen_product Product3 {
                    }
                    [
                        position = 8216, 8136
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function2" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8048
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function4" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8160
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 7736, 8160
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8168
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 7736, 8048
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8056
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function5" {
                    }
                    [
                        position = 8120, 8256
                        hide_name = True
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 8216, 8224
                        hide_name = True
                    ]

                    component gen_sum Sum5 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8336
                        hide_name = True
                    ]

                    component gen_product Product5 {
                    }
                    [
                        position = 8200, 8336
                        hide_name = True
                    ]

                    component gen_product Product6 {
                    }
                    [
                        position = 8200, 8448
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function6" {
                    }
                    [
                        position = 8120, 8368
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function7" {
                    }
                    [
                        position = 8120, 8480
                        hide_name = True
                    ]

                    component gen_gain Gain1 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8024
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8336
                        hide_name = True
                    ]

                    port q {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8024
                    ]

                    port d {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8336
                    ]

                    port theta {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7512, 7936
                    ]

                    port a {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 7904
                        rotation = down
                        scale = -1, 1
                    ]

                    port b {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8016
                        rotation = down
                        scale = -1, 1
                    ]

                    port c {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8128
                        rotation = down
                        scale = -1, 1
                    ]

                    junction Junction11 sp
                    [
                        position = 7688, 7936
                    ]

                    junction Junction12 sp
                    [
                        position = 7688, 8040
                    ]

                    junction Junction3 sp
                    [
                        position = 8056, 7904
                    ]

                    junction Junction13 sp
                    [
                        position = 8032, 7936
                    ]

                    junction Junction7 sp
                    [
                        position = 7960, 8016
                    ]

                    junction Junction8 sp
                    [
                        position = 7936, 8048
                    ]

                    junction Junction9 sp
                    [
                        position = 7864, 8128
                    ]

                    junction Junction10 sp
                    [
                        position = 7840, 8160
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">q = (2/3)*( a*cos(wt) + b*cos(wt-(2*pi/3)) + c*cos(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">d = (2/3)*( a*sin(wt) + b*sin(wt-(2*pi/3)) + c*sin(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">zero = (1/3)*( a + b + c );</p></body></html> ENDCOMMENT 
                    [
                        position = 8512, 7952
                    ]

                    connect "Trigonometric function3.out" Product1.in1 as Connection1151
                    connect Product1.out Sum3.in as Connection1153
                    connect Product2.out Sum3.in1 as Connection1154
                    connect "Trigonometric function2.out" Product2.in1 as Connection1155
                    connect "Trigonometric function4.out" Product3.in1 as Connection1164
                    connect Constant2.out Sum2.in1 as Connection1148
                    connect Product3.out Sum3.in2 as Connection1171
                    connect "Trigonometric function5.out" Product4.in1 as Connection1173
                    connect Product4.out Sum5.in as Connection1174
                    connect Product5.out Sum5.in1 as Connection1175
                    connect "Trigonometric function6.out" Product5.in1 as Connection1176
                    connect "Trigonometric function7.out" Product6.in1 as Connection1179
                    connect Product6.out Sum5.in2 as Connection1183
                    connect Sum3.out Gain1.in as Connection1186
                    connect Junction11 theta as Connection1232
                    connect Gain1.out q as Connection1187
                    connect Sum5.out Gain2.in as Connection1188
                    connect Sum2.in Junction12 as Connection1234
                    connect Gain2.out d as Connection1189
                    connect Junction12 Junction11 as Connection1235
                    connect Sum4.in Junction12 as Connection1236
                    connect a Junction3 as Connection1190
                    connect Junction3 Product1.in as Connection1191
                    connect "Trigonometric function3.in" Junction13 as Connection1237
                    connect Product4.in Junction3 as Connection1192
                    connect Junction13 Junction11 as Connection1238
                    connect "Trigonometric function5.in" Junction13 as Connection1239
                    connect b Junction7 as Connection1213
                    connect Junction7 Product2.in as Connection1214
                    connect Product5.in Junction7 as Connection1215
                    connect Sum2.out Junction8 as Connection1216
                    connect Junction8 "Trigonometric function2.in" as Connection1217
                    connect "Trigonometric function6.in" Junction8 as Connection1218
                    connect Constant3.out Sum4.in1 as Connection1219
                    connect c Junction9 as Connection1220
                    connect Junction9 Product3.in as Connection1221
                    connect Product6.in Junction9 as Connection1222
                    connect Sum4.out Junction10 as Connection1227
                    connect Junction10 "Trigonometric function4.in" as Connection1228
                    [
                        breakpoints = 7840, 8160
                    ]
                    connect "Trigonometric function7.in" Junction10 as Connection1229
                }
                [
                    position = 7256, 8592
                    size = 80, 136
                ]

                component Subsystem "abc to qd1" {
                    layout = dynamic
                    component gen_trigonometric "Trigonometric function3" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 7936
                        hide_name = True
                    ]

                    component gen_product Product1 {
                    }
                    [
                        position = 8224, 7912
                        hide_name = True
                    ]

                    component gen_sum Sum3 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8024
                        hide_name = True
                    ]

                    component gen_product Product2 {
                    }
                    [
                        position = 8216, 8024
                        hide_name = True
                    ]

                    component gen_product Product3 {
                    }
                    [
                        position = 8216, 8136
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function2" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8048
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function4" {
                        trigonometric_fn = "cos"
                    }
                    [
                        position = 8128, 8160
                        hide_name = True
                    ]

                    component gen_sum Sum4 {
                    }
                    [
                        position = 7736, 8160
                        hide_name = True
                    ]

                    component src_constant Constant3 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8168
                        hide_name = True
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 7736, 8048
                        hide_name = True
                    ]

                    component src_constant Constant2 {
                        execution_rate = "Ts"
                        value = "2*np.pi/3"
                    }
                    [
                        position = 7648, 8056
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function5" {
                    }
                    [
                        position = 8120, 8256
                        hide_name = True
                    ]

                    component gen_product Product4 {
                    }
                    [
                        position = 8216, 8224
                        hide_name = True
                    ]

                    component gen_sum Sum5 {
                        signs = "3"
                    }
                    [
                        position = 8304, 8336
                        hide_name = True
                    ]

                    component gen_product Product5 {
                    }
                    [
                        position = 8200, 8336
                        hide_name = True
                    ]

                    component gen_product Product6 {
                    }
                    [
                        position = 8200, 8448
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function6" {
                    }
                    [
                        position = 8120, 8368
                        hide_name = True
                    ]

                    component gen_trigonometric "Trigonometric function7" {
                    }
                    [
                        position = 8120, 8480
                        hide_name = True
                    ]

                    component gen_c_function "confine phase" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 7592, 7936
                        size = 56, 48
                    ]

                    component gen_gain Gain1 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8024
                        hide_name = True
                    ]

                    component gen_gain Gain2 {
                        gain = "2/3"
                    }
                    [
                        position = 8376, 8336
                        hide_name = True
                    ]

                    port q {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8024
                    ]

                    port d {
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 8336
                    ]

                    port theta {
                        position = left:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7512, 7936
                    ]

                    port a {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 7904
                        rotation = down
                        scale = -1, 1
                    ]

                    port b {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8016
                        rotation = down
                        scale = -1, 1
                    ]

                    port c {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7648, 8128
                        rotation = down
                        scale = -1, 1
                    ]

                    junction Junction3 sp
                    [
                        position = 8056, 7904
                    ]

                    junction Junction4 sp
                    [
                        position = 7688, 8040
                    ]

                    junction Junction5 sp
                    [
                        position = 7688, 7936
                    ]

                    junction Junction6 sp
                    [
                        position = 8032, 7936
                    ]

                    junction Junction7 sp
                    [
                        position = 7960, 8016
                    ]

                    junction Junction8 sp
                    [
                        position = 7936, 8048
                    ]

                    junction Junction9 sp
                    [
                        position = 7864, 8128
                    ]

                    junction Junction10 sp
                    [
                        position = 7840, 8160
                    ]

                    comment Comment1 START <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"><html><head><meta name="qrichtext" content="1" /><style type="text/css">p, li { white-space: pre-wrap; }</style></head><body style=" font-family:'Arial'; font-size:12pt; font-weight:400; font-style:normal;"><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">q = (2/3)*( a*cos(wt) + b*cos(wt-(2*pi/3)) + c*cos(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">d = (2/3)*( a*sin(wt) + b*sin(wt-(2*pi/3)) + c*sin(wt+(2*pi/3)) );</p><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">zero = (1/3)*( a + b + c );</p></body></html> ENDCOMMENT 
                    [
                        position = 8512, 7952
                    ]

                    connect "Trigonometric function3.out" Product1.in1 as Connection1151
                    connect Product1.out Sum3.in as Connection1153
                    connect Product2.out Sum3.in1 as Connection1154
                    connect "Trigonometric function2.out" Product2.in1 as Connection1155
                    connect "Trigonometric function4.out" Product3.in1 as Connection1164
                    connect Constant2.out Sum2.in1 as Connection1148
                    connect Product3.out Sum3.in2 as Connection1171
                    connect "Trigonometric function5.out" Product4.in1 as Connection1173
                    connect Product4.out Sum5.in as Connection1174
                    connect Product5.out Sum5.in1 as Connection1175
                    connect "Trigonometric function6.out" Product5.in1 as Connection1176
                    connect "Trigonometric function7.out" Product6.in1 as Connection1179
                    connect Junction5 "confine phase.out" as Connection1230
                    connect "confine phase.in" theta as Connection1231
                    connect Product6.out Sum5.in2 as Connection1183
                    connect Sum3.out Gain1.in as Connection1186
                    connect Gain1.out q as Connection1187
                    connect Sum5.out Gain2.in as Connection1188
                    connect Gain2.out d as Connection1189
                    connect a Junction3 as Connection1190
                    connect Junction3 Product1.in as Connection1191
                    connect Product4.in Junction3 as Connection1192
                    connect Sum2.in Junction4 as Connection1204
                    connect Sum4.in Junction4 as Connection1206
                    connect Junction4 Junction5 as Connection1207
                    connect "Trigonometric function3.in" Junction6 as Connection1210
                    connect Junction6 Junction5 as Connection1211
                    connect "Trigonometric function5.in" Junction6 as Connection1212
                    connect b Junction7 as Connection1213
                    connect Junction7 Product2.in as Connection1214
                    connect Product5.in Junction7 as Connection1215
                    connect Sum2.out Junction8 as Connection1216
                    connect Junction8 "Trigonometric function2.in" as Connection1217
                    connect "Trigonometric function6.in" Junction8 as Connection1218
                    connect Constant3.out Sum4.in1 as Connection1219
                    connect c Junction9 as Connection1220
                    connect Junction9 Product3.in as Connection1221
                    connect Product6.in Junction9 as Connection1222
                    connect Sum4.out Junction10 as Connection1227
                    connect Junction10 "Trigonometric function4.in" as Connection1228
                    [
                        breakpoints = 7840, 8160
                    ]
                    connect "Trigonometric function7.in" Junction10 as Connection1229
                }
                [
                    position = 7256, 8784
                    size = 80, 136
                ]

                component gen_math_fnc "Mathematical function1" {
                    mathematical_fn = "sqrt"
                }
                [
                    position = 7416, 8224
                    hide_name = True
                ]

                component gen_product Product1 {
                }
                [
                    position = 7264, 8192
                    hide_name = True
                ]

                component gen_sum Sum4 {
                }
                [
                    position = 7344, 8224
                    hide_name = True
                ]

                component gen_product Product2 {
                }
                [
                    position = 7264, 8256
                    hide_name = True
                ]

                component gen_probe "|E|" {
                }
                [
                    position = 7504, 8144
                ]

                component tm_delay "Unit Delay6" {
                }
                [
                    position = 8776, 8432
                    hide_name = True
                ]

                component tm_delay "Unit Delay7" {
                }
                [
                    position = 9024, 8664
                    hide_name = True
                ]

                component gen_gain Gain14 {
                    gain = "V_DQ"
                }
                [
                    position = 7456, 8184
                    rotation = left
                    hide_name = True
                ]

                component gen_probe w_sync {
                }
                [
                    position = 8864, 8376
                ]

                component gen_probe "|V|_sync" {
                }
                [
                    position = 9104, 8616
                ]

                component gen_comparator Comparator1 {
                }
                [
                    position = 7960, 8584
                    hide_name = True
                ]

                component gen_product Product5 {
                }
                [
                    position = 8072, 8584
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch1" {
                    criterion = "ctrl > threshold"
                    threshold = "0.5"
                }
                [
                    position = 7992, 8632
                    hide_name = True
                ]

                component src_constant Constant10 {
                    execution_rate = "Ts"
                    value = "1e-6"
                }
                [
                    position = 7848, 8648
                    hide_name = True
                ]

                component gen_probe "sync_|V|" {
                }
                [
                    position = 8152, 8584
                ]

                component gen_comparator Comparator2 {
                }
                [
                    position = 7960, 8744
                    hide_name = True
                ]

                component gen_product Product6 {
                }
                [
                    position = 8072, 8744
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch2" {
                    criterion = "ctrl > threshold"
                    threshold = "0.5"
                }
                [
                    position = 7992, 8792
                    hide_name = True
                ]

                component src_constant Constant11 {
                    execution_rate = "Ts"
                    value = "1e-6"
                }
                [
                    position = 7848, 8808
                    hide_name = True
                ]

                component gen_probe sync_w {
                }
                [
                    position = 8152, 8744
                ]

                component gen_gain Gain15 {
                    gain = "1/w_0"
                }
                [
                    position = 7960, 8712
                    hide_name = True
                ]

                component gen_probe sync_theta {
                }
                [
                    position = 8216, 7976
                ]

                component gen_gain Gain16 {
                    gain = "180/np.pi"
                }
                [
                    position = 8144, 7976
                    hide_name = True
                ]

                tag From43 {
                    value = "Vd_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8312
                    hide_name = True
                ]

                tag w_bus1 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8600
                    hide_name = True
                ]

                tag Vb_G1 {
                    value = "VbG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7136, 8576
                    hide_name = True
                ]

                tag "|V|1" {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7512, 8352
                    hide_name = True
                ]

                tag theta_bus {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7136, 8640
                    hide_name = True
                    scale = -1, 1
                ]

                tag theta_bus5 {
                    value = "dV"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8232, 8616
                    hide_name = True
                ]

                tag From42 {
                    value = "Vq_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8392
                    hide_name = True
                ]

                tag Goto32 {
                    value = "Vq_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7544, 8536
                    hide_name = True
                    size = 60, 20
                ]

                tag Connect2 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8232, 8416
                    hide_name = True
                    size = 58, 20
                ]

                tag From44 {
                    value = "Vd_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7320, 8104
                    hide_name = True
                ]

                tag From45 {
                    value = "Vq_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7320, 8072
                    hide_name = True
                ]

                tag Goto30 {
                    value = "dV"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8504, 8160
                    hide_name = True
                ]

                tag Goto33 {
                    value = "Vd_G"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7440, 8544
                    hide_name = True
                    size = 60, 20
                ]

                tag Vc_G1 {
                    value = "VcG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7136, 8608
                    hide_name = True
                ]

                tag From41 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7320, 8016
                    hide_name = True
                ]

                tag Va_G1 {
                    value = "VaG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7136, 8544
                    hide_name = True
                ]

                tag w_bus3 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8224
                    hide_name = True
                ]

                tag Connect1 {
                    value = "synced"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9104, 8176
                    hide_name = True
                ]

                tag From1 {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 8176
                    hide_name = True
                ]

                tag From40 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7320, 7984
                    hide_name = True
                ]

                tag MT_ON2 {
                    value = "INV_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8232, 8440
                    hide_name = True
                ]

                tag MT_ON3 {
                    value = "INV_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8456, 8680
                    hide_name = True
                ]

                tag MT_ON4 {
                    value = "INV_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8688, 8208
                    hide_name = True
                ]

                tag w_e7 {
                    value = "w_e"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8176
                    hide_name = True
                ]

                tag Goto28 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7432, 8832
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto29 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7432, 8736
                    hide_name = True
                    size = 60, 20
                ]

                tag From34 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7160, 8800
                    hide_name = True
                    size = 60, 20
                ]

                tag From33 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7160, 8736
                    hide_name = True
                    size = 60, 20
                ]

                tag From35 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7160, 8768
                    hide_name = True
                    size = 60, 20
                ]

                tag theta_bus1 {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7160, 8832
                    hide_name = True
                ]

                tag Connect5 {
                    value = "Connect INV"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8688, 8176
                    hide_name = True
                ]

                tag Connect6 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8456, 8648
                    hide_name = True
                    size = 58, 20
                ]

                tag w_bus2 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8496, 8400
                    hide_name = True
                    scale = 1, -1
                ]

                tag Connect3 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8584, 8456
                    hide_name = True
                    size = 58, 20
                ]

                tag Goto34 {
                    value = "w_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8864, 8432
                    hide_name = True
                ]

                tag From47 {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8744, 8632
                    hide_name = True
                ]

                tag Connect7 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8832, 8688
                    hide_name = True
                    size = 58, 20
                ]

                tag Goto35 {
                    value = "|V|_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9104, 8664
                    hide_name = True
                ]

                tag From39 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8264
                    hide_name = True
                ]

                tag From36 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8184
                    hide_name = True
                ]

                tag "|V|3" {
                    value = "|E|"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7504, 8224
                    hide_name = True
                ]

                tag From48 {
                    value = "|E|"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8304, 8208
                    hide_name = True
                ]

                tag From49 {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7848, 8576
                    hide_name = True
                ]

                tag From50 {
                    value = "|E|"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7848, 8552
                    hide_name = True
                ]

                tag From51 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7848, 8736
                    hide_name = True
                ]

                tag w_e8 {
                    value = "w_e"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7848, 8712
                    hide_name = True
                ]

                junction Junction41 sp
                [
                    position = 7480, 8592
                ]

                junction Junction38 sp
                [
                    position = 8304, 8120
                ]

                junction Junction42 sp
                [
                    position = 7216, 8392
                ]

                junction Junction43 sp
                [
                    position = 7216, 8312
                ]

                junction Junction49 sp
                [
                    position = 7872, 8048
                ]

                junction Junction35 sp
                [
                    position = 8424, 8192
                ]

                junction Junction56 sp
                [
                    position = 8280, 8616
                ]

                junction Junction57 sp
                [
                    position = 7480, 8536
                ]

                junction Junction58 sp
                [
                    position = 7368, 8544
                ]

                junction Junction63 sp
                [
                    position = 9040, 8176
                ]

                junction Junction66 sp
                [
                    position = 8552, 8136
                ]

                junction Junction67 sp
                [
                    position = 8576, 8040
                ]

                junction Junction69 sp
                [
                    position = 7456, 8352
                ]

                junction Junction71 sp
                [
                    position = 7784, 8176
                ]

                junction Junction73 sp
                [
                    position = 7992, 8128
                ]

                junction Junction78 sp
                [
                    position = 9040, 8208
                ]

                junction Junction61 sp
                [
                    position = 7376, 8736
                ]

                junction Junction81 sp
                [
                    position = 7992, 8200
                ]

                junction Junction85 sp
                [
                    position = 7640, 8600
                ]

                junction Junction86 sp
                [
                    position = 7520, 8088
                ]

                junction Junction87 sp
                [
                    position = 7520, 8000
                ]

                junction Junction88 sp
                [
                    position = 8432, 8416
                ]

                junction Junction90 sp
                [
                    position = 7784, 8224
                ]

                junction Junction99 sp
                [
                    position = 7200, 8640
                ]

                junction Junction100 sp
                [
                    position = 7616, 8680
                ]

                junction Junction101 sp
                [
                    position = 7376, 8832
                ]

                junction Junction102 sp
                [
                    position = 8664, 8648
                ]

                junction Junction28 sp
                [
                    position = 7216, 8264
                ]

                junction Junction103 sp
                [
                    position = 7216, 8184
                ]

                junction Junction104 sp
                [
                    position = 7456, 8224
                ]

                junction Junction105 sp
                [
                    position = 8816, 8432
                ]

                junction Junction106 sp
                [
                    position = 9056, 8664
                ]

                junction Junction107 sp
                [
                    position = 7928, 8648
                ]

                junction Junction108 sp
                [
                    position = 7912, 8576
                ]

                junction Junction109 sp
                [
                    position = 7928, 8808
                ]

                junction Junction110 sp
                [
                    position = 7912, 8736
                ]

                junction Junction111 sp
                [
                    position = 7872, 7976
                ]

                connect "Digital Probe4.in" Junction38 as Connection366
                connect From41 Limit1.in as Connection285
                connect Sum3.in1 From1 as Connection81
                connect Abs2.out "Relational operator4.in" as Connection84
                connect Connect2 "Hold after connect.connect" as Connection156
                connect Goto30 Junction35 as Connection308
                connect From45 "Trigonometric function2.in" as Connection401
                connect Constant7.out "Relational operator2.in" as Connection70
                connect Junction49 Abs4.in as Connection429
                connect Abs2.in Junction35 as Connection306
                connect From44 Limit2.in as Connection402
                connect "Digital Probe6.in" "Logical operator2.out" as Connection454
                connect Limit2.out "Trigonometric function2.in1" as Connection398
                connect Product3.out Sum5.in as Connection390
                connect Junction38 "Relational operator2.out" as Connection365
                [
                    breakpoints = 8288, 8120; 8288, 8120
                ]
                connect Product3.in Junction43 as Connection386
                connect Limit1.out "Trigonometric function1.in1" as Connection286
                connect From40 "Trigonometric function1.in" as Connection284
                connect "Relational operator2.in1" Abs5.out as Connection357
                connect From42 Junction42 as Connection384
                connect Junction43 From43 as Connection389
                connect Sum5.out "Mathematical function2.in" as Connection387
                connect Product3.in1 Junction43 as Connection391
                connect Gain6.out Junction41 as Connection381
                connect Junction35 Sum3.out as Connection307
                connect "confine phase.in" Sum1.out as Connection146
                connect Product4.out Sum5.in1 as Connection388
                connect Constant9.out "Relational operator4.in1" as Connection85
                connect Product4.in Junction42 as Connection385
                connect "confine phase.out" Junction49 as Connection428
                connect Junction41 PLL.d as Connection382
                connect Constant6.out "Relational operator1.in" as Connection69
                connect Junction42 Product4.in1 as Connection392
                connect "Logical operator1.in1" Junction38 as Connection364
                [
                    breakpoints = 8576, 8120
                ]
                connect theta_bus5 Junction56 as Connection464
                connect Junction56 "BE1-25A Synchronizer1.dV" as Connection465
                connect volt_diff3.in Junction56 as Connection466
                connect Goto32 Junction57 as Connection468
                connect Junction57 Junction41 as Connection469
                connect Vq_G.in Junction57 as Connection470
                connect Goto33 Junction58 as Connection471
                connect Junction58 Gain5.out as Connection472
                connect Vd_G.in Junction58 as Connection473
                connect PLL.wt "Unit Delay2.in" as Connection474
                connect MT_ON2 "Hold after connect.INV_sync" as Connection492
                connect MT_ON3 "Hold after connect1.INV_sync" as Connection494
                connect "Hold after connect1.in" "BE1-25A Synchronizer1.del_V" as Connection495
                connect Connect1 Junction63 as Connection508
                connect MT_ON4 "stay connected1.INVsync" as Connection512
                connect w_e7 Gain4.in as Connection513
                connect "Logical operator1.in2" Junction66 as Connection530
                connect Junction66 "Relational operator4.out" as Connection531
                connect "Digital Probe5.in" Junction66 as Connection532
                connect "Relational operator1.out" Junction67 as Connection534
                connect Junction67 "Logical operator1.in" as Connection535
                connect "Digital Probe3.in" Junction67 as Connection536
                connect "Logical operator1.out" "stay connected1.ready" as Connection537
                connect "Mathematical function2.out" Junction69 as Connection544
                connect Junction69 "|V|1" as Connection545
                [
                    breakpoints = 7456, 8352
                ]
                connect "|V|.in" Junction69 as Connection546
                connect Gain4.out Junction71 as Connection550
                connect Junction71 Sum2.in as Connection551
                connect w_G.in Junction71 as Connection552
                connect Abs5.in Junction73 as Connection557
                connect frequency_diff3.in Junction73 as Connection559
                connect Junction63 Junction78 as Connection609
                [
                    breakpoints = 9040, 8176
                ]
                connect Junction78 "Logical operator2.in" as Connection610
                [
                    breakpoints = 9040, 8208
                ]
                connect "Digital Probe1.in" Junction78 as Connection611
                connect Goto29 Junction61 as Connection444
                connect Junction61 Gain7.out as Connection445
                connect E_d.in Junction61 as Connection618
                [
                    breakpoints = 7472, 8720; 7376, 8720; 7376, 8736
                ]
                connect Junction63 "Unit Delay5.out" as Connection623
                connect "Unit Delay5.in" "stay connected1.out" as Connection624
                connect Connect5 "stay connected1.connectINV" as Connection625
                connect Connect6 "Hold after connect1.connect" as Connection626
                connect Abs4.out "Relational operator1.in1" as Connection627
                [
                    breakpoints = 8024, 8048; 8128, 8048
                ]
                connect "BE1-25A Synchronizer2.del_w" "Hold after connect.in" as Connection633
                connect Sum2.out Junction81 as Connection634
                [
                    breakpoints = 7968, 8200
                ]
                connect Junction81 Junction73 as Connection635
                [
                    breakpoints = 7992, 8200; 7992, 8128
                ]
                connect "BE1-25A Synchronizer2.df" Junction81 as Connection636
                connect PLL.w Junction85 as Connection649
                connect omegaPLL.in Junction85 as Connection651
                connect "Trigonometric function2.out" Junction86 as Connection654
                connect Junction86 Sum1.in1 as Connection655
                connect theta_V.in Junction86 as Connection656
                connect "Trigonometric function1.out" Junction87 as Connection657
                connect Junction87 Sum1.in as Connection658
                connect theta_E.in Junction87 as Connection659
                connect Connect3 "Hold after connect2.connect" as Connection1234
                connect w_bus2 Sum9.in as Connection1235
                connect Sum9.out "Hold after connect2.in" as Connection1237
                connect del_w.in Junction88 as Connection1239
                connect Junction88 "Hold after connect.out" as Connection1240
                [
                    breakpoints = 8432, 8416
                ]
                connect Sum9.in1 Junction88 as Connection1241
                connect Connect7 "Hold after connect3.connect" as Connection1243
                connect Sum10.out "Hold after connect3.in" as Connection1244
                connect From47 Sum10.in as Connection1246
                connect Gain13.out w_bus1 as Connection1252
                connect w_bus3 Junction90 as Connection1254
                connect Junction90 Sum2.in1 as Connection1255
                connect w_bus.in Junction90 as Connection1256
                connect Gain13.in Junction85 as Connection1340
                [
                    breakpoints = 7640, 8600
                ]
                connect From33 "abc to qd1.a" as Connection1356
                connect "abc to qd1.b" From35 as Connection1357
                connect From34 "abc to qd1.c" as Connection1358
                connect "abc to qd1.theta" theta_bus1 as Connection1359
                connect "abc to qd1.q" Gain7.in as Connection1360
                connect Gain12.in "abc to qd1.d" as Connection1361
                connect Gain6.in "abc to qd.d" as Connection1362
                connect Gain5.in "abc to qd.q" as Connection1363
                connect "abc to qd.c" Vc_G1 as Connection1364
                connect Vb_G1 "abc to qd.b" as Connection1365
                connect "abc to qd.a" Va_G1 as Connection1366
                connect "abc to qd.theta" Junction99 as Connection1375
                connect theta_bus Junction99 as Connection1377
                connect Junction99 Junction100 as Connection1382
                [
                    breakpoints = 7200, 8640
                ]
                connect Junction100 "Unit Delay2.out" as Connection1383
                [
                    breakpoints = 7616, 8680; 7616, 8680
                ]
                connect thetaPLL.in Junction100 as Connection1384
                connect Gain12.out Junction101 as Connection1386
                connect Junction101 Goto28 as Connection1387
                connect E_q.in Junction101 as Connection1388
                connect "Hold after connect1.out" Junction102 as Connection1390
                connect Junction102 Sum10.in1 as Connection1391
                connect del_V.in Junction102 as Connection1392
                connect From39 Junction28 as Connection259
                connect Product2.out Sum4.in1 as Connection251
                connect Sum4.out "Mathematical function1.in" as Connection252
                connect Product2.in Junction28 as Connection261
                connect Junction28 Product2.in1 as Connection260
                connect Product1.out Sum4.in as Connection250
                connect From36 Junction103 as Connection1394
                connect Junction103 Product1.in as Connection1395
                connect Product1.in1 Junction103 as Connection1396
                connect "Mathematical function1.out" Junction104 as Connection1398
                connect Junction104 "|V|3" as Connection1399
                connect From48 Sum3.in as Connection1401
                connect "Hold after connect2.out" "Unit Delay6.in" as Connection1402
                connect "Unit Delay7.in" "Hold after connect3.out" as Connection1405
                connect "|E|.in" Gain14.out as Connection1406
                connect Gain14.in Junction104 as Connection1407
                connect "Unit Delay6.out" Junction105 as Connection1408
                connect Junction105 Goto34 as Connection1409
                connect w_sync.in Junction105 as Connection1410
                connect Goto35 Junction106 as Connection1411
                connect Junction106 "Unit Delay7.out" as Connection1412
                connect "|V|_sync.in" Junction106 as Connection1413
                connect From50 Product5.in as Connection1414
                connect Comparator1.out "Signal switch1.in2" as Connection1417
                connect "Signal switch1.out" Product5.in1 as Connection1418
                connect Constant10.out Junction107 as Connection1420
                connect Junction107 Comparator1.in2 as Connection1421
                connect "Signal switch1.in1" Junction107 as Connection1422
                connect From49 Junction108 as Connection1423
                connect Junction108 Comparator1.in1 as Connection1424
                connect "Signal switch1.in" Junction108 as Connection1425
                connect "sync_|V|.in" Product5.out as Connection1426
                connect Comparator2.out "Signal switch2.in2" as Connection1428
                connect "Signal switch2.out" Product6.in1 as Connection1429
                connect Constant11.out Junction109 as Connection1430
                connect Junction109 Comparator2.in2 as Connection1431
                connect "Signal switch2.in1" Junction109 as Connection1432
                connect From51 Junction110 as Connection1433
                connect Junction110 Comparator2.in1 as Connection1434
                connect "Signal switch2.in" Junction110 as Connection1435
                connect sync_w.in Product6.out as Connection1436
                connect w_e8 Gain15.in as Connection1437
                connect Gain15.out Product6.in as Connection1438
                connect angle_diff3.in Junction111 as Connection1439
                connect Junction111 Junction49 as Connection1440
                connect Gain16.in Junction111 as Connection1441
                connect Gain16.out sync_theta.in as Connection1442
            }
            [
                position = 9200, 7608
                size = 112, 144
            ]

            component Subsystem CB_control {
                layout = dynamic
                component gen_logic_op "Logical operator1" {
                }
                [
                    position = 8176, 8256
                    hide_name = True
                ]

                component gen_logic_op "Logical operator3" {
                    operator = "NOT"
                }
                [
                    position = 8424, 8304
                    rotation = right
                    hide_name = True
                ]

                component gen_digital_probe "GCB OFF" {
                }
                [
                    position = 8464, 8352
                ]

                component gen_digital_probe "GCB ON" {
                }
                [
                    position = 8464, 8200
                    rotation = down
                    scale = -1, 1
                ]

                component gen_logic_op "Logical operator5" {
                    operator = "NOT"
                }
                [
                    position = 7632, 8496
                    rotation = right
                    hide_name = True
                ]

                component gen_digital_probe "Grid_Islanded OFF" {
                }
                [
                    position = 7680, 8528
                ]

                component gen_digital_probe "Grid_Islanded ON" {
                }
                [
                    position = 7680, 8408
                    rotation = down
                    scale = -1, 1
                ]

                component src_scada_input Grid_Islanded {
                    def_value = "1"
                    execution_rate = "Ts"
                    format = "int"
                    max = "1"
                    min = "0"
                    signal_type = "int"
                    unit = ""
                }
                [
                    position = 7352, 8432
                ]

                component gen_logic_op "Logical operator6" {
                    operator = "OR"
                }
                [
                    position = 8304, 8688
                    hide_name = True
                ]

                component gen_digital_probe "INV_sync OFF" {
                }
                [
                    position = 7600, 8672
                ]

                component gen_digital_probe "INV_sync ON" {
                }
                [
                    position = 7528, 8600
                    rotation = down
                    scale = -1, -1
                ]

                component gen_logic_op "Logical operator7" {
                }
                [
                    position = 7560, 8440
                    hide_name = True
                ]

                component gen_logic_op "Logical operator8" {
                    inputs = "3"
                }
                [
                    position = 8224, 8696
                    hide_name = True
                ]

                component src_constant Constant10 {
                    execution_rate = "Ts"
                    value = "5e-2"
                }
                [
                    position = 8088, 8712
                    hide_name = True
                ]

                component gen_abs Abs6 {
                }
                [
                    position = 8088, 8680
                    hide_name = True
                ]

                component gen_rel_op "Relational operator5" {
                    relational_op = "<"
                }
                [
                    position = 8152, 8696
                    hide_name = True
                ]

                component gen_sum Sum9 {
                    signs = "-+"
                }
                [
                    position = 8016, 8688
                    hide_name = True
                    scale = 1, -1
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                }
                [
                    position = 7944, 8664
                    hide_name = True
                ]

                component src_constant Constant11 {
                    execution_rate = "Ts"
                    value = "1e-3"
                }
                [
                    position = 8088, 8616
                    hide_name = True
                ]

                component gen_abs Abs7 {
                }
                [
                    position = 8088, 8648
                    hide_name = True
                ]

                component gen_rel_op "Relational operator6" {
                    relational_op = ">"
                }
                [
                    position = 8152, 8632
                    hide_name = True
                ]

                component gen_sum Sum10 {
                    signs = "-+"
                }
                [
                    position = 8016, 8640
                    hide_name = True
                    scale = 1, -1
                ]

                component gen_gain Gain13 {
                    gain = "1/w_0"
                }
                [
                    position = 7944, 8616
                    hide_name = True
                ]

                component gen_logic_op "Logical operator9" {
                    operator = "NOT"
                }
                [
                    position = 7408, 8496
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op "Logical operator10" {
                    operator = "NOT"
                }
                [
                    position = 7520, 8496
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op "Logical operator11" {
                }
                [
                    position = 7464, 8568
                    rotation = right
                    hide_name = True
                ]

                component gen_logic_op "Logical operator12" {
                    operator = "NOT"
                }
                [
                    position = 7528, 8672
                    hide_name = True
                ]

                component gen_c_function "stay connected1" {
                    global_variables = "int var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "connect inherit;disconnect inherit"
                    in_terminal_labels = "[(\'connect\', True), (\'disconnect\', True)]"
                    in_terminal_properties = "inherit connect;inherit disconnect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "action inherit"
                    out_terminal_labels = "[(\'action\', True)]"
                    out_terminal_properties = "int action;"
                    output_fnc = "/*Begin code section*/
action = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==1)
{
    var = 1;
}
if(disconnect==0)
{
    var = 0;
}
/*End code section*/"
                }
                [
                    position = 8328, 8240
                    hide_name = True
                    scale = 1, -1
                    size = 112, 72
                ]

                component gen_c_function "Hold after connect2" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in1 inherit;in2 inherit"
                    in_terminal_labels = "[(\'in1\', True), (\'in2\', True)]"
                    in_terminal_properties = "real in1;real in2;"
                    init_fnc = "/*Begin code section*/
var = 1;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    out_terminal_properties = "int out;"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if ((in1<1.05)&&(in1>0.95)&&(in2<1.005)&&(in2>0.995))
    var = 0;
else
    var = 1;
/*End code section*/"
                }
                [
                    position = 7464, 8368
                    hide_name = True
                    size = 80, 56
                ]

                component tm_delay "Unit Delay2" {
                }
                [
                    position = 8528, 8296
                    hide_name = True
                ]

                port CB_status {
                    label = "CB_status"
                    position = top:1
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8616, 8240
                ]

                port Close_GCB {
                    label = "Close_GCB"
                    position = left:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7880, 8152
                ]

                tag Connect5 {
                    value = "synced"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8224, 8648
                    hide_name = True
                ]

                tag Connect6 {
                    value = "Connect INV"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8176, 8216
                    hide_name = True
                ]

                tag Connect1 {
                    value = "Connected"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8616, 8296
                    hide_name = True
                ]

                tag Connect7 {
                    value = "Grid_Islanded"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7680, 8440
                    hide_name = True
                    size = 75, 20
                ]

                tag Connect8 {
                    value = "Grid_Islanded"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8120, 8744
                    hide_name = True
                    size = 94, 20
                ]

                tag Connect9 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8392, 8688
                    hide_name = True
                    size = 75, 20
                ]

                tag Connect10 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8080, 8264
                    hide_name = True
                ]

                tag Connect11 {
                    value = "INV_sync"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7528, 8632
                    hide_name = True
                    size = 58, 20
                ]

                tag "|V|2" {
                    value = "|E|"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7928, 8712
                    hide_name = True
                    size = 29, 20
                ]

                tag w_e8 {
                    value = "w_e"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7872, 8616
                    hide_name = True
                ]

                tag From1 {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 8352
                    hide_name = True
                ]

                tag w_bus3 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 8384
                    hide_name = True
                ]

                junction Junction108 sp
                [
                    position = 7632, 8440
                ]

                junction Junction109 sp
                [
                    position = 7632, 8440
                ]

                junction Junction81 sp
                [
                    position = 7976, 8664
                ]

                junction Junction113 sp
                [
                    position = 7464, 8600
                ]

                junction Junction115 sp
                [
                    position = 7464, 8632
                ]

                junction Junction116 sp
                [
                    position = 8424, 8240
                ]

                junction Junction117 sp
                [
                    position = 8424, 8240
                ]

                junction Junction119 sp
                [
                    position = 8480, 8240
                ]

                junction Junction121 sp
                [
                    position = 7408, 8432
                ]

                junction Junction122 sp
                [
                    position = 7520, 8448
                ]

                junction Junction123 sp
                [
                    position = 8048, 8152
                ]

                junction Junction124 sp
                [
                    position = 8048, 8216
                ]

                connect "GCB OFF.in" "Logical operator3.out" as Connection155
                connect Connect5 "Logical operator6.in" as Connection959
                connect "Logical operator6.out" Connect9 as Connection961
                connect Connect10 "Logical operator1.in1" as Connection962
                connect "Logical operator7.out" Junction108 as Connection980
                connect Junction108 Connect7 as Connection981
                connect "Logical operator5.in" Junction109 as Connection983
                connect Junction109 Junction108 as Connection984
                connect Abs6.out "Relational operator5.in" as Connection628
                connect Constant10.out "Relational operator5.in1" as Connection631
                connect Abs6.in Sum9.out as Connection632
                [
                    breakpoints = 8056, 8688
                ]
                connect "|V|2" Sum9.in as Connection634
                connect "Relational operator5.out" "Logical operator8.in1" as Connection635
                connect Constant11.out "Relational operator6.in" as Connection636
                connect "Relational operator6.in1" Abs7.out as Connection637
                connect "Relational operator6.out" "Logical operator8.in" as Connection638
                connect Sum10.out Abs7.in as Connection639
                connect w_e8 Gain13.in as Connection640
                connect Gain13.out Sum10.in1 as Connection641
                connect Constant1.out Junction81 as Connection642
                connect "Logical operator11.in1" "Logical operator9.out" as Connection998
                connect Junction81 Sum9.in1 as Connection643
                connect "Logical operator11.in" "Logical operator10.out" as Connection999
                connect Sum10.in Junction81 as Connection644
                connect Connect8 "Logical operator8.in2" as Connection990
                connect "Logical operator8.out" "Logical operator6.in1" as Connection991
                connect "Grid_Islanded ON.in" Junction109 as Connection1003
                [
                    breakpoints = 7632, 8408
                ]
                connect Junction113 "Logical operator11.out" as Connection1005
                connect "INV_sync ON.in" Junction113 as Connection1006
                connect "Grid_Islanded OFF.in" "Logical operator5.out" as Connection1011
                connect Connect11 Junction115 as Connection1012
                connect Junction115 Junction113 as Connection1013
                connect "Logical operator12.in" Junction115 as Connection1014
                connect "Logical operator12.out" "INV_sync OFF.in" as Connection1015
                connect "stay connected1.action" Junction116 as Connection1018
                connect Junction116 "Logical operator3.in" as Connection1019
                connect Junction117 Junction116 as Connection1022
                connect "GCB ON.in" Junction117 as Connection1023
                connect "stay connected1.connect" "Logical operator1.out" as Connection1032
                connect CB_status Junction119 as Connection1036
                connect Junction119 Junction117 as Connection1037
                connect "Logical operator7.in" Junction121 as Connection1187
                connect Junction121 Grid_Islanded.out as Connection1188
                connect "Logical operator9.in" Junction121 as Connection1189
                connect "Hold after connect2.out" Junction122 as Connection1196
                connect Junction122 "Logical operator7.in1" as Connection1197
                connect "Logical operator10.in" Junction122 as Connection1198
                connect From1 "Hold after connect2.in1" as Connection1199
                connect w_bus3 "Hold after connect2.in2" as Connection1200
                connect "stay connected1.disconnect" Junction123 as Connection1202
                [
                    breakpoints = 8256, 8152; 8128, 8152
                ]
                connect Junction123 Close_GCB as Connection1203
                [
                    breakpoints = 8016, 8152; 8016, 8152
                ]
                connect "Logical operator1.in" Junction124 as Connection1205
                connect Junction124 Junction123 as Connection1206
                connect Connect6 Junction124 as Connection1207
                connect Connect1 "Unit Delay2.out" as Connection1208
                connect "Unit Delay2.in" Junction119 as Connection1209
            }
            [
                position = 9200, 7768
                size = 176, 96
            ]

            component src_scada_input ref_ctrl {
                execution_rate = "Ts"
                format = "int"
                max = "1"
                min = "0"
                signal_type = "int"
                unit = ""
            }
            [
                position = 8264, 7528
            ]

            component gen_logic_op "Logical operator2" {
            }
            [
                position = 8352, 7552
                hide_name = True
            ]

            component gen_digital_probe "Digital Probe1" {
                override_signal_name = "True"
                signal_name = "ref_ctrl ON"
            }
            [
                position = 8496, 7552
                hide_name = True
            ]

            component gen_logic_op "Logical operator3" {
                inputs = "4"
                operator = "NOT"
            }
            [
                position = 8424, 7592
                rotation = right
                hide_name = True
            ]

            component gen_digital_probe "Digital Probe6" {
                override_signal_name = "True"
                signal_name = "ref_ctrl OFF"
            }
            [
                position = 8488, 7624
                hide_name = True
            ]

            port Vc {
                label = "Vc"
                position = top:3
                kind = pe
            }
            [
                position = 10232, 8096
                scale = -1, 1
            ]

            port Vb {
                label = "Vb"
                position = top:2
                kind = pe
            }
            [
                position = 10232, 8000
                scale = -1, 1
            ]

            port Ground {
                label = "Ground"
                position = bottom:4
                kind = pe
            }
            [
                position = 10248, 8688
                scale = -1, 1
            ]

            port Va {
                label = "Va"
                position = top:1
                kind = pe
            }
            [
                position = 10232, 7904
                scale = -1, 1
            ]

            port setpoint_P {
                position = right:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6744, 7368
                scale = -1, 1
            ]

            port setpoint_Q {
                position = right:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6888, 7368
            ]

            tag Goto39 {
                value = "Ib1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 7968
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto18 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6736, 8232
                hide_name = True
                size = 60, 20
            ]

            tag Goto31 {
                value = "Ic1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 8064
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto35 {
                value = "Xi_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8160
                scale = -1, 1
                size = 60, 20
            ]

            tag Vb_G {
                value = "VbG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9816, 8288
            ]

            tag Goto41 {
                value = "Ea1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8256, 8144
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto44 {
                value = "Xi_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8208
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto30 {
                value = "Ec1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8352, 8352
                scale = -1, 1
                size = 60, 20
            ]

            tag Vc_G {
                value = "VcG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9936, 8408
            ]

            tag From2 {
                value = "modulator1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6672, 7728
                hide_name = True
                size = 60, 20
            ]

            tag Goto38 {
                value = "Xi_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8256
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto33 {
                value = "E_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7776, 8480
                scale = -1, 1
                size = 60, 20
            ]

            tag Va_G {
                value = "VaG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9688, 8216
            ]

            tag Goto32 {
                value = "Ia1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 7872
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto40 {
                value = "Eb1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8320, 8256
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto42 {
                value = "E_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7648, 8432
                scale = -1, 1
                size = 60, 20
            ]

            tag From3 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6672, 7792
                hide_name = True
            ]

            tag Goto34 {
                value = "E_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7504, 8384
                scale = -1, 1
                size = 60, 20
            ]

            tag Connect6 {
                value = "ref_ctrl"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8496, 7504
                hide_name = True
            ]

            tag Connect7 {
                value = "Connected"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 8264, 7576
                hide_name = True
                size = 58, 20
            ]

            junction Junction173 pe
            [
                position = 8176, 8096
            ]

            junction Junction291 pe
            [
                position = 7088, 8688
            ]

            junction Junction160 pe
            [
                position = 8096, 8000
            ]

            junction Junction207 pe
            [
                position = 8096, 8688
            ]

            junction Junction192 pe
            [
                position = 8096, 8688
            ]

            junction Junction198 pe
            [
                position = 8096, 8688
            ]

            junction Junction216 pe
            [
                position = 8176, 8312
            ]

            junction Junction290 pe
            [
                position = 7168, 8688
            ]

            junction Junction284 sp
            [
                position = 8480, 8352
            ]

            junction Junction195 pe
            [
                position = 8096, 8688
            ]

            junction Junction215 pe
            [
                position = 8096, 8688
            ]

            junction Junction161 pe
            [
                position = 8016, 7904
            ]

            junction Junction292 pe
            [
                position = 8096, 8688
            ]

            junction Junction306 pe
            [
                position = 9616, 7904
            ]

            junction Junction307 pe
            [
                position = 9744, 8000
            ]

            junction Junction283 sp
            [
                position = 8368, 8256
            ]

            junction Junction308 pe
            [
                position = 9864, 8096
            ]

            junction Junction212 pe
            [
                position = 8096, 8688
            ]

            junction Junction194 pe
            [
                position = 8096, 8688
            ]

            junction Junction213 pe
            [
                position = 8096, 8304
            ]

            junction Junction199 pe
            [
                position = 8096, 8688
            ]

            junction Junction289 pe
            [
                position = 7600, 8688
            ]

            junction Junction311 sp
            [
                position = 8304, 8144
            ]

            junction Junction312 pe
            [
                position = 8016, 8296
            ]

            junction Junction313 pe
            [
                position = 8544, 8096
            ]

            junction Junction314 pe
            [
                position = 8464, 8000
            ]

            junction Junction315 pe
            [
                position = 8400, 7904
            ]

            junction Junction316 pe
            [
                position = 8544, 8688
            ]

            junction Junction317 pe
            [
                position = 9616, 8688
            ]

            junction Junction318 pe
            [
                position = 9744, 8688
            ]

            junction Junction319 pe
            [
                position = 9864, 8688
            ]

            junction Junction320 pe
            [
                position = 10056, 8688
            ]

            junction Junction321 pe
            [
                position = 10120, 8688
            ]

            junction Junction322 sp
            [
                position = 8424, 7552
            ]

            junction Junction323 sp
            [
                position = 8424, 7552
            ]

            connect Ea1.n_node Junction292 as Connection1069
            [
                breakpoints = 8400, 8224; 8240, 8224; 8240, 8304; 8240, 8688
            ]
            connect Xi_b1.out Goto44 as Connection374
            connect La1.p_node Ia1.p_node as Connection665
            connect Lgridc_1.p_node Rgridc_1.p_node as Connection1240
            connect Product1.in1 Gain1.out as Connection1073
            connect Vc_inv.n_node Junction290 as Connection1060
            connect Junction291 Junction290 as Connection1064
            [
                breakpoints = 7088, 8688; 7168, 8688
            ]
            connect "Bus Split1.out1" Vb_inv.in as Connection1071
            connect Eb_1.in Junction283 as Connection952
            connect S2.a_out Junction306 as Connection1268
            connect Rt0a1.n_node Junction161 as Connection366
            connect Ib1.n_node Lgridb_1.n_node as Connection1237
            connect Va2.n_node Junction289 as Connection1057
            connect R0b1.n_node L0b1.n_node as Connection385
            connect Lgrida_1.p_node Rgrida_1.p_node as Connection1236
            connect Junction207 Junction215 as Connection1222
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect Xi_a1.n_node Junction161 as Connection314
            connect Xi_b1.n_node Junction160 as Connection388
            connect Goto35 Xi_a1.out as Connection342
            connect Lgridb_1.p_node Rgridb_1.p_node as Connection1238
            connect Xi_c1.out Goto38 as Connection313
            connect Junction283 Eb1.out as Connection951
            connect setpoint_P Controller.U_P as Connection1289
            connect From3 Gain1.in as Connection1072
            connect Junction192 Junction194 as Connection459
            connect Constant1.out Goto18 as Connection1096
            connect Vc2.out Goto33 as Connection617
            [
                breakpoints = 7840, 8480; 7824, 8480
            ]
            connect Rgridc_1.n_node S2.c_in as Connection1243
            connect Junction213 Cb1.p_node as Connection613
            [
                breakpoints = 8096, 8304; 8096, 8304; 8096, 8304
            ]
            connect From2 Product1.in as Connection1074
            connect Ic1.out Goto31 as Connection668
            connect Va_inv.p_node R0a1.p_node as Connection1056
            connect Lc1.p_node Ic1.p_node as Connection663
            connect Rt0b1.n_node Junction160 as Connection351
            connect Junction194 Ca1.n_node as Connection597
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8544; 8016, 8544
            ]
            connect L0c1.p_node Xi_c1.p_node as Connection328
            connect Ic1.n_node Lgridc_1.n_node as Connection1239
            connect Va2.out Goto34 as Connection624
            connect VbG.p_node Junction307 as Connection1271
            connect Ia1.n_node Lgrida_1.n_node as Connection1235
            connect Vb Tr1.sec_2 as Connection1278
            connect Junction306 VaG.p_node as Connection1269
            [
                breakpoints = 9616, 7904
            ]
            connect R0c1.n_node L0c1.n_node as Connection330
            connect Junction195 Junction194 as Connection463
            connect Junction207 Junction198 as Connection574
            [
                breakpoints = 8096, 8688
            ]
            connect Cb1.n_node Junction212 as Connection602
            connect VbG.out Vb_G as Connection1126
            connect S2.c_out Junction308 as Connection1274
            connect Vb2.p_node Junction213 as Connection614
            [
                breakpoints = 7920, 8304; 8096, 8304
            ]
            connect "Bus Split1.out2" Vc_inv.in as Connection1053
            connect Tr1.prm_2 Junction307 as Connection1279
            connect Junction290 Junction289 as Connection1061
            [
                breakpoints = 7168, 8688; 7600, 8688
            ]
            connect Junction307 S2.b_out as Connection1272
            [
                breakpoints = 9744, 8000
            ]
            connect "Bus Split1.out" Va_inv.in as Connection1051
            connect Eb1.n_node Junction195 as Connection462
            connect Goto39 Ib1.out as Connection669
            connect Vc_inv.p_node R0c1.p_node as Connection1054
            connect Va_G VaG.out as Connection1125
            connect Vc2.p_node Junction216 as Connection627
            connect Va Tr1.sec_1 as Connection1280
            connect Lb1.p_node Ib1.p_node as Connection664
            connect Vc2.n_node Junction215 as Connection623
            connect Vb_inv.p_node R0b1.p_node as Connection1055
            connect Rc1.n_node Lc1.n_node as Connection399
            connect Goto40 Junction283 as Connection950
            connect L0a1.p_node Xi_a1.p_node as Connection378
            connect Vc Tr1.sec_3 as Connection1276
            connect Junction198 Junction199 as Connection537
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect Vb2.out Goto42 as Connection616
            connect Tr1.prm_1 Junction306 as Connection1281
            connect Xi_c1.n_node Junction173 as Connection304
            connect Junction212 Junction192 as Connection603
            connect Rt0c1.p_node Junction216 as Connection625
            [
                breakpoints = 8176, 8288
            ]
            connect Product1.out "Bus Split1.in" as Connection1075
            connect Vb_inv.n_node Junction291 as Connection1063
            connect Ec_1.in Junction284 as Connection956
            [
                breakpoints = 8480, 8384; 8480, 8352
            ]
            connect La1.n_node Ra1.n_node as Connection401
            connect Va_inv.n_node Junction291 as Connection1065
            [
                breakpoints = 7008, 8688; 7088, 8688
            ]
            connect L0b1.p_node Xi_b1.p_node as Connection372
            connect Junction308 VcG.p_node as Connection1275
            [
                breakpoints = 9864, 8096
            ]
            connect L0a1.n_node R0a1.n_node as Connection355
            connect Rgridb_1.n_node S2.b_in as Connection1242
            connect Ia1.out Goto32 as Connection666
            connect Junction289 Junction212 as Connection1058
            [
                breakpoints = 7600, 8688; 8096, 8688
            ]
            connect Rt0b1.p_node Junction213 as Connection612
            connect Rb1.n_node Lb1.n_node as Connection354
            connect Junction192 Junction292 as Connection1067
            connect Vb2.n_node Junction215 as Connection621
            connect Junction284 Ec1.out as Connection955
            [
                breakpoints = 8480, 8352; 8480, 8272
            ]
            connect Junction292 Cc1.n_node as Connection1068
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8544; 8176, 8544
            ]
            connect Goto30 Junction284 as Connection954
            connect Junction216 Cc1.p_node as Connection626
            [
                breakpoints = 8176, 8304; 8176, 8304; 8176, 8304
            ]
            connect Rgrida_1.n_node S2.a_in as Connection1241
            connect Vc_G VcG.out as Connection1127
            connect Rt0c1.n_node Junction173 as Connection327
            connect Junction198 Junction195 as Connection477
            [
                breakpoints = 8096, 8688; 8096, 8688
            ]
            connect Tr1.prm_3 Junction308 as Connection1277
            connect setpoint_Q Controller.U_Q as Connection1290
            connect Goto41 Junction311 as Connection1292
            connect Junction311 Ea1.out as Connection1293
            connect Ea_1.in Junction311 as Connection1294
            connect Rt0a1.p_node Junction312 as Connection1296
            connect Junction312 Ca1.p_node as Connection1297
            connect Va2.p_node Junction312 as Connection1298
            connect Ec1.p_node Junction313 as Connection1305
            connect Junction313 Junction173 as Connection1306
            [
                breakpoints = 8544, 8096; 8544, 8272; 8544, 8272
            ]
            connect Rc1.p_node Junction313 as Connection1307
            connect Junction160 Junction314 as Connection1308
            [
                breakpoints = 8096, 8000
            ]
            connect Junction314 Eb1.p_node as Connection1309
            [
                breakpoints = 8464, 8000
            ]
            connect Rb1.p_node Junction314 as Connection1310
            connect Ea1.p_node Junction315 as Connection1311
            connect Junction315 Junction161 as Connection1312
            [
                breakpoints = 8400, 7904; 8400, 7904; 8400, 7904
            ]
            connect Ra1.p_node Junction315 as Connection1313
            connect Ec1.n_node Junction316 as Connection1314
            connect Junction316 Junction207 as Connection1315
            [
                breakpoints = 8544, 8688; 8544, 8688; 8544, 8688; 8544, 8688; 8096, 8688; 8096, 8688
            ]
            connect Junction317 Junction316 as Connection1318
            connect VaG.n_node Junction317 as Connection1319
            connect Junction318 Junction317 as Connection1321
            connect VbG.n_node Junction318 as Connection1322
            connect Junction319 Junction318 as Connection1324
            connect VcG.n_node Junction319 as Connection1325
            connect Junction320 Junction319 as Connection1327
            connect Tr1.n1 Junction320 as Connection1328
            connect Ground Junction321 as Connection1329
            connect Junction321 Junction320 as Connection1330
            connect Tr1.n2 Junction321 as Connection1331
            connect "Connect GFM.out" CB_control.Close_GCB as Connection1050
            connect Connect7 "Logical operator2.in1" as Connection1333
            connect ref_ctrl.out "Logical operator2.in" as Connection1334
            connect "Digital Probe6.in" "Logical operator3.out" as Connection454
            connect "Logical operator2.out" Junction322 as Connection1336
            connect Junction322 "Digital Probe1.in" as Connection1337
            connect "Logical operator3.in" Junction323 as Connection1339
            connect Junction323 Junction322 as Connection1340
            connect Connect6 Junction323 as Connection1341
            connect CB_control.CB_status S2.ctrl_in as Connection1342

            Ki_PLL = "2"
            Kp_PLL = "5"
            L_o = "1e-4"
            PLL_max = "2*np.pi*63"
            PLL_min = "2*np.pi*57"
            maxV_pds = "5e-3"
            maxV_slip = "2e-3"
            maxw_pds = "8e-3"
            maxw_slip = "2e-3"
            minV_slip = "0.5e-4"
            minw_slip = "0.5e-3"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A grid-forming three-phase inverter with a frequency and voltage droop controller</p></body></html>"

                S {
                    label = "Rated Power (System)"
                    widget = edit
                    type = generic
                    default_value = "200e3"
                    unit = "VA"
                    group = "1. Three-phase Inverter"
                }

                S_i {
                    label = "Rated Power (Inverter)"
                    widget = edit
                    type = generic
                    default_value = "70e3"
                    group = "1. Three-phase Inverter"
                }

                V_ABC {
                    label = "Rated Phase Voltage (RMS)"
                    widget = edit
                    type = generic
                    default_value = "277/np.sqrt(3)"
                    unit = "V"
                    group = "1. Three-phase Inverter"
                }

                w_0 {
                    label = "Nominal Frequency"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*60"
                    unit = "rad/s"
                    group = "1. Three-phase Inverter"
                }

                Ts {
                    label = "Execution rate"
                    widget = edit
                    type = generic
                    default_value = "Ts_gen"
                    unit = "s"
                    group = "1. Three-phase Inverter"
                }

                R_i {
                    label = "Input Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.1"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_i {
                    label = "Input Inductance"
                    widget = edit
                    type = generic
                    default_value = "6e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R_s {
                    label = "Shunt Resistance"
                    widget = edit
                    type = generic
                    default_value = "15e-3"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                C_s {
                    label = "Shunt Capacitance"
                    widget = edit
                    type = generic
                    default_value = "150e-6"
                    unit = "F"
                    group = "2. LCL filter"
                }

                R_o {
                    label = "Output Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.03"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_o {
                    label = "Output Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.3e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R {
                    label = "Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.35"
                    unit = "Ω"
                    group = "3. Electrical Line"
                }

                L {
                    label = "Inductance"
                    widget = edit
                    type = generic
                    default_value = "1.5e-3"
                    unit = "H"
                    group = "3. Electrical Line"
                }

                Kp_I {
                    label = "Inner Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "10e-2"
                    group = "4. Cascaded Controller"
                }

                Ki_I {
                    label = "Inner Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "2e-2"
                    group = "4. Cascaded Controller"
                }

                Imax {
                    label = "Inner Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "1"
                    group = "4. Cascaded Controller"
                }

                Imin {
                    label = "Inner Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-1"
                    group = "4. Cascaded Controller"
                }

                Kp_V {
                    label = "Outer Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "30e-2"
                    group = "4. Cascaded Controller"
                }

                Ki_V {
                    label = "Outer Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "2"
                    group = "4. Cascaded Controller"
                }

                Vmax {
                    label = "Outer Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "0.35"
                    group = "4. Cascaded Controller"
                }

                Vmin {
                    label = "Outer Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-0.35"
                    group = "4. Cascaded Controller"
                }

                f_D {
                    label = "Frequency Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "3e-1"
                    unit = "%"
                    group = "5. Droop Control"
                }

                V_D {
                    label = "Voltage Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "5e-4"
                    unit = "%"
                    group = "5. Droop Control"
                }

                T_m {
                    label = "Measurement delay"
                    widget = edit
                    type = generic
                    default_value = "0.5"
                    unit = "s"
                    group = "5. Droop Control"
                }

                maxV_slip {
                    label = "Maximum slip (voltage)"
                    widget = edit
                    type = generic
                    default_value = "5e-3"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                minV_slip {
                    label = "Minimum slip (voltage)"
                    widget = edit
                    type = generic
                    default_value = "2.5e-3"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                maxw_slip {
                    label = "Maximum slip (frequency)"
                    widget = edit
                    type = generic
                    default_value = "10e-3"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                minw_slip {
                    label = "Minimum slip (frequency)"
                    widget = edit
                    type = generic
                    default_value = "5e-3"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                maxV_pds {
                    label = "Maximum difference signal (voltage)"
                    widget = edit
                    type = generic
                    default_value = "1e-2"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                maxw_pds {
                    label = "Maximum difference signal (frequency)"
                    widget = edit
                    type = generic
                    default_value = "5e-1"
                    unit = "pu"
                    group = "6. Automatic Synchronizer"
                }

                Kp_PLL {
                    label = "Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "0"
                    group = "7. Phase Locked Loop"
                }

                Ki_PLL {
                    label = "Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "0"
                    group = "7. Phase Locked Loop"
                }

                PLL_max {
                    label = "Saturation Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "0"
                    group = "7. Phase Locked Loop"
                }

                PLL_min {
                    label = "Saturation Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "0"
                    group = "7. Phase Locked Loop"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    S_i = mdl.get_property_value(mdl.prop(item_handle, "S_i"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    maxV_slip = mdl.get_property_value(mdl.prop(item_handle, "maxV_slip"))
                    minV_slip = mdl.get_property_value(mdl.prop(item_handle, "minV_slip"))
                    maxw_slip = mdl.get_property_value(mdl.prop(item_handle, "maxw_slip"))
                    minw_slip = mdl.get_property_value(mdl.prop(item_handle, "minw_slip"))
                    maxV_pds = mdl.get_property_value(mdl.prop(item_handle, "maxV_pds"))
                    maxw_pds = mdl.get_property_value(mdl.prop(item_handle, "maxw_pds"))
                    Kp_PLL = mdl.get_property_value(mdl.prop(item_handle, "Kp_PLL"))
                    Ki_PLL = mdl.get_property_value(mdl.prop(item_handle, "Ki_PLL"))
                    PLL_max = mdl.get_property_value(mdl.prop(item_handle, "PLL_max"))
                    PLL_min = mdl.get_property_value(mdl.prop(item_handle, "PLL_min"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    Z_DQ = V_DQ/I_DQ
                    C_DQ = 1/(Z_DQ*w_0)
                    L_DQ = Z_DQ/w_0
                    
                    Rs = R_s/Z_DQ
                    Cs = C_s/C_DQ
                    Li = L_i/L_DQ
                    
                    mP = w_0*(f_D/100)
                    nQ = V_DQ*(V_D/100)
                    D_f = 1/mP
                    D_V = 1/nQ
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, 'grid_forming_inverter.svg')
                ENDCODE

                CODE pre_compile
                    # HEADER START
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    S_i = mdl.get_property_value(mdl.prop(item_handle, "S_i"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    maxV_slip = mdl.get_property_value(mdl.prop(item_handle, "maxV_slip"))
                    minV_slip = mdl.get_property_value(mdl.prop(item_handle, "minV_slip"))
                    maxw_slip = mdl.get_property_value(mdl.prop(item_handle, "maxw_slip"))
                    minw_slip = mdl.get_property_value(mdl.prop(item_handle, "minw_slip"))
                    maxV_pds = mdl.get_property_value(mdl.prop(item_handle, "maxV_pds"))
                    maxw_pds = mdl.get_property_value(mdl.prop(item_handle, "maxw_pds"))
                    Kp_PLL = mdl.get_property_value(mdl.prop(item_handle, "Kp_PLL"))
                    Ki_PLL = mdl.get_property_value(mdl.prop(item_handle, "Ki_PLL"))
                    PLL_max = mdl.get_property_value(mdl.prop(item_handle, "PLL_max"))
                    PLL_min = mdl.get_property_value(mdl.prop(item_handle, "PLL_min"))
                    # HEADER STOP
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    mP = w_0*(f_D/100)
                    nQ = V_DQ*(V_D/100)
                    D_f = 1/mP
                    D_V = 1/nQ
                ENDCODE
            }
        }
        [
            position = 6656, 8152
            size = 168, 112
        ]

        tag V_d_a {
            value = "VbG"
            scope = masked_subsystem
            kind = sp
            direction = out
        }
        [
            position = 7776, 8112
            hide_name = True
            scale = -1, 1
        ]

        tag V_q_a {
            value = "VaG"
            scope = masked_subsystem
            kind = sp
            direction = out
        }
        [
            position = 7880, 8064
            hide_name = True
            scale = -1, 1
        ]

        tag V_d_a2 {
            value = "VcG"
            scope = masked_subsystem
            kind = sp
            direction = out
        }
        [
            position = 7672, 8160
            hide_name = True
            scale = -1, 1
        ]

        tag V_d_a1 {
            value = "VbG"
            scope = masked_subsystem
            kind = sp
            direction = in
        }
        [
            position = 8032, 8192
            hide_name = True
        ]

        tag V_q_a1 {
            value = "VaG"
            scope = masked_subsystem
            kind = sp
            direction = in
        }
        [
            position = 8032, 8144
            hide_name = True
        ]

        tag V_q_a2 {
            value = "VcG"
            scope = masked_subsystem
            kind = sp
            direction = in
        }
        [
            position = 8032, 8240
            hide_name = True
        ]

        junction Junction58 pe
        [
            position = 7136, 7960
        ]

        junction Junction59 pe
        [
            position = 7168, 7976
        ]

        junction Junction60 pe
        [
            position = 7200, 7992
        ]

        junction Junction61 pe
        [
            position = 7816, 8296
        ]

        junction Junction63 pe
        [
            position = 7608, 8296
        ]

        junction Junction64 pe
        [
            position = 7712, 8296
        ]

        junction Junction65 pe
        [
            position = 7168, 8296
        ]

        connect V_q_a Va_G.in as Connection312
        connect V_d_a Vb_G.in as Connection313
        connect V_d_a2 Vc_G.in as Connection314
        connect RL2.P3 Vb_G.p_node as Connection509
        connect RL2.P5 Vc_G.p_node as Connection538
        [
            breakpoints = 7544, 8000; 7544, 8032; 7608, 8032
        ]
        connect RL2.P1 Va_G.p_node as Connection539
        [
            breakpoints = 7544, 7960; 7544, 7920; 7816, 7920
        ]
        connect V_q_a1 Gain3.out as Connection315
        connect "Sinusoidal Source1.out" Gain3.in as Connection328
        connect Gain4.in "Sinusoidal Source3.out" as Connection789
        connect "Sinusoidal Source2.out" Gain5.in as Connection790
        connect Gain5.out V_d_a1 as Connection791
        connect Gain4.out V_q_a2 as Connection792
        connect RL1.P1 Junction58 as Connection796
        connect Junction58 RL2.P2 as Connection797
        connect "Constant Impedance Load1.A" Junction58 as Connection798
        connect RL1.P3 Junction59 as Connection799
        connect Junction59 RL2.P4 as Connection800
        connect "Constant Impedance Load1.B" Junction59 as Connection801
        connect RL2.P6 Junction60 as Connection802
        connect Junction60 RL1.P5 as Connection803
        connect "Constant Impedance Load1.C" Junction60 as Connection804
        connect Va_G.n_node Junction61 as Connection818
        connect gnd1.node Junction61 as Connection820
        connect Vc_G.n_node Junction63 as Connection826
        connect Junction61 Junction64 as Connection827
        [
            breakpoints = 7744, 8296
        ]
        connect Junction64 Junction63 as Connection828
        connect Vb_G.n_node Junction64 as Connection829
        connect Pref.out "Grid forming inverter (averaged).setpoint_P" as Connection853
        connect Qref.out "Grid forming inverter (averaged).setpoint_Q" as Connection854
        connect "Constant Impedance Load1.N" Junction65 as Connection855
        connect Junction65 Junction63 as Connection856
        [
            breakpoints = 7168, 8296; 7168, 8296; 7168, 8296; 7168, 8296; 7608, 8296
        ]
        connect "Grid forming inverter (averaged).Ground" Junction65 as Connection857
        connect "Grid forming inverter (averaged).Va" RL1.P2 as Connection858
        connect "Grid forming inverter (averaged).Vb" RL1.P4 as Connection859
        connect "Grid forming inverter (averaged).Vc" RL1.P6 as Connection860
    }

    default {
        gen_abs {
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_math_fnc {
            mathematical_fn = "exponential"
            execution_rate = "inherit"
        }

        gen_pid_controller {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            upper_sat_lim = "1"
            lower_sat_lim = "-1"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_rate_limiter {
            rising_limit = "1"
            falling_limit = "-1"
            execution_rate = "inherit"
        }

        gen_rel_op {
            relational_op = "=="
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_trigonometric {
            trigonometric_fn = "sin"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        src_sine {
            amplitude = "1"
            dc_offset = "0"
            frequency = "50"
            phase = "0"
            execution_rate = "100e-6"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        "core/Constant Impedance Load" {
            fn = "60"
            conn_type = "Y"
            enable_neutral = "False"
            set_balanced = "True"
            Vn_3ph = "480"
            Sn_3ph = "1.0e6"
            pf_mode_3ph = "Unit"
            pf_3ph = "0.9"
            VAn = "480/(3**0.5)"
            VAB = "480"
            SAn = "1.0e6/3"
            SAB = "1.0e6/3"
            pf_modeA = "Unit"
            pfA = "0.9"
            VBn = "480/(3**0.5)"
            VBC = "480"
            SBn = "1.0e6/3"
            SBC = "1.0e6/3"
            pf_modeB = "Unit"
            pfB = "0.9"
            VCn = "480/(3**0.5)"
            VCA = "480"
            SCn = "1.0e6/3"
            SCA = "1.0e6/3"
            pf_modeC = "Unit"
            pfC = "0.9"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/RL Section" {
            model_def = "R-L"
            unit_sys = "imperial"
            num_of_phases = "3"
            resistance_per_l = "1"
            resistance_per_l_mile = "1"
            inductance_per_l = "1e-3"
            inductance_per_l_mile = "1e-3"
            length = "1.0"
            length_mile = "1.0"
            power = "500.0"
            voltage = "11.0"
            frequency = "50.0"
            R_value = "21.55"
            L_value = "0.00842"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            core_sat = "False"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            ioc1 = "0.7"
            Poc1 = "460.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[1910.3, 2419.7]"
            current_vals_SI = "[0.66653, 277.72]"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[1.2, 1.52]"
            current_vals_pu = "[0.0024, 1]"
            flux_vals_SCOC = "[1.2, 1.52]"
            current_vals_SCOC = "[0.0024, 1]"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "false"
            coupling_type = "core"
            Rshunt = "inf"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/abc to dq" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "True"
            initial_filter_output = "0"
            wn_LPFdq = "1000"
            execution_rate = "inherit"
        }

        "core/dq to abc" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            execution_rate = "0"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        # The Schematic API is imported as 'mdl'
        # To get the model file path, use 'mdl.get_model_file_path()'
        # To print information to the console, use info()
        Ts = 20e-6
    ENDCODE
}
