version = 4.2

//
// Saved by sw version: 2020.1 SP2
// Save timestamp: 27-Jun-2020 @ 03:45:52 PM
//

model "6node_radial" {
    configuration {
        hil_device = "HIL603"
        hil_configuration_id = 1
        simulation_method = exact
        simulation_time_step = 2e-6
        simulation_discret_scaling = 1.0
        dsp_timer_periods = 100e-6, 50e-3
        ss_calc_method = "systematic elimination"
        enb_pole_shift = True
        enb_gds_oversampling = True
        show_modes = False
        device_ao_limit_enable = True
        cpl_stb = True
        enb_dep_sw_detect = False
        code_section = "internal memory"
        data_section = "internal memory"
        sys_sp_rate_1 = 0.0001
        sys_sp_rate_2 = 0.05
        sys_real_type_precision = "default"
        user_real_type_precision = "default"
        sys_cpu_optimization = "high"
        user_cpu_optimization = "high"
    }

    component Subsystem Root {
        component src_ground gnd2 {
        }
        [
            position = 8600, 7744
        ]

        component src_clock Clock1 {
            execution_rate = "Ts"
        }
        [
            position = 7496, 7216
            hide_name = True
        ]

        component gen_probe Timer {
        }
        [
            position = 7576, 7216
        ]

        component Subsystem measurement1 {
            layout = dynamic
            component Subsystem "Three-phase Meter1" {
                layout = dynamic
                component "core/Three-phase RMS variable frequency" VLn_RMS_calc {
                    Ts = "Ts"
                }
                [
                    position = 6424, 7280
                    size = 144, 184
                ]

                component gen_gain gainVLn_RMS {
                    gain = "1/3"
                }
                [
                    position = 7016, 7576
                ]

                component "core/Voltage Measurement" VCn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6576, 8120
                    rotation = right
                    size = 64, 32
                ]

                component gen_probe POWER_S {
                }
                [
                    position = 7120, 8248
                ]

                component gen_probe Freq {
                }
                [
                    position = 7120, 7952
                ]

                component gen_PQ_transform "Power Meter" {
                }
                [
                    position = 7624, 7528
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6136, 7872
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VBn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6472, 8016
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6128, 8064
                    size = 64, 32
                ]

                component gen_terminator TRMpac {
                }
                [
                    position = 7816, 7488
                    rotation = left
                ]

                component gen_sum sumVLn_RMS {
                    signs = "3"
                }
                [
                    position = 6888, 7576
                ]

                component gen_terminator TRMqac {
                }
                [
                    position = 7816, 7568
                    rotation = right
                ]

                component gen_probe POWER_PF {
                }
                [
                    position = 7120, 8328
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6136, 7968
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VAn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6368, 7920
                    rotation = right
                    size = 64, 32
                ]

                component gen_probe VLn_RMS {
                }
                [
                    position = 7120, 8016
                ]

                component gen_probe POWER_P {
                }
                [
                    position = 7144, 8104
                ]

                component gen_probe POWER_Q {
                }
                [
                    position = 7144, 8184
                ]

                component gen_gain Gain2 {
                    gain = "1/1e3"
                }
                [
                    position = 7072, 8184
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    gain = "1/1e3"
                }
                [
                    position = 7072, 8104
                    hide_name = True
                ]

                component Subsystem "Phase locked loop" {
                    layout = dynamic
                    component gen_gain Gain4 {
                        gain = "1/(2*np.pi)"
                    }
                    [
                        position = 8312, 8184
                        hide_name = True
                    ]

                    component tm_delay "Unit Delay1" {
                    }
                    [
                        position = 8416, 8192
                        rotation = right
                        hide_name = True
                    ]

                    component gen_gain Gain3 {
                        gain = "-1"
                    }
                    [
                        position = 8120, 8160
                        hide_name = True
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 8008, 8160
                        size = 48, 80
                    ]

                    component Subsystem PLL1 {
                        layout = dynamic
                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            int_init_value = "2*np.pi*60"
                            ki = "2"
                            lower_sat_lim = "2*np.pi*57"
                            upper_sat_lim = "2*np.pi*63"
                        }
                        [
                            position = 8192, 8152
                            hide_name = True
                        ]

                        component gen_c_function "confine phase" {
                            global_variables = "real x;real floor_in;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        }
                        [
                            position = 8408, 8152
                            size = 56, 48
                        ]

                        component gen_c_function "C function1" {
                            global_variables = "real var;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                            parameters = "real Ts;"
                            update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                        }
                        [
                            position = 8304, 8152
                            hide_name = True
                            size = 80, 48
                        ]

                        component gen_gain Gain1 {
                            gain = "-1"
                        }
                        [
                            position = 8128, 8152
                            hide_name = True
                        ]

                        port q {
                            label = "q"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8064, 8152
                        ]

                        port w {
                            label = "w"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8208
                        ]

                        port wt {
                            label = "wt"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8496, 8152
                        ]

                        junction Junction1 sp
                        [
                            position = 8240, 8152
                        ]

                        connect w Junction1 as Connection19
                        connect "confine phase.in" "C function1.out" as Connection16
                        connect Junction1 "PID controller1.out" as Connection18
                        connect wt "confine phase.out" as Connection14
                        connect q Gain1.in as Connection8
                        connect "C function1.in" Junction1 as Connection17
                        connect Gain1.out "PID controller1.in" as Connection9
                    }
                    [
                        position = 8216, 8160
                        size = 96, 56
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8080, 8192
                        hide_name = True
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8120, 8128
                        hide_name = True
                    ]

                    port f {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8376, 8184
                    ]

                    port Vb {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7888, 8104
                    ]

                    port Va {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7912, 8040
                    ]

                    port Vc {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8184
                    ]

                    connect "Unit Delay1.out" "abc to dq1.wt" as Connection24
                    [
                        breakpoints = 8416, 8224; 8416, 8256; 7968, 8256
                    ]
                    connect "abc to dq1.vc" Vc as Connection1050
                    connect "Unit Delay1.in" PLL1.wt as Connection1047
                    [
                        breakpoints = 8416, 8144; 8416, 8136; 8288, 8136
                    ]
                    connect Gain4.out f as Connection1054
                    connect "abc to dq1.d_axis" Termination2.in as Connection1048
                    connect "abc to dq1.vb" Vb as Connection1049
                    connect PLL1.w Gain4.in as Connection1053
                    connect "abc to dq1.va" Va as Connection1052
                    connect Gain3.out PLL1.q as Connection181
                    [
                        breakpoints = 8152, 8160
                    ]
                    connect Termination1.in "abc to dq1.zero_axis" as Connection29
                    connect Gain3.in "abc to dq1.q_axis" as Connection18
                }
                [
                    position = 6000, 7592
                    size = 96, 168
                ]

                port C+ {
                    position = left:3
                    kind = pe
                }
                [
                    position = 5880, 8064
                ]

                port B+ {
                    position = left:2
                    kind = pe
                }
                [
                    position = 5880, 7968
                ]

                port B- {
                    position = right:2
                    kind = pe
                }
                [
                    position = 6664, 7968
                    rotation = down
                ]

                port C- {
                    position = right:3
                    kind = pe
                }
                [
                    position = 6664, 8064
                    rotation = down
                ]

                port A+ {
                    position = left:1
                    kind = pe
                }
                [
                    position = 5880, 7872
                ]

                port A- {
                    position = right:1
                    kind = pe
                }
                [
                    position = 6664, 7872
                    rotation = down
                ]

                port Ground {
                    position = bottom:4
                    kind = pe
                }
                [
                    position = 5880, 8176
                ]

                port "|V|" {
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7144, 7656
                ]

                tag GoToP {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7704, 7408
                    rotation = left
                ]

                tag GoToVAnRMS {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6552, 7232
                ]

                tag fromVAn3 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7520, 7392
                    rotation = right
                ]

                tag fromVAn2 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6296, 7208
                ]

                tag fromFreqVLn_RMS {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6296, 7352
                ]

                tag GoToVAn {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6432, 7920
                    size = 0, 0
                ]

                tag GoToIB {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6192, 7928
                    size = 0, 0
                ]

                tag fromVAn1 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 5864, 7528
                ]

                tag fromVCn3 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7472, 7472
                    rotation = right
                ]

                tag fromIA3 {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7472, 7696
                    rotation = left
                ]

                tag fromVCnRMS3 {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6760, 7624
                ]

                tag GoToVCn {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6640, 8120
                    size = 0, 0
                ]

                tag GoToS {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7728, 7664
                    rotation = right
                ]

                tag fromVCn2 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6296, 7304
                ]

                tag fromVBn1 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 5864, 7592
                ]

                tag GoToVBnRMS {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6552, 7280
                ]

                tag GoToVBn {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6536, 8016
                    size = 0, 0
                ]

                tag GoToQ {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7728, 7448
                    rotation = left
                ]

                tag fromS4 {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7016, 8248
                    size = 0, 0
                ]

                tag fromVBnRMS3 {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6760, 7576
                ]

                tag GoToIA {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6192, 7832
                    size = 0, 0
                ]

                tag fromPF4 {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7016, 8328
                    size = 0, 0
                ]

                tag GoToPF {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7704, 7624
                    rotation = right
                ]

                tag GoToIC {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6192, 8024
                    size = 0, 0
                ]

                tag fromIB3 {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7496, 7656
                    rotation = left
                ]

                tag GoToVLn_RMS {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7144, 7576
                ]

                tag fromFreq4 {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7008, 7952
                    size = 0, 0
                ]

                tag fromVBn2 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6296, 7256
                ]

                tag fromIC3 {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7520, 7616
                    rotation = left
                ]

                tag fromVBn3 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7496, 7432
                    rotation = right
                ]

                tag GoToVCnRMS {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6552, 7328
                ]

                tag fromVAnRMS3 {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6760, 7528
                ]

                tag fromVLn_RMS4 {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7008, 8016
                    size = 0, 0
                ]

                tag fromVCn1 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 5864, 7656
                ]

                tag fromQ4 {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6984, 8184
                    size = 0, 0
                ]

                tag fromP4 {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6984, 8104
                    size = 0, 0
                ]

                tag GoToFreq {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6152, 7592
                ]

                junction Junction8 pe
                [
                    position = 6576, 8064
                ]

                junction Junction2 pe
                [
                    position = 6368, 8176
                ]

                junction Junction4 pe
                [
                    position = 6472, 8176
                ]

                junction Junction9 pe
                [
                    position = 6472, 7968
                ]

                junction Junction10 pe
                [
                    position = 6368, 7872
                ]

                junction Junction11 sp
                [
                    position = 7072, 7576
                ]

                connect fromVAn3 "Power Meter.va" as ConnVAPM
                connect fromVCnRMS3 sumVLn_RMS.in2 as ConnVCnRMS3
                connect IA.p_node A+ as Connection1042
                connect GoToVCnRMS VLn_RMS_calc.RMSc as ConnVCnRMS1
                connect VCn.n_node Junction4 as Connection968
                [
                    breakpoints = 6504, 8176
                ]
                connect fromVLn_RMS4 VLn_RMS.in as ConnVLn_RMSprobe
                connect Junction8 C- as Connection1030
                [
                    breakpoints = 6576, 8064
                ]
                connect fromVBn3 "Power Meter.vb" as ConnVBPM
                connect fromVAnRMS3 sumVLn_RMS.in as ConnVAnRMS3
                connect VAn.p_node Junction10 as Connection1039
                connect fromVAn2 VLn_RMS_calc.A as ConnVAnRMS
                connect VLn_RMS_calc.RMSb GoToVBnRMS as ConnVBnRMS1
                connect IA.out GoToIA as ConnIASP
                connect fromIC3 "Power Meter.ic" as ConnICPM
                connect fromFreq4 Freq.in as ConnFreqprobe
                connect VBn.n_node Junction4 as Connection956
                connect IC.n_node Junction8 as Connection1031
                connect GoToVAn VAn.out as Connection965
                connect VLn_RMS_calc.B fromVBn2 as ConnVBnRMS
                connect fromVCn3 "Power Meter.vc" as ConnVCPM
                connect GoToVCn VCn.out as Connection963
                connect Junction2 Junction4 as Connection954
                connect fromIB3 "Power Meter.ib" as ConnIBPM
                connect "Power Meter.Qdc" GoToQ as ConnPMQdc
                connect VAn.n_node Junction2 as Connection950
                connect fromFreqVLn_RMS VLn_RMS_calc.Freq as ConnFVLn_RMS
                connect GoToVBn VBn.out as Connection964
                connect "Power Meter.k_factor" GoToPF as ConnPMPF
                connect IA.n_node Junction10 as Connection1041
                connect "Power Meter.apparent" GoToS as ConnPMS
                connect Junction10 A- as Connection1040
                [
                    breakpoints = 6368, 7872
                ]
                connect IB.p_node B+ as Connection1037
                connect VBn.p_node Junction9 as Connection1034
                connect fromVBnRMS3 sumVLn_RMS.in1 as ConnVBnRMS3
                connect "Power Meter.Pdc" GoToP as ConnPMPdc
                connect IC.p_node C+ as Connection1032
                connect IB.out GoToIB as ConnIBSP
                connect Junction9 B- as Connection1035
                [
                    breakpoints = 6472, 7968
                ]
                connect VCn.p_node Junction8 as Connection1029
                connect Junction2 Ground as Connection1027
                [
                    breakpoints = 6368, 8176; 6128, 8176; 6128, 8176; 6032, 8176; 5952, 8176
                ]
                connect VLn_RMS_calc.C fromVCn2 as ConnVCnRMS
                connect "Power Meter.Qac" TRMqac.in as ConnPMQac
                connect fromPF4 POWER_PF.in as ConnPFprobe
                connect GoToVAnRMS VLn_RMS_calc.RMSa as ConnVAnRMS1
                connect IC.out GoToIC as ConnICSP
                connect IB.n_node Junction9 as Connection1036
                connect "Power Meter.Pac" TRMpac.in as ConnPMPac
                connect fromS4 POWER_S.in as ConnSprobe
                connect sumVLn_RMS.out gainVLn_RMS.in as ConnVLn_RMS1
                connect fromIA3 "Power Meter.ia" as ConnIAPM
                connect Gain1.out POWER_P.in as Connection1044
                connect Gain2.out POWER_Q.in as Connection1046
                connect fromP4 Gain1.in as Connection1043
                connect fromQ4 Gain2.in as Connection1045
                connect "Phase locked loop.f" GoToFreq as Connection1050
                connect fromVAn1 "Phase locked loop.Va" as Connection1051
                connect fromVBn1 "Phase locked loop.Vb" as Connection1052
                connect fromVCn1 "Phase locked loop.Vc" as Connection1053
                connect gainVLn_RMS.out Junction11 as Connection1054
                connect Junction11 GoToVLn_RMS as Connection1055
                connect "|V|" Junction11 as Connection1056
            }
            [
                position = 8128, 8128
                size = 64, 232
            ]

            component gen_gain Gain1 {
                gain = "1/480"
            }
            [
                position = 8176, 7944
            ]

            component gen_c_function Violation {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "V inherit"
                in_terminal_labels = "[(\'V\', True)]"
                in_terminal_properties = "real V;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "violation inherit"
                out_terminal_labels = "[(\'violation\', True)]"
                out_terminal_properties = "real violation;"
                output_fnc = "/*Begin code section*/
if (V>1.05)
    violation = 1.05-V;
else if (V<0.95)
    violation = V - 0.95;
else
    violation = 0;
/*End code section*/"
            }
            [
                position = 8304, 7944
                size = 120, 48
            ]

            port Vc+ {
                position = left:1
                kind = pe
            }
            [
                position = 8024, 8224
            ]

            port Va+ {
                position = left:3
                kind = pe
            }
            [
                position = 8024, 8032
            ]

            port Vb+ {
                position = left:2
                kind = pe
            }
            [
                position = 8024, 8128
            ]

            port ground {
                position = top:1
                kind = pe
            }
            [
                position = 8376, 8312
                scale = -1, 1
            ]

            port Va- {
                position = right:3
                kind = pe
            }
            [
                position = 8264, 8032
                scale = -1, 1
            ]

            port Vb- {
                position = right:2
                kind = pe
            }
            [
                position = 8264, 8128
                scale = -1, 1
            ]

            port Vc- {
                position = right:1
                kind = pe
            }
            [
                position = 8264, 8224
                scale = -1, 1
            ]

            port V_dev {
                position = bottom:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8432, 7944
            ]

            connect Va+ "Three-phase Meter1.A+" as Connection1
            connect Vb+ "Three-phase Meter1.B+" as Connection2
            connect Vc+ "Three-phase Meter1.C+" as Connection3
            connect "Three-phase Meter1.Ground" ground as Connection4
            connect "Three-phase Meter1.C-" Vc- as Connection5
            connect Vb- "Three-phase Meter1.B-" as Connection6
            connect "Three-phase Meter1.A-" Va- as Connection7
            connect V_dev Violation.violation as Connection10
            connect Violation.V Gain1.out as Connection11
            connect "Three-phase Meter1.|V|" Gain1.in as Connection12
        }
        [
            position = 7208, 7528
            scale = 1, -1
            size = 80, 64
        ]

        component Subsystem measurement2 {
            layout = dynamic
            component Subsystem "Three-phase Meter2" {
                layout = dynamic
                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6472, 8128
                    size = 64, 32
                ]

                component gen_probe POWER_S {
                }
                [
                    position = 7456, 8504
                ]

                component gen_probe Freq {
                }
                [
                    position = 7456, 8208
                ]

                component "core/Voltage Measurement" VBn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6808, 8272
                    rotation = right
                    size = 64, 32
                ]

                component gen_terminator TRMqac {
                }
                [
                    position = 8152, 7824
                    rotation = right
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6464, 8320
                    size = 64, 32
                ]

                component gen_terminator TRMpac {
                }
                [
                    position = 8152, 7744
                    rotation = left
                ]

                component gen_sum sumVLn_RMS {
                    signs = "3"
                }
                [
                    position = 7224, 7832
                ]

                component gen_probe POWER_PF {
                }
                [
                    position = 7456, 8584
                ]

                component gen_probe POWER_P {
                }
                [
                    position = 7512, 8344
                ]

                component "core/Three-phase RMS variable frequency" VLn_RMS_calc {
                    Ts = "Ts"
                }
                [
                    position = 6760, 7536
                    size = 144, 184
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6472, 8224
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VAn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6704, 8176
                    rotation = right
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VCn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6912, 8376
                    rotation = right
                    size = 64, 32
                ]

                component gen_probe VLn_RMS {
                }
                [
                    position = 7456, 8272
                ]

                component gen_probe POWER_Q {
                }
                [
                    position = 7512, 8424
                ]

                component gen_PQ_transform "Power Meter" {
                }
                [
                    position = 7960, 7784
                ]

                component gen_gain gainVLn_RMS {
                    gain = "1/3"
                }
                [
                    position = 7352, 7832
                ]

                component gen_gain Gain1 {
                    gain = "1/1e3"
                }
                [
                    position = 7440, 8344
                    hide_name = True
                ]

                component gen_gain Gain2 {
                    gain = "1/1e3"
                }
                [
                    position = 7440, 8424
                    hide_name = True
                ]

                component Subsystem "Phase locked loop" {
                    layout = dynamic
                    component gen_gain Gain4 {
                        gain = "1/(2*np.pi)"
                    }
                    [
                        position = 8312, 8184
                        hide_name = True
                    ]

                    component tm_delay "Unit Delay1" {
                    }
                    [
                        position = 8416, 8192
                        rotation = right
                        hide_name = True
                    ]

                    component gen_gain Gain3 {
                        gain = "-1"
                    }
                    [
                        position = 8120, 8160
                        hide_name = True
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 8008, 8160
                        size = 48, 80
                    ]

                    component Subsystem PLL1 {
                        layout = dynamic
                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            int_init_value = "2*np.pi*60"
                            ki = "2"
                            lower_sat_lim = "2*np.pi*57"
                            upper_sat_lim = "2*np.pi*63"
                        }
                        [
                            position = 8192, 8152
                            hide_name = True
                        ]

                        component gen_c_function "confine phase" {
                            global_variables = "real x;real floor_in;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        }
                        [
                            position = 8408, 8152
                            size = 56, 48
                        ]

                        component gen_c_function "C function1" {
                            global_variables = "real var;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                            parameters = "real Ts;"
                            update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                        }
                        [
                            position = 8304, 8152
                            hide_name = True
                            size = 80, 48
                        ]

                        component gen_gain Gain1 {
                            gain = "-1"
                        }
                        [
                            position = 8128, 8152
                            hide_name = True
                        ]

                        port q {
                            label = "q"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8064, 8152
                        ]

                        port w {
                            label = "w"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8208
                        ]

                        port wt {
                            label = "wt"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8496, 8152
                        ]

                        junction Junction1 sp
                        [
                            position = 8240, 8152
                        ]

                        connect w Junction1 as Connection19
                        connect "confine phase.in" "C function1.out" as Connection16
                        connect Junction1 "PID controller1.out" as Connection18
                        connect wt "confine phase.out" as Connection14
                        connect q Gain1.in as Connection8
                        connect "C function1.in" Junction1 as Connection17
                        connect Gain1.out "PID controller1.in" as Connection9
                    }
                    [
                        position = 8216, 8160
                        size = 96, 56
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8080, 8192
                        hide_name = True
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8120, 8128
                        hide_name = True
                    ]

                    port f {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8376, 8184
                    ]

                    port Vb {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7888, 8104
                    ]

                    port Va {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7912, 8040
                    ]

                    port Vc {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8184
                    ]

                    connect "Unit Delay1.out" "abc to dq1.wt" as Connection24
                    [
                        breakpoints = 8416, 8224; 8416, 8256; 7968, 8256
                    ]
                    connect "abc to dq1.vc" Vc as Connection1050
                    connect "Unit Delay1.in" PLL1.wt as Connection1047
                    [
                        breakpoints = 8416, 8144; 8416, 8136; 8288, 8136
                    ]
                    connect Gain4.out f as Connection1054
                    connect "abc to dq1.d_axis" Termination2.in as Connection1048
                    connect "abc to dq1.vb" Vb as Connection1049
                    connect PLL1.w Gain4.in as Connection1053
                    connect "abc to dq1.va" Va as Connection1052
                    connect Gain3.out PLL1.q as Connection181
                    [
                        breakpoints = 8152, 8160
                    ]
                    connect Termination1.in "abc to dq1.zero_axis" as Connection29
                    connect Gain3.in "abc to dq1.q_axis" as Connection18
                }
                [
                    position = 6328, 7848
                    size = 96, 168
                ]

                port A- {
                    position = right:1
                    kind = pe
                }
                [
                    position = 7000, 8128
                    rotation = down
                ]

                port C- {
                    position = right:3
                    kind = pe
                }
                [
                    position = 7000, 8320
                    rotation = down
                ]

                port A+ {
                    position = left:1
                    kind = pe
                }
                [
                    position = 6216, 8128
                ]

                port B+ {
                    position = left:2
                    kind = pe
                }
                [
                    position = 6216, 8224
                ]

                port Ground {
                    position = bottom:4
                    kind = pe
                }
                [
                    position = 6216, 8432
                ]

                port C+ {
                    position = left:3
                    kind = pe
                }
                [
                    position = 6216, 8320
                ]

                port B- {
                    position = right:2
                    kind = pe
                }
                [
                    position = 7000, 8224
                    rotation = down
                ]

                port "|V|" {
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7472, 7928
                ]

                tag GoToVBnRMS {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6888, 7536
                ]

                tag GoToPF {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8040, 7880
                    rotation = right
                ]

                tag GoToIC {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6528, 8280
                    size = 0, 0
                ]

                tag GoToQ {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8064, 7704
                    rotation = left
                ]

                tag fromVBn1 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6200, 7848
                ]

                tag GoToVLn_RMS {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7480, 7832
                ]

                tag fromVCn3 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7808, 7728
                    rotation = right
                ]

                tag GoToIA {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6528, 8088
                    size = 0, 0
                ]

                tag fromQ4 {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 8424
                    size = 0, 0
                ]

                tag fromFreqVLn_RMS {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6632, 7608
                ]

                tag fromIC3 {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7856, 7872
                    rotation = left
                ]

                tag fromVLn_RMS4 {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7344, 8272
                    size = 0, 0
                ]

                tag fromVCn1 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6200, 7912
                ]

                tag GoToP {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8040, 7664
                    rotation = left
                ]

                tag fromIB3 {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7832, 7912
                    rotation = left
                ]

                tag GoToVAn {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6768, 8176
                    size = 0, 0
                ]

                tag fromVBnRMS3 {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7096, 7832
                ]

                tag GoToIB {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6528, 8184
                    size = 0, 0
                ]

                tag fromFreq4 {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7344, 8208
                    size = 0, 0
                ]

                tag fromVBn2 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6632, 7512
                ]

                tag fromP4 {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 8344
                    size = 0, 0
                ]

                tag fromVBn3 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7832, 7688
                    rotation = right
                ]

                tag fromVAnRMS3 {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7096, 7784
                ]

                tag fromVCn2 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6632, 7560
                ]

                tag GoToVCnRMS {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6888, 7584
                ]

                tag fromPF4 {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 8584
                    size = 0, 0
                ]

                tag GoToVAnRMS {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6888, 7488
                ]

                tag GoToVBn {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6872, 8272
                    size = 0, 0
                ]

                tag fromVAn3 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7856, 7648
                    rotation = right
                ]

                tag fromVAn2 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6632, 7464
                ]

                tag fromVAn1 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6200, 7784
                ]

                tag fromS4 {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7352, 8504
                    size = 0, 0
                ]

                tag fromVCnRMS3 {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7096, 7880
                ]

                tag fromIA3 {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7808, 7952
                    rotation = left
                ]

                tag GoToVCn {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6976, 8376
                    size = 0, 0
                ]

                tag GoToS {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8064, 7920
                    rotation = right
                ]

                tag GoToFreq {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6480, 7848
                ]

                junction Junction2 pe
                [
                    position = 6704, 8432
                ]

                junction Junction4 pe
                [
                    position = 6808, 8432
                ]

                junction Junction9 pe
                [
                    position = 6808, 8224
                ]

                junction Junction10 pe
                [
                    position = 6704, 8128
                ]

                junction Junction8 pe
                [
                    position = 6912, 8320
                ]

                junction Junction11 sp
                [
                    position = 7400, 7832
                ]

                connect GoToVAnRMS VLn_RMS_calc.RMSa as ConnVAnRMS1
                connect VLn_RMS_calc.B fromVBn2 as ConnVBnRMS
                connect GoToVBn VBn.out as Connection964
                connect IC.p_node C+ as Connection1032
                connect VLn_RMS_calc.C fromVCn2 as ConnVCnRMS
                connect "Power Meter.Qdc" GoToQ as ConnPMQdc
                connect fromVAn3 "Power Meter.va" as ConnVAPM
                connect IB.p_node B+ as Connection1037
                connect IA.n_node Junction10 as Connection1041
                connect fromIA3 "Power Meter.ia" as ConnIAPM
                connect VBn.n_node Junction4 as Connection956
                connect IC.out GoToIC as ConnICSP
                connect IC.n_node Junction8 as Connection1031
                connect "Power Meter.k_factor" GoToPF as ConnPMPF
                connect VAn.p_node Junction10 as Connection1039
                connect GoToVCn VCn.out as Connection963
                connect GoToVAn VAn.out as Connection965
                connect IA.p_node A+ as Connection1042
                connect VLn_RMS_calc.RMSb GoToVBnRMS as ConnVBnRMS1
                connect Junction2 Ground as Connection1027
                [
                    breakpoints = 6704, 8432; 6464, 8432; 6464, 8432; 6368, 8432; 6288, 8432
                ]
                connect fromVBn3 "Power Meter.vb" as ConnVBPM
                connect IA.out GoToIA as ConnIASP
                connect IB.n_node Junction9 as Connection1036
                connect fromVCn3 "Power Meter.vc" as ConnVCPM
                connect fromIC3 "Power Meter.ic" as ConnICPM
                connect IB.out GoToIB as ConnIBSP
                connect "Power Meter.Qac" TRMqac.in as ConnPMQac
                connect VCn.n_node Junction4 as Connection968
                [
                    breakpoints = 6840, 8432
                ]
                connect fromIB3 "Power Meter.ib" as ConnIBPM
                connect fromFreq4 Freq.in as ConnFreqprobe
                connect VAn.n_node Junction2 as Connection950
                connect fromPF4 POWER_PF.in as ConnPFprobe
                connect "Power Meter.Pdc" GoToP as ConnPMPdc
                connect Junction10 A- as Connection1040
                [
                    breakpoints = 6704, 8128
                ]
                connect fromVLn_RMS4 VLn_RMS.in as ConnVLn_RMSprobe
                connect fromVBnRMS3 sumVLn_RMS.in1 as ConnVBnRMS3
                connect fromVCnRMS3 sumVLn_RMS.in2 as ConnVCnRMS3
                connect GoToVCnRMS VLn_RMS_calc.RMSc as ConnVCnRMS1
                connect fromS4 POWER_S.in as ConnSprobe
                connect sumVLn_RMS.out gainVLn_RMS.in as ConnVLn_RMS1
                connect VBn.p_node Junction9 as Connection1034
                connect "Power Meter.apparent" GoToS as ConnPMS
                connect fromVAn2 VLn_RMS_calc.A as ConnVAnRMS
                connect Junction2 Junction4 as Connection954
                connect Junction9 B- as Connection1035
                [
                    breakpoints = 6808, 8224
                ]
                connect Junction8 C- as Connection1030
                [
                    breakpoints = 6912, 8320
                ]
                connect VCn.p_node Junction8 as Connection1029
                connect fromVAnRMS3 sumVLn_RMS.in as ConnVAnRMS3
                connect fromFreqVLn_RMS VLn_RMS_calc.Freq as ConnFVLn_RMS
                connect "Power Meter.Pac" TRMpac.in as ConnPMPac
                connect fromP4 Gain1.in as Connection1043
                connect Gain1.out POWER_P.in as Connection1044
                connect fromQ4 Gain2.in as Connection1045
                connect Gain2.out POWER_Q.in as Connection1046
                connect "Phase locked loop.f" GoToFreq as Connection1050
                connect fromVAn1 "Phase locked loop.Va" as Connection1051
                connect "Phase locked loop.Vb" fromVBn1 as Connection1052
                connect fromVCn1 "Phase locked loop.Vc" as Connection1053
                connect gainVLn_RMS.out Junction11 as Connection1054
                connect Junction11 GoToVLn_RMS as Connection1055
                connect "|V|" Junction11 as Connection1056
            }
            [
                position = 8144, 8128
                size = 64, 240
            ]

            component gen_gain Gain1 {
                gain = "1/480"
            }
            [
                position = 8208, 7960
            ]

            component gen_c_function "Voltage Deviation" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "V inherit"
                in_terminal_labels = "[(\'V\', True)]"
                in_terminal_properties = "real V;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "violation inherit"
                out_terminal_labels = "[(\'violation\', True)]"
                out_terminal_properties = "real violation;"
                output_fnc = "/*Begin code section*/
if (V>1.05)
    violation = 1.05-V;
else if (V<0.95)
    violation = V - 0.95;
else
    violation = 0;
/*End code section*/"
            }
            [
                position = 8336, 7960
                size = 120, 48
            ]

            port Vb- {
                position = right:2
                kind = pe
            }
            [
                position = 8264, 8128
                scale = -1, 1
            ]

            port Vc+ {
                position = left:1
                kind = pe
            }
            [
                position = 8024, 8224
            ]

            port Vc- {
                position = right:1
                kind = pe
            }
            [
                position = 8264, 8224
                scale = -1, 1
            ]

            port Va- {
                position = right:3
                kind = pe
            }
            [
                position = 8264, 8032
                scale = -1, 1
            ]

            port Vb+ {
                position = left:2
                kind = pe
            }
            [
                position = 8024, 8128
            ]

            port Va+ {
                position = left:3
                kind = pe
            }
            [
                position = 8024, 8032
            ]

            port ground {
                position = top:1
                kind = pe
            }
            [
                position = 8376, 8312
                scale = -1, 1
            ]

            port V_dev {
                position = bottom:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8464, 7960
            ]

            connect Va+ "Three-phase Meter2.A+" as Connection1
            connect Vb+ "Three-phase Meter2.B+" as Connection2
            connect Vc+ "Three-phase Meter2.C+" as Connection3
            connect "Three-phase Meter2.Ground" ground as Connection4
            connect "Three-phase Meter2.C-" Vc- as Connection5
            connect "Three-phase Meter2.B-" Vb- as Connection6
            connect "Three-phase Meter2.A-" Va- as Connection7
            connect "Three-phase Meter2.|V|" Gain1.in as Connection9
            connect V_dev "Voltage Deviation.violation" as Connection10
            connect "Voltage Deviation.V" Gain1.out as Connection11
        }
        [
            position = 9216, 7440
            rotation = left
            scale = 1, -1
            size = 80, 192
        ]

        component Subsystem measurement3 {
            layout = dynamic
            component Subsystem "Three-phase Meter3" {
                layout = dynamic
                component gen_terminator TRMpac {
                }
                [
                    position = 8232, 7824
                    rotation = left
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6552, 8304
                    size = 64, 32
                ]

                component gen_probe VLn_RMS {
                }
                [
                    position = 7536, 8352
                ]

                component gen_probe Freq {
                }
                [
                    position = 7536, 8288
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6544, 8400
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VCn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6992, 8456
                    rotation = right
                    size = 64, 32
                ]

                component gen_PQ_transform "Power Meter" {
                }
                [
                    position = 8040, 7864
                ]

                component gen_probe POWER_S {
                }
                [
                    position = 7536, 8584
                ]

                component gen_probe POWER_PF {
                }
                [
                    position = 7536, 8664
                ]

                component gen_terminator TRMqac {
                }
                [
                    position = 8232, 7904
                    rotation = right
                ]

                component gen_sum sumVLn_RMS {
                    signs = "3"
                }
                [
                    position = 7304, 7912
                ]

                component "core/Voltage Measurement" VAn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6784, 8256
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6552, 8208
                    size = 64, 32
                ]

                component "core/Three-phase RMS variable frequency" VLn_RMS_calc {
                    Ts = "Ts"
                }
                [
                    position = 6840, 7616
                    size = 144, 184
                ]

                component "core/Voltage Measurement" VBn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6888, 8352
                    rotation = right
                    size = 64, 32
                ]

                component gen_gain gainVLn_RMS {
                    gain = "1/3"
                }
                [
                    position = 7432, 7912
                ]

                component gen_gain Gain1 {
                    gain = "1/1e3"
                }
                [
                    position = 7472, 8432
                    hide_name = True
                ]

                component gen_probe POWER_Q {
                }
                [
                    position = 7544, 8512
                ]

                component gen_probe POWER_P {
                }
                [
                    position = 7544, 8432
                ]

                component gen_gain Gain2 {
                    gain = "1/1e3"
                }
                [
                    position = 7472, 8512
                    hide_name = True
                ]

                component Subsystem "Phase locked loop" {
                    layout = dynamic
                    component gen_gain Gain4 {
                        gain = "1/(2*np.pi)"
                    }
                    [
                        position = 8312, 8184
                        hide_name = True
                    ]

                    component tm_delay "Unit Delay1" {
                    }
                    [
                        position = 8416, 8192
                        rotation = right
                        hide_name = True
                    ]

                    component gen_gain Gain3 {
                        gain = "-1"
                    }
                    [
                        position = 8120, 8160
                        hide_name = True
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 8008, 8160
                        size = 48, 80
                    ]

                    component Subsystem PLL1 {
                        layout = dynamic
                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            int_init_value = "2*np.pi*60"
                            ki = "2"
                            lower_sat_lim = "2*np.pi*57"
                            upper_sat_lim = "2*np.pi*63"
                        }
                        [
                            position = 8192, 8152
                            hide_name = True
                        ]

                        component gen_c_function "confine phase" {
                            global_variables = "real x;real floor_in;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        }
                        [
                            position = 8408, 8152
                            size = 56, 48
                        ]

                        component gen_c_function "C function1" {
                            global_variables = "real var;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                            parameters = "real Ts;"
                            update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                        }
                        [
                            position = 8304, 8152
                            hide_name = True
                            size = 80, 48
                        ]

                        component gen_gain Gain1 {
                            gain = "-1"
                        }
                        [
                            position = 8128, 8152
                            hide_name = True
                        ]

                        port q {
                            label = "q"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8064, 8152
                        ]

                        port w {
                            label = "w"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8208
                        ]

                        port wt {
                            label = "wt"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8496, 8152
                        ]

                        junction Junction1 sp
                        [
                            position = 8240, 8152
                        ]

                        connect w Junction1 as Connection19
                        connect "confine phase.in" "C function1.out" as Connection16
                        connect Junction1 "PID controller1.out" as Connection18
                        connect wt "confine phase.out" as Connection14
                        connect q Gain1.in as Connection8
                        connect "C function1.in" Junction1 as Connection17
                        connect Gain1.out "PID controller1.in" as Connection9
                    }
                    [
                        position = 8216, 8160
                        size = 96, 56
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8080, 8192
                        hide_name = True
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8120, 8128
                        hide_name = True
                    ]

                    port f {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8376, 8184
                    ]

                    port Vb {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7888, 8104
                    ]

                    port Va {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7912, 8040
                    ]

                    port Vc {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8184
                    ]

                    connect "Unit Delay1.out" "abc to dq1.wt" as Connection24
                    [
                        breakpoints = 8416, 8224; 8416, 8256; 7968, 8256
                    ]
                    connect "abc to dq1.vc" Vc as Connection1050
                    connect "Unit Delay1.in" PLL1.wt as Connection1047
                    [
                        breakpoints = 8416, 8144; 8416, 8136; 8288, 8136
                    ]
                    connect Gain4.out f as Connection1054
                    connect "abc to dq1.d_axis" Termination2.in as Connection1048
                    connect "abc to dq1.vb" Vb as Connection1049
                    connect PLL1.w Gain4.in as Connection1053
                    connect "abc to dq1.va" Va as Connection1052
                    connect Gain3.out PLL1.q as Connection181
                    [
                        breakpoints = 8152, 8160
                    ]
                    connect Termination1.in "abc to dq1.zero_axis" as Connection29
                    connect Gain3.in "abc to dq1.q_axis" as Connection18
                }
                [
                    position = 6424, 7928
                    size = 96, 168
                ]

                port C- {
                    position = right:3
                    kind = pe
                }
                [
                    position = 7080, 8400
                    rotation = down
                ]

                port B- {
                    position = right:2
                    kind = pe
                }
                [
                    position = 7080, 8304
                    rotation = down
                ]

                port A+ {
                    position = left:1
                    kind = pe
                }
                [
                    position = 6296, 8208
                ]

                port C+ {
                    position = left:3
                    kind = pe
                }
                [
                    position = 6296, 8400
                ]

                port B+ {
                    position = left:2
                    kind = pe
                }
                [
                    position = 6296, 8304
                ]

                port A- {
                    position = right:1
                    kind = pe
                }
                [
                    position = 7080, 8208
                    rotation = down
                ]

                port Ground {
                    position = bottom:4
                    kind = pe
                }
                [
                    position = 6296, 8512
                ]

                port "|V|" {
                    position = top:auto
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 7528, 8016
                ]

                tag fromVBn1 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6280, 7928
                ]

                tag GoToVCnRMS {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6968, 7664
                ]

                tag fromIA3 {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 8032
                    rotation = left
                ]

                tag GoToQ {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8144, 7784
                    rotation = left
                ]

                tag fromIC3 {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7936, 7952
                    rotation = left
                ]

                tag GoToIA {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6608, 8168
                    size = 0, 0
                ]

                tag fromVCn2 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6712, 7640
                ]

                tag fromVCn1 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6280, 7992
                ]

                tag GoToVBn {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6952, 8352
                    size = 0, 0
                ]

                tag fromVAn3 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7936, 7728
                    rotation = right
                ]

                tag GoToPF {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8120, 7960
                    rotation = right
                ]

                tag fromFreq4 {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7424, 8288
                    size = 0, 0
                ]

                tag fromVCn3 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7888, 7808
                    rotation = right
                ]

                tag fromVBnRMS3 {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 7912
                ]

                tag fromVBn2 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6712, 7592
                ]

                tag fromVBn3 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7912, 7768
                    rotation = right
                ]

                tag fromVCnRMS3 {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 7960
                ]

                tag GoToVBnRMS {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6968, 7616
                ]

                tag GoToVAn {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6848, 8256
                    size = 0, 0
                ]

                tag fromVAn2 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6712, 7544
                ]

                tag GoToIC {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6608, 8360
                    size = 0, 0
                ]

                tag fromVAn1 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6280, 7864
                ]

                tag GoToVLn_RMS {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7560, 7912
                ]

                tag fromIB3 {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7912, 7992
                    rotation = left
                ]

                tag fromS4 {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8584
                    size = 0, 0
                ]

                tag GoToP {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8120, 7744
                    rotation = left
                ]

                tag fromPF4 {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8664
                    size = 0, 0
                ]

                tag GoToVCn {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7056, 8456
                    size = 0, 0
                ]

                tag fromVAnRMS3 {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 7864
                ]

                tag GoToS {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8144, 8000
                    rotation = right
                ]

                tag fromVLn_RMS4 {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7424, 8352
                    size = 0, 0
                ]

                tag GoToVAnRMS {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6968, 7568
                ]

                tag fromFreqVLn_RMS {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6712, 7688
                ]

                tag GoToIB {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6608, 8264
                    size = 0, 0
                ]

                tag fromQ4 {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7384, 8512
                    size = 0, 0
                ]

                tag fromP4 {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7384, 8432
                    size = 0, 0
                ]

                tag GoToFreq {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6576, 7928
                ]

                junction Junction8 pe
                [
                    position = 6992, 8400
                ]

                junction Junction10 pe
                [
                    position = 6784, 8208
                ]

                junction Junction2 pe
                [
                    position = 6784, 8512
                ]

                junction Junction4 pe
                [
                    position = 6888, 8512
                ]

                junction Junction9 pe
                [
                    position = 6888, 8304
                ]

                junction Junction11 sp
                [
                    position = 7488, 7912
                ]

                connect "Power Meter.Qdc" GoToQ as ConnPMQdc
                connect GoToVAnRMS VLn_RMS_calc.RMSa as ConnVAnRMS1
                connect IB.out GoToIB as ConnIBSP
                connect GoToVCn VCn.out as Connection963
                connect VAn.p_node Junction10 as Connection1039
                connect fromVBnRMS3 sumVLn_RMS.in1 as ConnVBnRMS3
                connect VLn_RMS_calc.C fromVCn2 as ConnVCnRMS
                connect IC.n_node Junction8 as Connection1031
                connect fromIA3 "Power Meter.ia" as ConnIAPM
                connect Junction2 Ground as Connection1027
                [
                    breakpoints = 6784, 8512; 6544, 8512; 6544, 8512; 6448, 8512; 6368, 8512
                ]
                connect fromS4 POWER_S.in as ConnSprobe
                connect "Power Meter.Pdc" GoToP as ConnPMPdc
                connect VAn.n_node Junction2 as Connection950
                connect fromIC3 "Power Meter.ic" as ConnICPM
                connect Junction2 Junction4 as Connection954
                connect VLn_RMS_calc.B fromVBn2 as ConnVBnRMS
                connect Junction10 A- as Connection1040
                [
                    breakpoints = 6784, 8208
                ]
                connect "Power Meter.k_factor" GoToPF as ConnPMPF
                connect Junction9 B- as Connection1035
                [
                    breakpoints = 6888, 8304
                ]
                connect "Power Meter.apparent" GoToS as ConnPMS
                connect fromPF4 POWER_PF.in as ConnPFprobe
                connect IA.n_node Junction10 as Connection1041
                connect fromVLn_RMS4 VLn_RMS.in as ConnVLn_RMSprobe
                connect IA.p_node A+ as Connection1042
                connect VCn.p_node Junction8 as Connection1029
                connect VBn.p_node Junction9 as Connection1034
                connect IA.out GoToIA as ConnIASP
                connect fromVCn3 "Power Meter.vc" as ConnVCPM
                connect IB.p_node B+ as Connection1037
                connect fromVBn3 "Power Meter.vb" as ConnVBPM
                connect fromFreq4 Freq.in as ConnFreqprobe
                connect fromVAnRMS3 sumVLn_RMS.in as ConnVAnRMS3
                connect fromIB3 "Power Meter.ib" as ConnIBPM
                connect VLn_RMS_calc.RMSb GoToVBnRMS as ConnVBnRMS1
                connect VBn.n_node Junction4 as Connection956
                connect fromVCnRMS3 sumVLn_RMS.in2 as ConnVCnRMS3
                connect fromVAn2 VLn_RMS_calc.A as ConnVAnRMS
                connect "Power Meter.Pac" TRMpac.in as ConnPMPac
                connect GoToVAn VAn.out as Connection965
                connect GoToVBn VBn.out as Connection964
                connect IC.p_node C+ as Connection1032
                connect IB.n_node Junction9 as Connection1036
                connect fromFreqVLn_RMS VLn_RMS_calc.Freq as ConnFVLn_RMS
                connect IC.out GoToIC as ConnICSP
                connect "Power Meter.Qac" TRMqac.in as ConnPMQac
                connect sumVLn_RMS.out gainVLn_RMS.in as ConnVLn_RMS1
                connect GoToVCnRMS VLn_RMS_calc.RMSc as ConnVCnRMS1
                connect VCn.n_node Junction4 as Connection968
                [
                    breakpoints = 6920, 8512
                ]
                connect Junction8 C- as Connection1030
                [
                    breakpoints = 6992, 8400
                ]
                connect fromVAn3 "Power Meter.va" as ConnVAPM
                connect Gain2.out POWER_Q.in as Connection1046
                connect fromP4 Gain1.in as Connection1043
                connect fromQ4 Gain2.in as Connection1045
                connect Gain1.out POWER_P.in as Connection1044
                connect "Phase locked loop.f" GoToFreq as Connection1050
                connect fromVAn1 "Phase locked loop.Va" as Connection1051
                connect fromVBn1 "Phase locked loop.Vb" as Connection1052
                connect fromVCn1 "Phase locked loop.Vc" as Connection1053
                connect gainVLn_RMS.out Junction11 as Connection1054
                connect Junction11 GoToVLn_RMS as Connection1055
                connect "|V|" Junction11 as Connection1056
            }
            [
                position = 8144, 8120
                size = 64, 248
            ]

            component gen_c_function Violation {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "V inherit"
                in_terminal_labels = "[(\'V\', True)]"
                in_terminal_properties = "real V;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "violation inherit"
                out_terminal_labels = "[(\'violation\', True)]"
                out_terminal_properties = "real violation;"
                output_fnc = "/*Begin code section*/
if (V>1.05)
    violation = 1.05-V;
else if (V<0.95)
    violation = V - 0.95;
else
    violation = 0;
/*End code section*/"
            }
            [
                position = 8344, 7944
                size = 120, 48
            ]

            component gen_gain Gain1 {
                gain = "1/480"
            }
            [
                position = 8216, 7944
            ]

            port Vc- {
                position = right:1
                kind = pe
            }
            [
                position = 8264, 8224
                scale = -1, 1
            ]

            port Vc+ {
                position = left:1
                kind = pe
            }
            [
                position = 8024, 8224
            ]

            port Vb+ {
                position = left:2
                kind = pe
            }
            [
                position = 8024, 8128
            ]

            port ground {
                position = top:1
                kind = pe
            }
            [
                position = 8376, 8312
                scale = -1, 1
            ]

            port Vb- {
                position = right:2
                kind = pe
            }
            [
                position = 8264, 8128
                scale = -1, 1
            ]

            port Va- {
                position = right:3
                kind = pe
            }
            [
                position = 8264, 8032
                scale = -1, 1
            ]

            port Va+ {
                position = left:3
                kind = pe
            }
            [
                position = 8024, 8032
            ]

            port V_dev {
                position = bottom:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8472, 7944
            ]

            connect Va+ "Three-phase Meter3.A+" as Connection1
            connect Vb+ "Three-phase Meter3.B+" as Connection2
            connect Vc+ "Three-phase Meter3.C+" as Connection3
            connect "Three-phase Meter3.Ground" ground as Connection4
            connect "Three-phase Meter3.C-" Vc- as Connection5
            connect "Three-phase Meter3.B-" Vb- as Connection6
            connect "Three-phase Meter3.A-" Va- as Connection7
            connect Violation.V Gain1.out as Connection11
            connect V_dev Violation.violation as Connection10
            connect "Three-phase Meter3.|V|" Gain1.in as Connection12
        }
        [
            position = 9224, 8216
            rotation = left
            size = 80, 192
        ]

        component "core/Four Phase Core Coupling" "Core Coupling 1" {
            R1 = "1e3"
            fixed_snb_i = "true"
            snb_type_i = "R1-C1"
        }
        [
            position = 8416, 7576
            size = 12, 352
        ]

        component Subsystem Modbus1 {
            layout = dynamic
            component src_constant C_u12 {
                execution_rate = "Ts"
            }
            [
                position = 7968, 7800
            ]

            component gen_product Product2 {
            }
            [
                position = 8800, 8104
            ]

            component gen_product Product1 {
            }
            [
                position = 7768, 8160
            ]

            component gen_c_function "C function1" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7880, 8160
                hide_name = True
                size = 80, 48
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7664, 8208
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "4"
            }
            [
                position = 8384, 8064
            ]

            component gen_probe Probe2 {
            }
            [
                position = 8576, 8152
            ]

            component src_constant C_u11 {
                execution_rate = "Ts"
            }
            [
                position = 8008, 7720
            ]

            component gen_c_function "C function2" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8472, 8048
                hide_name = True
                size = 48, 48
            ]

            component src_constant C_u13 {
                execution_rate = "Ts"
                value = "50"
            }
            [
                position = 7920, 7872
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8400, 7920
            ]

            component src_constant Constant2 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8680, 8128
            ]

            component "core/ModBus Device" "ModBus Device2 (config1)" {
                execution_rate = "Ts"
            }
            [
                position = 8192, 7992
                size = 184, 184
            ]

            component gen_probe Probe1 {
            }
            [
                position = 7936, 8080
            ]

            component gen_c_function "C function3" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7888, 8376
                hide_name = True
                size = 80, 48
            ]

            component gen_probe Voltage_diff {
            }
            [
                position = 7896, 8288
            ]

            component src_constant Constant3 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7672, 8424
            ]

            component gen_product Product3 {
            }
            [
                position = 7776, 8376
            ]

            component gen_bus_join "Bus Join2" {
                inputs = "4"
            }
            [
                position = 8016, 8264
            ]

            component gen_c_function "C function4" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8480, 8288
                hide_name = True
                size = 48, 48
            ]

            component src_constant Constant4 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8688, 8368
            ]

            component gen_product Product4 {
            }
            [
                position = 8800, 8344
            ]

            component gen_probe Probe3 {
            }
            [
                position = 8576, 8392
            ]

            port U1-P1 {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7664, 8112
                rotation = down
                scale = -1, 1
            ]

            port u_P {
                position = top:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8952, 8104
            ]

            port V_dev {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7672, 8328
                rotation = down
                scale = -1, 1
            ]

            port u_Q {
                position = top:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8960, 8344
            ]

            junction Junction5 sp
            [
                position = 8520, 8048
            ]

            junction Junction4 sp
            [
                position = 7824, 8160
            ]

            junction Junction6 sp
            [
                position = 7832, 8376
            ]

            junction Junction7 sp
            [
                position = 8528, 8288
            ]

            connect "ModBus Device2 (config1).coil_in" C_u11.out as Connection139
            connect Junction4 Product1.out as Connection115
            connect Constant1.out Product1.in1 as Connection73
            connect C_u12.out "ModBus Device2 (config1).discrete_in" as Connection121
            [
                breakpoints = 8000, 7968; 8080, 7968
            ]
            connect "C function2.sign" "Bus Split1.out" as Connection132
            connect Termination1.in "ModBus Device2 (config1).coil_out" as Connection127
            connect Constant2.out Product2.in1 as Connection100
            connect "Bus Split1.out1" "C function2.in" as Connection133
            connect Product2.out u_P as Connection96
            connect "C function2.out" Junction5 as Connection135
            connect Probe1.in Junction4 as Connection116
            connect Junction5 Product2.in as Connection136
            connect U1-P1 Product1.in as Connection83
            connect "C function1.in" Junction4 as Connection114
            connect Probe2.in Junction5 as Connection137
            connect C_u13.out "ModBus Device2 (config1).holding_in" as Connection120
            [
                breakpoints = 7952, 8016; 8080, 8016
            ]
            connect "ModBus Device2 (config1).holding_out" "Bus Split1.in" as Connection131
            connect V_dev Product3.in as Connection140
            connect Constant3.out Product3.in1 as Connection141
            connect "C function3.in" Junction6 as Connection142
            connect Voltage_diff.in Junction6 as Connection143
            connect Junction6 Product3.out as Connection144
            connect "C function1.out" "Bus Join2.in" as Connection145
            connect "C function1.sign" "Bus Join2.in1" as Connection146
            connect "C function3.out" "Bus Join2.in2" as Connection147
            connect "C function3.sign" "Bus Join2.in3" as Connection148
            connect "Bus Join2.out" "ModBus Device2 (config1).reg_in" as Connection149
            connect "C function4.out" Junction7 as Connection150
            connect Constant4.out Product4.in1 as Connection151
            connect Junction7 Product4.in as Connection152
            connect Probe3.in Junction7 as Connection153
            connect Product4.out u_Q as Connection154
            connect "Bus Split1.out2" "C function4.sign" as Connection155
            connect "Bus Split1.out3" "C function4.in" as Connection156
            [
                breakpoints = 8432, 8088; 8432, 8296
            ]
        }
        [
            position = 7016, 7296
            rotation = down
            scale = 1, -1
            size = 120, 112
        ]

        component src_constant Constant1 {
            execution_rate = "Ts"
            signal_type = "uint"
            value = "0"
        }
        [
            position = 6872, 7000
            hide_name = True
        ]

        component "core/RL Section" RL_14 {
            inductance_per_l_mile = "1.55e-3"
            length_mile = "2"
            resistance_per_l_mile = "0.45"
        }
        [
            position = 7680, 7528
            size = 256, 56
        ]

        component "core/RL Section" RL_15 {
            inductance_per_l_mile = "1.5e-3"
            length_mile = "3"
            resistance_per_l_mile = "0.35"
        }
        [
            position = 7688, 8112
            size = 256, 56
        ]

        component "core/RL Section" RL_24 {
            inductance_per_l_mile = "1.6e-3"
            length_mile = "1.5"
            resistance_per_l_mile = "0.57"
        }
        [
            position = 8728, 7528
            size = 256, 56
        ]

        component "core/RL Section" RL_26 {
            inductance_per_l_mile = "1.55e-3"
            length_mile = "2"
            resistance_per_l_mile = "0.45"
        }
        [
            position = 9632, 7528
            size = 256, 56
        ]

        component "core/RL Section" RL_35 {
            inductance_per_l_mile = "1.6e-3"
            length_mile = "1.5"
            resistance_per_l_mile = "0.57"
        }
        [
            position = 8680, 8112
            size = 256, 56
        ]

        component Subsystem "Grid forming inverter (averaged)" {
            layout = dynamic
            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 9704, 8000
                size = 64, 256
            ]

            component pas_resistor Rt0b1 {
                resistance = "R_s"
            }
            [
                position = 8096, 8256
                rotation = left
                scale = -1, 1
            ]

            component "core/Current Measurement" Ia1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9256, 7904
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vc2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7856, 8480
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rt0c1 {
                resistance = "R_s"
            }
            [
                position = 8176, 8256
                rotation = left
                scale = -1, 1
            ]

            component pas_inductor Lb1 {
                inductance = "L_o"
            }
            [
                position = 8984, 8000
                rotation = down
            ]

            component pas_inductor Lgridb_1 {
                inductance = "L"
            }
            [
                position = 9584, 8000
                rotation = down
            ]

            component gen_digital_probe griddisconnect1 {
            }
            [
                position = 9656, 8376
                hide_name = True
            ]

            component "core/Current Measurement" Xi_a1 {
                addr = "14"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7840, 7904
                scale = 1, -1
                size = 64, 32
            ]

            component pas_capacitor Cc1 {
                capacitance = "C_s"
            }
            [
                position = 8176, 8352
                rotation = right
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 6912, 7760
                hide_name = True
            ]

            component gen_probe Ec_1 {
            }
            [
                position = 8512, 8400
            ]

            component pas_resistor Rgrida_1 {
                resistance = "R"
            }
            [
                position = 9488, 7904
            ]

            component pas_resistor Ra1 {
                resistance = "R_o"
            }
            [
                position = 8888, 7904
            ]

            component pas_resistor Rb1 {
                resistance = "R_o"
            }
            [
                position = 8888, 8000
            ]

            component pas_inductor Lgrida_1 {
                inductance = "L"
            }
            [
                position = 9584, 7904
                rotation = down
            ]

            component src_scada_input "Connect G1" {
                def_value = "1"
                execution_rate = "Ts"
                format = "uint"
                max = "1"
                min = "0"
                signal_type = "uint"
                unit = ""
            }
            [
                position = 9480, 7512
                hide_name = True
            ]

            component "core/Voltage Measurement" Vb2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7728, 8432
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component gen_product Product2 {
            }
            [
                position = 7000, 7624
                hide_name = True
                scale = -1, 1
            ]

            component pas_resistor Rgridc_1 {
                resistance = "R"
            }
            [
                position = 9488, 8096
            ]

            component gen_logic_op "Logical operator2" {
                inputs = "4"
                operator = "NOT"
            }
            [
                position = 9584, 8336
                rotation = right
                hide_name = True
            ]

            component pas_inductor L0b1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8000
                rotation = down
            ]

            component "core/Voltage Measurement" Va2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7600, 8384
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Signal Controlled Voltage Source" Va_inv {
            }
            [
                position = 7008, 7944
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component gen_product Product1 {
            }
            [
                position = 6816, 7760
                hide_name = True
            ]

            component pas_capacitor Cb1 {
                capacitance = "C_s"
            }
            [
                position = 8096, 8352
                rotation = right
            ]

            component pas_inductor L0c1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8096
                rotation = down
            ]

            component gen_digital_probe gridconnect1 {
            }
            [
                position = 9656, 8288
                hide_name = True
            ]

            component "core/Current Measurement" Xi_c1 {
                addr = "16"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7952, 8096
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ec1 {
                addr = "11"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8544, 8272
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "900"
            }
            [
                position = 6624, 8232
                hide_name = True
            ]

            component "core/Voltage Measurement" Ea1 {
                addr = "7"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8400, 8144
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Signal Controlled Voltage Source" Vc_inv {
            }
            [
                position = 7168, 8136
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Ib1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9256, 8000
                size = 64, 32
            ]

            component pas_resistor Rc1 {
                resistance = "R_o"
            }
            [
                position = 8888, 8096
            ]

            component "core/Current Measurement" Xi_b1 {
                addr = "15"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7888, 8000
                scale = 1, -1
                size = 64, 32
            ]

            component gen_probe Eb_1 {
            }
            [
                position = 8400, 8288
            ]

            component "core/Three Phase Two Winding Transformer" Tr1 {
                Poc1 = "344.99999999952564"
                Psc1 = "1762.5"
                Sn = "120000"
                V1 = "277"
                V2 = "480"
                current_vals_SCOC = "[0.0024, 1.0]"
                ioc1 = "0.6999999999992988"
                usc1 = "3.9999999999957394"
            }
            [
                position = 9936, 8000
                size = 126, 256
            ]

            component pas_resistor Rgridb_1 {
                resistance = "R"
            }
            [
                position = 9488, 8000
            ]

            component pas_resistor R0b1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8000
            ]

            component "core/Voltage Measurement" Eb1 {
                addr = "9"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8464, 8208
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component Subsystem Controller {
                layout = dynamic
                component gen_gain Gain11 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8616
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe f1 {
                }
                [
                    position = 8248, 8232
                    rotation = down
                ]

                component gen_product Product10 {
                }
                [
                    position = 7368, 8296
                    scale = -1, 1
                ]

                component gen_probe Qpu {
                }
                [
                    position = 7080, 8576
                    rotation = down
                ]

                component gen_probe E_qREF1 {
                }
                [
                    position = 7568, 8064
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 7912, 8776
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe E_q1 {
                }
                [
                    position = 7752, 8192
                    scale = -1, 1
                ]

                component Subsystem Current_abc_to_dq4 {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    connect "^Eb2" "abc to dq1.vb" as Connection2
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Ec2" "abc to dq1.vc" as Connection3
                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                }
                [
                    position = 7480, 8680
                    size = 80, 168
                ]

                component Subsystem Current_abc_to_dq {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Xi_d2 {
                        label = "Xi_d2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Xi_c2 {
                        label = "Xi_c2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Xi_a2 {
                        label = "Xi_a2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port Xi_q2 {
                        label = "Xi_q2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Xi_b2 {
                        label = "Xi_b2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect Xi_a2 "abc to dq1.va" as Connection1
                    connect "abc to dq1.q_axis" Xi_q2 as Connection6
                    connect Xi_b2 "abc to dq1.vb" as Connection2
                    connect "abc to dq1.d_axis" Xi_d2 as Connection5
                    connect Xi_c2 "abc to dq1.vc" as Connection3
                    connect wt2 "abc to dq1.wt" as Connection7
                }
                [
                    position = 7944, 7880
                    size = 80, 168
                ]

                component gen_gain Gain1 {
                    gain = "1/(2*np.pi)"
                }
                [
                    position = 8336, 8232
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 7192, 8224
                    scale = -1, 1
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8120
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe Xi_d1 {
                    addr = "8968"
                }
                [
                    position = 7728, 7816
                    scale = -1, 1
                ]

                component gen_gain Gain4 {
                    gain = "1/T_m"
                }
                [
                    position = 6992, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_sum Sum4 {
                    signs = "+-"
                }
                [
                    position = 7072, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe Ppu {
                }
                [
                    position = 7072, 8072
                    rotation = down
                ]

                component Subsystem Current_abc_to_dq2 {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    port Eb2 {
                        label = "Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Ec2 {
                        label = "Ec2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Eq2 {
                        label = "Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Ea2 {
                        label = "Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port Ed2 {
                        label = "Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    connect wt2 "abc to dq1.wt" as Connection7
                    connect Ec2 "abc to dq1.vc" as Connection3
                    connect "abc to dq1.d_axis" Ed2 as Connection5
                    connect "abc to dq1.q_axis" Eq2 as Connection6
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect Eb2 "abc to dq1.vb" as Connection2
                    connect Ea2 "abc to dq1.va" as Connection1
                }
                [
                    position = 7944, 8184
                    size = 80, 168
                ]

                component gen_gain Gain14 {
                    gain = "S/1e3"
                }
                [
                    position = 7136, 8456
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                ]

                component Subsystem "Frequency droop" {
                    layout = dynamic
                    component gen_sum Sum4 {
                        signs = "++"
                    }
                    [
                        position = 7928, 8152
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "w_0"
                    }
                    [
                        position = 8088, 8192
                        scale = -1, 1
                    ]

                    component src_constant Constant5 {
                        execution_rate = "Ts"
                        value = "D_f"
                    }
                    [
                        position = 8448, 7904
                        hide_name = True
                        scale = -1, 1
                    ]

                    component sys_signal_switch "Signal switch1" {
                        criterion = "ctrl != threshold"
                        threshold = "1"
                    }
                    [
                        position = 8312, 7928
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 8320, 8056
                        scale = -1, 1
                    ]

                    component gen_probe P_diff1 {
                    }
                    [
                        position = 8128, 7832
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "0.13"
                    }
                    [
                        position = 8448, 7952
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_product Product1 {
                        signs = "/*"
                    }
                    [
                        position = 8184, 7968
                        hide_name = True
                        scale = -1, 1
                    ]

                    port "Switch droop" {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8448, 7848
                        scale = -1, 1
                    ]

                    port "U - P" {
                        label = "U - P"
                        position = top:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8192, 8168
                        scale = -1, 1
                    ]

                    port w1 {
                        label = "w1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7872, 8152
                        scale = -1, 1
                    ]

                    port U_P {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8392, 8024
                        scale = -1, 1
                    ]

                    tag From17 {
                        value = "P1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8408, 8104
                        scale = -1, 1
                    ]

                    junction Junction2 sp
                    [
                        position = 7968, 8144
                    ]

                    junction Junction1 sp
                    [
                        position = 8232, 8056
                    ]

                    connect Product1.in1 Junction1 as Connection333
                    connect "Signal switch1.out" Product1.in as Connection328
                    connect Constant6.out "Signal switch1.in1" as Connection327
                    connect Sum4.in1 Constant4.out as Connection308
                    [
                        breakpoints = 7968, 8192; 8056, 8192
                    ]
                    connect Junction1 Sum1.out as Connection332
                    [
                        breakpoints = 8232, 8056
                    ]
                    connect From17 Sum1.in1 as Connection316
                    connect "Switch droop" "Signal switch1.in2" as Connection337
                    connect P_diff1.in Junction2 as Connection334
                    [
                        breakpoints = 7968, 8112
                    ]
                    connect "U - P" Junction1 as Connection331
                    connect Junction2 Sum4.in as Connection335
                    connect Constant5.out "Signal switch1.in" as Connection326
                    connect Sum4.out w1 as Connection307
                    connect Sum1.in U_P as Connection306
                    connect Product1.out Junction2 as Connection336
                    [
                        breakpoints = 8112, 7968; 8112, 8144
                    ]
                }
                [
                    position = 8336, 8112
                    size = 128, 96
                ]

                component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                    layout = dynamic
                    component gen_gain Gain6 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8496, 8456
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain3 {
                        gain = "R_s"
                    }
                    [
                        position = 9272, 8496
                        scale = -1, 1
                    ]

                    component gen_sum Sum8 {
                    }
                    [
                        position = 9160, 8232
                        scale = -1, 1
                    ]

                    component gen_sum Sum11 {
                        signs = "+-"
                    }
                    [
                        position = 9376, 8192
                        scale = -1, 1
                    ]

                    component Subsystem "dq to abc" {
                        layout = dynamic
                        component src_constant o_ref {
                            execution_rate = "Ts"
                            value = "[0]"
                        }
                        [
                            position = 7520, 8200
                        ]

                        component "core/dq to abc" "dq to abc1" {
                            execution_rate = "inherit"
                        }
                        [
                            position = 7744, 8184
                            size = 48, 80
                        ]

                        port q {
                            label = "Uq1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8168
                        ]

                        port d {
                            label = "Ud1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 8136
                        ]

                        port b {
                            label = "b"
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8184
                        ]

                        port alpha {
                            label = "alpha1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7600, 8232
                        ]

                        port c {
                            label = "c"
                            position = left:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8216
                        ]

                        port a {
                            label = "a"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8152
                        ]

                        connect c "dq to abc1.phase_c" as Connection2
                        connect o_ref.out "dq to abc1.zero_input" as Connection5
                        connect "dq to abc1.phase_b" b as Connection4
                        connect d "dq to abc1.d_input" as Connection3
                        connect q "dq to abc1.q_input" as Connection6
                        connect a "dq to abc1.phase_a" as Connection1
                        connect alpha "dq to abc1.wt" as Connection7
                    }
                    [
                        position = 8344, 8456
                        size = 80, 168
                    ]

                    component gen_gain Gain5 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8464, 8392
                        hide_name = True
                        scale = -1, -1
                    ]

                    component Subsystem "inner current control loop" {
                        layout = dynamic
                        component gen_gain Gain7 {
                            gain = "L_i"
                        }
                        [
                            position = 8272, 8368
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 8024, 8432
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8200, 8040
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8216, 8416
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8328, 8040
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller2" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8208, 8224
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8128, 8432
                            scale = -1, -1
                        ]

                        component gen_product Product4 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8280
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "+-"
                        }
                        [
                            position = 8320, 8224
                            scale = -1, 1
                        ]

                        component gen_gain Gain6 {
                            gain = "L_i"
                        }
                        [
                            position = 8256, 8176
                            scale = -1, 1
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8168, 8336
                            scale = -1, 1
                        ]

                        component gen_sum Sum7 {
                        }
                        [
                            position = 7760, 8232
                            scale = -1, 1
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8336, 8512
                            scale = -1, 1
                        ]

                        component gen_sum Sum3 {
                        }
                        [
                            position = 7760, 8048
                            scale = -1, 1
                        ]

                        component gen_product Product3 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8112
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8224, 8472
                            scale = -1, 1
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8168, 8144
                            scale = -1, 1
                        ]

                        component gen_sum Sum6 {
                        }
                        [
                            position = 8032, 8272
                            scale = -1, 1
                        ]

                        component gen_sum Sum5 {
                            signs = "+-"
                        }
                        [
                            position = 8024, 8104
                            scale = -1, 1
                        ]

                        port Xi_d_ref1 {
                            label = "Xi_d_ref1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8032
                            rotation = down
                        ]

                        port Ud1 {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8048
                            rotation = down
                        ]

                        port Xi_q_ref1 {
                            label = "Xi_q_ref1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8520, 8192
                            rotation = down
                        ]

                        port Xi_q_meas1 {
                            label = "Xi_q_meas1"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8520, 8264
                            rotation = down
                        ]

                        port Uq1 {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8232
                            rotation = down
                        ]

                        port Xi_d_meas1 {
                            label = "Xi_d_meas1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8112
                            rotation = down
                        ]

                        tag From24 {
                            value = "Ed1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 8056
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From26 {
                            value = "Eq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8128, 8264
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From25 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8312
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8384, 8448
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From23 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8272, 8112
                            scale = -1, 1
                            size = 60, 20
                        ]

                        junction Junction171 sp
                        [
                            position = 7944, 8288
                        ]

                        junction Junction177 sp
                        [
                            position = 8400, 8112
                        ]

                        junction Junction176 sp
                        [
                            position = 8400, 8232
                        ]

                        junction Junction172 sp
                        [
                            position = 8280, 8448
                        ]

                        connect Uq1 Sum7.out as Connection264
                        connect Sum8.in1 Junction177 as Connection301
                        connect Gain7.out Product2.in1 as Connection293
                        connect Sum9.in Xi_q_ref1 as Connection283
                        connect Junction177 Gain7.in as Connection300
                        connect Sum5.in1 Product1.out as Connection24
                        connect Limit_zero.out Comparator1.in2 as Connection251
                        connect Junction176 Sum9.in1 as Connection291
                        connect Xi_d_meas1 Junction177 as Connection299
                        connect "PID controller1.out" Sum3.in as Connection310
                        [
                            breakpoints = 8160, 8040
                        ]
                        connect Xi_q_meas1 Junction176 as Connection290
                        connect Gain6.in Junction176 as Connection292
                        connect Sum7.in "PID controller2.out" as Connection311
                        [
                            breakpoints = 8160, 8224
                        ]
                        connect Sum3.out Ud1 as Connection263
                        connect Product4.in1 Junction171 as Connection252
                        connect Comparator1.out "Signal switch1.in2" as Connection57
                        connect Junction172 Comparator1.in1 as Connection267
                        connect "PID controller2.in" Sum9.out as Connection306
                        [
                            breakpoints = 8240, 8224
                        ]
                        connect Sum6.in1 Product2.out as Connection26
                        connect Sum8.in Xi_d_ref1 as Connection297
                        connect "Signal switch1.in" Junction172 as Connection266
                        connect Product3.out Sum3.in1 as Connection17
                        connect Junction171 Product3.in1 as Connection253
                        connect Gain6.out Product1.in1 as Connection289
                        connect Sum5.out Product3.in as Connection25
                        connect From26 Sum6.in as Connection3
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect From23 Product1.in as Connection1
                        connect Gain5.out Junction171 as Connection254
                        connect Product4.out Sum7.in1 as Connection19
                        connect From25 Product2.in as Connection2
                        connect From27 Junction172 as Connection268
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Sum6.out Product4.in as Connection27
                        connect Sum8.out "PID controller1.in" as Connection302
                        [
                            breakpoints = 8240, 8040
                        ]
                        connect Sum5.in From24 as Connection23
                    }
                    [
                        position = 8608, 8424
                        size = 96, 184
                    ]

                    component Subsystem "Outer voltage control loop" {
                        layout = dynamic
                        component gen_pid_controller "PID controller3" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8168
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller4" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8504
                            scale = -1, 1
                        ]

                        component gen_product Product6 {
                        }
                        [
                            position = 8152, 8320
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8152, 8752
                            scale = -1, 1
                        ]

                        component gen_sum Sum10 {
                            signs = "+-"
                        }
                        [
                            position = 7952, 8248
                            scale = -1, 1
                        ]

                        component gen_sum Sum13 {
                            signs = "++"
                        }
                        [
                            position = 7936, 8584
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "++"
                        }
                        [
                            position = 7632, 8176
                            scale = -1, 1
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8272, 8848
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8064, 8768
                            scale = -1, -1
                        ]

                        component gen_product Product7 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8592
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8160, 8808
                            scale = -1, 1
                        ]

                        component gen_product Product8 {
                        }
                        [
                            position = 8144, 8680
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8168
                            scale = -1, 1
                        ]

                        component gen_sum Sum12 {
                            signs = "++"
                        }
                        [
                            position = 7616, 8512
                            scale = -1, 1
                        ]

                        component gen_sum Sum11 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8504
                            scale = -1, 1
                        ]

                        component gen_gain Gain4 {
                            gain = "C_s"
                        }
                        [
                            position = 8248, 8352
                            scale = -1, 1
                        ]

                        component gen_gain Gain6 {
                            gain = "C_s"
                        }
                        [
                            position = 8248, 8712
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 7960, 8768
                            scale = -1, 1
                        ]

                        component gen_product Product5 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8256
                            scale = -1, 1
                        ]

                        port Xi_rq1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8512
                            scale = -1, 1
                        ]

                        port "^E_d_ref" {
                            label = "^E_d_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8128
                            scale = -1, 1
                        ]

                        port "^E_q" {
                            label = "^E_q1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8512
                            scale = -1, 1
                        ]

                        port Xi_rd1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8176
                            scale = -1, 1
                        ]

                        port "^E_d" {
                            label = "^E_d1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8176
                            scale = -1, 1
                        ]

                        port "^E_q_ref" {
                            label = "^E_q_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8464
                            scale = -1, 1
                        ]

                        tag From36 {
                            value = "Iq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8376, 8560
                            scale = -1, 1
                        ]

                        tag From35 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8280, 8640
                            scale = -1, 1
                        ]

                        tag From32 {
                            value = "Id1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8424, 8224
                            scale = -1, 1
                        ]

                        tag From33 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8280, 8280
                            scale = -1, 1
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8320, 8784
                            scale = -1, 1
                            size = 60, 20
                        ]

                        junction Junction153 sp
                        [
                            position = 7872, 8600
                        ]

                        junction Junction159 sp
                        [
                            position = 8480, 8176
                        ]

                        junction Junction170 sp
                        [
                            position = 8216, 8784
                        ]

                        junction Junction158 sp
                        [
                            position = 8448, 8512
                        ]

                        connect Gain4.in Junction158 as Connection117
                        connect Sum11.in1 Junction158 as Connection115
                        connect From27 Junction170 as Connection258
                        connect Comparator1.in1 Junction170 as Connection256
                        connect one.out "Signal switch1.in1" as Connection40
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect From32 Sum10.in as Connection259
                        connect Sum11.out "PID controller4.in" as Connection261
                        [
                            breakpoints = 8336, 8504
                        ]
                        connect From36 Sum13.in as Connection260
                        connect "^E_d_ref" Sum8.in as Connection215
                        connect Product5.in Sum10.out as Connection71
                        connect Sum8.in1 Junction159 as Connection118
                        connect Sum11.in "^E_q_ref" as Connection217
                        connect Gain5.out Junction153 as Connection92
                        connect Sum13.in1 Product8.out as Connection233
                        connect Gain4.out Product6.in1 as Connection69
                        connect Comparator1.out "Signal switch1.in2" as Connection2
                        connect Sum12.in1 Product7.out as Connection244
                        connect Gain6.out Product8.in1 as Connection84
                        connect From35 Product8.in as Connection79
                        connect Gain6.in Junction159 as Connection120
                        connect Sum9.in1 Product5.out as Connection243
                        connect Xi_rq1 Sum12.out as Connection105
                        connect Sum12.in "PID controller4.out" as Connection269
                        [
                            breakpoints = 8232, 8504
                        ]
                        connect "PID controller3.in" Sum8.out as Connection262
                        [
                            breakpoints = 8336, 8168
                        ]
                        connect Limit_zero.out Comparator1.in2 as Connection19
                        connect From33 Product6.in as Connection68
                        connect Sum10.in1 Product6.out as Connection67
                        connect Junction170 "Signal switch1.in" as Connection257
                        connect "^E_d" Junction159 as Connection216
                        connect Product5.in1 Junction153 as Connection94
                        connect "PID controller3.out" Sum9.in as Connection270
                        [
                            breakpoints = 8240, 8168
                        ]
                        connect "^E_q" Junction158 as Connection218
                        connect Junction153 Product7.in1 as Connection93
                        connect Product7.in Sum13.out as Connection89
                        connect Xi_rd1 Sum9.out as Connection104
                    }
                    [
                        position = 8864, 8400
                        scale = -1, 1
                        size = 152, 168
                    ]

                    component gen_gain Gain4 {
                        gain = "R_s"
                    }
                    [
                        position = 9280, 8192
                        scale = -1, 1
                    ]

                    component gen_sum Sum10 {
                        signs = "+-"
                    }
                    [
                        position = 9368, 8496
                        scale = -1, 1
                    ]

                    component gen_sum Sum7 {
                    }
                    [
                        position = 9128, 8552
                        scale = -1, 1
                    ]

                    port Uc1 {
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8520
                        rotation = down
                    ]

                    port E_q_ref1 {
                        label = "E_q_ref1"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9424, 8304
                        rotation = down
                    ]

                    port E_d_ref1 {
                        label = "E_d_ref1"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9408, 8632
                        rotation = down
                    ]

                    port Ua1 {
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8392
                        rotation = down
                    ]

                    port Ub1 {
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8456
                        rotation = down
                    ]

                    tag From38 {
                        value = "Id1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8448
                        rotation = down
                        size = 56, 20
                    ]

                    tag From40 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8232
                        rotation = down
                    ]

                    tag From37 {
                        value = "E_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8336
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From36 {
                        value = "E_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8384
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From29 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8400
                        scale = -1, 1
                    ]

                    tag From39 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8544
                        rotation = down
                    ]

                    tag From31 {
                        value = "Iq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8152
                        rotation = down
                    ]

                    tag From30 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8496
                        scale = -1, 1
                    ]

                    tag From1 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 8560
                        scale = -1, 1
                        size = 63, 25
                    ]

                    connect "dq to abc.alpha" From1 as Connection229
                    [
                        breakpoints = 8400, 8560; 8544, 8560
                    ]
                    connect "dq to abc.q" Gain6.out as Connection339
                    connect "inner current control loop.Xi_q_ref1" "Outer voltage control loop.Xi_rq1" as Connection327
                    connect "Outer voltage control loop.^E_d" From37 as Connection301
                    connect E_q_ref1 Sum8.in1 as Connection344
                    connect Gain3.out Sum7.in as Connection289
                    connect From40 Sum11.in1 as Connection294
                    connect From29 "inner current control loop.Xi_d_meas1" as Connection253
                    connect From36 "Outer voltage control loop.^E_q" as Connection322
                    connect "dq to abc.a" Ua1 as Connection283
                    connect From30 "inner current control loop.Xi_q_meas1" as Connection257
                    connect Gain5.in "inner current control loop.Ud1" as Connection345
                    [
                        breakpoints = 8544, 8352
                    ]
                    connect From31 Sum11.in as Connection293
                    connect Sum7.in1 E_d_ref1 as Connection324
                    connect "dq to abc.d" Gain5.out as Connection337
                    connect Gain4.out Sum8.in as Connection343
                    connect Sum11.out Gain4.in as Connection290
                    connect Sum8.out "Outer voltage control loop.^E_q_ref" as Connection342
                    [
                        breakpoints = 9072, 8232; 9072, 8416
                    ]
                    connect From38 Sum10.in as Connection285
                    connect "inner current control loop.Uq1" Gain6.in as Connection346
                    [
                        breakpoints = 8544, 8496
                    ]
                    connect "dq to abc.b" Ub1 as Connection282
                    connect "Outer voltage control loop.^E_d_ref" Sum7.out as Connection317
                    connect From39 Sum10.in1 as Connection286
                    connect "inner current control loop.Xi_d_ref1" "Outer voltage control loop.Xi_rd1" as Connection326
                    connect Sum10.out Gain3.in as Connection287
                    connect "dq to abc.c" Uc1 as Connection284
                }
                [
                    position = 7352, 7952
                    size = 128, 152
                ]

                component gen_product Product111 {
                }
                [
                    position = 7368, 8216
                    scale = -1, 1
                ]

                component gen_probe Xi_q1 {
                    addr = "8965"
                }
                [
                    position = 7728, 7944
                    scale = -1, 1
                ]

                component gen_gain Gain7 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7840, 7944
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain15 {
                    gain = "S/1e3"
                }
                [
                    position = 7120, 8176
                    rotation = left
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_integrator Integrator3 {
                }
                [
                    position = 6904, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe Q1 {
                }
                [
                    position = 7072, 8488
                    rotation = down
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7200, 7952
                    scale = -1, 1
                ]

                component gen_gain Gain10 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7848, 8520
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe E_dREF1 {
                }
                [
                    position = 7568, 7848
                ]

                component gen_probe E_d1 {
                }
                [
                    position = 7744, 8064
                    scale = -1, 1
                ]

                component gen_gain Gain12 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8744
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain6 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7840, 7816
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_sum Sum5 {
                    signs = "+-"
                }
                [
                    position = 7080, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe P1 {
                }
                [
                    position = 7080, 8136
                    rotation = down
                ]

                component Subsystem "Voltage droop" {
                    layout = dynamic
                    component gen_sum Sum3 {
                        signs = "++"
                    }
                    [
                        position = 7928, 8176
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 8080, 8248
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 8320, 8136
                        scale = -1, 1
                    ]

                    component gen_probe Q_diff1 {
                    }
                    [
                        position = 8032, 8096
                    ]

                    component gen_probe E_1 {
                    }
                    [
                        position = 7936, 8096
                    ]

                    component gen_gain Gain3 {
                        gain = "1/D_V"
                    }
                    [
                        position = 8224, 8144
                        hide_name = True
                        scale = -1, 1
                    ]

                    port U_Q {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8464, 8096
                        scale = -1, 1
                    ]

                    port E_magnitude1 {
                        label = "E_magnitude1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8176
                        scale = -1, 1
                    ]

                    tag From18 {
                        value = "Q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8464, 8176
                        scale = -1, 1
                    ]

                    junction Junction3 sp
                    [
                        position = 7968, 8144
                    ]

                    junction Junction2 sp
                    [
                        position = 7832, 8176
                    ]

                    connect Constant4.out Sum3.in1 as Connection318
                    connect From18 Sum2.in1 as Connection323
                    connect Junction2 Sum3.out as Connection321
                    connect E_1.in Junction2 as Connection322
                    connect Sum2.in U_Q as Connection304
                    [
                        breakpoints = 8360, 8128; 8360, 8096
                    ]
                    connect Gain3.in Sum2.out as Connection325
                    connect E_magnitude1 Junction2 as Connection320
                    connect Q_diff1.in Junction3 as Connection328
                    connect Junction3 Sum3.in as Connection327
                    connect Gain3.out Junction3 as Connection326
                }
                [
                    position = 8232, 7640
                    size = 120, 96
                ]

                component gen_gain Gain13 {
                    gain = "1/T_m"
                }
                [
                    position = 7000, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_integrator Integrator2 {
                }
                [
                    position = 6896, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_integrator Integrator1 {
                }
                [
                    position = 8456, 8536
                    scale = -1, 1
                ]

                component gen_product Product13 {
                }
                [
                    position = 7368, 8464
                    scale = -1, 1
                ]

                component gen_product Product12 {
                }
                [
                    position = 7368, 8376
                    scale = -1, 1
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 7192, 8368
                    scale = -1, 1
                ]

                component gen_gain Gain8 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7856, 8248
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain9 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7840, 8392
                    hide_name = True
                    scale = -1, -1
                ]

                component Subsystem Current_abc_to_dq3 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    connect "^Ec2" "abc to dq1.vc" as Connection3
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                    connect wt2 "abc to dq1.wt" as Connection7
                }
                [
                    position = 7944, 8456
                    size = 80, 168
                ]

                component gen_gain Gain16 {
                    gain = "S/80e3"
                }
                [
                    position = 7152, 8136
                    rotation = left
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain17 {
                    gain = "S/80e3"
                }
                [
                    position = 7168, 8528
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                ]

                port U_P {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8624, 8112
                    scale = -1, 1
                ]

                port "U - P" {
                    position = top:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8320, 8008
                    rotation = right
                    scale = -1, -1
                ]

                port "Switch droop" {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8496, 8072
                    scale = -1, 1
                ]

                port U_Q {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8528, 7608
                    scale = -1, 1
                ]

                tag From38 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8472
                    scale = -1, 1
                ]

                tag Goto28 {
                    value = "E_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7776, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From10 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto20 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8744
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From36 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8208
                    scale = -1, 1
                ]

                tag From27 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8208
                    scale = -1, 1
                ]

                tag Goto37 {
                    value = "P1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8168
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From7 {
                    value = "Xi_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 7944
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto47 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8528, 7672
                    hide_name = True
                ]

                tag Goto19 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8616
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto36 {
                    value = "Q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8312
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From42 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8008
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From39 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8400
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From8 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto45 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7784, 8648
                    scale = -1, 1
                    size = 77, 20
                ]

                tag From24 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8656
                    scale = -1, 1
                ]

                tag From5 {
                    value = "Xi_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 7816
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From43 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 8648
                    hide_name = True
                    scale = -1, 1
                ]

                tag From34 {
                    value = "E_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto46 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7784, 8776
                    scale = -1, 1
                ]

                tag From37 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8256
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "modulator1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7096, 7952
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From20 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 7896
                    scale = -1, 1
                    size = 67, 20
                ]

                tag Goto22 {
                    value = "Xi_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7728, 7880
                    scale = -1, 1
                ]

                tag From28 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 7904
                    scale = -1, 1
                ]

                tag From6 {
                    value = "Xi_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 7856
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto29 {
                    value = "E_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7768, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From26 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8704
                    scale = -1, 1
                ]

                tag From32 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8480
                    scale = -1, 1
                ]

                tag From33 {
                    value = "E_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From23 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8616
                    scale = -1, 1
                ]

                tag Goto17 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 8144
                    size = 60, 20
                ]

                tag From9 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8160
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From35 {
                    value = "E_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8432
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto21 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8248, 8536
                    scale = -1, 1
                ]

                tag From25 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8744
                    scale = -1, 1
                ]

                tag From40 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8640, 8536
                    scale = -1, 1
                ]

                tag Goto23 {
                    value = "Xi_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7728, 8008
                    scale = -1, 1
                ]

                junction Junction265 sp
                [
                    position = 6856, 8232
                ]

                junction Junction268 sp
                [
                    position = 7120, 8224
                ]

                junction Junction151 sp
                [
                    position = 7776, 7816
                ]

                junction Junction258 sp
                [
                    position = 7520, 8008
                ]

                junction Junction266 sp
                [
                    position = 6856, 8376
                ]

                junction Junction229 sp
                [
                    position = 7520, 8256
                ]

                junction Junction267 sp
                [
                    position = 7136, 8368
                ]

                junction Junction270 sp
                [
                    position = 7152, 8224
                ]

                junction Junction231 sp
                [
                    position = 7520, 7896
                ]

                junction Junction230 sp
                [
                    position = 7472, 8472
                ]

                junction Junction152 sp
                [
                    position = 7776, 7944
                ]

                junction Junction157 sp
                [
                    position = 7816, 8120
                ]

                junction Junction228 sp
                [
                    position = 7520, 8400
                ]

                junction Junction269 sp
                [
                    position = 7152, 8368
                ]

                junction Junction159 sp
                [
                    position = 7472, 8208
                ]

                junction Junction256 sp
                [
                    position = 8456, 8144
                ]

                junction Junction158 sp
                [
                    position = 7816, 8248
                ]

                connect Junction158 Gain8.out as Connection868
                connect From10 Current_abc_to_dq2.Ec2 as Connection234
                connect Current_abc_to_dq2.Ed2 Gain5.in as Connection870
                connect Product111.in Junction159 as Connection703
                connect E_qREF1.in Junction258 as Connection861
                connect Product10.in Junction229 as Connection723
                connect E_q1.in Junction158 as Connection718
                connect E_d1.in Junction157 as Connection291
                connect Sum5.out Gain13.in as Connection926
                connect Product111.out Sum1.in as Connection684
                connect Goto28 Gain10.out as Connection874
                connect Sum5.in1 Junction266 as Connection942
                [
                    breakpoints = 7120, 8424; 6856, 8424
                ]
                connect From25 "Current_abc_to_dq4.^Ec2" as Connection699
                connect Goto23 Junction152 as Connection256
                connect Gain6.out Junction151 as Connection865
                connect Current_abc_to_dq2.Ea2 From8 as Connection236
                connect Gain4.out Integrator2.in as Connection335
                connect Junction230 From38 as Connection677
                connect U_P "Frequency droop.U_P" as Connection975
                connect Junction268 Junction270 as Connection971
                connect "Current_abc_to_dq4.^Ea2" From23 as Connection701
                connect Goto20 Gain12.out as Connection878
                connect From34 "Current_abc_to_dq3.^Ec2" as Connection279
                connect Junction152 Xi_q1.in as Connection255
                connect From32 Current_abc_to_dq3.wt2 as Connection275
                connect Product10.in1 Junction228 as Connection681
                connect Gain10.in "Current_abc_to_dq3.^Eq2" as Connection875
                connect Current_abc_to_dq.Xi_d2 Gain6.in as Connection864
                connect "Outer Voltage Loop + Inner Current Loop.Ua1" "Bus Join1.in" as Connection839
                connect Product12.in Junction159 as Connection720
                connect Goto17 Junction256 as Connection846
                connect Junction229 From37 as Connection683
                connect Product13.in Junction228 as Connection679
                connect Junction258 "Outer Voltage Loop + Inner Current Loop.E_q_ref1" as Connection860
                connect Gain12.in "Current_abc_to_dq4.^Eq2" as Connection879
                connect "Current_abc_to_dq4.^Ed2" Gain11.in as Connection876
                connect Junction256 "Frequency droop.w1" as Connection847
                connect Gain8.in Current_abc_to_dq2.Eq2 as Connection869
                connect Gain13.out Integrator3.in as Connection925
                connect From27 Current_abc_to_dq2.wt2 as Connection246
                connect Goto21 Integrator1.out as Connection958
                connect Junction266 Goto36 as Connection983
                [
                    breakpoints = 6856, 8376; 6856, 8312; 6856, 8376
                ]
                connect E_dREF1.in Junction231 as Connection729
                [
                    breakpoints = 7520, 7848; 7520, 7896
                ]
                connect Junction231 "Outer Voltage Loop + Inner Current Loop.E_d_ref1" as Connection736
                connect Junction265 Goto37 as Connection982
                [
                    breakpoints = 6856, 8232; 6856, 8232
                ]
                connect Sum5.in Junction267 as Connection952
                connect "Current_abc_to_dq3.^Ed2" Gain9.in as Connection872
                connect Goto22 Junction151 as Connection251
                connect Q1.in Gain14.out as Connection959
                connect Product111.in1 Junction229 as Connection682
                connect From35 "Current_abc_to_dq3.^Eb2" as Connection276
                connect From6 Current_abc_to_dq.Xi_b2 as Connection39
                connect Junction159 From36 as Connection698
                connect Gain14.in Junction267 as Connection960
                connect f1.in Gain1.out as Connection318
                connect Sum4.in1 Junction265 as Connection939
                [
                    breakpoints = 7112, 8280; 6856, 8280
                ]
                connect Integrator1.in From40 as Connection725
                connect Junction270 Sum1.out as Connection972
                connect Current_abc_to_dq4.wt2 From26 as Connection702
                connect Integrator3.out Junction266 as Connection949
                [
                    breakpoints = 6856, 8376; 6856, 8376
                ]
                connect "Current_abc_to_dq3.^Ea2" From33 as Connection278
                connect "Outer Voltage Loop + Inner Current Loop.Uc1" "Bus Join1.in2" as Connection840
                connect Gain7.out Junction152 as Connection867
                connect "U - P" "Frequency droop.U - P" as Connection974
                connect Junction228 From39 as Connection680
                connect Goto3 Junction158 as Connection292
                connect Sum4.in Junction268 as Connection955
                connect "Current_abc_to_dq4.^Eb2" From24 as Connection700
                connect Gain9.out Goto29 as Connection873
                connect P1.in Gain15.out as Connection961
                connect Product13.in1 Junction230 as Connection676
                connect Junction157 Goto4 as Connection290
                connect "Voltage droop.E_magnitude1" Goto47 as Connection880
                connect Constant1.out Goto46 as Connection882
                connect Product12.in1 Junction230 as Connection678
                connect Goto2 "Bus Join1.out" as Connection51
                connect Junction151 Xi_d1.in as Connection250
                connect Junction231 From20 as Connection728
                connect Sum4.out Gain4.in as Connection330
                connect Sum1.in1 Product13.out as Connection719
                connect From43 Goto45 as Connection881
                connect Product12.out Sum2.in1 as Connection721
                connect From5 Current_abc_to_dq.Xi_a2 as Connection38
                connect Junction269 Junction267 as Connection969
                [
                    breakpoints = 7152, 8368
                ]
                connect From42 Junction258 as Connection859
                connect Gain15.in Junction268 as Connection962
                connect Sum2.out Junction269 as Connection968
                connect Junction265 Integrator2.out as Connection945
                [
                    breakpoints = 6856, 8232; 6856, 8232
                ]
                connect Current_abc_to_dq.wt2 From28 as Connection247
                [
                    breakpoints = 8000, 7904; 8040, 7904
                ]
                connect Current_abc_to_dq.Xi_q2 Gain7.in as Connection866
                connect From9 Current_abc_to_dq2.Eb2 as Connection235
                connect "Switch droop" "Frequency droop.Switch droop" as Connection984
                connect From7 Current_abc_to_dq.Xi_c2 as Connection40
                connect "Bus Join1.in1" "Outer Voltage Loop + Inner Current Loop.Ub1" as Connection838
                connect Gain11.out Goto19 as Connection877
                connect Gain5.out Junction157 as Connection871
                connect Product10.out Sum2.in as Connection672
                connect Gain1.in Junction256 as Connection848
                connect Ppu.in Gain16.out as Connection985
                connect Gain16.in Junction270 as Connection986
                connect Qpu.in Gain17.out as Connection987
                connect Gain17.in Junction269 as Connection988
                connect U_Q "Voltage droop.U_Q" as Connection989
            }
            [
                position = 6784, 7624
                size = 272, 144
            ]

            component pas_inductor La1 {
                inductance = "L_o"
            }
            [
                position = 8984, 7904
                rotation = down
            ]

            component pas_inductor Lgridc_1 {
                inductance = "L"
            }
            [
                position = 9584, 8096
                rotation = down
            ]

            component pas_resistor Rt0a1 {
                resistance = "R_s"
            }
            [
                position = 8016, 8256
                rotation = left
                scale = -1, 1
            ]

            component pas_resistor R0a1 {
                resistance = "R_i"
            }
            [
                position = 7632, 7904
            ]

            component gen_gain Gain1 {
                gain = "0.5"
            }
            [
                position = 6744, 7792
                hide_name = True
            ]

            component gen_probe Ea_1 {
            }
            [
                position = 8352, 8176
            ]

            component pas_inductor L0a1 {
                inductance = "L_i"
            }
            [
                position = 7744, 7904
                rotation = down
            ]

            component pas_inductor Lc1 {
                inductance = "L_o"
            }
            [
                position = 8984, 8096
                rotation = down
            ]

            component pas_resistor R0c1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8096
            ]

            component "core/Signal Controlled Voltage Source" Vb_inv {
            }
            [
                position = 7088, 8040
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Ic1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9256, 8096
                size = 64, 32
            ]

            component pas_capacitor Ca1 {
                capacitance = "C_s"
            }
            [
                position = 8016, 8352
                rotation = right
            ]

            component "core/Four Phase Core Coupling" "Core Coupling 5" {
                R1 = "1e3"
                fixed_snb_i = "true"
            }
            [
                position = 8704, 8048
                size = 12, 352
            ]

            port Vc {
                label = "Vc"
                position = right:3
                kind = pe
            }
            [
                position = 10160, 8096
                scale = -1, 1
            ]

            port Va {
                label = "Va"
                position = right:1
                kind = pe
            }
            [
                position = 10160, 7904
                scale = -1, 1
            ]

            port "Switch droop" {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7072, 7656
                scale = -1, 1
            ]

            port setpoint_P {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6712, 7448
                scale = -1, 1
            ]

            port Vb {
                label = "Vb"
                position = right:2
                kind = pe
            }
            [
                position = 10160, 8000
                scale = -1, 1
            ]

            port activeP_offset {
                position = top:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 6832, 7504
                scale = -1, 1
            ]

            port Ground {
                label = "Ground"
                position = bottom:4
                kind = pe
            }
            [
                position = 10152, 8688
                scale = -1, 1
            ]

            port setpoint_Q {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6832, 7448
                scale = -1, 1
            ]

            tag Connect4 {
                value = "Connect"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 7088, 7592
                hide_name = True
                scale = -1, 1
            ]

            tag Goto18 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6736, 8232
                hide_name = True
                size = 60, 20
            ]

            tag Goto44 {
                value = "Xi_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8208
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto30 {
                value = "Ec1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8352, 8352
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto38 {
                value = "Xi_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8256
                scale = -1, 1
                size = 60, 20
            ]

            tag From2 {
                value = "modulator1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6672, 7728
                hide_name = True
                size = 60, 20
            ]

            tag Goto33 {
                value = "E_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7776, 8480
                scale = -1, 1
                size = 60, 20
            ]

            tag Connect2 {
                value = "Connect"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 9584, 7816
                hide_name = True
            ]

            tag Goto32 {
                value = "Ia1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9096, 7824
                scale = -1, 1
                size = 60, 20
            ]

            tag Connect3 {
                value = "Connect"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 9520, 8288
                hide_name = True
            ]

            tag Goto34 {
                value = "E_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7504, 8384
                scale = -1, 1
                size = 60, 20
            ]

            tag From3 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6672, 7792
                hide_name = True
            ]

            tag Goto31 {
                value = "Ic1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9096, 8048
                scale = -1, 1
                size = 60, 20
            ]

            tag Connect1 {
                value = "Connect"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9560, 7512
                hide_name = True
            ]

            tag Goto39 {
                value = "Ib1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9096, 7936
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto42 {
                value = "E_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7648, 8432
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto35 {
                value = "Xi_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8160
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto41 {
                value = "Ea1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8256, 8144
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto40 {
                value = "Eb1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8320, 8256
                scale = -1, 1
                size = 60, 20
            ]

            junction Junction160 pe
            [
                position = 8096, 8000
            ]

            junction Junction212 pe
            [
                position = 8096, 8688
            ]

            junction Junction199 pe
            [
                position = 8096, 8688
            ]

            junction Junction194 pe
            [
                position = 8096, 8688
            ]

            junction Junction162 pe
            [
                position = 8544, 8096
            ]

            junction Junction215 pe
            [
                position = 8096, 8688
            ]

            junction Junction291 pe
            [
                position = 7088, 8688
            ]

            junction Junction161 pe
            [
                position = 8016, 7904
            ]

            junction Junction283 sp
            [
                position = 8368, 8256
            ]

            junction Junction192 pe
            [
                position = 8096, 8688
            ]

            junction Junction173 pe
            [
                position = 8176, 8096
            ]

            junction Junction216 pe
            [
                position = 8176, 8304
            ]

            junction Junction284 sp
            [
                position = 8480, 8352
            ]

            junction Junction289 pe
            [
                position = 7600, 8688
            ]

            junction Junction221 sp
            [
                position = 8320, 8144
            ]

            junction Junction294 sp
            [
                position = 9584, 8288
            ]

            junction Junction213 pe
            [
                position = 8096, 8304
            ]

            junction Junction211 pe
            [
                position = 8016, 8288
            ]

            junction Junction290 pe
            [
                position = 7168, 8688
            ]

            junction Junction198 pe
            [
                position = 8096, 8688
            ]

            junction Junction174 pe
            [
                position = 8400, 7904
            ]

            junction Junction296 pe
            [
                position = 9968, 8688
            ]

            junction Junction292 pe
            [
                position = 8096, 8688
            ]

            junction Junction168 pe
            [
                position = 8464, 8000
            ]

            junction Junction207 pe
            [
                position = 8096, 8688
            ]

            junction Junction195 pe
            [
                position = 8096, 8688
            ]

            junction Junction297 pe
            [
                position = 8544, 8688
            ]

            junction Junction298 pe
            [
                position = 9904, 8688
            ]

            connect Vc2.p_node Junction216 as Connection627
            connect Junction283 Eb1.out as Connection951
            connect Vc2.out Goto33 as Connection617
            [
                breakpoints = 7840, 8480; 7824, 8480
            ]
            connect Junction198 Junction195 as Connection477
            [
                breakpoints = 8096, 8688; 8096, 8688
            ]
            connect Goto41 Junction221 as Connection656
            [
                breakpoints = 8288, 8144; 8336, 8144
            ]
            connect "Bus Split1.out" Va_inv.in as Connection1051
            connect Eb1.n_node Junction195 as Connection462
            connect Junction194 Ca1.n_node as Connection597
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8544; 8016, 8544
            ]
            connect Rt0c1.p_node Junction216 as Connection625
            [
                breakpoints = 8176, 8288
            ]
            connect Rt0b1.p_node Junction213 as Connection612
            connect Junction192 Junction292 as Connection1067
            connect Vc_inv.n_node Junction290 as Connection1060
            connect Ec_1.in Junction284 as Connection956
            [
                breakpoints = 8480, 8384; 8480, 8352
            ]
            connect "Controller.U - P" activeP_offset as Connection1289
            connect Rc1.n_node Lc1.n_node as Connection399
            connect Va_inv.n_node Junction291 as Connection1065
            [
                breakpoints = 7008, 8688; 7088, 8688
            ]
            connect Junction211 Rt0a1.p_node as Connection599
            [
                breakpoints = 8016, 8304; 8016, 8304; 8016, 8288
            ]
            connect Junction212 Junction192 as Connection603
            connect Junction290 Junction289 as Connection1061
            [
                breakpoints = 7168, 8688; 7600, 8688
            ]
            connect Junction289 Junction212 as Connection1058
            [
                breakpoints = 7600, 8688; 8096, 8688
            ]
            connect Junction207 Junction198 as Connection574
            [
                breakpoints = 8096, 8688
            ]
            connect Connect4 Product2.in as Connection1291
            connect Cb1.n_node Junction212 as Connection602
            connect Rt0b1.n_node Junction160 as Connection351
            connect Ia1.out Goto32 as Connection666
            connect Junction168 Junction160 as Connection362
            connect Junction198 Junction199 as Connection537
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect Va2.p_node Junction211 as Connection600
            [
                breakpoints = 7840, 8288; 8016, 8288
            ]
            connect Ec1.p_node Junction162 as Connection325
            connect Xi_a1.n_node Junction161 as Connection314
            connect "Bus Split1.out2" Vc_inv.in as Connection1053
            connect Lgrida_1.p_node S2.a_in as Connection1253
            connect Product1.in1 Gain1.out as Connection1073
            connect Rt0c1.n_node Junction173 as Connection327
            connect Rgridb_1.n_node Lgridb_1.n_node as Connection546
            connect Junction173 Junction162 as Connection341
            [
                breakpoints = 8544, 8272; 8544, 8272
            ]
            connect Rb1.n_node Lb1.n_node as Connection354
            connect Va2.n_node Junction289 as Connection1057
            connect Ib1.n_node Rgridb_1.p_node as Connection662
            connect La1.n_node Ra1.n_node as Connection401
            connect Va2.out Goto34 as Connection624
            connect Vc_inv.p_node R0c1.p_node as Connection1054
            connect S2.ctrl_in Connect2 as Connection1252
            connect Junction221 Ea1.out as Connection639
            [
                breakpoints = 8304, 8144; 8368, 8144
            ]
            connect Xi_b1.n_node Junction160 as Connection388
            connect S2.b_in Lgridb_1.p_node as Connection1256
            connect Goto39 Ib1.out as Connection669
            connect From2 Product1.in as Connection1074
            connect Va_inv.p_node R0a1.p_node as Connection1056
            connect Junction291 Junction290 as Connection1064
            [
                breakpoints = 7088, 8688; 7168, 8688
            ]
            connect setpoint_P Controller.U_P as Connection1290
            connect S2.c_out Tr1.prm_3 as Connection1279
            connect Product2.out "Controller.Switch droop" as Connection1293
            connect Lgridc_1.p_node S2.c_in as Connection1257
            connect Goto30 Junction284 as Connection954
            connect Tr1.prm_2 S2.b_out as Connection1278
            connect Vb_inv.n_node Junction291 as Connection1063
            connect L0a1.n_node R0a1.n_node as Connection355
            connect Product1.out "Bus Split1.in" as Connection1075
            connect "Connect G1.out" Connect1 as Connection1260
            connect "Bus Split1.out1" Vb_inv.in as Connection1071
            connect Ca1.p_node Junction211 as Connection598
            connect La1.p_node Ia1.p_node as Connection665
            connect Ea_1.in Junction221 as Connection640
            connect Eb1.p_node Junction168 as Connection317
            connect Vb2.p_node Junction213 as Connection614
            [
                breakpoints = 7920, 8304; 8096, 8304
            ]
            connect Xi_c1.n_node Junction173 as Connection304
            connect "Switch droop" Product2.in1 as Connection1292
            connect griddisconnect1.in "Logical operator2.out" as Connection454
            connect Junction192 Junction194 as Connection459
            connect Xi_b1.out Goto44 as Connection374
            connect Ic1.out Goto31 as Connection668
            connect Ea1.n_node Junction292 as Connection1069
            [
                breakpoints = 8400, 8224; 8240, 8224; 8240, 8304; 8240, 8688
            ]
            connect Tr1.sec_1 Va as Connection1282
            connect Junction216 Cc1.p_node as Connection626
            [
                breakpoints = 8176, 8304; 8176, 8304; 8176, 8304
            ]
            connect Goto35 Xi_a1.out as Connection342
            connect Junction174 Junction161 as Connection535
            [
                breakpoints = 8400, 7904; 8400, 7904
            ]
            connect Lc1.p_node Ic1.p_node as Connection663
            connect Connect3 Junction294 as Connection1261
            connect Goto40 Junction283 as Connection950
            connect Vb2.out Goto42 as Connection616
            connect L0b1.p_node Xi_b1.p_node as Connection372
            connect From3 Gain1.in as Connection1072
            connect Rt0a1.n_node Junction161 as Connection366
            connect Junction294 gridconnect1.in as Connection1262
            connect Junction292 Cc1.n_node as Connection1068
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8544; 8176, 8544
            ]
            connect S2.a_out Tr1.prm_1 as Connection1281
            connect L0a1.p_node Xi_a1.p_node as Connection378
            connect Ia1.n_node Rgrida_1.p_node as Connection660
            connect "Logical operator2.in" Junction294 as Connection1263
            connect Lb1.p_node Ib1.p_node as Connection664
            connect Junction213 Cb1.p_node as Connection613
            [
                breakpoints = 8096, 8304; 8096, 8304; 8096, 8304
            ]
            connect Vb Tr1.sec_2 as Connection1277
            connect Junction284 Ec1.out as Connection955
            connect Ea1.p_node Junction174 as Connection298
            connect Vb2.n_node Junction215 as Connection621
            connect Rgridc_1.n_node Lgridc_1.n_node as Connection545
            connect Constant1.out Goto18 as Connection1096
            connect Junction195 Junction194 as Connection463
            connect Ground Junction296 as Connection1286
            connect Tr1.sec_3 Vc as Connection1280
            connect Lgrida_1.n_node Rgrida_1.n_node as Connection547
            connect Xi_c1.out Goto38 as Connection313
            connect Eb_1.in Junction283 as Connection952
            connect Vc2.n_node Junction215 as Connection623
            connect Ic1.n_node Rgridc_1.p_node as Connection661
            connect Junction207 Junction215 as Connection1097
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect R0b1.n_node L0b1.n_node as Connection385
            connect Tr1.n2 Junction296 as Connection1288
            connect L0c1.p_node Xi_c1.p_node as Connection328
            connect Vb_inv.p_node R0b1.p_node as Connection1055
            connect R0c1.n_node L0c1.n_node as Connection330
            connect Junction162 "Core Coupling 5.c_in" as Connection1294
            connect "Core Coupling 5.c_out" Rc1.p_node as Connection1295
            connect Junction174 "Core Coupling 5.a_in" as Connection1296
            connect "Core Coupling 5.a_out" Ra1.p_node as Connection1297
            connect Rb1.p_node "Core Coupling 5.b_out" as Connection1298
            connect "Core Coupling 5.b_in" Junction168 as Connection1299
            connect Junction207 Junction297 as Connection1302
            [
                breakpoints = 8096, 8688
            ]
            connect Junction297 Ec1.n_node as Connection1303
            [
                breakpoints = 8544, 8688; 8544, 8688
            ]
            connect "Core Coupling 5.d_in" Junction297 as Connection1304
            [
                breakpoints = 8656, 8192; 8656, 8688
            ]
            connect Tr1.n1 Junction298 as Connection1305
            connect Junction298 Junction296 as Connection1306
            [
                breakpoints = 9904, 8688; 9936, 8688
            ]
            connect "Core Coupling 5.d_out" Junction298 as Connection1307
            [
                breakpoints = 8752, 8192; 8752, 8688
            ]
            connect setpoint_Q Controller.U_Q as Connection1308

            Kp_V = "30e-3"
            S = "200e3"
            V_D = "5e-4"
            Vmax = "0.4"
            Vmin = "-0.4"
            f_D = "3e-1"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A grid-forming three-phase inverter with a frequency and voltage droop controller</p></body></html>"

                S {
                    label = "Rated Power "
                    widget = edit
                    type = generic
                    default_value = "20e3"
                    unit = "VA"
                    group = "1. Three-phase Inverter"
                }

                V_ABC {
                    label = "Rated Phase Voltage (RMS)"
                    widget = edit
                    type = generic
                    default_value = "277"
                    unit = "V"
                    group = "1. Three-phase Inverter"
                }

                w_0 {
                    label = "Nominal Frequency"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*60"
                    unit = "rad/s"
                    group = "1. Three-phase Inverter"
                }

                Ts {
                    label = "Execution rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                    group = "1. Three-phase Inverter"
                }

                R_i {
                    label = "Input Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.1"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_i {
                    label = "Input Inductance"
                    widget = edit
                    type = generic
                    default_value = "6e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R_s {
                    label = "Shunt Resistance"
                    widget = edit
                    type = generic
                    default_value = "15e-3"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                C_s {
                    label = "Shunt Capacitance"
                    widget = edit
                    type = generic
                    default_value = "150e-6"
                    unit = "F"
                    group = "2. LCL filter"
                }

                R_o {
                    label = "Output Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.03"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_o {
                    label = "Output Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.3e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R {
                    label = "Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.35"
                    unit = "Ω"
                    group = "3. Electrical Line"
                }

                L {
                    label = "Inductance"
                    widget = edit
                    type = generic
                    default_value = "1.5e-3"
                    unit = "H"
                    group = "3. Electrical Line"
                }

                Kp_I {
                    label = "Inner Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "10e-3"
                    group = "4. Cascaded Controller"
                }

                Ki_I {
                    label = "Inner Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "2e-3"
                    group = "4. Cascaded Controller"
                }

                Imax {
                    label = "Inner Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "1"
                    group = "4. Cascaded Controller"
                }

                Imin {
                    label = "Inner Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-1"
                    group = "4. Cascaded Controller"
                }

                Kp_V {
                    label = "Outer Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "10e-3"
                    group = "4. Cascaded Controller"
                }

                Ki_V {
                    label = "Outer Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "2"
                    group = "4. Cascaded Controller"
                }

                Vmax {
                    label = "Outer Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "1.5"
                    group = "4. Cascaded Controller"
                }

                Vmin {
                    label = "Outer Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-1.5"
                    group = "4. Cascaded Controller"
                }

                f_D {
                    label = "Frequency Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "1"
                    unit = "%"
                    group = "5. Droop Control"
                }

                V_D {
                    label = "Voltage Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "1e-2"
                    unit = "%"
                    group = "5. Droop Control"
                }

                T_m {
                    label = "Measurement delay"
                    widget = edit
                    type = generic
                    default_value = "0.5"
                    unit = "s"
                    group = "5. Droop Control"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    mP = w_0*(f_D/100)
                    nQ = V_DQ*(V_D/100)
                    D_f = 1/mP
                    D_V = 1/nQ
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, 'grid_forming_inverter.svg')
                ENDCODE

                CODE pre_compile
                    # HEADER START
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    # HEADER STOP
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    mP = w_0*(f_D/100)
                    nQ = V_DQ*(V_D/100)
                    D_f = 1/mP
                    D_V = 1/nQ
                ENDCODE
            }
        }
        [
            position = 6976, 7528
            size = 224, 192
        ]

        component Subsystem "Grid forming inverter (averaged)3" {
            layout = dynamic
            component pas_resistor Rt0a1 {
                resistance = "R_s"
            }
            [
                position = 8016, 8256
                rotation = left
                scale = -1, 1
            ]

            component "core/Three Phase Two Winding Transformer" Tr1 {
                Poc1 = "344.99999999952564"
                Psc1 = "1762.5"
                Sn = "120000"
                V1 = "277"
                V2 = "480"
                current_vals_SCOC = "[0.0024, 1.0]"
                ioc1 = "0.6999999999992988"
                usc1 = "3.9999999999957394"
            }
            [
                position = 10184, 8000
                size = 126, 256
            ]

            component pas_inductor Lc1 {
                inductance = "L_o"
            }
            [
                position = 8872, 8096
                rotation = down
            ]

            component pas_resistor Rc1 {
                resistance = "R_o"
            }
            [
                position = 8776, 8096
            ]

            component pas_capacitor Ca1 {
                capacitance = "C_s"
            }
            [
                position = 8016, 8352
                rotation = right
            ]

            component pas_resistor Rgridb_1 {
                resistance = "R"
            }
            [
                position = 9248, 8000
            ]

            component pas_inductor L0c1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8096
                rotation = down
            ]

            component Subsystem "BE1-25A Synchronizer (inverter)" {
                layout = dynamic
                component tm_delay "Unit Delay2" {
                }
                [
                    position = 7696, 8624
                    rotation = right
                    hide_name = True
                ]

                component src_constant Constant6 {
                    execution_rate = "Ts"
                    value = "1e-3"
                }
                [
                    position = 8064, 8032
                    hide_name = True
                ]

                component src_clock Clock1 {
                    execution_rate = "Ts"
                }
                [
                    position = 8456, 8272
                    hide_name = True
                ]

                component gen_gain Gain6 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7376, 8576
                    hide_name = True
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 7440, 8600
                    hide_name = True
                ]

                component gen_rel_op "Relational operator1" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8056
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer1" {
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "dV inherit;max_Q inherit;max_slip inherit"
                    in_terminal_labels = "[(\'dV\', True), (\'max_Q\', True), (\'max_slip\', True)]"
                    in_terminal_properties = "real dV;real max_Q;real max_slip;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "del_Q inherit"
                    out_terminal_labels = "[(\'del_Q\', True)]"
                    out_terminal_properties = "real del_Q;"
                    output_fnc = "/*Begin code section*/
if (dV>=max_slip)
{
    del_Q = max_Q;
}
else if ((dV<max_slip) && (dV>=0))
{
    del_Q = max_Q*dV/max_slip;
}
else if ((dV<0) && (dV>=-1*max_slip))
{
    del_Q = max_Q*dV/max_slip;
}
else if (dV < (-1*max_slip)) 
{
    del_Q = -1*max_Q;
}
/*End code section*/"
                    parameters = "real Ts;"
                }
                [
                    position = 8384, 8672
                    hide_name = True
                    size = 144, 224
                ]

                component src_constant Constant10 {
                    execution_rate = "Ts"
                    value = "40"
                }
                [
                    position = 8456, 8304
                    hide_name = True
                ]

                component gen_sum Sum2 {
                    signs = "-+"
                }
                [
                    position = 7824, 8176
                    hide_name = True
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7736, 8064
                    hide_name = True
                ]

                component gen_c_function "confine phase1" {
                    global_variables = "real x;real floor_in;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                }
                [
                    position = 7640, 8016
                    hide_name = True
                    size = 56, 48
                ]

                component gen_c_function "Hold after connect1" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True)]"
                    in_terminal_properties = "real in;int connect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
else
    var =0;
/*End code section*/"
                }
                [
                    position = 8624, 8680
                    hide_name = True
                    size = 96, 48
                ]

                component tm_delay "Unit Delay1" {
                    signal_out_type = "int"
                }
                [
                    position = 8752, 8128
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe4" {
                    override_signal_name = "True"
                    signal_name = "freq_sync3"
                }
                [
                    position = 8616, 7992
                    hide_name = True
                ]

                component Subsystem PLL {
                    layout = dynamic
                    component gen_c_function "C function1" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        parameters = "real Ts;"
                        update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                    }
                    [
                        position = 8304, 8152
                        hide_name = True
                        size = 80, 48
                    ]

                    component gen_c_function "confine phase" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 8408, 8152
                        size = 56, 48
                    ]

                    component gen_pid_controller "PID controller1" {
                        controller_type = "PI"
                        enb_anti_windup_out = "True"
                        enb_output_limit_out = "True"
                        int_init_value = "2*np.pi*60"
                        ki = "2"
                        lower_sat_lim = "2*np.pi*59.5"
                        upper_sat_lim = "2*np.pi*60.5"
                    }
                    [
                        position = 8192, 8152
                        hide_name = True
                    ]

                    port w {
                        label = "w"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8304, 8208
                    ]

                    port wt {
                        label = "wt"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8496, 8152
                    ]

                    port q {
                        label = "q"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8064, 8152
                    ]

                    junction Junction1 sp
                    [
                        position = 8240, 8152
                    ]

                    connect "C function1.in" Junction1 as Connection17
                    connect Junction1 "PID controller1.out" as Connection18
                    connect q "PID controller1.in" as Connection20
                    connect "confine phase.in" "C function1.out" as Connection16
                    connect wt "confine phase.out" as Connection14
                    connect w Junction1 as Connection19
                }
                [
                    position = 7544, 8576
                    scale = 1, -1
                    size = 96, 56
                ]

                component gen_digital_probe "Digital Probe5" {
                    override_signal_name = "True"
                    signal_name = "volt_sync3"
                }
                [
                    position = 8616, 8032
                    hide_name = True
                ]

                component src_constant Constant7 {
                    execution_rate = "Ts"
                    value = "1e-3"
                }
                [
                    position = 8064, 8112
                    hide_name = True
                ]

                component gen_trigonometric "Trigonometric function1" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7568, 8016
                    hide_name = True
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7336, 8552
                    hide_name = True
                ]

                component gen_gain Gain3 {
                    gain = "1/w_0"
                }
                [
                    position = 7736, 8200
                    hide_name = True
                ]

                component gen_c_function "stay connected" {
                    global_variables = "real connect;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
connect = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    out_terminal_properties = "int out;"
                    output_fnc = "/*Begin code section*/
out = connect;
/*End code section*/"
                    parameters = "real Ts;"
                    update_fnc = "/*Begin code section*/
if (in==1)
    connect = 1;
/*End code section*/"
                }
                [
                    position = 8696, 8128
                    hide_name = True
                    size = 48, 48
                ]

                component gen_gain Gain7 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7824, 8264
                    hide_name = True
                ]

                component src_constant Constant9 {
                    execution_rate = "Ts"
                    value = "5e-2"
                }
                [
                    position = 8456, 8224
                    hide_name = True
                ]

                component gen_sum Sum5 {
                }
                [
                    position = 7344, 8352
                    hide_name = True
                ]

                component gen_logic_op "Logical operator2" {
                    inputs = "4"
                    operator = "NOT"
                }
                [
                    position = 8944, 8248
                    rotation = right
                    hide_name = True
                ]

                component gen_c_function "Hold after connect" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True)]"
                    in_terminal_properties = "real in;int connect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
else
    var =0;
/*End code section*/"
                }
                [
                    position = 8320, 8424
                    hide_name = True
                    size = 96, 48
                ]

                component gen_abs Abs5 {
                }
                [
                    position = 8032, 8128
                    hide_name = True
                ]

                component src_constant Constant11 {
                    execution_rate = "Ts"
                    value = "D_V*6e-1"
                }
                [
                    position = 8240, 8672
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe6" {
                    override_signal_name = "True"
                    signal_name = "griddisconnect3"
                }
                [
                    position = 9016, 8288
                    hide_name = True
                ]

                component src_scada_input "Connect G3" {
                    def_value = "1"
                    execution_rate = "Ts"
                    format = "uint"
                    max = "1"
                    min = "0"
                    signal_type = "uint"
                    unit = ""
                }
                [
                    position = 8800, 8192
                ]

                component gen_digital_probe "Digital Probe1" {
                    override_signal_name = "True"
                    signal_name = "gridconnect3"
                }
                [
                    position = 9016, 8208
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer" {
                    in_terminal_dimensions = "inherit;inherit;inherit;inherit"
                    in_terminal_dimensions_str = "df inherit;max_T inherit;max_slip inherit;angle_slip inherit"
                    in_terminal_labels = "[(\'df\', True), (\'max_T\', True), (\'max_slip\', True), (\'angle_slip\', True)]"
                    in_terminal_properties = "real df;real max_T;real max_slip;real angle_slip;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "del_P inherit"
                    out_terminal_labels = "[(\'del_P\', True)]"
                    out_terminal_properties = "real del_P;"
                    output_fnc = "/*Begin code section*/
if (df>=max_slip)
{
    del_P = max_T;
}
else if ((df<max_slip) && (df>=0))
{
    del_P = max_T*(df+1e-4)/max_slip + (angle_slip*1*D_f);
}
else if ((df<0) && (df > (-max_slip)))
{
    del_P = max_T*(df+1e-4)/max_slip  + (angle_slip*1*D_f);
}
else if (df <= (-1*max_slip))
{
    del_P = -1*max_T;
}
/*End code section*/"
                    parameters = "real Ts;real D_f;"
                }
                [
                    position = 8104, 8416
                    hide_name = True
                    size = 144, 224
                ]

                component gen_gain Gain8 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7824, 8360
                    hide_name = True
                ]

                component gen_sum Sum4 {
                }
                [
                    position = 8240, 8224
                    hide_name = True
                ]

                component gen_logic_op "Logical operator1" {
                    inputs = "4"
                }
                [
                    position = 8616, 8128
                    hide_name = True
                ]

                component gen_math_fnc "Mathematical function2" {
                    mathematical_fn = "sqrt"
                }
                [
                    position = 7416, 8352
                    hide_name = True
                ]

                component gen_abs Abs4 {
                }
                [
                    position = 7904, 8064
                    hide_name = True
                ]

                component "core/abc to dq" "abc to dq1" {
                }
                [
                    position = 7264, 8576
                    size = 48, 80
                ]

                component gen_digital_probe "Digital Probe3" {
                    override_signal_name = "True"
                    signal_name = "ang_sync3"
                }
                [
                    position = 8616, 7944
                    hide_name = True
                ]

                component gen_probe angle_diff3 {
                }
                [
                    position = 8064, 7968
                ]

                component gen_product Product4 {
                }
                [
                    position = 7264, 8384
                    hide_name = True
                ]

                component gen_limiter Limit1 {
                    lower_limit = "1e-12"
                }
                [
                    position = 7496, 8032
                    hide_name = True
                ]

                component gen_product Product3 {
                }
                [
                    position = 7264, 8320
                    hide_name = True
                ]

                component Subsystem Current_abc_to_dq3 {
                    layout = dynamic
                    component gen_terminator Termination {
                    }
                    [
                        position = 7952, 8064
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    port wt {
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Ec {
                        position = right:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Ed {
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Eb {
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port Eq {
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Ea {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    connect "abc to dq1.q_axis" Eq as Connection6
                    connect wt "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" Ed as Connection5
                    connect Termination.in "abc to dq1.zero_axis" as Connection4
                    connect Ec "abc to dq1.vc" as Connection3
                    connect Ea "abc to dq1.va" as Connection1
                    connect Eb "abc to dq1.vb" as Connection2
                }
                [
                    position = 7736, 8312
                    hide_name = True
                    scale = -1, 1
                    size = 64, 144
                ]

                component gen_gain Gain4 {
                    gain = "1/w_0"
                }
                [
                    position = 7736, 8152
                    hide_name = True
                ]

                component gen_probe volt_diff3 {
                }
                [
                    position = 8136, 8608
                ]

                component src_constant Constant4 {
                    execution_rate = "Ts"
                    value = "1e-4"
                }
                [
                    position = 7968, 8448
                    hide_name = True
                ]

                component gen_abs Abs2 {
                }
                [
                    position = 8456, 8192
                    hide_name = True
                ]

                component gen_rel_op "Relational operator5" {
                    relational_op = ">"
                }
                [
                    position = 8520, 8288
                    hide_name = True
                ]

                component gen_trigonometric "Trigonometric function2" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7568, 8104
                    hide_name = True
                ]

                component gen_rel_op "Relational operator4" {
                    relational_op = "<"
                }
                [
                    position = 8520, 8208
                    hide_name = True
                ]

                component src_constant Constant13 {
                    execution_rate = "Ts"
                    value = "1e-1"
                }
                [
                    position = 8240, 8760
                    hide_name = True
                ]

                component gen_c_function "confine phase" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
if (in > 0)
{
    if (in > (6.283185307179586/2))
        out = in - 6.283185307179586;
    else
        out = in;
}
if (in < 0)
{
    if (in < (-6.283185307179586/2))
        out = in + 6.283185307179586;
    else
        out = in;
}
/*End code section*/"
                }
                [
                    position = 7824, 8064
                    size = 56, 48
                ]

                component gen_product Product1 {
                }
                [
                    position = 8160, 8192
                    hide_name = True
                ]

                component gen_probe frequency_diff3 {
                }
                [
                    position = 7912, 8128
                    scale = -1, 1
                ]

                component tm_delay "Unit Delay3" {
                    signal_out_type = "real"
                }
                [
                    position = 8400, 8424
                    hide_name = True
                ]

                component gen_limiter Limit2 {
                    lower_limit = "1e-12"
                }
                [
                    position = 7496, 8120
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch1" {
                    criterion = "ctrl != threshold"
                    threshold = "1"
                }
                [
                    position = 8888, 8176
                    hide_name = True
                ]

                component gen_product Product2 {
                }
                [
                    position = 8160, 8256
                    hide_name = True
                ]

                component gen_c_function "confine phase2" {
                    global_variables = "real x;real floor_in;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                }
                [
                    position = 7640, 8104
                    hide_name = True
                    size = 56, 48
                ]

                component src_constant Constant3 {
                    execution_rate = "Ts"
                    value = "D_f*1e-3"
                }
                [
                    position = 7968, 8384
                    hide_name = True
                ]

                component gen_sum Sum3 {
                    signs = "-+"
                }
                [
                    position = 8392, 8192
                    hide_name = True
                    scale = 1, -1
                ]

                component gen_math_fnc "Mathematical function1" {
                    mathematical_fn = "sqrt"
                }
                [
                    position = 8312, 8224
                    hide_name = True
                ]

                component tm_delay "Unit Delay4" {
                    signal_out_type = "real"
                }
                [
                    position = 8720, 8680
                    hide_name = True
                ]

                component gen_rel_op "Relational operator2" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8120
                    hide_name = True
                ]

                port In3 {
                    label = "Inverter speed"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7640, 8152
                ]

                tag theta_bus6 {
                    value = "del_V"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8048, 8608
                    hide_name = True
                ]

                tag theta_bus3 {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8360
                    hide_name = True
                ]

                tag Goto33 {
                    value = "Vd_G"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7440, 8552
                    hide_name = True
                    size = 60, 20
                ]

                tag From43 {
                    value = "Vd_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8312
                    hide_name = True
                ]

                tag From36 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8184
                    hide_name = True
                ]

                tag Connect1 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9016, 8176
                    hide_name = True
                ]

                tag From39 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8264
                    hide_name = True
                ]

                tag From35 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8296
                    hide_name = True
                    size = 60, 20
                ]

                tag Vb_G1 {
                    value = "VbG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8560
                    hide_name = True
                ]

                tag w_bus1 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7696, 8568
                    hide_name = True
                ]

                tag theta_bus5 {
                    value = "del_V"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8248, 8584
                    hide_name = True
                ]

                tag theta_bus2 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8200
                    hide_name = True
                ]

                tag "|V|1" {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7512, 8352
                    hide_name = True
                ]

                tag From41 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8032
                    hide_name = True
                ]

                tag theta_bus {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8656
                    hide_name = True
                ]

                tag From33 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8264
                    hide_name = True
                    size = 60, 20
                ]

                tag Va_G1 {
                    value = "VaG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8536
                    hide_name = True
                ]

                tag Goto29 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7912, 8264
                    hide_name = True
                    size = 60, 20
                ]

                tag Connect2 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 8432
                    hide_name = True
                ]

                tag From42 {
                    value = "Vq_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8392
                    hide_name = True
                ]

                tag From1 {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 8184
                    hide_name = True
                ]

                tag From44 {
                    value = "Vd_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8120
                    hide_name = True
                ]

                tag Goto32 {
                    value = "Vq_G"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7544, 8536
                    hide_name = True
                    size = 60, 20
                ]

                tag From45 {
                    value = "Vq_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8088
                    hide_name = True
                ]

                tag From34 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8328
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto31 {
                    value = "del_Q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8800, 8680
                    hide_name = True
                ]

                tag Vc_G1 {
                    value = "VcG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8584
                    hide_name = True
                ]

                tag Goto2 {
                    value = "del_P"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8496, 8424
                    hide_name = True
                ]

                tag Goto30 {
                    value = "del_V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8504, 8160
                    hide_name = True
                ]

                tag From40 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8000
                    hide_name = True
                ]

                tag Connect3 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8512, 8688
                    hide_name = True
                ]

                tag Goto28 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7912, 8360
                    hide_name = True
                    size = 60, 20
                ]

                junction Junction51 sp
                [
                    position = 8800, 8128
                ]

                junction Junction47 sp
                [
                    position = 7976, 8128
                ]

                junction Junction48 sp
                [
                    position = 8256, 8056
                ]

                junction Junction26 sp
                [
                    position = 8112, 8184
                ]

                junction Junction52 sp
                [
                    position = 8944, 8176
                ]

                junction Junction35 sp
                [
                    position = 8424, 8192
                ]

                junction Junction41 sp
                [
                    position = 7480, 8576
                ]

                junction Junction38 sp
                [
                    position = 8304, 8120
                ]

                junction Junction46 sp
                [
                    position = 7976, 8176
                ]

                junction Junction45 sp
                [
                    position = 7696, 8656
                ]

                junction Junction43 sp
                [
                    position = 7216, 8312
                ]

                junction Junction49 sp
                [
                    position = 7872, 8064
                ]

                junction Junction42 sp
                [
                    position = 7216, 8392
                ]

                junction Junction50 sp
                [
                    position = 8000, 8064
                ]

                junction Junction53 sp
                [
                    position = 8944, 8208
                ]

                junction Junction28 sp
                [
                    position = 8112, 8264
                ]

                junction Junction39 sp
                [
                    position = 8560, 8136
                ]

                connect "Hold after connect1.out" "Unit Delay4.in" as Connection355
                connect Junction38 "Relational operator2.out" as Connection365
                [
                    breakpoints = 8288, 8120; 8288, 8120
                ]
                connect Constant9.out "Relational operator4.in1" as Connection85
                connect Vc_G1 "abc to dq1.vc" as Connection222
                connect "Logical operator1.in3" "Relational operator5.out" as Connection371
                [
                    breakpoints = 8576, 8152; 8576, 8288
                ]
                connect "confine phase.out" Junction49 as Connection428
                connect Junction52 Connect1 as Connection445
                connect "Digital Probe5.in" Junction39 as Connection375
                connect frequency_diff3.in Junction47 as Connection422
                connect "confine phase2.out" Sum1.in1 as Connection399
                connect Gain3.out Sum2.in1 as Connection64
                connect Junction51 "Signal switch1.in2" as Connection440
                connect Abs2.in Junction35 as Connection306
                connect Goto31 "Unit Delay4.out" as Connection437
                connect Junction43 From43 as Connection389
                connect PLL.w w_bus1 as Connection233
                connect Product1.out Sum4.in as Connection250
                connect Gain6.out Junction41 as Connection381
                connect "Logical operator2.in" Junction53 as Connection457
                connect From34 Current_abc_to_dq3.Ec as Connection280
                connect Sum4.out "Mathematical function1.in" as Connection252
                connect From45 "Trigonometric function2.in" as Connection401
                connect "Connect G3.out" "Signal switch1.in1" as Connection442
                connect "Signal switch1.in" Junction51 as Connection441
                connect Junction50 Abs4.out as Connection432
                connect "Signal switch1.out" Junction52 as Connection444
                connect Product1.in Junction26 as Connection247
                connect From35 Current_abc_to_dq3.Eb as Connection279
                connect Clock1.out "Relational operator5.in" as Connection263
                connect Product4.out Sum5.in1 as Connection388
                connect Junction49 Abs4.in as Connection429
                connect "Relational operator1.in1" Junction50 as Connection431
                connect "Digital Probe1.in" Junction53 as Connection455
                connect Sum3.in1 From1 as Connection81
                connect Goto32 Junction41 as Connection383
                connect "Hold after connect.out" "Unit Delay3.in" as Connection291
                connect volt_diff3.in theta_bus6 as Connection316
                connect theta_bus5 "BE1-25A Synchronizer1.dV" as Connection309
                connect "Relational operator2.in1" Abs5.out as Connection357
                connect Junction47 Abs5.in as Connection421
                [
                    breakpoints = 7976, 8128; 7976, 8128
                ]
                connect theta_bus Junction45 as Connection404
                connect "Digital Probe6.in" "Logical operator2.out" as Connection454
                connect Product3.in Junction43 as Connection386
                connect "Unit Delay3.out" Goto2 as Connection434
                [
                    breakpoints = 8440, 8424
                ]
                connect Junction53 Junction52 as Connection456
                connect Goto29 Gain7.out as Connection321
                connect angle_diff3.in Junction49 as Connection430
                connect "confine phase2.in" "Trigonometric function2.out" as Connection397
                connect Vb_G1 "abc to dq1.vb" as Connection223
                connect Constant3.out "BE1-25A Synchronizer.max_T" as Connection66
                connect "Unit Delay2.out" Junction45 as Connection406
                connect Goto30 Junction35 as Connection308
                connect "Logical operator1.in1" Junction38 as Connection364
                [
                    breakpoints = 8576, 8120
                ]
                connect "confine phase.in" Sum1.out as Connection146
                connect From41 Limit1.in as Connection285
                connect "Unit Delay2.in" PLL.wt as Connection348
                connect From44 Limit2.in as Connection402
                connect "confine phase1.in" "Trigonometric function1.out" as Connection290
                connect theta_bus3 Current_abc_to_dq3.wt as Connection281
                connect Product2.in Junction28 as Connection261
                connect "Digital Probe4.in" Junction38 as Connection366
                connect "abc to dq1.q_axis" Gain6.in as Connection319
                connect Junction46 Junction47 as Connection420
                [
                    breakpoints = 7976, 8176; 7976, 8176
                ]
                connect "Mathematical function2.out" "|V|1" as Connection436
                [
                    breakpoints = 7456, 8352
                ]
                connect Connect3 "Hold after connect1.connect" as Connection354
                connect Constant4.out "BE1-25A Synchronizer.max_slip" as Connection67
                connect Va_G1 "abc to dq1.va" as Connection224
                connect Gain4.out Sum2.in as Connection62
                connect Junction39 "Relational operator4.out" as Connection374
                [
                    breakpoints = 8560, 8136; 8560, 8208; 8560, 8136
                ]
                connect Goto33 Gain5.out as Connection380
                connect Constant6.out "Relational operator1.in" as Connection69
                connect "Logical operator1.in" Junction48 as Connection424
                [
                    breakpoints = 8576, 8056; 8480, 8056; 8480, 8056
                ]
                connect Product4.in Junction42 as Connection385
                connect Gain7.in Current_abc_to_dq3.Ed as Connection322
                connect Junction26 From36 as Connection248
                connect Abs2.out "Relational operator4.in" as Connection84
                connect Constant7.out "Relational operator2.in" as Connection70
                connect "Relational operator1.out" Junction48 as Connection426
                connect Junction45 "abc to dq1.wt" as Connection405
                connect "Hold after connect.in" "BE1-25A Synchronizer.del_P" as Connection408
                connect Junction42 Product4.in1 as Connection392
                connect "stay connected.in" "Logical operator1.out" as Connection92
                connect In3 Gain4.in as Connection240
                connect "confine phase1.out" Sum1.in as Connection400
                connect Junction48 "Digital Probe3.in" as Connection425
                [
                    breakpoints = 8256, 8056
                ]
                connect "Unit Delay1.in" "stay connected.out" as Connection102
                connect "Mathematical function1.out" Sum3.in as Connection253
                connect From39 Junction28 as Connection259
                connect Sum5.out "Mathematical function2.in" as Connection387
                connect Junction35 Sum3.out as Connection307
                connect Constant13.out "BE1-25A Synchronizer1.max_slip" as Connection304
                connect "BE1-25A Synchronizer1.del_Q" "Hold after connect1.in" as Connection356
                connect Limit2.out "Trigonometric function2.in1" as Connection398
                connect Junction41 PLL.q as Connection382
                connect Sum2.out Junction46 as Connection413
                [
                    breakpoints = 7864, 8176
                ]
                connect Product3.in1 Junction43 as Connection391
                connect theta_bus2 Gain3.in as Connection241
                connect Product2.out Sum4.in1 as Connection251
                connect From33 Current_abc_to_dq3.Ea as Connection278
                connect From40 "Trigonometric function1.in" as Connection284
                connect "BE1-25A Synchronizer1.max_Q" Constant11.out as Connection305
                connect Limit1.out "Trigonometric function1.in1" as Connection286
                connect From42 Junction42 as Connection384
                connect Product3.out Sum5.in as Connection390
                connect "Logical operator1.in2" Junction39 as Connection373
                connect Goto28 Gain8.out as Connection323
                connect Gain5.in "abc to dq1.d_axis" as Connection318
                connect Connect2 "Hold after connect.connect" as Connection156
                connect "Unit Delay1.out" Junction51 as Connection439
                connect Product1.in1 Junction26 as Connection249
                connect Gain8.in Current_abc_to_dq3.Eq as Connection324
                connect Junction46 "BE1-25A Synchronizer.df" as Connection414
                [
                    breakpoints = 7976, 8176
                ]
                connect Junction28 Product2.in1 as Connection260
                connect Termination1.in "abc to dq1.zero_axis" as Connection29
                connect Constant10.out "Relational operator5.in1" as Connection262
                connect "BE1-25A Synchronizer.angle_slip" Junction50 as Connection433
            }
            [
                position = 9752, 7456
                size = 112, 216
            ]

            component "core/Signal Controlled Voltage Source" Va_inv {
            }
            [
                position = 7008, 7944
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_inductor L0a1 {
                inductance = "L_i"
            }
            [
                position = 7744, 7904
                rotation = down
            ]

            component "core/Voltage Measurement" VcG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9864, 8408
                rotation = right
                size = 64, 32
            ]

            component pas_inductor Lgridb_1 {
                inductance = "L"
            }
            [
                position = 9144, 8000
                rotation = down
            ]

            component pas_capacitor Cc1 {
                capacitance = "C_s"
            }
            [
                position = 8176, 8352
                rotation = right
            ]

            component "core/Current Measurement" Ia1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 7904
                size = 64, 32
            ]

            component "core/Current Measurement" Xi_b1 {
                addr = "15"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7888, 8000
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Voltage Measurement" Vc2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7856, 8480
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rt0c1 {
                resistance = "R_s"
            }
            [
                position = 8176, 8256
                rotation = left
                scale = -1, 1
            ]

            component pas_resistor Ra1 {
                resistance = "R_o"
            }
            [
                position = 8776, 7904
            ]

            component Subsystem Controller {
                layout = dynamic
                component gen_gain Gain4 {
                    gain = "1/T_m"
                }
                [
                    position = 6992, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 7192, 8224
                    scale = -1, 1
                ]

                component gen_probe E_d1 {
                    addr = "8965"
                }
                [
                    position = 7752, 8336
                    scale = -1, 1
                ]

                component gen_probe E_qREF1 {
                }
                [
                    position = 7568, 8056
                ]

                component Subsystem "Frequency droop" {
                    layout = dynamic
                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 8272, 8104
                        scale = -1, 1
                    ]

                    component gen_gain Gain4 {
                        gain = "1/D_f"
                    }
                    [
                        position = 8272, 8200
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum5 {
                        signs = "++"
                    }
                    [
                        position = 8064, 8152
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "w_0"
                    }
                    [
                        position = 8064, 8232
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "++"
                    }
                    [
                        position = 7880, 8160
                        scale = -1, 1
                    ]

                    component sys_signal_switch "Signal switch1" {
                        criterion = "ctrl != threshold"
                        threshold = "1"
                    }
                    [
                        position = 8272, 7992
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_product Product1 {
                        signs = "/*"
                    }
                    [
                        position = 8144, 8032
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant5 {
                        execution_rate = "Ts"
                        value = "D_f"
                    }
                    [
                        position = 8400, 7968
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "0.13"
                    }
                    [
                        position = 8400, 8016
                        hide_name = True
                        scale = -1, 1
                    ]

                    port w1 {
                        label = "w1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7824, 8160
                        scale = -1, 1
                    ]

                    port U_P {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8360, 8072
                        scale = -1, 1
                    ]

                    port "Switch droop" {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8400, 7912
                        scale = -1, 1
                    ]

                    port "U - P" {
                        label = "U - P"
                        position = top:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8152, 8160
                        scale = -1, 1
                    ]

                    tag theta_bus6 {
                        value = "del_P"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8368, 8200
                        hide_name = True
                        scale = -1, 1
                    ]

                    tag From17 {
                        value = "P1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8360, 8128
                        scale = -1, 1
                    ]

                    junction Junction1 sp
                    [
                        position = 8208, 8104
                    ]

                    connect Gain4.out Sum5.in1 as Connection356
                    connect Product1.in1 Junction1 as Connection384
                    connect Sum5.out Sum4.in as Connection369
                    [
                        breakpoints = 7984, 8152; 7968, 8152
                    ]
                    connect From17 Sum1.in1 as Connection316
                    connect Sum4.out w1 as Connection307
                    connect Constant4.out Sum4.in1 as Connection363
                    connect Product1.out Sum5.in as Connection385
                    connect U_P Sum1.in as Connection368
                    connect Constant6.out "Signal switch1.in1" as Connection327
                    connect Junction1 "U - P" as Connection383
                    [
                        breakpoints = 8208, 8104
                    ]
                    connect Gain4.in theta_bus6 as Connection380
                    connect Sum1.out Junction1 as Connection382
                    connect "Switch droop" "Signal switch1.in2" as Connection337
                    connect "Signal switch1.out" Product1.in as Connection328
                    connect Constant5.out "Signal switch1.in" as Connection326
                }
                [
                    position = 8296, 8184
                    size = 96, 120
                ]

                component gen_product Product111 {
                }
                [
                    position = 7368, 8216
                    scale = -1, 1
                ]

                component gen_probe E_dREF1 {
                }
                [
                    position = 7568, 7848
                ]

                component gen_probe Q1 {
                }
                [
                    position = 7072, 8488
                    rotation = down
                ]

                component gen_gain Gain7 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7856, 7944
                    hide_name = True
                    scale = -1, -1
                ]

                component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                    layout = dynamic
                    component gen_sum Sum8 {
                    }
                    [
                        position = 9160, 8232
                        scale = -1, 1
                    ]

                    component Subsystem "inner current control loop" {
                        layout = dynamic
                        component gen_sum Sum7 {
                        }
                        [
                            position = 7760, 8232
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8128, 8432
                            scale = -1, -1
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8168, 8336
                            scale = -1, 1
                        ]

                        component gen_product Product3 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8112
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller2" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8208, 8224
                            scale = -1, 1
                        ]

                        component gen_sum Sum3 {
                        }
                        [
                            position = 7760, 8048
                            scale = -1, 1
                        ]

                        component gen_product Product4 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8280
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8224, 8472
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8328, 8040
                            scale = -1, 1
                        ]

                        component gen_probe XiQ_ctrl {
                        }
                        [
                            position = 8288, 8264
                        ]

                        component gen_probe XiD_ctrl {
                        }
                        [
                            position = 8208, 7952
                        ]

                        component gen_sum Sum6 {
                        }
                        [
                            position = 8032, 8272
                            scale = -1, 1
                        ]

                        component gen_gain Gain7 {
                            gain = "L_i"
                        }
                        [
                            position = 8272, 8368
                            scale = -1, 1
                        ]

                        component gen_gain Gain6 {
                            gain = "L_i"
                        }
                        [
                            position = 8256, 8176
                            scale = -1, 1
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8168, 8144
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "+-"
                        }
                        [
                            position = 8320, 8224
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8216, 8416
                            scale = -1, 1
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8336, 8512
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 8024, 8432
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8200, 8040
                            scale = -1, 1
                        ]

                        component gen_sum Sum5 {
                            signs = "+-"
                        }
                        [
                            position = 8024, 8104
                            scale = -1, 1
                        ]

                        port Ud1 {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8048
                            rotation = down
                        ]

                        port Xi_q_meas1 {
                            label = "Xi_q_meas1"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8520, 8264
                            rotation = down
                        ]

                        port Xi_d_ref1 {
                            label = "Xi_d_ref1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8032
                            rotation = down
                        ]

                        port Uq1 {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8232
                            rotation = down
                        ]

                        port Xi_q_ref1 {
                            label = "Xi_q_ref1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8520, 8192
                            rotation = down
                        ]

                        port Xi_d_meas1 {
                            label = "Xi_d_meas1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8112
                            rotation = down
                        ]

                        tag From23 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8272, 8112
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From24 {
                            value = "Ed1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 8056
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From25 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8312
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From26 {
                            value = "Eq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8128, 8264
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8384, 8448
                            scale = -1, 1
                            size = 60, 20
                        ]

                        junction Junction176 sp
                        [
                            position = 8400, 8232
                        ]

                        junction Junction179 sp
                        [
                            position = 8160, 8224
                        ]

                        junction Junction178 sp
                        [
                            position = 8160, 8040
                        ]

                        junction Junction177 sp
                        [
                            position = 8400, 8112
                        ]

                        junction Junction172 sp
                        [
                            position = 8280, 8448
                        ]

                        junction Junction171 sp
                        [
                            position = 7944, 8288
                        ]

                        connect Sum5.in From24 as Connection23
                        connect Sum8.out "PID controller1.in" as Connection302
                        [
                            breakpoints = 8240, 8040
                        ]
                        connect Junction176 Sum9.in1 as Connection291
                        connect Gain6.out Product1.in1 as Connection289
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Uq1 Sum7.out as Connection264
                        connect Product3.out Sum3.in1 as Connection17
                        connect Gain7.out Product2.in1 as Connection293
                        connect Product4.in1 Junction171 as Connection252
                        connect "PID controller1.out" Junction178 as Connection303
                        connect Product4.out Sum7.in1 as Connection19
                        connect Xi_d_meas1 Junction177 as Connection299
                        connect Junction178 Sum3.in as Connection304
                        connect Sum3.out Ud1 as Connection263
                        connect Junction179 "PID controller2.out" as Connection308
                        connect Sum8.in Xi_d_ref1 as Connection297
                        connect Xi_q_meas1 Junction176 as Connection290
                        connect Junction172 Comparator1.in1 as Connection267
                        connect Comparator1.out "Signal switch1.in2" as Connection57
                        connect Sum6.in1 Product2.out as Connection26
                        connect Sum8.in1 Junction177 as Connection301
                        connect "PID controller2.in" Sum9.out as Connection306
                        [
                            breakpoints = 8240, 8224
                        ]
                        connect "Signal switch1.in" Junction172 as Connection266
                        connect Sum5.out Product3.in as Connection25
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect Sum6.out Product4.in as Connection27
                        connect Gain6.in Junction176 as Connection292
                        connect Sum5.in1 Product1.out as Connection24
                        connect From25 Product2.in as Connection2
                        connect Limit_zero.out Comparator1.in2 as Connection251
                        connect Gain5.out Junction171 as Connection254
                        connect XiQ_ctrl.in Junction179 as Connection309
                        connect From26 Sum6.in as Connection3
                        connect Sum9.in Xi_q_ref1 as Connection283
                        connect From23 Product1.in as Connection1
                        connect Sum7.in Junction179 as Connection307
                        connect Junction177 Gain7.in as Connection300
                        connect XiD_ctrl.in Junction178 as Connection305
                        connect From27 Junction172 as Connection268
                        connect Junction171 Product3.in1 as Connection253
                    }
                    [
                        position = 8608, 8424
                        size = 96, 184
                    ]

                    component Subsystem "dq to abc" {
                        layout = dynamic
                        component "core/dq to abc" "dq to abc1" {
                            execution_rate = "inherit"
                        }
                        [
                            position = 7744, 8184
                            size = 48, 80
                        ]

                        component src_constant o_ref {
                            execution_rate = "Ts"
                            value = "[0]"
                        }
                        [
                            position = 7520, 8200
                        ]

                        port q {
                            label = "Uq1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8168
                        ]

                        port c {
                            label = "c"
                            position = left:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8216
                        ]

                        port b {
                            label = "b"
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8184
                        ]

                        port alpha {
                            label = "alpha1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7600, 8232
                        ]

                        port d {
                            label = "Ud1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 8136
                        ]

                        port a {
                            label = "a"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8152
                        ]

                        connect alpha "dq to abc1.wt" as Connection7
                        connect c "dq to abc1.phase_c" as Connection2
                        connect q "dq to abc1.q_input" as Connection6
                        connect d "dq to abc1.d_input" as Connection3
                        connect "dq to abc1.phase_b" b as Connection4
                        connect o_ref.out "dq to abc1.zero_input" as Connection5
                        connect a "dq to abc1.phase_a" as Connection1
                    }
                    [
                        position = 8344, 8456
                        size = 80, 168
                    ]

                    component gen_gain Gain3 {
                        gain = "R_s"
                    }
                    [
                        position = 9272, 8496
                        scale = -1, 1
                    ]

                    component gen_gain Gain5 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8464, 8392
                        hide_name = True
                        scale = -1, -1
                    ]

                    component Subsystem "Outer voltage control loop" {
                        layout = dynamic
                        component gen_product Product5 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8256
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller4" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8504
                            scale = -1, 1
                        ]

                        component gen_sum Sum12 {
                            signs = "++"
                        }
                        [
                            position = 7616, 8512
                            scale = -1, 1
                        ]

                        component gen_sum Sum13 {
                            signs = "++"
                        }
                        [
                            position = 7936, 8584
                            scale = -1, 1
                        ]

                        component gen_product Product7 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8592
                            scale = -1, 1
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8272, 8848
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8168
                            scale = -1, 1
                        ]

                        component gen_product Product6 {
                        }
                        [
                            position = 8152, 8320
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller3" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8168
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8160, 8808
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8152, 8752
                            scale = -1, 1
                        ]

                        component gen_probe ED_ctrl {
                        }
                        [
                            position = 8296, 8096
                        ]

                        component gen_gain Gain4 {
                            gain = "C_s"
                        }
                        [
                            position = 8248, 8352
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8064, 8768
                            scale = -1, -1
                        ]

                        component gen_gain Gain6 {
                            gain = "C_s"
                        }
                        [
                            position = 8248, 8712
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 7960, 8768
                            scale = -1, 1
                        ]

                        component gen_sum Sum10 {
                            signs = "+-"
                        }
                        [
                            position = 7952, 8248
                            scale = -1, 1
                        ]

                        component gen_probe EQ_ctrl {
                        }
                        [
                            position = 8296, 8432
                        ]

                        component gen_sum Sum11 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8504
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "++"
                        }
                        [
                            position = 7632, 8176
                            scale = -1, 1
                        ]

                        component gen_product Product8 {
                        }
                        [
                            position = 8144, 8680
                            scale = -1, 1
                        ]

                        port "^E_d_ref" {
                            label = "^E_d_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8128
                            scale = -1, 1
                        ]

                        port Xi_rd1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8176
                            scale = -1, 1
                        ]

                        port "^E_q_ref" {
                            label = "^E_q_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8464
                            scale = -1, 1
                        ]

                        port "^E_q" {
                            label = "^E_q1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8512
                            scale = -1, 1
                        ]

                        port "^E_d" {
                            label = "^E_d1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8176
                            scale = -1, 1
                        ]

                        port Xi_rq1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8512
                            scale = -1, 1
                        ]

                        tag From36 {
                            value = "Iq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8376, 8560
                            scale = -1, 1
                        ]

                        tag From33 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8280, 8280
                            scale = -1, 1
                        ]

                        tag From35 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8280, 8640
                            scale = -1, 1
                        ]

                        tag From32 {
                            value = "Id1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8424, 8224
                            scale = -1, 1
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8320, 8784
                            scale = -1, 1
                            size = 60, 20
                        ]

                        junction Junction159 sp
                        [
                            position = 8480, 8176
                        ]

                        junction Junction172 sp
                        [
                            position = 8240, 8168
                        ]

                        junction Junction171 sp
                        [
                            position = 8232, 8504
                        ]

                        junction Junction158 sp
                        [
                            position = 8448, 8512
                        ]

                        junction Junction170 sp
                        [
                            position = 8216, 8784
                        ]

                        junction Junction153 sp
                        [
                            position = 7872, 8600
                        ]

                        connect Product5.in Sum10.out as Connection71
                        connect Limit_zero.out Comparator1.in2 as Connection19
                        connect Sum8.in1 Junction159 as Connection118
                        connect Sum13.in1 Product8.out as Connection233
                        connect Xi_rq1 Sum12.out as Connection105
                        connect Junction170 "Signal switch1.in" as Connection257
                        connect Sum9.in1 Product5.out as Connection243
                        connect Junction153 Product7.in1 as Connection93
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Gain4.in Junction158 as Connection117
                        connect Comparator1.in1 Junction170 as Connection256
                        connect Xi_rd1 Sum9.out as Connection104
                        connect "PID controller3.in" Sum8.out as Connection262
                        [
                            breakpoints = 8336, 8168
                        ]
                        connect "^E_d_ref" Sum8.in as Connection215
                        connect Product7.in Sum13.out as Connection89
                        connect "PID controller3.out" Junction172 as Connection266
                        connect "^E_d" Junction159 as Connection216
                        connect Gain6.out Product8.in1 as Connection84
                        connect Junction171 "PID controller4.out" as Connection264
                        connect Gain5.out Junction153 as Connection92
                        connect From35 Product8.in as Connection79
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect Junction172 Sum9.in as Connection267
                        connect ED_ctrl.in Junction172 as Connection268
                        [
                            breakpoints = 8240, 8160
                        ]
                        connect From27 Junction170 as Connection258
                        connect From36 Sum13.in as Connection260
                        connect Gain4.out Product6.in1 as Connection69
                        connect Product5.in1 Junction153 as Connection94
                        connect Comparator1.out "Signal switch1.in2" as Connection2
                        connect Sum10.in1 Product6.out as Connection67
                        connect EQ_ctrl.in Junction171 as Connection265
                        connect Sum11.out "PID controller4.in" as Connection261
                        [
                            breakpoints = 8336, 8504
                        ]
                        connect "^E_q" Junction158 as Connection218
                        connect Gain6.in Junction159 as Connection120
                        connect From32 Sum10.in as Connection259
                        connect Sum12.in Junction171 as Connection263
                        connect From33 Product6.in as Connection68
                        connect Sum11.in "^E_q_ref" as Connection217
                        connect Sum11.in1 Junction158 as Connection115
                        connect Sum12.in1 Product7.out as Connection244
                    }
                    [
                        position = 8864, 8400
                        scale = -1, 1
                        size = 152, 168
                    ]

                    component gen_sum Sum10 {
                        signs = "+-"
                    }
                    [
                        position = 9368, 8496
                        scale = -1, 1
                    ]

                    component gen_gain Gain4 {
                        gain = "R_s"
                    }
                    [
                        position = 9280, 8192
                        scale = -1, 1
                    ]

                    component gen_sum Sum11 {
                        signs = "+-"
                    }
                    [
                        position = 9376, 8192
                        scale = -1, 1
                    ]

                    component gen_sum Sum7 {
                    }
                    [
                        position = 9128, 8552
                        scale = -1, 1
                    ]

                    component gen_gain Gain6 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8496, 8456
                        hide_name = True
                        scale = -1, -1
                    ]

                    port E_d_ref1 {
                        label = "E_d_ref1"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9408, 8632
                        rotation = down
                    ]

                    port Uc1 {
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8520
                        rotation = down
                    ]

                    port E_q_ref1 {
                        label = "E_q_ref1"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9424, 8304
                        rotation = down
                    ]

                    port Ub1 {
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8456
                        rotation = down
                    ]

                    port Ua1 {
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8392
                        rotation = down
                    ]

                    tag From39 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8544
                        rotation = down
                    ]

                    tag From40 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8232
                        rotation = down
                    ]

                    tag From36 {
                        value = "E_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8384
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From37 {
                        value = "E_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8464
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From30 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8496
                        scale = -1, 1
                    ]

                    tag From31 {
                        value = "Iq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8152
                        rotation = down
                    ]

                    tag From38 {
                        value = "Id1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8448
                        rotation = down
                        size = 56, 20
                    ]

                    tag From1 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 8560
                        scale = -1, 1
                        size = 63, 25
                    ]

                    tag From29 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8400
                        scale = -1, 1
                    ]

                    connect From36 "Outer voltage control loop.^E_q" as Connection322
                    connect "dq to abc.c" Uc1 as Connection284
                    connect Sum10.out Gain3.in as Connection287
                    connect From30 "inner current control loop.Xi_q_meas1" as Connection257
                    connect "dq to abc.alpha" From1 as Connection229
                    [
                        breakpoints = 8400, 8560; 8544, 8560
                    ]
                    connect "inner current control loop.Xi_d_ref1" "Outer voltage control loop.Xi_rd1" as Connection326
                    connect Gain5.in "inner current control loop.Ud1" as Connection345
                    [
                        breakpoints = 8544, 8352
                    ]
                    connect "dq to abc.a" Ua1 as Connection283
                    connect From29 "inner current control loop.Xi_d_meas1" as Connection253
                    connect "inner current control loop.Xi_q_ref1" "Outer voltage control loop.Xi_rq1" as Connection327
                    connect From31 Sum11.in as Connection293
                    connect "Outer voltage control loop.^E_d" From37 as Connection301
                    connect Sum8.out "Outer voltage control loop.^E_q_ref" as Connection347
                    connect Gain3.out Sum7.in as Connection289
                    connect "dq to abc.q" Gain6.out as Connection339
                    connect From40 Sum11.in1 as Connection294
                    connect Sum7.in1 E_d_ref1 as Connection324
                    connect Sum11.out Gain4.in as Connection290
                    connect From38 Sum10.in as Connection285
                    connect Gain4.out Sum8.in as Connection343
                    connect From39 Sum10.in1 as Connection286
                    connect "dq to abc.b" Ub1 as Connection282
                    connect "dq to abc.d" Gain5.out as Connection337
                    connect "Outer voltage control loop.^E_d_ref" Sum7.out as Connection317
                    connect Gain6.in "inner current control loop.Uq1" as Connection346
                    [
                        breakpoints = 8544, 8496
                    ]
                    connect E_q_ref1 Sum8.in1 as Connection344
                }
                [
                    position = 7352, 7952
                    size = 128, 152
                ]

                component Subsystem Current_abc_to_dq4 {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    connect "^Ec2" "abc to dq1.vc" as Connection3
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                }
                [
                    position = 7480, 8680
                    size = 80, 168
                ]

                component gen_gain Gain15 {
                    gain = "S/1e3"
                }
                [
                    position = 7136, 8168
                    rotation = right
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_sum Sum5 {
                    signs = "+-"
                }
                [
                    position = 7080, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_product Product10 {
                }
                [
                    position = 7368, 8296
                    scale = -1, 1
                ]

                component gen_product Product13 {
                }
                [
                    position = 7368, 8464
                    scale = -1, 1
                ]

                component gen_probe f1 {
                }
                [
                    position = 8248, 8312
                    rotation = down
                ]

                component gen_gain Gain1 {
                    gain = "1/(2*np.pi)"
                }
                [
                    position = 8336, 8312
                    scale = -1, 1
                ]

                component gen_probe Qpu {
                }
                [
                    position = 7072, 8544
                    rotation = down
                ]

                component gen_integrator Integrator1 {
                }
                [
                    position = 8440, 8536
                    scale = -1, 1
                ]

                component gen_gain Gain9 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7856, 8392
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_integrator Integrator2 {
                }
                [
                    position = 6896, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_integrator Integrator3 {
                }
                [
                    position = 6904, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8120
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7200, 7952
                    scale = -1, 1
                ]

                component gen_gain Gain14 {
                    gain = "S/1e3"
                }
                [
                    position = 7136, 8456
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain12 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8744
                    hide_name = True
                    scale = -1, -1
                ]

                component Subsystem "Voltage droop" {
                    layout = dynamic
                    component gen_sum Sum3 {
                        signs = "++"
                    }
                    [
                        position = 7928, 8176
                        scale = -1, 1
                    ]

                    component gen_probe E_1 {
                    }
                    [
                        position = 7936, 8096
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 8320, 8096
                        scale = -1, 1
                    ]

                    component gen_gain Gain4 {
                        gain = "1/D_V"
                    }
                    [
                        position = 8296, 8192
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_gain Gain3 {
                        gain = "1/D_V"
                    }
                    [
                        position = 8240, 8096
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "++"
                    }
                    [
                        position = 8096, 8144
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 8080, 8248
                        hide_name = True
                        scale = -1, 1
                    ]

                    port E_magnitude1 {
                        label = "E_magnitude1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8176
                        scale = -1, 1
                    ]

                    port Q_ref1 {
                        label = "Q_ref1"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8464, 8072
                        scale = -1, 1
                    ]

                    tag From18 {
                        value = "Q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8464, 8120
                        scale = -1, 1
                    ]

                    tag theta_bus6 {
                        value = "del_Q"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8408, 8192
                        hide_name = True
                        scale = -1, 1
                    ]

                    junction Junction2 sp
                    [
                        position = 7832, 8176
                    ]

                    connect Gain4.in theta_bus6 as Connection357
                    connect Gain3.out Sum4.in as Connection359
                    connect Gain3.in Sum2.out as Connection325
                    connect Constant4.out Sum3.in1 as Connection318
                    connect Q_ref1 Sum2.in as Connection360
                    connect Sum4.out Sum3.in as Connection365
                    [
                        breakpoints = 7968, 8144
                    ]
                    connect Junction2 Sum3.out as Connection321
                    connect From18 Sum2.in1 as Connection323
                    connect Gain4.out Sum4.in1 as Connection356
                    connect E_1.in Junction2 as Connection322
                    connect E_magnitude1 Junction2 as Connection320
                }
                [
                    position = 8296, 7944
                    size = 120, 96
                ]

                component gen_gain Gain11 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8616
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain6 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7856, 7816
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain8 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7856, 8248
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe E_q1 {
                }
                [
                    position = 7752, 8192
                    scale = -1, 1
                ]

                component gen_sum Sum4 {
                    signs = "+-"
                }
                [
                    position = 7072, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe P1 {
                }
                [
                    position = 7080, 8136
                    rotation = down
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 7912, 8776
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 7192, 8368
                    scale = -1, 1
                ]

                component Subsystem Current_abc_to_dq2 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Ed2 {
                        label = "Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Eb2 {
                        label = "Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port Ea2 {
                        label = "Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Ec2 {
                        label = "Ec2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Eq2 {
                        label = "Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    connect Eb2 "abc to dq1.vb" as Connection2
                    connect Ec2 "abc to dq1.vc" as Connection3
                    connect "abc to dq1.d_axis" Ed2 as Connection5
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect Ea2 "abc to dq1.va" as Connection1
                    connect "abc to dq1.q_axis" Eq2 as Connection6
                    connect wt2 "abc to dq1.wt" as Connection7
                }
                [
                    position = 7936, 8184
                    size = 80, 168
                ]

                component Subsystem Current_abc_to_dq {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Xi_c2 {
                        label = "Xi_c2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Xi_a2 {
                        label = "Xi_a2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port Xi_d2 {
                        label = "Xi_d2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Xi_q2 {
                        label = "Xi_q2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Xi_b2 {
                        label = "Xi_b2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect Xi_c2 "abc to dq1.vc" as Connection3
                    connect Xi_a2 "abc to dq1.va" as Connection1
                    connect Xi_b2 "abc to dq1.vb" as Connection2
                    connect "abc to dq1.q_axis" Xi_q2 as Connection6
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" Xi_d2 as Connection5
                }
                [
                    position = 7936, 7880
                    size = 80, 168
                ]

                component gen_gain Gain13 {
                    gain = "1/T_m"
                }
                [
                    position = 7000, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_product Product12 {
                }
                [
                    position = 7368, 8376
                    scale = -1, 1
                ]

                component gen_gain Gain10 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8520
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe Ppu {
                }
                [
                    position = 7080, 8080
                    rotation = down
                ]

                component Subsystem Current_abc_to_dq3 {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    connect wt2 "abc to dq1.wt" as Connection7
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Ec2" "abc to dq1.vc" as Connection3
                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                }
                [
                    position = 7936, 8456
                    size = 80, 168
                ]

                component gen_gain Gain16 {
                    gain = "S/60e3"
                }
                [
                    position = 7168, 8136
                    rotation = left
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain17 {
                    gain = "S/60e3"
                }
                [
                    position = 7168, 8496
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                ]

                port "Switch droop" {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8512, 8184
                    scale = -1, 1
                ]

                port "U - P" {
                    position = top:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8296, 8088
                    rotation = right
                    scale = -1, -1
                ]

                port U_P {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8440, 8144
                    scale = -1, 1
                ]

                port U_Q {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8592, 7912
                    scale = -1, 1
                ]

                tag From39 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8400
                    scale = -1, 1
                ]

                tag Goto45 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8648
                    scale = -1, 1
                    size = 64, 20
                ]

                tag From43 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 8648
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto20 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8744
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From20 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 7896
                    scale = -1, 1
                    size = 67, 20
                ]

                tag From38 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8472
                    scale = -1, 1
                ]

                tag From5 {
                    value = "Xi_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7816
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From35 {
                    value = "E_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8432
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From37 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8256
                    scale = -1, 1
                ]

                tag From32 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8480
                    scale = -1, 1
                ]

                tag From27 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8208
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From33 {
                    value = "E_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto19 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8616
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto22 {
                    value = "Xi_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 7816
                    scale = -1, 1
                ]

                tag Goto47 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 7976
                    hide_name = True
                ]

                tag Goto36 {
                    value = "Q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8312
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto28 {
                    value = "E_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From8 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto17 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 8224
                    size = 60, 20
                ]

                tag From28 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7904
                    scale = -1, 1
                ]

                tag Goto23 {
                    value = "Xi_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 7944
                    scale = -1, 1
                ]

                tag From23 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8616
                    scale = -1, 1
                ]

                tag Goto37 {
                    value = "P1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8168
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto46 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7784, 8776
                    scale = -1, 1
                ]

                tag From26 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8704
                    scale = -1, 1
                ]

                tag From24 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8656
                    scale = -1, 1
                ]

                tag Goto21 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8248, 8536
                    scale = -1, 1
                ]

                tag From25 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8744
                    scale = -1, 1
                ]

                tag Goto2 {
                    value = "modulator1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7096, 7952
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From9 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8160
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From42 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8008
                    scale = -1, 1
                ]

                tag From6 {
                    value = "Xi_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7856
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From10 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From7 {
                    value = "Xi_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7944
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From36 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8208
                    scale = -1, 1
                ]

                tag Goto29 {
                    value = "E_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto3 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From40 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8640, 8536
                    scale = -1, 1
                ]

                tag From34 {
                    value = "E_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                junction Junction270 sp
                [
                    position = 7152, 8224
                ]

                junction Junction159 sp
                [
                    position = 7472, 8208
                ]

                junction Junction230 sp
                [
                    position = 7472, 8472
                ]

                junction Junction258 sp
                [
                    position = 7520, 8008
                ]

                junction Junction265 sp
                [
                    position = 6856, 8232
                ]

                junction Junction269 sp
                [
                    position = 7816, 8392
                ]

                junction Junction266 sp
                [
                    position = 6856, 8376
                ]

                junction Junction271 sp
                [
                    position = 7152, 8368
                ]

                junction Junction228 sp
                [
                    position = 7520, 8400
                ]

                junction Junction229 sp
                [
                    position = 7520, 8256
                ]

                junction Junction231 sp
                [
                    position = 7520, 7896
                ]

                junction Junction268 sp
                [
                    position = 7136, 8224
                ]

                junction Junction267 sp
                [
                    position = 7136, 8368
                ]

                junction Junction158 sp
                [
                    position = 7816, 8248
                ]

                junction Junction272 sp
                [
                    position = 8544, 8224
                ]

                connect Junction266 Integrator3.out as Connection987
                [
                    breakpoints = 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376
                ]
                connect Current_abc_to_dq4.wt2 From26 as Connection702
                connect "Current_abc_to_dq4.^Ed2" Gain11.in as Connection876
                connect Junction231 "Outer Voltage Loop + Inner Current Loop.E_d_ref1" as Connection736
                connect Gain13.out Integrator3.in as Connection925
                connect Sum4.out Gain4.in as Connection330
                connect Gain4.out Integrator2.in as Connection335
                connect Product10.in1 Junction228 as Connection681
                connect Gain1.in Junction272 as Connection989
                connect From42 Junction258 as Connection859
                connect Product10.in Junction229 as Connection723
                connect E_q1.in Junction158 as Connection718
                connect Junction258 "Outer Voltage Loop + Inner Current Loop.E_q_ref1" as Connection860
                connect Junction271 Sum2.out as Connection974
                connect f1.in Gain1.out as Connection318
                connect From34 "Current_abc_to_dq3.^Ec2" as Connection279
                connect Product12.in Junction159 as Connection720
                connect From10 Current_abc_to_dq2.Ec2 as Connection234
                connect Junction269 Goto29 as Connection964
                connect Sum4.in1 Junction265 as Connection939
                [
                    breakpoints = 7112, 8280; 6856, 8280
                ]
                connect Gain10.in "Current_abc_to_dq3.^Eq2" as Connection875
                connect "Outer Voltage Loop + Inner Current Loop.Ua1" "Bus Join1.in" as Connection839
                connect Gain12.in "Current_abc_to_dq4.^Eq2" as Connection879
                connect Sum5.out Gain13.in as Connection926
                connect E_dREF1.in Junction231 as Connection729
                [
                    breakpoints = 7520, 7848; 7520, 7896
                ]
                connect Product10.out Sum2.in as Connection672
                connect "Voltage droop.E_magnitude1" Goto47 as Connection880
                connect Current_abc_to_dq.Xi_d2 Gain6.in as Connection864
                connect E_qREF1.in Junction258 as Connection861
                connect Gain14.in Junction267 as Connection969
                connect From25 "Current_abc_to_dq4.^Ec2" as Connection699
                connect From5 Current_abc_to_dq.Xi_a2 as Connection38
                connect "Current_abc_to_dq4.^Ea2" From23 as Connection701
                connect Product12.out Sum2.in1 as Connection721
                connect Gain8.in Current_abc_to_dq2.Eq2 as Connection869
                connect From7 Current_abc_to_dq.Xi_c2 as Connection40
                connect Goto3 Junction158 as Connection292
                connect Sum5.in1 Junction266 as Connection942
                [
                    breakpoints = 7120, 8424; 6856, 8424
                ]
                connect Junction268 Junction270 as Connection970
                connect Constant1.out Goto46 as Connection882
                connect Product111.in Junction159 as Connection703
                connect Gain9.out Junction269 as Connection963
                connect "Outer Voltage Loop + Inner Current Loop.Uc1" "Bus Join1.in2" as Connection840
                connect Product111.out Sum1.in as Connection684
                connect "Switch droop" "Frequency droop.Switch droop" as Connection992
                connect Goto2 "Bus Join1.out" as Connection51
                connect Junction229 From37 as Connection683
                connect Junction272 Goto17 as Connection990
                connect From32 Current_abc_to_dq3.wt2 as Connection275
                connect U_P "Frequency droop.U_P" as Connection984
                connect Gain6.out Goto22 as Connection961
                connect Gain5.out Goto4 as Connection959
                [
                    breakpoints = 7816, 8120
                ]
                connect Gain15.in Junction268 as Connection967
                connect Current_abc_to_dq2.Ed2 Gain5.in as Connection870
                connect Product12.in1 Junction230 as Connection678
                connect Current_abc_to_dq.wt2 From28 as Connection247
                [
                    breakpoints = 8000, 7904; 8040, 7904
                ]
                connect P1.in Gain15.out as Connection966
                connect Integrator1.out Goto21 as Connection960
                connect "Current_abc_to_dq3.^Ed2" Gain9.in as Connection872
                connect Integrator1.in From40 as Connection725
                connect "Frequency droop.w1" Junction272 as Connection991
                connect Product13.in Junction228 as Connection679
                connect Sum1.in1 Product13.out as Connection719
                connect Goto28 Gain10.out as Connection874
                connect Current_abc_to_dq2.Ea2 From8 as Connection236
                connect Junction270 Sum1.out as Connection971
                connect From43 Goto45 as Connection881
                connect Junction267 Junction271 as Connection973
                connect Junction158 Gain8.out as Connection868
                connect E_d1.in Junction269 as Connection965
                connect Current_abc_to_dq.Xi_q2 Gain7.in as Connection866
                connect Sum5.in Junction267 as Connection952
                connect From35 "Current_abc_to_dq3.^Eb2" as Connection276
                connect From27 Current_abc_to_dq2.wt2 as Connection246
                connect Goto37 Junction265 as Connection988
                [
                    breakpoints = 6856, 8168; 6856, 8232; 6856, 8232
                ]
                connect "Current_abc_to_dq3.^Ea2" From33 as Connection278
                connect Product13.in1 Junction230 as Connection676
                connect "Current_abc_to_dq4.^Eb2" From24 as Connection700
                connect Goto20 Gain12.out as Connection878
                connect Goto23 Gain7.out as Connection962
                connect Junction159 From36 as Connection698
                connect Q1.in Gain14.out as Connection968
                connect Junction265 Integrator2.out as Connection945
                [
                    breakpoints = 6856, 8232; 6856, 8232
                ]
                connect From9 Current_abc_to_dq2.Eb2 as Connection235
                connect "Bus Join1.in1" "Outer Voltage Loop + Inner Current Loop.Ub1" as Connection838
                connect Sum4.in Junction268 as Connection955
                connect From6 Current_abc_to_dq.Xi_b2 as Connection39
                connect Junction228 From39 as Connection680
                connect Product111.in1 Junction229 as Connection682
                connect Junction231 From20 as Connection728
                connect Goto36 Junction266 as Connection940
                [
                    breakpoints = 6856, 8312
                ]
                connect "Frequency droop.U - P" "U - P" as Connection985
                connect Gain11.out Goto19 as Connection877
                connect Junction230 From38 as Connection677
                connect Qpu.in Gain17.out as Connection993
                connect Gain17.in Junction271 as Connection994
                connect Ppu.in Gain16.out as Connection995
                connect Gain16.in Junction270 as Connection996
                connect U_Q "Voltage droop.Q_ref1" as Connection997
            }
            [
                position = 6808, 7600
                size = 296, 128
            ]

            component "core/Signal Controlled Voltage Source" Vc_inv {
            }
            [
                position = 7168, 8136
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Ib1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 8000
                size = 64, 32
            ]

            component "core/Current Measurement" Xi_a1 {
                addr = "14"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7840, 7904
                scale = 1, -1
                size = 64, 32
            ]

            component pas_resistor R0b1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8000
            ]

            component "core/Current Measurement" Ic1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 8096
                size = 64, 32
            ]

            component pas_resistor R0c1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8096
            ]

            component "core/Voltage Measurement" Eb1 {
                addr = "9"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8464, 8208
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 6912, 7760
                hide_name = True
            ]

            component "core/Voltage Measurement" VbG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9744, 8288
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ec1 {
                addr = "11"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8544, 8272
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_inductor Lb1 {
                inductance = "L_o"
            }
            [
                position = 8872, 8000
                rotation = down
            ]

            component "core/Current Measurement" Xi_c1 {
                addr = "16"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7952, 8096
                scale = 1, -1
                size = 64, 32
            ]

            component gen_product Product2 {
            }
            [
                position = 7024, 7600
                hide_name = True
                scale = -1, 1
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "900"
            }
            [
                position = 6624, 8232
                hide_name = True
            ]

            component pas_inductor Lgridc_1 {
                inductance = "L"
            }
            [
                position = 9144, 8096
                rotation = down
            ]

            component gen_probe Ec_1 {
            }
            [
                position = 8512, 8400
            ]

            component pas_inductor Lgrida_1 {
                inductance = "L"
            }
            [
                position = 9144, 7904
                rotation = down
            ]

            component pas_resistor Rb1 {
                resistance = "R_o"
            }
            [
                position = 8776, 8000
            ]

            component pas_inductor La1 {
                inductance = "L_o"
            }
            [
                position = 8872, 7904
                rotation = down
            ]

            component gen_product Product1 {
            }
            [
                position = 6816, 7760
                hide_name = True
            ]

            component gen_gain Gain1 {
                gain = "0.5"
            }
            [
                position = 6744, 7792
                hide_name = True
            ]

            component pas_resistor Rgrida_1 {
                resistance = "R"
            }
            [
                position = 9248, 7904
            ]

            component "core/Four Phase Core Coupling" "Core Coupling 1" {
            }
            [
                position = 8696, 8048
                size = 12, 352
            ]

            component pas_capacitor Cb1 {
                capacitance = "C_s"
            }
            [
                position = 8096, 8352
                rotation = right
            ]

            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 9504, 8000
                size = 64, 256
            ]

            component "core/Signal Controlled Voltage Source" Vb_inv {
            }
            [
                position = 7088, 8040
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Voltage Measurement" VaG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9616, 8216
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ea1 {
                addr = "7"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8400, 8144
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor R0a1 {
                resistance = "R_i"
            }
            [
                position = 7632, 7904
            ]

            component gen_probe Eb_1 {
            }
            [
                position = 8400, 8288
            ]

            component pas_inductor L0b1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8000
                rotation = down
            ]

            component "core/Voltage Measurement" Vb2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7728, 8432
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rt0b1 {
                resistance = "R_s"
            }
            [
                position = 8096, 8256
                rotation = left
                scale = -1, 1
            ]

            component "core/Voltage Measurement" Va2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7600, 8384
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component gen_probe Ea_1 {
            }
            [
                position = 8352, 8176
            ]

            component pas_resistor Rgridc_1 {
                resistance = "R"
            }
            [
                position = 9248, 8096
            ]

            port Vb {
                label = "Vb"
                position = right:2
                kind = pe
            }
            [
                position = 10360, 8000
                scale = -1, 1
            ]

            port Ground {
                label = "Ground"
                position = bottom:4
                kind = pe
            }
            [
                position = 10376, 8688
                scale = -1, 1
            ]

            port Vc {
                label = "Vc"
                position = right:3
                kind = pe
            }
            [
                position = 10360, 8096
                scale = -1, 1
            ]

            port setpoint_P {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6736, 7440
                scale = -1, 1
            ]

            port activeP_offset {
                position = top:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 6856, 7488
                scale = -1, 1
            ]

            port "Switch droop" {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7096, 7632
                scale = -1, 1
            ]

            port Va {
                label = "Va"
                position = right:1
                kind = pe
            }
            [
                position = 10360, 7904
                scale = -1, 1
            ]

            port setpoint_Q {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6856, 7440
                scale = -1, 1
            ]

            tag Goto39 {
                value = "Ib1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 7968
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto34 {
                value = "E_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7504, 8384
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto30 {
                value = "Ec1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8352, 8352
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto18 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6736, 8232
                hide_name = True
                size = 60, 20
            ]

            tag Goto32 {
                value = "Ia1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 7872
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto44 {
                value = "Xi_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8208
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto31 {
                value = "Ic1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 8064
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto42 {
                value = "E_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7648, 8432
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto33 {
                value = "E_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7776, 8480
                scale = -1, 1
                size = 60, 20
            ]

            tag w_m2 {
                value = "w1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 9600, 7456
                hide_name = True
            ]

            tag Goto35 {
                value = "Xi_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8160
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto40 {
                value = "Eb1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8320, 8256
                scale = -1, 1
                size = 60, 20
            ]

            tag From3 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6672, 7792
                hide_name = True
            ]

            tag Vc_G {
                value = "VcG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9936, 8408
            ]

            tag Goto41 {
                value = "Ea1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8256, 8144
                scale = -1, 1
                size = 60, 20
            ]

            tag Vb_G {
                value = "VbG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9816, 8288
            ]

            tag Goto38 {
                value = "Xi_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8256
                scale = -1, 1
                size = 60, 20
            ]

            tag Connect2 {
                value = "Connect"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 9416, 7816
                hide_name = True
            ]

            tag Va_G {
                value = "VaG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9688, 8216
            ]

            tag Connect4 {
                value = "Connect"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 7112, 7568
                hide_name = True
                scale = -1, 1
            ]

            tag From2 {
                value = "modulator1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6672, 7728
                hide_name = True
                size = 60, 20
            ]

            junction Junction192 pe
            [
                position = 8096, 8688
            ]

            junction Junction198 pe
            [
                position = 8096, 8688
            ]

            junction Junction221 sp
            [
                position = 8320, 8144
            ]

            junction Junction302 pe
            [
                position = 9864, 8688
            ]

            junction Junction289 pe
            [
                position = 7600, 8688
            ]

            junction Junction212 pe
            [
                position = 8096, 8688
            ]

            junction Junction291 pe
            [
                position = 7088, 8688
            ]

            junction Junction161 pe
            [
                position = 8016, 7904
            ]

            junction Junction306 pe
            [
                position = 9864, 8096
            ]

            junction Junction207 pe
            [
                position = 8096, 8688
            ]

            junction Junction173 pe
            [
                position = 8176, 8096
            ]

            junction Junction213 pe
            [
                position = 8096, 8304
            ]

            junction Junction307 pe
            [
                position = 9744, 8000
            ]

            junction Junction305 pe
            [
                position = 9616, 8688
            ]

            junction Junction215 pe
            [
                position = 8096, 8688
            ]

            junction Junction283 sp
            [
                position = 8368, 8256
            ]

            junction Junction174 pe
            [
                position = 8400, 7904
            ]

            junction Junction292 pe
            [
                position = 8096, 8688
            ]

            junction Junction162 pe
            [
                position = 8544, 8096
            ]

            junction Junction290 pe
            [
                position = 7168, 8688
            ]

            junction Junction168 pe
            [
                position = 8464, 8000
            ]

            junction Junction160 pe
            [
                position = 8096, 8000
            ]

            junction Junction216 pe
            [
                position = 8176, 8304
            ]

            junction Junction304 pe
            [
                position = 8544, 8688
            ]

            junction Junction211 pe
            [
                position = 8016, 8288
            ]

            junction Junction308 pe
            [
                position = 9616, 7904
            ]

            junction Junction195 pe
            [
                position = 8096, 8688
            ]

            junction Junction303 pe
            [
                position = 9744, 8688
            ]

            junction Junction194 pe
            [
                position = 8096, 8688
            ]

            junction Junction199 pe
            [
                position = 8096, 8688
            ]

            junction Junction309 pe
            [
                position = 10152, 8688
            ]

            junction Junction310 pe
            [
                position = 10216, 8688
            ]

            junction Junction284 sp
            [
                position = 8480, 8352
            ]

            connect Tr1.prm_2 Junction307 as Connection1280
            connect Vc2.p_node Junction216 as Connection627
            connect Junction162 "Core Coupling 1.c_in" as Connection1233
            connect setpoint_P Controller.U_P as Connection1289
            connect Vc Tr1.sec_3 as Connection1281
            connect VcG.n_node Junction302 as Connection1221
            connect Vc_G VcG.out as Connection1127
            connect Junction216 Cc1.p_node as Connection626
            [
                breakpoints = 8176, 8304; 8176, 8304; 8176, 8304
            ]
            connect L0a1.p_node Xi_a1.p_node as Connection378
            connect Ic1.out Goto31 as Connection668
            connect Va_G VaG.out as Connection1125
            connect VcG.p_node Junction306 as Connection1269
            connect Tr1.prm_3 Junction306 as Connection1282
            connect Rt0b1.p_node Junction213 as Connection612
            connect VbG.out Vb_G as Connection1126
            connect activeP_offset "Controller.U - P" as Connection1291
            connect Junction194 Ca1.n_node as Connection597
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8544; 8016, 8544
            ]
            connect "Controller.Switch droop" Product2.out as Connection1294
            connect Junction302 Junction303 as Connection1223
            connect "Bus Split1.out1" Vb_inv.in as Connection1071
            connect Product1.out "Bus Split1.in" as Connection1075
            connect Junction174 "Core Coupling 1.a_in" as Connection1231
            connect Lgrida_1.p_node Rgrida_1.p_node as Connection1236
            connect Tr1.n1 Junction309 as Connection1285
            connect Rb1.p_node "Core Coupling 1.b_out" as Connection1229
            connect Junction213 Cb1.p_node as Connection613
            [
                breakpoints = 8096, 8304; 8096, 8304; 8096, 8304
            ]
            connect Junction198 Junction195 as Connection477
            [
                breakpoints = 8096, 8688; 8096, 8688
            ]
            connect Junction198 Junction199 as Connection537
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect Product1.in1 Gain1.out as Connection1073
            connect Goto39 Ib1.out as Connection669
            connect Ea1.p_node Junction174 as Connection298
            connect Rb1.n_node Lb1.n_node as Connection354
            connect Junction207 Junction198 as Connection574
            [
                breakpoints = 8096, 8688
            ]
            connect Vb_inv.n_node Junction291 as Connection1063
            connect Cb1.n_node Junction212 as Connection602
            connect Junction310 Ground as Connection1287
            [
                breakpoints = 10208, 8688
            ]
            connect Junction174 Junction161 as Connection535
            [
                breakpoints = 8400, 7904; 8400, 7904
            ]
            connect Junction309 Junction310 as Connection1286
            [
                breakpoints = 10144, 8688
            ]
            connect Xi_a1.n_node Junction161 as Connection314
            connect Junction192 Junction194 as Connection459
            connect Ia1.n_node Lgrida_1.n_node as Connection1235
            connect Ia1.out Goto32 as Connection666
            connect Goto40 Junction283 as Connection950
            connect Junction305 VaG.n_node as Connection1250
            [
                breakpoints = 9616, 8688
            ]
            connect Vb2.n_node Junction215 as Connection621
            connect Lb1.p_node Ib1.p_node as Connection664
            connect La1.p_node Ia1.p_node as Connection665
            connect Rc1.n_node Lc1.n_node as Connection399
            connect Junction302 Junction309 as Connection1283
            [
                breakpoints = 9864, 8688
            ]
            connect "Core Coupling 1.c_out" Rc1.p_node as Connection1234
            connect Vb_inv.p_node R0b1.p_node as Connection1055
            connect w_m2 "BE1-25A Synchronizer (inverter).In3" as Connection93
            connect Rgrida_1.n_node S2.a_in as Connection1241
            connect L0b1.p_node Xi_b1.p_node as Connection372
            connect Ib1.n_node Lgridb_1.n_node as Connection1237
            connect "Core Coupling 1.d_out" Junction305 as Connection1251
            [
                breakpoints = 8768, 8192; 8768, 8688
            ]
            connect From3 Gain1.in as Connection1072
            connect Junction211 Rt0a1.p_node as Connection599
            [
                breakpoints = 8016, 8304; 8016, 8304; 8016, 8288
            ]
            connect S2.ctrl_in Connect2 as Connection1252
            connect Ea1.n_node Junction292 as Connection1069
            [
                breakpoints = 8400, 8224; 8240, 8224; 8240, 8304; 8240, 8688
            ]
            connect Junction289 Junction212 as Connection1058
            [
                breakpoints = 7600, 8688; 8096, 8688
            ]
            connect Va_inv.n_node Junction291 as Connection1065
            [
                breakpoints = 7008, 8688; 7088, 8688
            ]
            connect Junction212 Junction192 as Connection603
            connect Xi_b1.out Goto44 as Connection374
            connect Junction192 Junction292 as Connection1067
            connect Junction173 Junction162 as Connection341
            [
                breakpoints = 8544, 8272; 8544, 8272
            ]
            connect Eb_1.in Junction283 as Connection952
            connect La1.n_node Ra1.n_node as Connection401
            connect "Bus Split1.out2" Vc_inv.in as Connection1053
            connect Junction221 Ea1.out as Connection639
            [
                breakpoints = 8304, 8144; 8368, 8144
            ]
            connect Eb1.p_node Junction168 as Connection317
            connect Vb2.out Goto42 as Connection616
            connect Xi_b1.n_node Junction160 as Connection388
            connect Rgridb_1.n_node S2.b_in as Connection1242
            connect Lgridb_1.p_node Rgridb_1.p_node as Connection1238
            connect Rt0c1.p_node Junction216 as Connection625
            [
                breakpoints = 8176, 8288
            ]
            connect Xi_c1.n_node Junction173 as Connection304
            connect Junction283 Eb1.out as Connection951
            connect Goto41 Junction221 as Connection656
            [
                breakpoints = 8288, 8144; 8336, 8144
            ]
            connect Vc_inv.p_node R0c1.p_node as Connection1054
            connect Rt0a1.n_node Junction161 as Connection366
            connect Junction307 VbG.p_node as Connection1273
            [
                breakpoints = 9744, 8000
            ]
            connect Vc2.out Goto33 as Connection617
            [
                breakpoints = 7840, 8480; 7824, 8480
            ]
            connect S2.a_out Junction308 as Connection1275
            connect Junction195 Junction194 as Connection463
            connect Connect4 Product2.in as Connection1292
            connect Va2.out Goto34 as Connection624
            connect Ea_1.in Junction221 as Connection640
            connect Junction284 Ec1.out as Connection955
            connect Junction207 Junction304 as Connection1246
            [
                breakpoints = 8096, 8688; 8096, 8688
            ]
            connect Rgridc_1.n_node S2.c_in as Connection1243
            connect Junction291 Junction290 as Connection1064
            [
                breakpoints = 7088, 8688; 7168, 8688
            ]
            connect Junction207 Junction215 as Connection1222
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect Junction292 Cc1.n_node as Connection1068
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8544; 8176, 8544
            ]
            connect Lc1.p_node Ic1.p_node as Connection663
            connect Junction303 Junction305 as Connection1249
            [
                breakpoints = 9744, 8688
            ]
            connect Va Tr1.sec_1 as Connection1277
            connect Vc_inv.n_node Junction290 as Connection1060
            connect From2 Product1.in as Connection1074
            connect Constant1.out Goto18 as Connection1096
            connect "Core Coupling 1.a_out" Ra1.p_node as Connection1232
            connect Junction308 VaG.p_node as Connection1276
            [
                breakpoints = 9616, 7904
            ]
            connect Junction304 Ec1.n_node as Connection1247
            [
                breakpoints = 8544, 8688; 8544, 8688; 8544, 8688
            ]
            connect R0b1.n_node L0b1.n_node as Connection385
            connect VbG.n_node Junction303 as Connection1225
            connect Vb2.p_node Junction213 as Connection614
            [
                breakpoints = 7920, 8304; 8096, 8304
            ]
            connect Ic1.n_node Lgridc_1.n_node as Connection1239
            connect R0c1.n_node L0c1.n_node as Connection330
            connect Goto30 Junction284 as Connection954
            connect Ca1.p_node Junction211 as Connection598
            connect L0a1.n_node R0a1.n_node as Connection355
            connect Rt0b1.n_node Junction160 as Connection351
            connect Vc2.n_node Junction215 as Connection623
            connect Goto35 Xi_a1.out as Connection342
            connect "Core Coupling 1.b_in" Junction168 as Connection1230
            connect Tr1.prm_1 Junction308 as Connection1278
            connect Tr1.n2 Junction310 as Connection1288
            connect Xi_c1.out Goto38 as Connection313
            connect "Bus Split1.out" Va_inv.in as Connection1051
            connect Va2.n_node Junction289 as Connection1057
            connect Junction290 Junction289 as Connection1061
            [
                breakpoints = 7168, 8688; 7600, 8688
            ]
            connect Ec_1.in Junction284 as Connection956
            [
                breakpoints = 8480, 8384; 8480, 8352
            ]
            connect L0c1.p_node Xi_c1.p_node as Connection328
            connect S2.b_out Junction307 as Connection1272
            connect Vb Tr1.sec_2 as Connection1279
            connect Eb1.n_node Junction195 as Connection462
            connect Va2.p_node Junction211 as Connection600
            [
                breakpoints = 7840, 8288; 8016, 8288
            ]
            connect Lgridc_1.p_node Rgridc_1.p_node as Connection1240
            connect Rt0c1.n_node Junction173 as Connection327
            connect "Switch droop" Product2.in1 as Connection1293
            connect "Core Coupling 1.d_in" Junction304 as Connection1248
            [
                breakpoints = 8624, 8192; 8624, 8688
            ]
            connect Junction306 S2.c_out as Connection1270
            [
                breakpoints = 9864, 8096
            ]
            connect Va_inv.p_node R0a1.p_node as Connection1056
            connect Ec1.p_node Junction162 as Connection325
            connect Junction168 Junction160 as Connection362
            connect setpoint_Q Controller.U_Q as Connection1295

            Imax = "1"
            Imin = "-1"
            Ki_V = "2"
            Kp_I = "10e-3"
            Kp_V = "30e-3"
            S = "200e3"
            Ts = "Ts"
            V_D = "5e-4"
            Vmax = "0.3"
            Vmin = "-0.3"
            f_D = "3e-1"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A grid-forming three-phase inverter with a frequency and voltage droop controller</p></body></html>"

                S {
                    label = "Rated Power "
                    widget = edit
                    type = generic
                    default_value = "10e3"
                    unit = "VA"
                    group = "1. Three-phase Inverter"
                }

                V_ABC {
                    label = "Rated Phase Voltage (RMS)"
                    widget = edit
                    type = generic
                    default_value = "277"
                    unit = "V"
                    group = "1. Three-phase Inverter"
                }

                w_0 {
                    label = "Nominal Frequency"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*60"
                    unit = "rad/s"
                    group = "1. Three-phase Inverter"
                }

                Ts {
                    label = "Execution rate"
                    widget = edit
                    type = generic
                    default_value = "100e-6"
                    unit = "s"
                    group = "1. Three-phase Inverter"
                }

                R_i {
                    label = "Input Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.1"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_i {
                    label = "Input Inductance"
                    widget = edit
                    type = generic
                    default_value = "6e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R_s {
                    label = "Shunt Resistance"
                    widget = edit
                    type = generic
                    default_value = "15e-3"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                C_s {
                    label = "Shunt Capacitance"
                    widget = edit
                    type = generic
                    default_value = "150e-6"
                    unit = "F"
                    group = "2. LCL filter"
                }

                R_o {
                    label = "Output Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.03"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_o {
                    label = "Output Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.3e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R {
                    label = "Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.35"
                    unit = "Ω"
                    group = "3. Electrical Line"
                }

                L {
                    label = "Inductance"
                    widget = edit
                    type = generic
                    default_value = "1.5e-3"
                    unit = "H"
                    group = "3. Electrical Line"
                }

                Kp_I {
                    label = "Inner Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "8e-3"
                    group = "4. Cascaded Controller"
                }

                Ki_I {
                    label = "Inner Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "2e-3"
                    group = "4. Cascaded Controller"
                }

                Imax {
                    label = "Inner Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "10"
                    group = "4. Cascaded Controller"
                }

                Imin {
                    label = "Inner Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-10"
                    group = "4. Cascaded Controller"
                }

                Kp_V {
                    label = "Outer Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "5e-3"
                    group = "4. Cascaded Controller"
                }

                Ki_V {
                    label = "Outer Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "1.5"
                    group = "4. Cascaded Controller"
                }

                Vmax {
                    label = "Outer Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "10"
                    group = "4. Cascaded Controller"
                }

                Vmin {
                    label = "Outer Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-10"
                    group = "4. Cascaded Controller"
                }

                f_D {
                    label = "Frequency Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "1"
                    unit = "%"
                    group = "5. Droop Control"
                }

                V_D {
                    label = "Voltage Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "1e-2"
                    unit = "%"
                    group = "5. Droop Control"
                }

                T_m {
                    label = "Measurement delay"
                    widget = edit
                    type = generic
                    default_value = "0.5"
                    unit = "s"
                    group = "5. Droop Control"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    mP = w_0*(f_D/100)
                    nQ = V_DQ*(V_D/100)
                    D_f = 1/mP
                    D_V = 1/nQ
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, 'grid_forming_inverter.svg')
                ENDCODE

                CODE pre_compile
                    # HEADER START
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    # HEADER STOP
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    mP = w_0*(f_D/100)
                    nQ = V_DQ*(V_D/100)
                    D_f = 1/mP
                    D_V = 1/nQ
                ENDCODE
            }
        }
        [
            position = 9224, 8408
            rotation = left
            scale = -1, 1
            size = 224, 192
        ]

        component Subsystem "Grid forming inverter (averaged)2" {
            layout = dynamic
            component pas_capacitor Cc1 {
                capacitance = "C_s"
            }
            [
                position = 8176, 8352
                rotation = right
            ]

            component gen_product Product2 {
            }
            [
                position = 7032, 7568
                hide_name = True
                scale = -1, 1
            ]

            component pas_resistor Rgridb_1 {
                resistance = "R"
            }
            [
                position = 9248, 8000
            ]

            component "core/Signal Controlled Voltage Source" Vc_inv {
            }
            [
                position = 7168, 8136
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rt0a1 {
                resistance = "R_s"
            }
            [
                position = 8016, 8256
                rotation = left
                scale = -1, 1
            ]

            component pas_resistor Ra1 {
                resistance = "R_o"
            }
            [
                position = 8776, 7904
            ]

            component "core/Current Measurement" Ia1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 7904
                size = 64, 32
            ]

            component gen_probe Ea_1 {
            }
            [
                position = 8352, 8176
            ]

            component pas_inductor L0b1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8000
                rotation = down
            ]

            component "core/Voltage Measurement" Vc2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7856, 8480
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Four Phase Core Coupling" "Core Coupling 1" {
            }
            [
                position = 8696, 8048
                size = 12, 352
            ]

            component pas_capacitor Cb1 {
                capacitance = "C_s"
            }
            [
                position = 8096, 8352
                rotation = right
            ]

            component Subsystem Controller {
                layout = dynamic
                component gen_product Product13 {
                }
                [
                    position = 7368, 8464
                    scale = -1, 1
                ]

                component gen_gain Gain4 {
                    gain = "1/T_m"
                }
                [
                    position = 6992, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain15 {
                    gain = "S/1e3"
                }
                [
                    position = 7136, 8168
                    rotation = right
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe Q1 {
                }
                [
                    position = 7072, 8488
                    rotation = down
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8120
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain6 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7856, 7816
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_integrator Integrator1 {
                }
                [
                    position = 8440, 8536
                    scale = -1, 1
                ]

                component gen_integrator Integrator2 {
                }
                [
                    position = 6896, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_sum Sum1 {
                }
                [
                    position = 7192, 8224
                    scale = -1, 1
                ]

                component Subsystem Current_abc_to_dq2 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Eq2 {
                        label = "Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Ed2 {
                        label = "Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Eb2 {
                        label = "Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Ec2 {
                        label = "Ec2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Ea2 {
                        label = "Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    connect "abc to dq1.q_axis" Eq2 as Connection6
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect Ea2 "abc to dq1.va" as Connection1
                    connect Eb2 "abc to dq1.vb" as Connection2
                    connect Ec2 "abc to dq1.vc" as Connection3
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" Ed2 as Connection5
                }
                [
                    position = 7936, 8184
                    size = 80, 168
                ]

                component gen_gain Gain8 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7856, 8248
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain1 {
                    gain = "1/(2*np.pi)"
                }
                [
                    position = 8336, 8312
                    scale = -1, 1
                ]

                component gen_gain Gain13 {
                    gain = "1/T_m"
                }
                [
                    position = 7000, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_product Product12 {
                }
                [
                    position = 7368, 8376
                    scale = -1, 1
                ]

                component gen_gain Gain10 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7864, 8520
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain14 {
                    gain = "S/1e3"
                }
                [
                    position = 7136, 8456
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_bus_join "Bus Join1" {
                    inputs = "3"
                }
                [
                    position = 7200, 7952
                    scale = -1, 1
                ]

                component gen_gain Gain9 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7856, 8392
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe E_d1 {
                    addr = "8965"
                }
                [
                    position = 7752, 8336
                    scale = -1, 1
                ]

                component gen_integrator Integrator3 {
                }
                [
                    position = 6904, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe E_dREF1 {
                }
                [
                    position = 7568, 7848
                ]

                component src_constant Constant1 {
                    execution_rate = "Ts"
                    value = "0"
                }
                [
                    position = 7912, 8776
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_sum Sum2 {
                    signs = "+-"
                }
                [
                    position = 7192, 8368
                    scale = -1, 1
                ]

                component gen_product Product10 {
                }
                [
                    position = 7368, 8296
                    scale = -1, 1
                ]

                component Subsystem Current_abc_to_dq {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port Xi_d2 {
                        label = "Xi_d2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Xi_c2 {
                        label = "Xi_c2"
                        position = right:5
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Xi_a2 {
                        label = "Xi_a2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port Xi_q2 {
                        label = "Xi_q2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Xi_b2 {
                        label = "Xi_b2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    connect Xi_c2 "abc to dq1.vc" as Connection3
                    connect "abc to dq1.q_axis" Xi_q2 as Connection6
                    connect "abc to dq1.d_axis" Xi_d2 as Connection5
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect Xi_a2 "abc to dq1.va" as Connection1
                    connect Xi_b2 "abc to dq1.vb" as Connection2
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                }
                [
                    position = 7936, 7880
                    size = 80, 168
                ]

                component gen_gain Gain7 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7856, 7944
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_gain Gain12 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8744
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_product Product111 {
                }
                [
                    position = 7368, 8216
                    scale = -1, 1
                ]

                component Subsystem "Frequency droop" {
                    layout = dynamic
                    component gen_gain Gain4 {
                        gain = "1/D_f"
                    }
                    [
                        position = 8272, 8200
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_product Product1 {
                        signs = "/*"
                    }
                    [
                        position = 8144, 8032
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                        value = "w_0"
                    }
                    [
                        position = 8064, 8232
                        scale = -1, 1
                    ]

                    component sys_signal_switch "Signal switch1" {
                        criterion = "ctrl != threshold"
                        threshold = "1"
                    }
                    [
                        position = 8272, 7992
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum5 {
                        signs = "++"
                    }
                    [
                        position = 8064, 8152
                        scale = -1, 1
                    ]

                    component src_constant Constant5 {
                        execution_rate = "Ts"
                        value = "D_f"
                    }
                    [
                        position = 8400, 7968
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum1 {
                        signs = "+-"
                    }
                    [
                        position = 8272, 8104
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "++"
                    }
                    [
                        position = 7880, 8160
                        scale = -1, 1
                    ]

                    component src_constant Constant6 {
                        execution_rate = "Ts"
                        value = "0.13"
                    }
                    [
                        position = 8400, 8016
                        hide_name = True
                        scale = -1, 1
                    ]

                    port "U - P" {
                        label = "U - P"
                        position = top:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8152, 8160
                        scale = -1, 1
                    ]

                    port w1 {
                        label = "w1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7824, 8160
                        scale = -1, 1
                    ]

                    port U_P {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8360, 8072
                        scale = -1, 1
                    ]

                    port "Switch droop" {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8400, 7912
                        scale = -1, 1
                    ]

                    tag From17 {
                        value = "P1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8360, 8128
                        scale = -1, 1
                    ]

                    tag theta_bus6 {
                        value = "del_P"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8368, 8200
                        hide_name = True
                        scale = -1, 1
                    ]

                    junction Junction1 sp
                    [
                        position = 8208, 8104
                    ]

                    connect "Signal switch1.out" Product1.in as Connection328
                    connect Gain4.out Sum5.in1 as Connection356
                    connect Product1.in1 Junction1 as Connection384
                    connect Junction1 "U - P" as Connection383
                    [
                        breakpoints = 8208, 8104
                    ]
                    connect Constant5.out "Signal switch1.in" as Connection326
                    connect Constant4.out Sum4.in1 as Connection363
                    connect U_P Sum1.in as Connection368
                    connect From17 Sum1.in1 as Connection316
                    connect Sum1.out Junction1 as Connection382
                    connect Sum5.out Sum4.in as Connection369
                    [
                        breakpoints = 7984, 8152; 7968, 8152
                    ]
                    connect Gain4.in theta_bus6 as Connection380
                    connect Constant6.out "Signal switch1.in1" as Connection327
                    connect Product1.out Sum5.in as Connection385
                    connect "Switch droop" "Signal switch1.in2" as Connection337
                    connect Sum4.out w1 as Connection307
                }
                [
                    position = 8296, 8184
                    size = 96, 120
                ]

                component gen_sum Sum4 {
                    signs = "+-"
                }
                [
                    position = 7072, 8232
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain11 {
                    gain = "1/I_DQ"
                }
                [
                    position = 7384, 8616
                    hide_name = True
                    scale = -1, -1
                ]

                component gen_probe E_qREF1 {
                }
                [
                    position = 7568, 8056
                ]

                component gen_probe E_q1 {
                }
                [
                    position = 7752, 8192
                    scale = -1, 1
                ]

                component Subsystem "Voltage droop" {
                    layout = dynamic
                    component gen_gain Gain4 {
                        gain = "1/D_V"
                    }
                    [
                        position = 8296, 8192
                        hide_name = True
                        scale = -1, 1
                    ]

                    component src_constant Constant4 {
                        execution_rate = "Ts"
                    }
                    [
                        position = 8080, 8248
                        hide_name = True
                        scale = -1, 1
                    ]

                    component gen_sum Sum2 {
                        signs = "+-"
                    }
                    [
                        position = 8320, 8096
                        scale = -1, 1
                    ]

                    component gen_sum Sum4 {
                        signs = "++"
                    }
                    [
                        position = 8096, 8144
                        scale = -1, 1
                    ]

                    component gen_sum Sum3 {
                        signs = "++"
                    }
                    [
                        position = 7928, 8176
                        scale = -1, 1
                    ]

                    component gen_probe E_1 {
                    }
                    [
                        position = 7936, 8096
                    ]

                    component gen_gain Gain3 {
                        gain = "1/D_V"
                    }
                    [
                        position = 8240, 8096
                        hide_name = True
                        scale = -1, 1
                    ]

                    port E_magnitude1 {
                        label = "E_magnitude1"
                        position = right:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 7696, 8176
                        scale = -1, 1
                    ]

                    port Q_ref1 {
                        label = "Q_ref1"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8464, 8072
                        scale = -1, 1
                    ]

                    tag From18 {
                        value = "Q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8464, 8120
                        scale = -1, 1
                    ]

                    tag theta_bus6 {
                        value = "del_Q"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8408, 8192
                        hide_name = True
                        scale = -1, 1
                    ]

                    junction Junction2 sp
                    [
                        position = 7832, 8176
                    ]

                    connect From18 Sum2.in1 as Connection323
                    connect E_magnitude1 Junction2 as Connection320
                    connect Gain4.out Sum4.in1 as Connection356
                    connect E_1.in Junction2 as Connection322
                    connect Gain3.out Sum4.in as Connection359
                    connect Gain4.in theta_bus6 as Connection357
                    connect Junction2 Sum3.out as Connection321
                    connect Gain3.in Sum2.out as Connection325
                    connect Q_ref1 Sum2.in as Connection360
                    connect Constant4.out Sum3.in1 as Connection318
                    connect Sum4.out Sum3.in as Connection365
                    [
                        breakpoints = 7968, 8144
                    ]
                }
                [
                    position = 8296, 7944
                    size = 120, 96
                ]

                component Subsystem Current_abc_to_dq3 {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Ec2" "abc to dq1.vc" as Connection3
                }
                [
                    position = 7936, 8456
                    size = 80, 168
                ]

                component gen_probe Qpu {
                }
                [
                    position = 7072, 8544
                    rotation = down
                ]

                component gen_probe f1 {
                }
                [
                    position = 8248, 8312
                    rotation = down
                ]

                component Subsystem Current_abc_to_dq4 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port wt2 {
                        label = "wt2"
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port "^Eq2" {
                        label = "^Eq2"
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port "^Ea2" {
                        label = "^Ea2"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port "^Eb2" {
                        label = "^Eb2"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    port "^Ec2" {
                        label = "^Ec2"
                        position = right:6
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port "^Ed2" {
                        label = "^Ed2"
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    connect "abc to dq1.q_axis" "^Eq2" as Connection6
                    connect wt2 "abc to dq1.wt" as Connection7
                    connect "abc to dq1.d_axis" "^Ed2" as Connection5
                    connect "^Ea2" "abc to dq1.va" as Connection1
                    connect "^Ec2" "abc to dq1.vc" as Connection3
                    connect Termination1.in "abc to dq1.zero_axis" as Connection4
                    connect "^Eb2" "abc to dq1.vb" as Connection2
                }
                [
                    position = 7480, 8680
                    size = 80, 168
                ]

                component gen_sum Sum5 {
                    signs = "+-"
                }
                [
                    position = 7080, 8376
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_probe P1 {
                }
                [
                    position = 7080, 8136
                    rotation = down
                ]

                component Subsystem "Outer Voltage Loop + Inner Current Loop" {
                    layout = dynamic
                    component Subsystem "Outer voltage control loop" {
                        layout = dynamic
                        component gen_sum Sum12 {
                            signs = "++"
                        }
                        [
                            position = 7616, 8512
                            scale = -1, 1
                        ]

                        component gen_gain Gain4 {
                            gain = "C_s"
                        }
                        [
                            position = 8248, 8352
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8168
                            scale = -1, 1
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8064, 8768
                            scale = -1, -1
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8272, 8848
                            scale = -1, 1
                        ]

                        component gen_product Product8 {
                        }
                        [
                            position = 8144, 8680
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 7960, 8768
                            scale = -1, 1
                        ]

                        component gen_probe EQ_ctrl {
                        }
                        [
                            position = 8296, 8432
                        ]

                        component gen_sum Sum10 {
                            signs = "+-"
                        }
                        [
                            position = 7952, 8248
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8160, 8808
                            scale = -1, 1
                        ]

                        component gen_product Product6 {
                        }
                        [
                            position = 8152, 8320
                            scale = -1, 1
                        ]

                        component gen_sum Sum11 {
                            signs = "+-"
                        }
                        [
                            position = 8376, 8504
                            scale = -1, 1
                        ]

                        component gen_product Product5 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8256
                            scale = -1, 1
                        ]

                        component gen_product Product7 {
                            signs = "*/"
                        }
                        [
                            position = 7832, 8592
                            scale = -1, 1
                        ]

                        component gen_probe ED_ctrl {
                        }
                        [
                            position = 8296, 8096
                        ]

                        component gen_gain Gain6 {
                            gain = "C_s"
                        }
                        [
                            position = 8248, 8712
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller4" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8504
                            scale = -1, 1
                        ]

                        component gen_sum Sum13 {
                            signs = "++"
                        }
                        [
                            position = 7936, 8584
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "++"
                        }
                        [
                            position = 7632, 8176
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller3" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_V"
                            kp = "Kp_V"
                            lower_sat_lim = "Vmin"
                            upper_sat_lim = "Vmax"
                        }
                        [
                            position = 8296, 8168
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8152, 8752
                            scale = -1, 1
                        ]

                        port Xi_rd1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8176
                            scale = -1, 1
                        ]

                        port Xi_rq1 {
                            position = auto:auto
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8512
                            scale = -1, 1
                        ]

                        port "^E_q_ref" {
                            label = "^E_q_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8464
                            scale = -1, 1
                        ]

                        port "^E_d_ref" {
                            label = "^E_d_ref1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8128
                            scale = -1, 1
                        ]

                        port "^E_q" {
                            label = "^E_q1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8560, 8512
                            scale = -1, 1
                        ]

                        port "^E_d" {
                            label = "^E_d1"
                            position = auto:auto
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8528, 8176
                            scale = -1, 1
                        ]

                        tag From33 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8280, 8280
                            scale = -1, 1
                        ]

                        tag From35 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8280, 8640
                            scale = -1, 1
                        ]

                        tag From32 {
                            value = "Id1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8424, 8224
                            scale = -1, 1
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8320, 8784
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From36 {
                            value = "Iq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8376, 8560
                            scale = -1, 1
                        ]

                        junction Junction171 sp
                        [
                            position = 8232, 8504
                        ]

                        junction Junction170 sp
                        [
                            position = 8216, 8784
                        ]

                        junction Junction159 sp
                        [
                            position = 8480, 8176
                        ]

                        junction Junction158 sp
                        [
                            position = 8448, 8512
                        ]

                        junction Junction172 sp
                        [
                            position = 8240, 8168
                        ]

                        junction Junction153 sp
                        [
                            position = 7872, 8600
                        ]

                        connect "^E_d_ref" Sum8.in as Connection215
                        connect Gain4.in Junction158 as Connection117
                        connect Comparator1.in1 Junction170 as Connection256
                        connect Product5.in1 Junction153 as Connection94
                        connect Sum11.in "^E_q_ref" as Connection217
                        connect Junction170 "Signal switch1.in" as Connection257
                        connect Sum13.in1 Product8.out as Connection233
                        connect From32 Sum10.in as Connection259
                        connect "PID controller3.in" Sum8.out as Connection262
                        [
                            breakpoints = 8336, 8168
                        ]
                        connect Gain6.out Product8.in1 as Connection84
                        connect Xi_rd1 Sum9.out as Connection104
                        connect Sum8.in1 Junction159 as Connection118
                        connect ED_ctrl.in Junction172 as Connection268
                        [
                            breakpoints = 8240, 8160
                        ]
                        connect Junction171 "PID controller4.out" as Connection264
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Gain6.in Junction159 as Connection120
                        connect From33 Product6.in as Connection68
                        connect "^E_d" Junction159 as Connection216
                        connect Sum10.in1 Product6.out as Connection67
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect From27 Junction170 as Connection258
                        connect "^E_q" Junction158 as Connection218
                        connect EQ_ctrl.in Junction171 as Connection265
                        connect Gain5.out Junction153 as Connection92
                        connect From36 Sum13.in as Connection260
                        connect Product5.in Sum10.out as Connection71
                        connect "PID controller3.out" Junction172 as Connection266
                        connect Sum11.out "PID controller4.in" as Connection261
                        [
                            breakpoints = 8336, 8504
                        ]
                        connect Sum12.in Junction171 as Connection263
                        connect Sum11.in1 Junction158 as Connection115
                        connect From35 Product8.in as Connection79
                        connect Xi_rq1 Sum12.out as Connection105
                        connect Sum9.in1 Product5.out as Connection243
                        connect Junction153 Product7.in1 as Connection93
                        connect Sum12.in1 Product7.out as Connection244
                        connect Comparator1.out "Signal switch1.in2" as Connection2
                        connect Limit_zero.out Comparator1.in2 as Connection19
                        connect Junction172 Sum9.in as Connection267
                        connect Gain4.out Product6.in1 as Connection69
                        connect Product7.in Sum13.out as Connection89
                    }
                    [
                        position = 8864, 8400
                        scale = -1, 1
                        size = 152, 168
                    ]

                    component gen_gain Gain5 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8464, 8392
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_sum Sum7 {
                    }
                    [
                        position = 9128, 8552
                        scale = -1, 1
                    ]

                    component gen_sum Sum10 {
                        signs = "+-"
                    }
                    [
                        position = 9368, 8496
                        scale = -1, 1
                    ]

                    component gen_sum Sum11 {
                        signs = "+-"
                    }
                    [
                        position = 9376, 8192
                        scale = -1, 1
                    ]

                    component gen_gain Gain6 {
                        gain = "V_DQ"
                    }
                    [
                        position = 8496, 8456
                        hide_name = True
                        scale = -1, -1
                    ]

                    component gen_gain Gain3 {
                        gain = "R_s"
                    }
                    [
                        position = 9272, 8496
                        scale = -1, 1
                    ]

                    component gen_sum Sum8 {
                    }
                    [
                        position = 9160, 8232
                        scale = -1, 1
                    ]

                    component Subsystem "dq to abc" {
                        layout = dynamic
                        component src_constant o_ref {
                            execution_rate = "Ts"
                            value = "[0]"
                        }
                        [
                            position = 7520, 8200
                        ]

                        component "core/dq to abc" "dq to abc1" {
                            execution_rate = "inherit"
                        }
                        [
                            position = 7744, 8184
                            size = 48, 80
                        ]

                        port c {
                            label = "c"
                            position = left:4
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8216
                        ]

                        port d {
                            label = "Ud1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7520, 8136
                        ]

                        port alpha {
                            label = "alpha1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7600, 8232
                        ]

                        port a {
                            label = "a"
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7864, 8152
                        ]

                        port q {
                            label = "Uq1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 7472, 8168
                        ]

                        port b {
                            label = "b"
                            position = left:3
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7896, 8184
                        ]

                        connect q "dq to abc1.q_input" as Connection6
                        connect d "dq to abc1.d_input" as Connection3
                        connect "dq to abc1.phase_b" b as Connection4
                        connect c "dq to abc1.phase_c" as Connection2
                        connect a "dq to abc1.phase_a" as Connection1
                        connect o_ref.out "dq to abc1.zero_input" as Connection5
                        connect alpha "dq to abc1.wt" as Connection7
                    }
                    [
                        position = 8344, 8456
                        size = 80, 168
                    ]

                    component gen_gain Gain4 {
                        gain = "R_s"
                    }
                    [
                        position = 9280, 8192
                        scale = -1, 1
                    ]

                    component Subsystem "inner current control loop" {
                        layout = dynamic
                        component gen_probe XiD_ctrl {
                        }
                        [
                            position = 8208, 7952
                        ]

                        component sys_signal_switch "Signal switch1" {
                            threshold = "0.5"
                        }
                        [
                            position = 8128, 8432
                            scale = -1, -1
                        ]

                        component gen_pid_controller "PID controller2" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8208, 8224
                            scale = -1, 1
                        ]

                        component gen_gain Gain7 {
                            gain = "L_i"
                        }
                        [
                            position = 8272, 8368
                            scale = -1, 1
                        ]

                        component gen_sum Sum3 {
                        }
                        [
                            position = 7760, 8048
                            scale = -1, 1
                        ]

                        component src_constant one {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8216, 8416
                            scale = -1, 1
                        ]

                        component gen_sum Sum5 {
                            signs = "+-"
                        }
                        [
                            position = 8024, 8104
                            scale = -1, 1
                        ]

                        component gen_sum Sum7 {
                        }
                        [
                            position = 7760, 8232
                            scale = -1, 1
                        ]

                        component gen_sum Sum6 {
                        }
                        [
                            position = 8032, 8272
                            scale = -1, 1
                        ]

                        component gen_product Product3 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8112
                            scale = -1, 1
                        ]

                        component gen_product Product2 {
                        }
                        [
                            position = 8168, 8336
                            scale = -1, 1
                        ]

                        component gen_gain Gain6 {
                            gain = "L_i"
                        }
                        [
                            position = 8256, 8176
                            scale = -1, 1
                        ]

                        component gen_sum Sum8 {
                            signs = "+-"
                        }
                        [
                            position = 8328, 8040
                            scale = -1, 1
                        ]

                        component gen_sum Sum9 {
                            signs = "+-"
                        }
                        [
                            position = 8320, 8224
                            scale = -1, 1
                        ]

                        component gen_gain Gain5 {
                            gain = "[0.5]"
                        }
                        [
                            position = 8024, 8432
                            scale = -1, 1
                        ]

                        component gen_probe XiQ_ctrl {
                        }
                        [
                            position = 8288, 8264
                        ]

                        component src_constant Limit_zero {
                            execution_rate = "Ts"
                            value = "[0.001]"
                        }
                        [
                            position = 8336, 8512
                            scale = -1, 1
                        ]

                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            ki = "Ki_I"
                            kp = "Kp_I"
                            lower_sat_lim = "Imin"
                            upper_sat_lim = "Imax"
                        }
                        [
                            position = 8200, 8040
                            scale = -1, 1
                        ]

                        component gen_product Product1 {
                        }
                        [
                            position = 8168, 8144
                            scale = -1, 1
                        ]

                        component gen_comparator Comparator1 {
                        }
                        [
                            position = 8224, 8472
                            scale = -1, 1
                        ]

                        component gen_product Product4 {
                            signs = "*/"
                        }
                        [
                            position = 7904, 8280
                            scale = -1, 1
                        ]

                        port Uq1 {
                            position = left:2
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8232
                            rotation = down
                        ]

                        port Xi_q_meas1 {
                            label = "Xi_q_meas1"
                            position = right:4
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8520, 8264
                            rotation = down
                        ]

                        port Xi_q_ref1 {
                            label = "Xi_q_ref1"
                            position = right:3
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8520, 8192
                            rotation = down
                        ]

                        port Ud1 {
                            position = left:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 7592, 8048
                            rotation = down
                        ]

                        port Xi_d_ref1 {
                            label = "Xi_d_ref1"
                            position = right:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8032
                            rotation = down
                        ]

                        port Xi_d_meas1 {
                            label = "Xi_d_meas1"
                            position = right:2
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8440, 8112
                            rotation = down
                        ]

                        tag From23 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8272, 8112
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From24 {
                            value = "Ed1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8112, 8056
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From26 {
                            value = "Eq1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8128, 8264
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From27 {
                            value = "VDC1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8384, 8448
                            scale = -1, 1
                            size = 60, 20
                        ]

                        tag From25 {
                            value = "w1"
                            scope = masked_subsystem
                            kind = sp
                            direction = out
                        }
                        [
                            position = 8288, 8312
                            scale = -1, 1
                            size = 60, 20
                        ]

                        junction Junction171 sp
                        [
                            position = 7944, 8288
                        ]

                        junction Junction177 sp
                        [
                            position = 8400, 8112
                        ]

                        junction Junction179 sp
                        [
                            position = 8160, 8224
                        ]

                        junction Junction178 sp
                        [
                            position = 8160, 8040
                        ]

                        junction Junction172 sp
                        [
                            position = 8280, 8448
                        ]

                        junction Junction176 sp
                        [
                            position = 8400, 8232
                        ]

                        connect From23 Product1.in as Connection1
                        connect Product4.out Sum7.in1 as Connection19
                        connect one.out "Signal switch1.in1" as Connection40
                        connect Sum6.out Product4.in as Connection27
                        connect From26 Sum6.in as Connection3
                        connect Sum5.in1 Product1.out as Connection24
                        connect Gain6.out Product1.in1 as Connection289
                        connect Sum5.out Product3.in as Connection25
                        connect Junction177 Gain7.in as Connection300
                        connect Junction172 Comparator1.in1 as Connection267
                        connect Gain7.out Product2.in1 as Connection293
                        connect Xi_q_meas1 Junction176 as Connection290
                        connect "PID controller2.in" Sum9.out as Connection306
                        [
                            breakpoints = 8240, 8224
                        ]
                        connect Junction178 Sum3.in as Connection304
                        connect XiQ_ctrl.in Junction179 as Connection309
                        connect Sum7.in Junction179 as Connection307
                        connect Comparator1.out "Signal switch1.in2" as Connection57
                        connect Sum6.in1 Product2.out as Connection26
                        connect From27 Junction172 as Connection268
                        connect Gain5.out Junction171 as Connection254
                        connect Junction176 Sum9.in1 as Connection291
                        connect Sum5.in From24 as Connection23
                        connect Junction171 Product3.in1 as Connection253
                        connect Sum8.in1 Junction177 as Connection301
                        connect "PID controller1.out" Junction178 as Connection303
                        connect From25 Product2.in as Connection2
                        connect "Signal switch1.out" Gain5.in as Connection250
                        connect Uq1 Sum7.out as Connection264
                        connect Product3.out Sum3.in1 as Connection17
                        connect Sum8.out "PID controller1.in" as Connection302
                        [
                            breakpoints = 8240, 8040
                        ]
                        connect XiD_ctrl.in Junction178 as Connection305
                        connect "Signal switch1.in" Junction172 as Connection266
                        connect Sum8.in Xi_d_ref1 as Connection297
                        connect Sum9.in Xi_q_ref1 as Connection283
                        connect Product4.in1 Junction171 as Connection252
                        connect Limit_zero.out Comparator1.in2 as Connection251
                        connect Sum3.out Ud1 as Connection263
                        connect Gain6.in Junction176 as Connection292
                        connect Xi_d_meas1 Junction177 as Connection299
                        connect Junction179 "PID controller2.out" as Connection308
                    }
                    [
                        position = 8608, 8424
                        size = 96, 184
                    ]

                    port Ua1 {
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8392
                        rotation = down
                    ]

                    port E_q_ref1 {
                        label = "E_q_ref1"
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9424, 8304
                        rotation = down
                    ]

                    port Uc1 {
                        position = left:3
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8520
                        rotation = down
                    ]

                    port E_d_ref1 {
                        label = "E_d_ref1"
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 9408, 8632
                        rotation = down
                    ]

                    port Ub1 {
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8256, 8456
                        rotation = down
                    ]

                    tag From36 {
                        value = "E_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8384
                        scale = -1, 1
                        size = 60, 20
                    ]

                    tag From29 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8400
                        scale = -1, 1
                    ]

                    tag From40 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8232
                        rotation = down
                    ]

                    tag From38 {
                        value = "Id1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8448
                        rotation = down
                        size = 56, 20
                    ]

                    tag From1 {
                        value = "alpha1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8608, 8560
                        scale = -1, 1
                        size = 63, 25
                    ]

                    tag From30 {
                        value = "Xi_q1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 8720, 8496
                        scale = -1, 1
                    ]

                    tag From31 {
                        value = "Iq1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8152
                        rotation = down
                    ]

                    tag From39 {
                        value = "Xi_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9488, 8544
                        rotation = down
                    ]

                    tag From37 {
                        value = "E_d1"
                        scope = masked_subsystem
                        kind = sp
                        direction = out
                    }
                    [
                        position = 9008, 8464
                        scale = -1, 1
                        size = 60, 20
                    ]

                    connect Sum11.out Gain4.in as Connection290
                    connect From31 Sum11.in as Connection293
                    connect "dq to abc.alpha" From1 as Connection229
                    [
                        breakpoints = 8400, 8560; 8544, 8560
                    ]
                    connect From29 "inner current control loop.Xi_d_meas1" as Connection253
                    connect Sum7.in1 E_d_ref1 as Connection324
                    connect From36 "Outer voltage control loop.^E_q" as Connection322
                    connect "inner current control loop.Xi_q_ref1" "Outer voltage control loop.Xi_rq1" as Connection327
                    connect From30 "inner current control loop.Xi_q_meas1" as Connection257
                    connect Sum10.out Gain3.in as Connection287
                    connect Sum8.out "Outer voltage control loop.^E_q_ref" as Connection347
                    connect "dq to abc.d" Gain5.out as Connection337
                    connect "dq to abc.q" Gain6.out as Connection339
                    connect "dq to abc.c" Uc1 as Connection284
                    connect "dq to abc.b" Ub1 as Connection282
                    connect Gain6.in "inner current control loop.Uq1" as Connection346
                    [
                        breakpoints = 8544, 8496
                    ]
                    connect From40 Sum11.in1 as Connection294
                    connect From39 Sum10.in1 as Connection286
                    connect "Outer voltage control loop.^E_d" From37 as Connection301
                    connect "Outer voltage control loop.^E_d_ref" Sum7.out as Connection317
                    connect E_q_ref1 Sum8.in1 as Connection344
                    connect "inner current control loop.Xi_d_ref1" "Outer voltage control loop.Xi_rd1" as Connection326
                    connect "dq to abc.a" Ua1 as Connection283
                    connect Gain5.in "inner current control loop.Ud1" as Connection345
                    [
                        breakpoints = 8544, 8352
                    ]
                    connect Gain3.out Sum7.in as Connection289
                    connect Gain4.out Sum8.in as Connection343
                    connect From38 Sum10.in as Connection285
                }
                [
                    position = 7352, 7952
                    size = 128, 152
                ]

                component gen_probe Ppu {
                }
                [
                    position = 7080, 8080
                    rotation = down
                ]

                component gen_gain Gain17 {
                    gain = "S/70e3"
                }
                [
                    position = 7168, 8496
                    rotation = right
                    hide_name = True
                    scale = -1, 1
                ]

                component gen_gain Gain16 {
                    gain = "S/70e3"
                }
                [
                    position = 7168, 8136
                    rotation = left
                    hide_name = True
                    scale = -1, 1
                ]

                port "U - P" {
                    position = top:2
                    kind = sp
                    direction =  in
                    sp_type {
                        default = inherit
                        readonly = True
                    }
                }
                [
                    position = 8296, 8088
                    rotation = right
                    scale = -1, -1
                ]

                port U_P {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8440, 8144
                    scale = -1, 1
                ]

                port "Switch droop" {
                    position = right:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8512, 8184
                    scale = -1, 1
                ]

                port U_Q {
                    position = top:1
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 8592, 7912
                    scale = -1, 1
                ]

                tag Goto29 {
                    value = "E_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From6 {
                    value = "Xi_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7856
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto19 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8616
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto37 {
                    value = "P1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8168
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From24 {
                    value = "Ib1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8656
                    scale = -1, 1
                ]

                tag Goto47 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 7976
                    hide_name = True
                ]

                tag From28 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7904
                    scale = -1, 1
                ]

                tag From42 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8008
                    scale = -1, 1
                ]

                tag Goto22 {
                    value = "Xi_d1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 7816
                    scale = -1, 1
                ]

                tag From37 {
                    value = "Id1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8256
                    scale = -1, 1
                ]

                tag From9 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8160
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From7 {
                    value = "Xi_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7944
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto28 {
                    value = "E_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto23 {
                    value = "Xi_q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 7944
                    scale = -1, 1
                ]

                tag Goto3 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From34 {
                    value = "E_c1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8520
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From36 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8208
                    scale = -1, 1
                ]

                tag From8 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From26 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8704
                    scale = -1, 1
                ]

                tag Goto17 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8592, 8224
                    size = 60, 20
                ]

                tag From5 {
                    value = "Xi_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8088, 7816
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto20 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 8744
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From23 {
                    value = "Ia1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8616
                    scale = -1, 1
                ]

                tag From20 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 7896
                    scale = -1, 1
                    size = 67, 20
                ]

                tag From40 {
                    value = "w1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8640, 8536
                    scale = -1, 1
                ]

                tag Goto45 {
                    value = "E_dR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7760, 8648
                    scale = -1, 1
                    size = 64, 20
                ]

                tag Goto2 {
                    value = "modulator1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7096, 7952
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From10 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8248
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From33 {
                    value = "E_a1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8392
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From25 {
                    value = "Ic1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7592, 8744
                    scale = -1, 1
                ]

                tag From27 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8208
                    scale = -1, 1
                ]

                tag From43 {
                    value = "E_mag"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7920, 8648
                    hide_name = True
                    scale = -1, 1
                ]

                tag Goto4 {
                    value = "Ed1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7744, 8120
                    scale = -1, 1
                    size = 60, 20
                ]

                tag Goto36 {
                    value = "Q1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 6808, 8312
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From32 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8480
                    scale = -1, 1
                ]

                tag Goto21 {
                    value = "alpha1"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8248, 8536
                    scale = -1, 1
                ]

                tag Goto46 {
                    value = "E_qR"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7784, 8776
                    scale = -1, 1
                ]

                tag From35 {
                    value = "E_b1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8064, 8432
                    scale = -1, 1
                    size = 60, 20
                ]

                tag From38 {
                    value = "Iq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8472
                    scale = -1, 1
                ]

                tag From39 {
                    value = "Eq1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7568, 8400
                    scale = -1, 1
                ]

                junction Junction228 sp
                [
                    position = 7520, 8400
                ]

                junction Junction266 sp
                [
                    position = 6856, 8376
                ]

                junction Junction230 sp
                [
                    position = 7472, 8472
                ]

                junction Junction265 sp
                [
                    position = 6856, 8232
                ]

                junction Junction231 sp
                [
                    position = 7520, 7896
                ]

                junction Junction258 sp
                [
                    position = 7520, 8008
                ]

                junction Junction267 sp
                [
                    position = 7136, 8368
                ]

                junction Junction268 sp
                [
                    position = 7136, 8224
                ]

                junction Junction159 sp
                [
                    position = 7472, 8208
                ]

                junction Junction269 sp
                [
                    position = 7816, 8392
                ]

                junction Junction271 sp
                [
                    position = 7152, 8368
                ]

                junction Junction270 sp
                [
                    position = 7152, 8224
                ]

                junction Junction229 sp
                [
                    position = 7520, 8256
                ]

                junction Junction158 sp
                [
                    position = 7816, 8248
                ]

                junction Junction272 sp
                [
                    position = 8544, 8224
                ]

                connect From10 Current_abc_to_dq2.Ec2 as Connection234
                connect Goto36 Junction266 as Connection940
                [
                    breakpoints = 6856, 8312
                ]
                connect From25 "Current_abc_to_dq4.^Ec2" as Connection699
                connect Gain10.in "Current_abc_to_dq3.^Eq2" as Connection875
                connect E_d1.in Junction269 as Connection965
                connect Junction231 From20 as Connection728
                connect E_q1.in Junction158 as Connection718
                connect Goto37 Junction265 as Connection988
                [
                    breakpoints = 6856, 8168; 6856, 8232; 6856, 8232
                ]
                connect Current_abc_to_dq4.wt2 From26 as Connection702
                connect Sum5.in1 Junction266 as Connection942
                [
                    breakpoints = 7120, 8424; 6856, 8424
                ]
                connect Junction266 Integrator3.out as Connection987
                [
                    breakpoints = 6856, 8376; 6856, 8376; 6856, 8376; 6856, 8376
                ]
                connect Product111.in Junction159 as Connection703
                connect Junction265 Integrator2.out as Connection945
                [
                    breakpoints = 6856, 8232; 6856, 8232
                ]
                connect Gain5.out Goto4 as Connection959
                [
                    breakpoints = 7816, 8120
                ]
                connect Sum4.in Junction268 as Connection955
                connect Gain1.in Junction272 as Connection989
                connect Current_abc_to_dq2.Ed2 Gain5.in as Connection870
                connect Junction228 From39 as Connection680
                connect Gain11.out Goto19 as Connection877
                connect Current_abc_to_dq.Xi_d2 Gain6.in as Connection864
                connect Gain13.out Integrator3.in as Connection925
                connect From7 Current_abc_to_dq.Xi_c2 as Connection40
                connect Junction158 Gain8.out as Connection868
                connect Sum1.in1 Product13.out as Connection719
                connect From6 Current_abc_to_dq.Xi_b2 as Connection39
                connect Junction231 "Outer Voltage Loop + Inner Current Loop.E_d_ref1" as Connection736
                connect "Frequency droop.U - P" "U - P" as Connection985
                connect "Current_abc_to_dq4.^Ea2" From23 as Connection701
                connect From9 Current_abc_to_dq2.Eb2 as Connection235
                connect "Outer Voltage Loop + Inner Current Loop.Ua1" "Bus Join1.in" as Connection839
                connect Integrator1.in From40 as Connection725
                connect Goto23 Gain7.out as Connection962
                connect Product12.out Sum2.in1 as Connection721
                connect Sum5.in Junction267 as Connection952
                connect f1.in Gain1.out as Connection318
                connect E_dREF1.in Junction231 as Connection729
                [
                    breakpoints = 7520, 7848; 7520, 7896
                ]
                connect E_qREF1.in Junction258 as Connection861
                connect Product111.out Sum1.in as Connection684
                connect Product13.in Junction228 as Connection679
                connect Product12.in Junction159 as Connection720
                connect "Current_abc_to_dq4.^Eb2" From24 as Connection700
                connect "Outer Voltage Loop + Inner Current Loop.Uc1" "Bus Join1.in2" as Connection840
                connect From43 Goto45 as Connection881
                connect Integrator1.out Goto21 as Connection960
                connect Junction159 From36 as Connection698
                connect Junction272 Goto17 as Connection990
                connect P1.in Gain15.out as Connection966
                connect Product10.out Sum2.in as Connection672
                connect Gain15.in Junction268 as Connection967
                connect Sum5.out Gain13.in as Connection926
                connect Q1.in Gain14.out as Connection968
                connect Product10.in Junction229 as Connection723
                connect "Current_abc_to_dq4.^Ed2" Gain11.in as Connection876
                connect Product12.in1 Junction230 as Connection678
                connect Junction229 From37 as Connection683
                connect Gain14.in Junction267 as Connection969
                connect Current_abc_to_dq.wt2 From28 as Connection247
                [
                    breakpoints = 8000, 7904; 8040, 7904
                ]
                connect Product10.in1 Junction228 as Connection681
                connect Goto2 "Bus Join1.out" as Connection51
                connect Junction268 Junction270 as Connection970
                connect "Frequency droop.w1" Junction272 as Connection991
                connect From35 "Current_abc_to_dq3.^Eb2" as Connection276
                connect Junction270 Sum1.out as Connection971
                connect Gain8.in Current_abc_to_dq2.Eq2 as Connection869
                connect "Bus Join1.in1" "Outer Voltage Loop + Inner Current Loop.Ub1" as Connection838
                connect "Switch droop" "Frequency droop.Switch droop" as Connection992
                connect Gain9.out Junction269 as Connection963
                connect Gain6.out Goto22 as Connection961
                connect Junction267 Junction271 as Connection973
                connect From42 Junction258 as Connection859
                connect Current_abc_to_dq2.Ea2 From8 as Connection236
                connect From34 "Current_abc_to_dq3.^Ec2" as Connection279
                connect Junction271 Sum2.out as Connection974
                connect "Current_abc_to_dq3.^Ea2" From33 as Connection278
                connect Junction269 Goto29 as Connection964
                connect Junction258 "Outer Voltage Loop + Inner Current Loop.E_q_ref1" as Connection860
                connect Junction230 From38 as Connection677
                connect Product13.in1 Junction230 as Connection676
                connect Sum4.out Gain4.in as Connection330
                connect U_P "Frequency droop.U_P" as Connection984
                connect Constant1.out Goto46 as Connection882
                connect From5 Current_abc_to_dq.Xi_a2 as Connection38
                connect Gain12.in "Current_abc_to_dq4.^Eq2" as Connection879
                connect Gain4.out Integrator2.in as Connection335
                connect From27 Current_abc_to_dq2.wt2 as Connection246
                connect From32 Current_abc_to_dq3.wt2 as Connection275
                connect Product111.in1 Junction229 as Connection682
                connect Goto20 Gain12.out as Connection878
                connect "Voltage droop.E_magnitude1" Goto47 as Connection880
                connect "Current_abc_to_dq3.^Ed2" Gain9.in as Connection872
                connect Goto28 Gain10.out as Connection874
                connect Sum4.in1 Junction265 as Connection939
                [
                    breakpoints = 7112, 8280; 6856, 8280
                ]
                connect Goto3 Junction158 as Connection292
                connect Current_abc_to_dq.Xi_q2 Gain7.in as Connection866
                connect Ppu.in Gain16.out as Connection993
                connect Gain16.in Junction270 as Connection994
                connect Qpu.in Gain17.out as Connection995
                connect Gain17.in Junction271 as Connection996
                connect U_Q "Voltage droop.Q_ref1" as Connection997
            }
            [
                position = 6816, 7568
                size = 296, 128
            ]

            component "core/Triple Pole Single Throw Contactor" S2 {
                ctrl_src = "Model"
            }
            [
                position = 9504, 8000
                size = 64, 256
            ]

            component pas_inductor L0c1 {
                inductance = "L_i"
            }
            [
                position = 7744, 8096
                rotation = down
            ]

            component pas_inductor L0a1 {
                inductance = "L_i"
            }
            [
                position = 7744, 7904
                rotation = down
            ]

            component "core/Three Phase Two Winding Transformer" Tr1 {
                Poc1 = "344.99999999952564"
                Psc1 = "1762.5"
                Sn = "120000"
                V1 = "277"
                V2 = "480"
                current_vals_SCOC = "[0.0024, 1.0]"
                ioc1 = "0.6999999999992988"
                usc1 = "3.9999999999957394"
            }
            [
                position = 10088, 8000
                size = 126, 256
            ]

            component pas_resistor Rt0b1 {
                resistance = "R_s"
            }
            [
                position = 8096, 8256
                rotation = left
                scale = -1, 1
            ]

            component "core/Voltage Measurement" Va2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7600, 8384
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_inductor La1 {
                inductance = "L_o"
            }
            [
                position = 8872, 7904
                rotation = down
            ]

            component pas_inductor Lgrida_1 {
                inductance = "L"
            }
            [
                position = 9144, 7904
                rotation = down
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "3"
            }
            [
                position = 6912, 7760
                hide_name = True
            ]

            component gen_probe Ec_1 {
            }
            [
                position = 8512, 8400
            ]

            component "core/Signal Controlled Voltage Source" Va_inv {
            }
            [
                position = 7008, 7944
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rt0c1 {
                resistance = "R_s"
            }
            [
                position = 8176, 8256
                rotation = left
                scale = -1, 1
            ]

            component pas_resistor R0b1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8000
            ]

            component gen_probe Eb_1 {
            }
            [
                position = 8400, 8288
            ]

            component pas_resistor Rgrida_1 {
                resistance = "R"
            }
            [
                position = 9248, 7904
            ]

            component "core/Voltage Measurement" Vb2 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7728, 8432
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_resistor Rgridc_1 {
                resistance = "R"
            }
            [
                position = 9248, 8096
            ]

            component "core/Signal Controlled Voltage Source" Vb_inv {
            }
            [
                position = 7088, 8040
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component pas_inductor Lgridc_1 {
                inductance = "L"
            }
            [
                position = 9144, 8096
                rotation = down
            ]

            component "core/Voltage Measurement" VaG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9616, 8216
                rotation = right
                size = 64, 32
            ]

            component pas_resistor Rc1 {
                resistance = "R_o"
            }
            [
                position = 8776, 8096
            ]

            component "core/Voltage Measurement" VbG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9744, 8288
                rotation = right
                size = 64, 32
            ]

            component Subsystem "BE1-25A Synchronizer (inverter)" {
                layout = dynamic
                component gen_trigonometric "Trigonometric function2" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7568, 8104
                    hide_name = True
                ]

                component gen_math_fnc "Mathematical function1" {
                    mathematical_fn = "sqrt"
                }
                [
                    position = 8312, 8224
                    hide_name = True
                ]

                component gen_limiter Limit2 {
                    lower_limit = "1e-12"
                }
                [
                    position = 7496, 8120
                    hide_name = True
                ]

                component src_constant Constant9 {
                    execution_rate = "Ts"
                    value = "5e-2"
                }
                [
                    position = 8456, 8224
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer1" {
                    in_terminal_dimensions = "inherit;inherit;inherit"
                    in_terminal_dimensions_str = "dV inherit;max_Q inherit;max_slip inherit"
                    in_terminal_labels = "[(\'dV\', True), (\'max_Q\', True), (\'max_slip\', True)]"
                    in_terminal_properties = "real dV;real max_Q;real max_slip;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "del_Q inherit"
                    out_terminal_labels = "[(\'del_Q\', True)]"
                    out_terminal_properties = "real del_Q;"
                    output_fnc = "/*Begin code section*/
if (dV>=max_slip)
{
    del_Q = max_Q;
}
else if ((dV<max_slip) && (dV>=0))
{
    del_Q = max_Q*dV/max_slip;
}
else if ((dV<0) && (dV>=-1*max_slip))
{
    del_Q = max_Q*dV/max_slip;
}
else if (dV < (-1*max_slip)) 
{
    del_Q = -1*max_Q;
}
/*End code section*/"
                    parameters = "real Ts;"
                }
                [
                    position = 8384, 8672
                    hide_name = True
                    size = 144, 224
                ]

                component tm_delay "Unit Delay4" {
                    signal_out_type = "real"
                }
                [
                    position = 8720, 8680
                    hide_name = True
                ]

                component gen_gain Gain7 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7824, 8264
                    hide_name = True
                ]

                component gen_abs Abs2 {
                }
                [
                    position = 8456, 8192
                    hide_name = True
                ]

                component gen_gain Gain4 {
                    gain = "1/w_0"
                }
                [
                    position = 7736, 8152
                    hide_name = True
                ]

                component src_scada_input "Connect G2" {
                    def_value = "1"
                    execution_rate = "Ts"
                    format = "uint"
                    max = "1"
                    min = "0"
                    signal_type = "uint"
                    unit = ""
                }
                [
                    position = 8800, 8192
                ]

                component gen_terminator Termination1 {
                }
                [
                    position = 7440, 8600
                    hide_name = True
                ]

                component gen_trigonometric "Trigonometric function1" {
                    trigonometric_fn = "atan2"
                }
                [
                    position = 7568, 8016
                    hide_name = True
                ]

                component gen_c_function "BE1-25A Synchronizer" {
                    in_terminal_dimensions = "inherit;inherit;inherit;inherit"
                    in_terminal_dimensions_str = "df inherit;max_T inherit;max_slip inherit;angle_slip inherit"
                    in_terminal_labels = "[(\'df\', True), (\'max_T\', True), (\'max_slip\', True), (\'angle_slip\', True)]"
                    in_terminal_properties = "real df;real max_T;real max_slip;real angle_slip;"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "del_P inherit"
                    out_terminal_labels = "[(\'del_P\', True)]"
                    out_terminal_properties = "real del_P;"
                    output_fnc = "/*Begin code section*/
if (df>=max_slip)
{
    del_P = max_T;
}
else if ((df<max_slip) && (df>=0))
{
    del_P = max_T*(df+1e-4)/max_slip + (angle_slip*1*D_f);
}
else if ((df<0) && (df > (-max_slip)))
{
    del_P = max_T*(df+1e-4)/max_slip  + (angle_slip*1*D_f);
}
else if (df <= (-1*max_slip))
{
    del_P = -1*max_T;
}
/*End code section*/"
                    parameters = "real Ts;real D_f;"
                }
                [
                    position = 8104, 8416
                    hide_name = True
                    size = 144, 224
                ]

                component gen_product Product1 {
                }
                [
                    position = 8160, 8192
                    hide_name = True
                ]

                component gen_c_function "Hold after connect" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True)]"
                    in_terminal_properties = "real in;int connect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
else
    var =0;
/*End code section*/"
                }
                [
                    position = 8320, 8424
                    hide_name = True
                    size = 96, 48
                ]

                component gen_sum Sum4 {
                }
                [
                    position = 8240, 8224
                    hide_name = True
                ]

                component gen_c_function "Hold after connect1" {
                    global_variables = "real var;"
                    in_terminal_dimensions = "inherit;inherit"
                    in_terminal_dimensions_str = "in inherit;connect inherit"
                    in_terminal_labels = "[(\'in\', True), (\'connect\', True)]"
                    in_terminal_properties = "real in;int connect;"
                    init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                    update_fnc = "/*Begin code section*/
if (connect==0)
    var = in;
else
    var =0;
/*End code section*/"
                }
                [
                    position = 8624, 8680
                    hide_name = True
                    size = 96, 48
                ]

                component gen_c_function "confine phase" {
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
if (in > 0)
{
    if (in > (6.283185307179586/2))
        out = in - 6.283185307179586;
    else
        out = in;
}
if (in < 0)
{
    if (in < (-6.283185307179586/2))
        out = in + 6.283185307179586;
    else
        out = in;
}
/*End code section*/"
                }
                [
                    position = 7824, 8064
                    size = 56, 48
                ]

                component gen_sum Sum5 {
                }
                [
                    position = 7344, 8352
                    hide_name = True
                ]

                component gen_probe frequency_diff3 {
                }
                [
                    position = 7912, 8128
                    scale = -1, 1
                ]

                component gen_product Product4 {
                }
                [
                    position = 7264, 8384
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe3" {
                    override_signal_name = "True"
                    signal_name = "ang_sync3"
                }
                [
                    position = 8616, 7944
                    hide_name = True
                ]

                component src_constant Constant7 {
                    execution_rate = "Ts"
                    value = "1e-3"
                }
                [
                    position = 8064, 8112
                    hide_name = True
                ]

                component gen_sum Sum1 {
                    signs = "-+"
                }
                [
                    position = 7736, 8064
                    hide_name = True
                ]

                component src_constant Constant4 {
                    execution_rate = "Ts"
                    value = "1e-4"
                }
                [
                    position = 7968, 8448
                    hide_name = True
                ]

                component gen_c_function "confine phase2" {
                    global_variables = "real x;real floor_in;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                }
                [
                    position = 7640, 8104
                    hide_name = True
                    size = 56, 48
                ]

                component src_clock Clock1 {
                    execution_rate = "Ts"
                }
                [
                    position = 8456, 8304
                    hide_name = True
                ]

                component gen_product Product3 {
                }
                [
                    position = 7264, 8320
                    hide_name = True
                ]

                component tm_delay "Unit Delay2" {
                }
                [
                    position = 7696, 8624
                    rotation = right
                    hide_name = True
                ]

                component gen_sum Sum2 {
                    signs = "-+"
                }
                [
                    position = 7824, 8176
                    hide_name = True
                ]

                component gen_rel_op "Relational operator1" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8056
                    hide_name = True
                ]

                component gen_rel_op "Relational operator4" {
                    relational_op = "<"
                }
                [
                    position = 8520, 8208
                    hide_name = True
                ]

                component gen_abs Abs4 {
                }
                [
                    position = 7904, 8064
                    hide_name = True
                ]

                component tm_delay "Unit Delay1" {
                    signal_out_type = "int"
                }
                [
                    position = 8752, 8128
                    hide_name = True
                ]

                component gen_gain Gain3 {
                    gain = "1/w_0"
                }
                [
                    position = 7736, 8200
                    hide_name = True
                ]

                component gen_probe volt_diff3 {
                }
                [
                    position = 8136, 8608
                ]

                component gen_rel_op "Relational operator5" {
                    relational_op = ">"
                }
                [
                    position = 8520, 8320
                    hide_name = True
                ]

                component src_constant Constant10 {
                    execution_rate = "Ts"
                    value = "10"
                }
                [
                    position = 8456, 8336
                    hide_name = True
                ]

                component src_constant Constant6 {
                    execution_rate = "Ts"
                    value = "1e-3"
                }
                [
                    position = 8064, 8032
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe1" {
                    override_signal_name = "True"
                    signal_name = "gridconnect2"
                }
                [
                    position = 9016, 8208
                    hide_name = True
                ]

                component gen_c_function "stay connected" {
                    global_variables = "real connect;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
connect = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    out_terminal_properties = "int out;"
                    output_fnc = "/*Begin code section*/
out = connect;
/*End code section*/"
                    parameters = "real Ts;"
                    update_fnc = "/*Begin code section*/
if (in==1)
    connect = 1;
/*End code section*/"
                }
                [
                    position = 8696, 8128
                    hide_name = True
                    size = 48, 48
                ]

                component gen_logic_op "Logical operator2" {
                    inputs = "4"
                    operator = "NOT"
                }
                [
                    position = 8944, 8248
                    rotation = right
                    hide_name = True
                ]

                component Subsystem Current_abc_to_dq3 {
                    layout = dynamic
                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 7856, 8008
                        size = 48, 80
                    ]

                    component gen_terminator Termination {
                    }
                    [
                        position = 7952, 8064
                    ]

                    port wt {
                        position = right:4
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8088
                    ]

                    port Ec {
                        position = right:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8040
                    ]

                    port Eq {
                        position = left:2
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 8016
                    ]

                    port Ea {
                        position = right:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 7960
                    ]

                    port Ed {
                        position = left:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8008, 7976
                    ]

                    port Eb {
                        position = right:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7704, 8000
                    ]

                    connect Termination.in "abc to dq1.zero_axis" as Connection4
                    connect "abc to dq1.q_axis" Eq as Connection6
                    connect Ec "abc to dq1.vc" as Connection3
                    connect Ea "abc to dq1.va" as Connection1
                    connect Eb "abc to dq1.vb" as Connection2
                    connect "abc to dq1.d_axis" Ed as Connection5
                    connect wt "abc to dq1.wt" as Connection7
                }
                [
                    position = 7736, 8312
                    hide_name = True
                    scale = -1, 1
                    size = 64, 144
                ]

                component gen_product Product2 {
                }
                [
                    position = 8160, 8256
                    hide_name = True
                ]

                component gen_gain Gain6 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7376, 8576
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe4" {
                    override_signal_name = "True"
                    signal_name = "freq_sync3"
                }
                [
                    position = 8616, 7992
                    hide_name = True
                ]

                component src_constant Constant11 {
                    execution_rate = "Ts"
                    value = "D_V*6e-1"
                }
                [
                    position = 8240, 8672
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe5" {
                    override_signal_name = "True"
                    signal_name = "volt_sync3"
                }
                [
                    position = 8616, 8032
                    hide_name = True
                ]

                component gen_logic_op "Logical operator1" {
                    inputs = "4"
                }
                [
                    position = 8616, 8128
                    hide_name = True
                ]

                component gen_abs Abs5 {
                }
                [
                    position = 8032, 8128
                    hide_name = True
                ]

                component gen_probe angle_diff3 {
                }
                [
                    position = 8064, 7968
                ]

                component gen_gain Gain8 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7824, 8360
                    hide_name = True
                ]

                component gen_sum Sum3 {
                    signs = "-+"
                }
                [
                    position = 8392, 8192
                    hide_name = True
                    scale = 1, -1
                ]

                component gen_gain Gain5 {
                    gain = "1/V_DQ"
                }
                [
                    position = 7336, 8552
                    hide_name = True
                ]

                component tm_delay "Unit Delay3" {
                    signal_out_type = "real"
                }
                [
                    position = 8400, 8424
                    hide_name = True
                ]

                component gen_rel_op "Relational operator2" {
                    relational_op = ">"
                }
                [
                    position = 8160, 8120
                    hide_name = True
                ]

                component src_constant Constant13 {
                    execution_rate = "Ts"
                    value = "1e-1"
                }
                [
                    position = 8240, 8760
                    hide_name = True
                ]

                component src_constant Constant3 {
                    execution_rate = "Ts"
                    value = "D_f*1e-3"
                }
                [
                    position = 7968, 8384
                    hide_name = True
                ]

                component gen_c_function "confine phase1" {
                    global_variables = "real x;real floor_in;"
                    in_terminal_dimensions = "inherit"
                    in_terminal_dimensions_str = "in inherit"
                    in_terminal_labels = "[(\'in\', True)]"
                    init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                    no_feed_inputs = "[\'\']"
                    no_feed_outputs = "[\'\']"
                    out_terminal_dimensions = "inherit"
                    out_terminal_dimensions_str = "out inherit"
                    out_terminal_labels = "[(\'out\', True)]"
                    output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                }
                [
                    position = 7640, 8016
                    hide_name = True
                    size = 56, 48
                ]

                component Subsystem PLL {
                    layout = dynamic
                    component gen_pid_controller "PID controller1" {
                        controller_type = "PI"
                        enb_anti_windup_out = "True"
                        enb_output_limit_out = "True"
                        int_init_value = "2*np.pi*60"
                        ki = "2"
                        lower_sat_lim = "2*np.pi*59.5"
                        upper_sat_lim = "2*np.pi*60.5"
                    }
                    [
                        position = 8192, 8152
                        hide_name = True
                    ]

                    component gen_c_function "C function1" {
                        global_variables = "real var;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                        parameters = "real Ts;"
                        update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                    }
                    [
                        position = 8304, 8152
                        hide_name = True
                        size = 80, 48
                    ]

                    component gen_c_function "confine phase" {
                        global_variables = "real x;real floor_in;"
                        in_terminal_dimensions = "inherit"
                        in_terminal_dimensions_str = "in inherit"
                        in_terminal_labels = "[(\'in\', True)]"
                        init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                        no_feed_inputs = "[\'\']"
                        no_feed_outputs = "[\'\']"
                        out_terminal_dimensions = "inherit"
                        out_terminal_dimensions_str = "out inherit"
                        out_terminal_labels = "[(\'out\', True)]"
                        output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                    }
                    [
                        position = 8408, 8152
                        size = 56, 48
                    ]

                    port wt {
                        label = "wt"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8496, 8152
                    ]

                    port w {
                        label = "w"
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8304, 8208
                    ]

                    port q {
                        label = "q"
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 8064, 8152
                    ]

                    junction Junction1 sp
                    [
                        position = 8240, 8152
                    ]

                    connect w Junction1 as Connection19
                    connect "C function1.in" Junction1 as Connection17
                    connect wt "confine phase.out" as Connection14
                    connect "confine phase.in" "C function1.out" as Connection16
                    connect Junction1 "PID controller1.out" as Connection18
                    connect q "PID controller1.in" as Connection20
                }
                [
                    position = 7544, 8576
                    scale = 1, -1
                    size = 96, 56
                ]

                component gen_limiter Limit1 {
                    lower_limit = "1e-12"
                }
                [
                    position = 7496, 8032
                    hide_name = True
                ]

                component gen_digital_probe "Digital Probe6" {
                    override_signal_name = "True"
                    signal_name = "griddisconnect2"
                }
                [
                    position = 9016, 8288
                    hide_name = True
                ]

                component sys_signal_switch "Signal switch1" {
                    criterion = "ctrl != threshold"
                    threshold = "1"
                }
                [
                    position = 8888, 8176
                    hide_name = True
                ]

                component "core/abc to dq" "abc to dq1" {
                }
                [
                    position = 7264, 8576
                    size = 48, 80
                ]

                component gen_math_fnc "Mathematical function2" {
                    mathematical_fn = "sqrt"
                }
                [
                    position = 7416, 8352
                    hide_name = True
                ]

                port In3 {
                    label = "Inverter speed"
                    position = left:3
                    kind = sp
                    direction =  out
                    sp_type {
                        default = auto
                        readonly = True
                    }
                }
                [
                    position = 7640, 8152
                ]

                tag From39 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8264
                    hide_name = True
                ]

                tag Connect3 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8512, 8688
                    hide_name = True
                ]

                tag Goto28 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7912, 8360
                    hide_name = True
                    size = 60, 20
                ]

                tag From43 {
                    value = "Vd_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8312
                    hide_name = True
                ]

                tag w_bus1 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7696, 8568
                    hide_name = True
                ]

                tag Vb_G1 {
                    value = "VbG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8560
                    hide_name = True
                ]

                tag "|V|1" {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7512, 8352
                    hide_name = True
                ]

                tag theta_bus {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7752, 8656
                    hide_name = True
                ]

                tag theta_bus5 {
                    value = "del_V"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8248, 8584
                    hide_name = True
                ]

                tag theta_bus3 {
                    value = "theta_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8360
                    hide_name = True
                ]

                tag Goto2 {
                    value = "del_P"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8496, 8424
                    hide_name = True
                ]

                tag From42 {
                    value = "Vq_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8392
                    hide_name = True
                ]

                tag Goto32 {
                    value = "Vq_G"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7544, 8536
                    hide_name = True
                    size = 60, 20
                ]

                tag Goto31 {
                    value = "del_Q"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8800, 8680
                    hide_name = True
                ]

                tag Connect2 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 8432
                    hide_name = True
                ]

                tag Goto29 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 7912, 8264
                    hide_name = True
                    size = 60, 20
                ]

                tag From44 {
                    value = "Vd_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8120
                    hide_name = True
                ]

                tag From45 {
                    value = "Vq_G"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8088
                    hide_name = True
                ]

                tag Goto30 {
                    value = "del_V"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 8504, 8160
                    hide_name = True
                ]

                tag Goto33 {
                    value = "Vd_G"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7440, 8552
                    hide_name = True
                    size = 60, 20
                ]

                tag Vc_G1 {
                    value = "VcG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8584
                    hide_name = True
                ]

                tag From41 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8032
                    hide_name = True
                ]

                tag Va_G1 {
                    value = "VaG"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7176, 8536
                    hide_name = True
                ]

                tag From36 {
                    value = "E_d"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8072, 8184
                    hide_name = True
                ]

                tag theta_bus2 {
                    value = "w_bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8200
                    hide_name = True
                ]

                tag From34 {
                    value = "Ec1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8328
                    hide_name = True
                    size = 60, 20
                ]

                tag From33 {
                    value = "Ea1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8264
                    hide_name = True
                    size = 60, 20
                ]

                tag theta_bus6 {
                    value = "del_V"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8048, 8608
                    hide_name = True
                ]

                tag Connect1 {
                    value = "Connect"
                    scope = masked_subsystem
                    kind = sp
                    direction = in
                }
                [
                    position = 9016, 8176
                    hide_name = True
                ]

                tag From35 {
                    value = "Eb1"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7640, 8296
                    hide_name = True
                    size = 60, 20
                ]

                tag From1 {
                    value = "|V| bus"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 8312, 8184
                    hide_name = True
                ]

                tag From40 {
                    value = "E_q"
                    scope = masked_subsystem
                    kind = sp
                    direction = out
                }
                [
                    position = 7432, 8000
                    hide_name = True
                ]

                junction Junction53 sp
                [
                    position = 8800, 8128
                ]

                junction Junction41 sp
                [
                    position = 7480, 8576
                ]

                junction Junction54 sp
                [
                    position = 8944, 8208
                ]

                junction Junction38 sp
                [
                    position = 8304, 8120
                ]

                junction Junction26 sp
                [
                    position = 8112, 8184
                ]

                junction Junction42 sp
                [
                    position = 7216, 8392
                ]

                junction Junction43 sp
                [
                    position = 7216, 8312
                ]

                junction Junction28 sp
                [
                    position = 8112, 8264
                ]

                junction Junction45 sp
                [
                    position = 7696, 8656
                ]

                junction Junction49 sp
                [
                    position = 7872, 8064
                ]

                junction Junction46 sp
                [
                    position = 7976, 8176
                ]

                junction Junction35 sp
                [
                    position = 8424, 8192
                ]

                junction Junction50 sp
                [
                    position = 8000, 8064
                ]

                junction Junction52 sp
                [
                    position = 8944, 8176
                ]

                junction Junction39 sp
                [
                    position = 8560, 8136
                ]

                junction Junction47 sp
                [
                    position = 7976, 8128
                ]

                junction Junction48 sp
                [
                    position = 8256, 8056
                ]

                connect "Digital Probe4.in" Junction38 as Connection366
                connect Junction54 Junction52 as Connection452
                connect "confine phase2.out" Sum1.in1 as Connection399
                connect "Mathematical function2.out" "|V|1" as Connection436
                [
                    breakpoints = 7456, 8352
                ]
                connect From39 Junction28 as Connection259
                connect "abc to dq1.q_axis" Gain6.in as Connection319
                connect From34 Current_abc_to_dq3.Ec as Connection280
                connect "Unit Delay1.out" Junction53 as Connection448
                connect From41 Limit1.in as Connection285
                connect Constant4.out "BE1-25A Synchronizer.max_slip" as Connection67
                connect In3 Gain4.in as Connection240
                connect Sum3.in1 From1 as Connection81
                connect Junction53 "Signal switch1.in2" as Connection449
                connect theta_bus2 Gain3.in as Connection241
                connect Vc_G1 "abc to dq1.vc" as Connection222
                connect angle_diff3.in Junction49 as Connection430
                connect Product2.out Sum4.in1 as Connection251
                connect Abs2.out "Relational operator4.in" as Connection84
                connect Connect2 "Hold after connect.connect" as Connection156
                connect "Digital Probe5.in" Junction39 as Connection375
                connect Goto30 Junction35 as Connection308
                connect Gain3.out Sum2.in1 as Connection64
                connect "Mathematical function1.out" Sum3.in as Connection253
                connect Va_G1 "abc to dq1.va" as Connection224
                connect "Signal switch1.in" Junction53 as Connection450
                connect theta_bus Junction45 as Connection404
                connect Gain8.in Current_abc_to_dq3.Eq as Connection324
                connect Goto29 Gain7.out as Connection321
                connect Termination1.in "abc to dq1.zero_axis" as Connection29
                connect "Logical operator1.in" Junction48 as Connection424
                [
                    breakpoints = 8576, 8056; 8480, 8056; 8480, 8056
                ]
                connect Junction50 Abs4.out as Connection432
                connect Constant10.out "Relational operator5.in1" as Connection262
                connect From33 Current_abc_to_dq3.Ea as Connection278
                connect "Digital Probe1.in" Junction54 as Connection451
                connect From45 "Trigonometric function2.in" as Connection401
                connect Clock1.out "Relational operator5.in" as Connection458
                [
                    breakpoints = 8488, 8304
                ]
                connect Junction47 Abs5.in as Connection421
                [
                    breakpoints = 7976, 8128; 7976, 8128
                ]
                connect Sum4.out "Mathematical function1.in" as Connection252
                connect "Hold after connect1.out" "Unit Delay4.in" as Connection355
                connect Product2.in Junction28 as Connection261
                connect Junction28 Product2.in1 as Connection260
                connect Constant7.out "Relational operator2.in" as Connection70
                connect Junction49 Abs4.in as Connection429
                connect "Logical operator2.in" Junction54 as Connection453
                connect Abs2.in Junction35 as Connection306
                connect Goto31 "Unit Delay4.out" as Connection437
                connect From44 Limit2.in as Connection402
                connect "Hold after connect.in" "BE1-25A Synchronizer.del_P" as Connection408
                connect "Unit Delay3.out" Goto2 as Connection434
                [
                    breakpoints = 8440, 8424
                ]
                connect theta_bus3 Current_abc_to_dq3.wt as Connection281
                connect "Digital Probe6.in" "Logical operator2.out" as Connection454
                connect "Relational operator1.out" Junction48 as Connection426
                connect Junction26 From36 as Connection248
                connect Product1.in Junction26 as Connection247
                connect Junction46 "BE1-25A Synchronizer.df" as Connection414
                [
                    breakpoints = 7976, 8176
                ]
                connect "Unit Delay1.in" "stay connected.out" as Connection102
                connect volt_diff3.in theta_bus6 as Connection316
                connect Limit2.out "Trigonometric function2.in1" as Connection398
                connect Gain7.in Current_abc_to_dq3.Ed as Connection322
                connect Goto33 Gain5.out as Connection380
                connect Product3.out Sum5.in as Connection390
                connect Constant3.out "BE1-25A Synchronizer.max_T" as Connection66
                connect Junction38 "Relational operator2.out" as Connection365
                [
                    breakpoints = 8288, 8120; 8288, 8120
                ]
                connect Product3.in Junction43 as Connection386
                connect Limit1.out "Trigonometric function1.in1" as Connection286
                connect From40 "Trigonometric function1.in" as Connection284
                connect "Logical operator1.in3" "Relational operator5.out" as Connection371
                [
                    breakpoints = 8576, 8152; 8576, 8288
                ]
                connect Vb_G1 "abc to dq1.vb" as Connection223
                connect Sum2.out Junction46 as Connection413
                [
                    breakpoints = 7864, 8176
                ]
                connect "BE1-25A Synchronizer.angle_slip" Junction50 as Connection433
                connect "Relational operator2.in1" Abs5.out as Connection357
                connect Goto28 Gain8.out as Connection323
                connect From42 Junction42 as Connection384
                connect "Connect G2.out" "Signal switch1.in1" as Connection442
                connect Junction52 Connect1 as Connection445
                connect Junction43 From43 as Connection389
                connect "Signal switch1.out" Junction52 as Connection444
                connect Sum5.out "Mathematical function2.in" as Connection387
                connect Product3.in1 Junction43 as Connection391
                connect Gain6.out Junction41 as Connection381
                connect Junction35 Sum3.out as Connection307
                connect "confine phase.in" Sum1.out as Connection146
                connect Product4.out Sum5.in1 as Connection388
                connect "confine phase1.out" Sum1.in as Connection400
                connect Constant9.out "Relational operator4.in1" as Connection85
                connect PLL.w w_bus1 as Connection233
                connect Product4.in Junction42 as Connection385
                connect "confine phase2.in" "Trigonometric function2.out" as Connection397
                connect "confine phase.out" Junction49 as Connection428
                connect Junction45 "abc to dq1.wt" as Connection405
                connect From35 Current_abc_to_dq3.Eb as Connection279
                connect Junction39 "Relational operator4.out" as Connection374
                [
                    breakpoints = 8560, 8136; 8560, 8208; 8560, 8136
                ]
                connect "Logical operator1.in2" Junction39 as Connection373
                connect Gain4.out Sum2.in as Connection62
                connect Goto32 Junction41 as Connection383
                connect Constant13.out "BE1-25A Synchronizer1.max_slip" as Connection304
                connect "confine phase1.in" "Trigonometric function1.out" as Connection290
                connect Product1.in1 Junction26 as Connection249
                connect "Hold after connect.out" "Unit Delay3.in" as Connection291
                connect Junction41 PLL.q as Connection382
                connect Connect3 "Hold after connect1.connect" as Connection354
                connect theta_bus5 "BE1-25A Synchronizer1.dV" as Connection309
                connect "stay connected.in" "Logical operator1.out" as Connection92
                connect Constant6.out "Relational operator1.in" as Connection69
                connect Junction48 "Digital Probe3.in" as Connection425
                [
                    breakpoints = 8256, 8056
                ]
                connect "Unit Delay2.in" PLL.wt as Connection348
                connect "BE1-25A Synchronizer1.del_Q" "Hold after connect1.in" as Connection356
                connect Product1.out Sum4.in as Connection250
                connect Junction46 Junction47 as Connection420
                [
                    breakpoints = 7976, 8176; 7976, 8176
                ]
                connect "Unit Delay2.out" Junction45 as Connection406
                connect Junction42 Product4.in1 as Connection392
                connect "Logical operator1.in1" Junction38 as Connection364
                [
                    breakpoints = 8576, 8120
                ]
                connect "Relational operator1.in1" Junction50 as Connection431
                connect frequency_diff3.in Junction47 as Connection422
                connect Gain5.in "abc to dq1.d_axis" as Connection318
                connect "BE1-25A Synchronizer1.max_Q" Constant11.out as Connection305
            }
            [
                position = 9752, 7456
                size = 112, 216
            ]

            component pas_resistor R0c1 {
                resistance = "R_i"
            }
            [
                position = 7632, 8096
            ]

            component pas_inductor Lb1 {
                inductance = "L_o"
            }
            [
                position = 8872, 8000
                rotation = down
            ]

            component pas_resistor R0a1 {
                resistance = "R_i"
            }
            [
                position = 7632, 7904
            ]

            component "core/Current Measurement" Ic1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 8096
                size = 64, 32
            ]

            component "core/Voltage Measurement" Eb1 {
                addr = "9"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8464, 8208
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ea1 {
                addr = "7"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8400, 8144
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component "core/Current Measurement" Xi_b1 {
                addr = "15"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7888, 8000
                scale = 1, -1
                size = 64, 32
            ]

            component "core/Current Measurement" Ib1 {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9024, 8000
                size = 64, 32
            ]

            component "core/Current Measurement" Xi_a1 {
                addr = "14"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7840, 7904
                scale = 1, -1
                size = 64, 32
            ]

            component gen_product Product1 {
            }
            [
                position = 6816, 7760
                hide_name = True
            ]

            component pas_capacitor Ca1 {
                capacitance = "C_s"
            }
            [
                position = 8016, 8352
                rotation = right
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "900"
            }
            [
                position = 6624, 8232
                hide_name = True
            ]

            component "core/Voltage Measurement" VcG {
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 9864, 8408
                rotation = right
                size = 64, 32
            ]

            component "core/Voltage Measurement" Ec1 {
                addr = "11"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 8544, 8272
                rotation = right
                scale = -1, 1
                size = 64, 32
            ]

            component gen_gain Gain1 {
                gain = "0.5"
            }
            [
                position = 6744, 7792
                hide_name = True
            ]

            component pas_inductor Lgridb_1 {
                inductance = "L"
            }
            [
                position = 9144, 8000
                rotation = down
            ]

            component "core/Current Measurement" Xi_c1 {
                addr = "16"
                execution_rate = "Ts"
                sig_output = "True"
            }
            [
                position = 7952, 8096
                scale = 1, -1
                size = 64, 32
            ]

            component pas_inductor Lc1 {
                inductance = "L_o"
            }
            [
                position = 8872, 8096
                rotation = down
            ]

            component pas_resistor Rb1 {
                resistance = "R_o"
            }
            [
                position = 8776, 8000
            ]

            port Vc {
                label = "Vc"
                position = right:3
                kind = pe
            }
            [
                position = 10232, 8096
                scale = -1, 1
            ]

            port Vb {
                label = "Vb"
                position = right:2
                kind = pe
            }
            [
                position = 10232, 8000
                scale = -1, 1
            ]

            port activeP_offset {
                position = top:auto
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 6864, 7456
                scale = -1, 1
            ]

            port Ground {
                label = "Ground"
                position = bottom:4
                kind = pe
            }
            [
                position = 10248, 8688
                scale = -1, 1
            ]

            port Va {
                label = "Va"
                position = right:1
                kind = pe
            }
            [
                position = 10232, 7904
                scale = -1, 1
            ]

            port "Switch droop" {
                position = left:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7104, 7600
                scale = -1, 1
            ]

            port setpoint_P {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6744, 7368
                scale = -1, 1
            ]

            port setpoint_Q {
                position = left:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 6864, 7368
                scale = -1, 1
            ]

            tag Goto39 {
                value = "Ib1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 7968
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto18 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 6736, 8232
                hide_name = True
                size = 60, 20
            ]

            tag Connect2 {
                value = "Connect"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 9416, 7816
                hide_name = True
            ]

            tag Goto31 {
                value = "Ic1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 8064
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto35 {
                value = "Xi_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8160
                scale = -1, 1
                size = 60, 20
            ]

            tag Vb_G {
                value = "VbG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9816, 8288
            ]

            tag Connect4 {
                value = "Connect"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 7120, 7536
                hide_name = True
                scale = -1, 1
            ]

            tag Goto41 {
                value = "Ea1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8256, 8144
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto44 {
                value = "Xi_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8208
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto30 {
                value = "Ec1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8352, 8352
                scale = -1, 1
                size = 60, 20
            ]

            tag Vc_G {
                value = "VcG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9936, 8408
            ]

            tag From2 {
                value = "modulator1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6672, 7728
                hide_name = True
                size = 60, 20
            ]

            tag Goto38 {
                value = "Xi_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7744, 8256
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto33 {
                value = "E_c1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7776, 8480
                scale = -1, 1
                size = 60, 20
            ]

            tag Va_G {
                value = "VaG"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 9688, 8216
            ]

            tag Goto32 {
                value = "Ia1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8968, 7872
                scale = -1, 1
                size = 60, 20
            ]

            tag Goto40 {
                value = "Eb1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 8320, 8256
                scale = -1, 1
                size = 60, 20
            ]

            tag w_m2 {
                value = "w1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 9600, 7456
                hide_name = True
            ]

            tag Goto42 {
                value = "E_b1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7648, 8432
                scale = -1, 1
                size = 60, 20
            ]

            tag From3 {
                value = "VDC1"
                scope = masked_subsystem
                kind = sp
                direction = out
            }
            [
                position = 6672, 7792
                hide_name = True
            ]

            tag Goto34 {
                value = "E_a1"
                scope = masked_subsystem
                kind = sp
                direction = in
            }
            [
                position = 7504, 8384
                scale = -1, 1
                size = 60, 20
            ]

            junction Junction173 pe
            [
                position = 8176, 8096
            ]

            junction Junction305 pe
            [
                position = 9616, 8688
            ]

            junction Junction291 pe
            [
                position = 7088, 8688
            ]

            junction Junction162 pe
            [
                position = 8544, 8096
            ]

            junction Junction160 pe
            [
                position = 8096, 8000
            ]

            junction Junction207 pe
            [
                position = 8096, 8688
            ]

            junction Junction192 pe
            [
                position = 8096, 8688
            ]

            junction Junction198 pe
            [
                position = 8096, 8688
            ]

            junction Junction211 pe
            [
                position = 8016, 8288
            ]

            junction Junction216 pe
            [
                position = 8176, 8304
            ]

            junction Junction302 pe
            [
                position = 9864, 8688
            ]

            junction Junction290 pe
            [
                position = 7168, 8688
            ]

            junction Junction284 sp
            [
                position = 8480, 8352
            ]

            junction Junction195 pe
            [
                position = 8096, 8688
            ]

            junction Junction215 pe
            [
                position = 8096, 8688
            ]

            junction Junction161 pe
            [
                position = 8016, 7904
            ]

            junction Junction304 pe
            [
                position = 8544, 8688
            ]

            junction Junction292 pe
            [
                position = 8096, 8688
            ]

            junction Junction306 pe
            [
                position = 9616, 7904
            ]

            junction Junction307 pe
            [
                position = 9744, 8000
            ]

            junction Junction283 sp
            [
                position = 8368, 8256
            ]

            junction Junction308 pe
            [
                position = 9864, 8096
            ]

            junction Junction221 sp
            [
                position = 8320, 8144
            ]

            junction Junction212 pe
            [
                position = 8096, 8688
            ]

            junction Junction310 pe
            [
                position = 10120, 8688
            ]

            junction Junction309 pe
            [
                position = 10056, 8688
            ]

            junction Junction194 pe
            [
                position = 8096, 8688
            ]

            junction Junction168 pe
            [
                position = 8464, 8000
            ]

            junction Junction213 pe
            [
                position = 8096, 8304
            ]

            junction Junction199 pe
            [
                position = 8096, 8688
            ]

            junction Junction289 pe
            [
                position = 7600, 8688
            ]

            junction Junction174 pe
            [
                position = 8400, 7904
            ]

            junction Junction303 pe
            [
                position = 9744, 8688
            ]

            connect Eb1.p_node Junction168 as Connection317
            connect Junction304 Ec1.n_node as Connection1247
            [
                breakpoints = 8544, 8688; 8544, 8688; 8544, 8688
            ]
            connect Ea1.n_node Junction292 as Connection1069
            [
                breakpoints = 8400, 8224; 8240, 8224; 8240, 8304; 8240, 8688
            ]
            connect Xi_b1.out Goto44 as Connection374
            connect Junction309 Junction310 as Connection1285
            [
                breakpoints = 10064, 8688
            ]
            connect La1.p_node Ia1.p_node as Connection665
            connect Lgridc_1.p_node Rgridc_1.p_node as Connection1240
            connect Product1.in1 Gain1.out as Connection1073
            connect "Core Coupling 1.d_out" Junction305 as Connection1251
            [
                breakpoints = 8768, 8192; 8768, 8688
            ]
            connect Va2.p_node Junction211 as Connection600
            [
                breakpoints = 7840, 8288; 8016, 8288
            ]
            connect Vc_inv.n_node Junction290 as Connection1060
            connect Tr1.n2 Junction310 as Connection1287
            connect Junction291 Junction290 as Connection1064
            [
                breakpoints = 7088, 8688; 7168, 8688
            ]
            connect "Bus Split1.out1" Vb_inv.in as Connection1071
            connect Junction174 "Core Coupling 1.a_in" as Connection1231
            connect Eb_1.in Junction283 as Connection952
            connect S2.a_out Junction306 as Connection1268
            connect Rt0a1.n_node Junction161 as Connection366
            connect Ib1.n_node Lgridb_1.n_node as Connection1237
            connect Va2.n_node Junction289 as Connection1057
            connect R0b1.n_node L0b1.n_node as Connection385
            connect Junction303 Junction305 as Connection1249
            [
                breakpoints = 9744, 8688
            ]
            connect Lgrida_1.p_node Rgrida_1.p_node as Connection1236
            connect Junction207 Junction215 as Connection1222
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect Xi_a1.n_node Junction161 as Connection314
            connect activeP_offset "Controller.U - P" as Connection1288
            connect Xi_b1.n_node Junction160 as Connection388
            connect Junction162 "Core Coupling 1.c_in" as Connection1233
            connect Goto35 Xi_a1.out as Connection342
            connect Lgridb_1.p_node Rgridb_1.p_node as Connection1238
            connect VbG.n_node Junction303 as Connection1225
            connect Xi_c1.out Goto38 as Connection313
            connect Junction283 Eb1.out as Connection951
            connect setpoint_P Controller.U_P as Connection1289
            connect From3 Gain1.in as Connection1072
            connect Junction192 Junction194 as Connection459
            connect "Core Coupling 1.b_in" Junction168 as Connection1230
            connect Junction302 Junction303 as Connection1223
            connect Connect4 Product2.in as Connection1291
            connect Constant1.out Goto18 as Connection1096
            connect Vc2.out Goto33 as Connection617
            [
                breakpoints = 7840, 8480; 7824, 8480
            ]
            connect Rgridc_1.n_node S2.c_in as Connection1243
            connect Junction213 Cb1.p_node as Connection613
            [
                breakpoints = 8096, 8304; 8096, 8304; 8096, 8304
            ]
            connect From2 Product1.in as Connection1074
            connect Junction211 Rt0a1.p_node as Connection599
            [
                breakpoints = 8016, 8304; 8016, 8304; 8016, 8288
            ]
            connect Ic1.out Goto31 as Connection668
            connect Junction168 Junction160 as Connection362
            connect Tr1.n1 Junction309 as Connection1284
            connect Va_inv.p_node R0a1.p_node as Connection1056
            connect Lc1.p_node Ic1.p_node as Connection663
            connect Rt0b1.n_node Junction160 as Connection351
            connect "Switch droop" Product2.in1 as Connection1292
            connect Junction194 Ca1.n_node as Connection597
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8544; 8016, 8544
            ]
            connect L0c1.p_node Xi_c1.p_node as Connection328
            connect Ic1.n_node Lgridc_1.n_node as Connection1239
            connect Va2.out Goto34 as Connection624
            connect Ea_1.in Junction221 as Connection640
            connect VbG.p_node Junction307 as Connection1271
            connect Ca1.p_node Junction211 as Connection598
            connect Ia1.n_node Lgrida_1.n_node as Connection1235
            connect S2.ctrl_in Connect2 as Connection1212
            connect Vb Tr1.sec_2 as Connection1278
            connect Goto41 Junction221 as Connection656
            [
                breakpoints = 8288, 8144; 8336, 8144
            ]
            connect Product2.out "Controller.Switch droop" as Connection1293
            connect Junction306 VaG.p_node as Connection1269
            [
                breakpoints = 9616, 7904
            ]
            connect R0c1.n_node L0c1.n_node as Connection330
            connect Junction195 Junction194 as Connection463
            connect Junction207 Junction198 as Connection574
            [
                breakpoints = 8096, 8688
            ]
            connect Cb1.n_node Junction212 as Connection602
            connect VbG.out Vb_G as Connection1126
            connect S2.c_out Junction308 as Connection1274
            connect Vb2.p_node Junction213 as Connection614
            [
                breakpoints = 7920, 8304; 8096, 8304
            ]
            connect "Bus Split1.out2" Vc_inv.in as Connection1053
            connect Tr1.prm_2 Junction307 as Connection1279
            connect Junction207 Junction304 as Connection1246
            [
                breakpoints = 8096, 8688; 8096, 8688
            ]
            connect Junction290 Junction289 as Connection1061
            [
                breakpoints = 7168, 8688; 7600, 8688
            ]
            connect Junction307 S2.b_out as Connection1272
            [
                breakpoints = 9744, 8000
            ]
            connect Ea1.p_node Junction174 as Connection298
            connect "Bus Split1.out" Va_inv.in as Connection1051
            connect Eb1.n_node Junction195 as Connection462
            connect Goto39 Ib1.out as Connection669
            connect Vc_inv.p_node R0c1.p_node as Connection1054
            connect Va_G VaG.out as Connection1125
            connect Vc2.p_node Junction216 as Connection627
            connect Va Tr1.sec_1 as Connection1280
            connect VcG.n_node Junction302 as Connection1221
            connect "Core Coupling 1.d_in" Junction304 as Connection1248
            [
                breakpoints = 8624, 8192; 8624, 8688
            ]
            connect Lb1.p_node Ib1.p_node as Connection664
            connect Vc2.n_node Junction215 as Connection623
            connect "Core Coupling 1.a_out" Ra1.p_node as Connection1232
            connect Junction221 Ea1.out as Connection639
            [
                breakpoints = 8304, 8144; 8368, 8144
            ]
            connect "Core Coupling 1.c_out" Rc1.p_node as Connection1234
            connect Vb_inv.p_node R0b1.p_node as Connection1055
            connect Rc1.n_node Lc1.n_node as Connection399
            connect Goto40 Junction283 as Connection950
            connect L0a1.p_node Xi_a1.p_node as Connection378
            connect Ec1.p_node Junction162 as Connection325
            connect Vc Tr1.sec_3 as Connection1276
            connect Junction198 Junction199 as Connection537
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688; 8096, 8688
            ]
            connect Vb2.out Goto42 as Connection616
            connect Rb1.p_node "Core Coupling 1.b_out" as Connection1229
            connect Tr1.prm_1 Junction306 as Connection1281
            connect Xi_c1.n_node Junction173 as Connection304
            connect Junction212 Junction192 as Connection603
            connect Rt0c1.p_node Junction216 as Connection625
            [
                breakpoints = 8176, 8288
            ]
            connect Product1.out "Bus Split1.in" as Connection1075
            connect Vb_inv.n_node Junction291 as Connection1063
            connect Junction174 Junction161 as Connection535
            [
                breakpoints = 8400, 7904; 8400, 7904
            ]
            connect Ec_1.in Junction284 as Connection956
            [
                breakpoints = 8480, 8384; 8480, 8352
            ]
            connect La1.n_node Ra1.n_node as Connection401
            connect Va_inv.n_node Junction291 as Connection1065
            [
                breakpoints = 7008, 8688; 7088, 8688
            ]
            connect L0b1.p_node Xi_b1.p_node as Connection372
            connect Junction305 VaG.n_node as Connection1250
            [
                breakpoints = 9616, 8688
            ]
            connect Junction308 VcG.p_node as Connection1275
            [
                breakpoints = 9864, 8096
            ]
            connect L0a1.n_node R0a1.n_node as Connection355
            connect Rgridb_1.n_node S2.b_in as Connection1242
            connect Ia1.out Goto32 as Connection666
            connect Junction289 Junction212 as Connection1058
            [
                breakpoints = 7600, 8688; 8096, 8688
            ]
            connect Rt0b1.p_node Junction213 as Connection612
            connect Rb1.n_node Lb1.n_node as Connection354
            connect w_m2 "BE1-25A Synchronizer (inverter).In3" as Connection93
            connect Junction302 Junction309 as Connection1282
            [
                breakpoints = 9864, 8688
            ]
            connect Junction192 Junction292 as Connection1067
            connect Vb2.n_node Junction215 as Connection621
            connect Junction284 Ec1.out as Connection955
            connect Junction292 Cc1.n_node as Connection1068
            [
                breakpoints = 8096, 8688; 8096, 8688; 8096, 8544; 8176, 8544
            ]
            connect Goto30 Junction284 as Connection954
            connect Junction310 Ground as Connection1286
            [
                breakpoints = 10128, 8688
            ]
            connect Junction216 Cc1.p_node as Connection626
            [
                breakpoints = 8176, 8304; 8176, 8304; 8176, 8304
            ]
            connect Junction173 Junction162 as Connection341
            [
                breakpoints = 8544, 8272; 8544, 8272
            ]
            connect Rgrida_1.n_node S2.a_in as Connection1241
            connect Vc_G VcG.out as Connection1127
            connect Rt0c1.n_node Junction173 as Connection327
            connect Junction198 Junction195 as Connection477
            [
                breakpoints = 8096, 8688; 8096, 8688
            ]
            connect Tr1.prm_3 Junction308 as Connection1277
            connect setpoint_Q Controller.U_Q as Connection1294

            Kp_V = "30e-3"
            S = "200e3"
            V_D = "5e-4"
            Vmax = "0.35"
            Vmin = "-0.35"
            f_D = "3e-1"

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">A grid-forming three-phase inverter with a frequency and voltage droop controller</p></body></html>"

                S {
                    label = "Rated Power "
                    widget = edit
                    type = generic
                    default_value = "50e3"
                    unit = "VA"
                    group = "1. Three-phase Inverter"
                }

                V_ABC {
                    label = "Rated Phase Voltage (RMS)"
                    widget = edit
                    type = generic
                    default_value = "277"
                    unit = "V"
                    group = "1. Three-phase Inverter"
                }

                w_0 {
                    label = "Nominal Frequency"
                    widget = edit
                    type = generic
                    default_value = "2*np.pi*60"
                    unit = "rad/s"
                    group = "1. Three-phase Inverter"
                }

                Ts {
                    label = "Execution rate"
                    widget = edit
                    type = generic
                    default_value = "Ts"
                    unit = "s"
                    group = "1. Three-phase Inverter"
                }

                R_i {
                    label = "Input Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.1"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_i {
                    label = "Input Inductance"
                    widget = edit
                    type = generic
                    default_value = "6e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R_s {
                    label = "Shunt Resistance"
                    widget = edit
                    type = generic
                    default_value = "15e-3"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                C_s {
                    label = "Shunt Capacitance"
                    widget = edit
                    type = generic
                    default_value = "150e-6"
                    unit = "F"
                    group = "2. LCL filter"
                }

                R_o {
                    label = "Output Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.03"
                    unit = "Ω"
                    group = "2. LCL filter"
                }

                L_o {
                    label = "Output Inductance"
                    widget = edit
                    type = generic
                    default_value = "0.3e-3"
                    unit = "H"
                    group = "2. LCL filter"
                }

                R {
                    label = "Resistance"
                    widget = edit
                    type = generic
                    default_value = "0.35"
                    unit = "Ω"
                    group = "3. Electrical Line"
                }

                L {
                    label = "Inductance"
                    widget = edit
                    type = generic
                    default_value = "1.5e-3"
                    unit = "H"
                    group = "3. Electrical Line"
                }

                Kp_I {
                    label = "Inner Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "10e-3"
                    group = "4. Cascaded Controller"
                }

                Ki_I {
                    label = "Inner Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "2e-3"
                    group = "4. Cascaded Controller"
                }

                Imax {
                    label = "Inner Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "1"
                    group = "4. Cascaded Controller"
                }

                Imin {
                    label = "Inner Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-1"
                    group = "4. Cascaded Controller"
                }

                Kp_V {
                    label = "Outer Loop Proportional Gain"
                    widget = edit
                    type = generic
                    default_value = "10e-3"
                    group = "4. Cascaded Controller"
                }

                Ki_V {
                    label = "Outer Loop Integral Gain"
                    widget = edit
                    type = generic
                    default_value = "2"
                    group = "4. Cascaded Controller"
                }

                Vmax {
                    label = "Outer Loop Upper Limit"
                    widget = edit
                    type = generic
                    default_value = "1.5"
                    group = "4. Cascaded Controller"
                }

                Vmin {
                    label = "Outer Loop Lower Limit"
                    widget = edit
                    type = generic
                    default_value = "-1.5"
                    group = "4. Cascaded Controller"
                }

                f_D {
                    label = "Frequency Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "1e-1"
                    unit = "%"
                    group = "5. Droop Control"
                }

                V_D {
                    label = "Voltage Droop Coefficient"
                    widget = edit
                    type = generic
                    default_value = "1e-3"
                    unit = "%"
                    group = "5. Droop Control"
                }

                T_m {
                    label = "Measurement delay"
                    widget = edit
                    type = generic
                    default_value = "0.5"
                    unit = "s"
                    group = "5. Droop Control"
                }

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE init
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    mP = w_0*(f_D/100)
                    nQ = V_DQ*(V_D/100)
                    D_f = 1/mP
                    D_V = 1/nQ
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, 'grid_forming_inverter.svg')
                ENDCODE

                CODE pre_compile
                    # HEADER START
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    # HEADER STOP
                    S = mdl.get_property_value(mdl.prop(item_handle, "S"))
                    V_ABC = mdl.get_property_value(mdl.prop(item_handle, "V_ABC"))
                    w_0 = mdl.get_property_value(mdl.prop(item_handle, "w_0"))
                    Ts = mdl.get_property_value(mdl.prop(item_handle, "Ts"))
                    R_i = mdl.get_property_value(mdl.prop(item_handle, "R_i"))
                    L_i = mdl.get_property_value(mdl.prop(item_handle, "L_i"))
                    R_s = mdl.get_property_value(mdl.prop(item_handle, "R_s"))
                    C_s = mdl.get_property_value(mdl.prop(item_handle, "C_s"))
                    R_o = mdl.get_property_value(mdl.prop(item_handle, "R_o"))
                    L_o = mdl.get_property_value(mdl.prop(item_handle, "L_o"))
                    R = mdl.get_property_value(mdl.prop(item_handle, "R"))
                    L = mdl.get_property_value(mdl.prop(item_handle, "L"))
                    Kp_I = mdl.get_property_value(mdl.prop(item_handle, "Kp_I"))
                    Ki_I = mdl.get_property_value(mdl.prop(item_handle, "Ki_I"))
                    Imax = mdl.get_property_value(mdl.prop(item_handle, "Imax"))
                    Imin = mdl.get_property_value(mdl.prop(item_handle, "Imin"))
                    Kp_V = mdl.get_property_value(mdl.prop(item_handle, "Kp_V"))
                    Ki_V = mdl.get_property_value(mdl.prop(item_handle, "Ki_V"))
                    Vmax = mdl.get_property_value(mdl.prop(item_handle, "Vmax"))
                    Vmin = mdl.get_property_value(mdl.prop(item_handle, "Vmin"))
                    f_D = mdl.get_property_value(mdl.prop(item_handle, "f_D"))
                    V_D = mdl.get_property_value(mdl.prop(item_handle, "V_D"))
                    T_m = mdl.get_property_value(mdl.prop(item_handle, "T_m"))
                    
                    
                    Tfast = Ts
                    V_DQ = V_ABC*np.sqrt(2)
                    I_DQ = S/V_DQ
                    mP = w_0*(f_D/100)
                    nQ = V_DQ*(V_D/100)
                    D_f = 1/mP
                    D_V = 1/nQ
                ENDCODE
            }
        }
        [
            position = 9216, 7240
            rotation = left
            scale = -1, -1
            size = 224, 192
        ]

        component Subsystem L5 {
            layout = dynamic
            component gen_digital_probe griddisconnect5 {
            }
            [
                position = 6912, 8184
                scale = 1, -1
            ]

            component gen_digital_probe gridconnect5 {
            }
            [
                position = 6928, 8080
                scale = 1, -1
            ]

            component gen_terminator Termination2 {
            }
            [
                position = 7232, 8160
                scale = -1, 1
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "0"
            }
            [
                position = 7232, 7984
                hide_name = True
            ]

            component "core/Three Phase Constant Power Load" "Constant Power L5" {
                I_limit = "1e5"
                ctrl_method = "Signal inputs"
                execution_rate = "Ts"
            }
            [
                position = 7400, 8056
                size = 127, 256
            ]

            component gen_c_function "Load 5" {
                execution_rate = "Ts"
                global_variables = "real time;real var;real time2;"
                in_terminal_dimensions_str = "in inherit;"
                in_terminal_labels = "[]"
                in_terminal_properties = ""
                init_fnc = "/*Begin code section*/
time = 0;
time2 = 0;
var = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1;1"
                out_terminal_dimensions_str = "out 1;status 1"
                out_terminal_labels = "[(\'out\', True), (\'status\', True)]"
                out_terminal_properties = "real out;uint status;"
                output_fnc = "/*Begin code section*/
out = var;
if (out == 0)
{
    status =0;
}
else
    status = 1;
/*End code section*/"
                parameters = "real Ts;real load_time;real load2_delay;real load_interval;real load_change;"
                update_fnc = "/*Begin code section*/
time += Ts;

if ((time>=load2_delay)&&(time<=load2_delay+load_time))
{
    if ((time2==0)||(time2>=load_interval))
    {
        var  += load_change;
        time2 = 0;
    }
    time2 += Ts;
}
/*End code section*/"
            }
            [
                position = 6624, 7968
                size = 88, 48
            ]

            component gen_logic_op "Logical operator2" {
                inputs = "4"
                operator = "NOT"
            }
            [
                position = 6872, 8144
                rotation = right
                hide_name = True
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 7232, 8120
                scale = -1, 1
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7944, 8152
                scale = -1, 1
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7944, 8056
                scale = -1, 1
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7944, 7960
                scale = -1, 1
            ]

            junction Junction1 sp
            [
                position = 6872, 8080
            ]

            connect "Constant Power L5.b_node" B as Connection632
            connect griddisconnect5.in "Logical operator2.out" as Connection87
            connect gridconnect5.in Junction1 as Connection636
            connect Termination1.in "Constant Power L5.frequency" as Connection619
            connect "Load 5.out" "Constant Power L5.Pin" as Connection635
            connect "Constant Power L5.c_node" C as Connection633
            connect Constant1.out "Constant Power L5.Qin" as Connection621
            connect Junction1 "Logical operator2.in" as Connection637
            [
                breakpoints = 6872, 8080
            ]
            connect "Load 5.status" Junction1 as Connection638
            connect Termination2.in "Constant Power L5.locked" as Connection620
            connect "Constant Power L5.a_node" A as Connection631

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, 'load.svg')
                    mdl.set_color(item_handle, "white")
                    mdl.disp_component_icon_text(item_handle, "6.6 kVA LOAD", size=12, trim_factor=0.5)
                ENDCODE
            }
        }
        [
            position = 8368, 8200
            rotation = down
            scale = -1, -1
            size = 256, 48
        ]

        component Subsystem measurement6 {
            layout = dynamic
            component Subsystem "Three-phase Meter6" {
                layout = dynamic
                component "core/Voltage Measurement" VAn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7112, 8208
                    rotation = right
                    size = 64, 32
                ]

                component gen_gain Gain1 {
                    gain = "1/1e3"
                }
                [
                    position = 7800, 8376
                    hide_name = True
                ]

                component gen_probe POWER_P {
                }
                [
                    position = 7872, 8376
                ]

                component gen_probe POWER_Q {
                }
                [
                    position = 7872, 8456
                ]

                component Subsystem "Phase locked loop" {
                    layout = dynamic
                    component Subsystem PLL1 {
                        layout = dynamic
                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            int_init_value = "2*np.pi*60"
                            ki = "2"
                            lower_sat_lim = "2*np.pi*57"
                            upper_sat_lim = "2*np.pi*63"
                        }
                        [
                            position = 8192, 8152
                            hide_name = True
                        ]

                        component gen_c_function "C function1" {
                            global_variables = "real var;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                            parameters = "real Ts;"
                            update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                        }
                        [
                            position = 8304, 8152
                            hide_name = True
                            size = 80, 48
                        ]

                        component gen_c_function "confine phase" {
                            global_variables = "real x;real floor_in;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        }
                        [
                            position = 8408, 8152
                            size = 56, 48
                        ]

                        component gen_gain Gain1 {
                            gain = "-1"
                        }
                        [
                            position = 8128, 8152
                            hide_name = True
                        ]

                        port w {
                            label = "w"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8208
                        ]

                        port q {
                            label = "q"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8064, 8152
                        ]

                        port wt {
                            label = "wt"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8496, 8152
                        ]

                        junction Junction1 sp
                        [
                            position = 8240, 8152
                        ]

                        connect w Junction1 as Connection19
                        connect wt "confine phase.out" as Connection14
                        connect "C function1.in" Junction1 as Connection17
                        connect "confine phase.in" "C function1.out" as Connection16
                        connect Junction1 "PID controller1.out" as Connection18
                        connect Gain1.out "PID controller1.in" as Connection9
                        connect q Gain1.in as Connection8
                    }
                    [
                        position = 8216, 8160
                        size = 96, 56
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8120, 8128
                        hide_name = True
                    ]

                    component gen_gain Gain3 {
                        gain = "-1"
                    }
                    [
                        position = 8120, 8160
                        hide_name = True
                    ]

                    component gen_gain Gain4 {
                        gain = "1/(2*np.pi)"
                    }
                    [
                        position = 8312, 8184
                        hide_name = True
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8080, 8192
                        hide_name = True
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 8008, 8160
                        size = 48, 80
                    ]

                    component tm_delay "Unit Delay1" {
                    }
                    [
                        position = 8416, 8192
                        rotation = right
                        hide_name = True
                    ]

                    port f {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8376, 8184
                    ]

                    port Vb {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7888, 8104
                    ]

                    port Vc {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8184
                    ]

                    port Va {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7912, 8040
                    ]

                    connect "abc to dq1.d_axis" Termination2.in as Connection1048
                    connect Gain3.in "abc to dq1.q_axis" as Connection18
                    connect "abc to dq1.vc" Vc as Connection1050
                    connect "Unit Delay1.in" PLL1.wt as Connection1047
                    [
                        breakpoints = 8416, 8144; 8416, 8136; 8288, 8136
                    ]
                    connect Gain3.out PLL1.q as Connection181
                    [
                        breakpoints = 8152, 8160
                    ]
                    connect Termination1.in "abc to dq1.zero_axis" as Connection29
                    connect "abc to dq1.va" Va as Connection1052
                    connect PLL1.w Gain4.in as Connection1053
                    connect "Unit Delay1.out" "abc to dq1.wt" as Connection24
                    [
                        breakpoints = 8416, 8224; 8416, 8256; 7968, 8256
                    ]
                    connect Gain4.out f as Connection1054
                    connect "abc to dq1.vb" Vb as Connection1049
                }
                [
                    position = 6736, 7880
                    size = 96, 168
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6816, 8160
                    size = 64, 32
                ]

                component gen_gain Gain2 {
                    gain = "1/1e3"
                }
                [
                    position = 7800, 8456
                    hide_name = True
                ]

                component gen_probe POWER_PF {
                }
                [
                    position = 7856, 8616
                ]

                component gen_probe Freq {
                }
                [
                    position = 7864, 8240
                ]

                component gen_probe VLn_RMS {
                }
                [
                    position = 7864, 8304
                ]

                component gen_PQ_transform "Power Meter" {
                }
                [
                    position = 8360, 7816
                ]

                component gen_terminator TRMqac {
                }
                [
                    position = 8552, 7856
                    rotation = right
                ]

                component "core/Voltage Measurement" VCn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7320, 8408
                    rotation = right
                    size = 64, 32
                ]

                component "core/Three-phase RMS variable frequency" VLn_RMS_calc {
                    Ts = "Ts"
                }
                [
                    position = 7160, 7568
                    size = 144, 184
                ]

                component gen_gain gainVLn_RMS {
                    gain = "1/3"
                }
                [
                    position = 7752, 7864
                ]

                component "core/Voltage Measurement" VBn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7216, 8304
                    rotation = right
                    size = 64, 32
                ]

                component gen_terminator TRMpac {
                }
                [
                    position = 8552, 7776
                    rotation = left
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6816, 8352
                    size = 64, 32
                ]

                component gen_probe POWER_S {
                }
                [
                    position = 7856, 8536
                ]

                component gen_sum sumVLn_RMS {
                    signs = "3"
                }
                [
                    position = 7624, 7864
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6816, 8256
                    size = 64, 32
                ]

                port Ground {
                    position = bottom:4
                    kind = pe
                }
                [
                    position = 6624, 8464
                ]

                port A+ {
                    position = left:1
                    kind = pe
                }
                [
                    position = 6624, 8160
                ]

                port A- {
                    position = right:1
                    kind = pe
                }
                [
                    position = 7408, 8160
                    rotation = down
                ]

                port B+ {
                    position = left:2
                    kind = pe
                }
                [
                    position = 6624, 8256
                ]

                port C- {
                    position = right:3
                    kind = pe
                }
                [
                    position = 7408, 8352
                    rotation = down
                ]

                port C+ {
                    position = left:3
                    kind = pe
                }
                [
                    position = 6624, 8352
                ]

                port B- {
                    position = right:2
                    kind = pe
                }
                [
                    position = 7408, 8256
                    rotation = down
                ]

                tag fromVCn2 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7032, 7592
                ]

                tag GoToIB {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6872, 8216
                    size = 0, 0
                ]

                tag GoToVAn {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7176, 8208
                    size = 0, 0
                ]

                tag fromVLn_RMS4 {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7752, 8304
                    size = 0, 0
                ]

                tag fromVAnRMS3 {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7496, 7816
                ]

                tag fromIB3 {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8232, 7944
                    rotation = left
                ]

                tag fromIA3 {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8208, 7984
                    rotation = left
                ]

                tag fromVCn1 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6608, 7944
                ]

                tag GoToVCn {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7384, 8408
                    size = 0, 0
                ]

                tag fromVBn2 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7032, 7544
                ]

                tag GoToP {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8440, 7696
                    rotation = left
                ]

                tag GoToVBnRMS {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7288, 7568
                ]

                tag fromFreq4 {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7752, 8240
                    size = 0, 0
                ]

                tag GoToVAnRMS {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7288, 7520
                ]

                tag fromVAn2 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7032, 7496
                ]

                tag fromVBn1 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6608, 7880
                ]

                tag GoToS {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8464, 7952
                    rotation = right
                ]

                tag fromFreqVLn_RMS {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7032, 7640
                ]

                tag GoToIC {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6880, 8312
                    size = 0, 0
                ]

                tag GoToPF {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8440, 7912
                    rotation = right
                ]

                tag GoToVBn {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7280, 8304
                    size = 0, 0
                ]

                tag fromIC3 {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8256, 7904
                    rotation = left
                ]

                tag fromP4 {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7712, 8376
                    size = 0, 0
                ]

                tag fromPF4 {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7752, 8616
                    size = 0, 0
                ]

                tag fromQ4 {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7712, 8456
                    size = 0, 0
                ]

                tag fromVCn3 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8208, 7760
                    rotation = right
                ]

                tag GoToIA {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6872, 8120
                    size = 0, 0
                ]

                tag GoToQ {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8464, 7736
                    rotation = left
                ]

                tag GoToVCnRMS {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7288, 7616
                ]

                tag GoToVLn_RMS {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7880, 7864
                ]

                tag fromS4 {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7752, 8536
                    size = 0, 0
                ]

                tag fromVBnRMS3 {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7496, 7864
                ]

                tag fromVAn3 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8256, 7680
                    rotation = right
                ]

                tag GoToFreq {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6888, 7880
                ]

                tag fromVAn1 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6608, 7816
                ]

                tag fromVCnRMS3 {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7496, 7912
                ]

                tag fromVBn3 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8232, 7720
                    rotation = right
                ]

                junction Junction7 pe
                [
                    position = 7320, 8352
                ]

                junction Junction2 pe
                [
                    position = 7112, 8464
                ]

                junction Junction6 pe
                [
                    position = 7216, 8256
                ]

                junction Junction5 pe
                [
                    position = 7112, 8160
                ]

                junction Junction4 pe
                [
                    position = 7216, 8464
                ]

                connect fromVBnRMS3 sumVLn_RMS.in1 as ConnVBnRMS3
                connect Junction7 VCn.p_node as Connection1041
                [
                    breakpoints = 7320, 8352
                ]
                connect fromIB3 "Power Meter.ib" as ConnIBPM
                connect fromIC3 "Power Meter.ic" as ConnICPM
                connect Gain2.out POWER_Q.in as Connection1046
                connect fromFreqVLn_RMS VLn_RMS_calc.Freq as ConnFVLn_RMS
                connect fromIA3 "Power Meter.ia" as ConnIAPM
                connect Gain1.out POWER_P.in as Connection1044
                connect fromVAnRMS3 sumVLn_RMS.in as ConnVAnRMS3
                connect fromQ4 Gain2.in as Connection1045
                connect "Power Meter.apparent" GoToS as ConnPMS
                connect fromP4 Gain1.in as Connection1043
                connect "Power Meter.Qac" TRMqac.in as ConnPMQac
                connect "Phase locked loop.f" GoToFreq as Connection1050
                connect fromPF4 POWER_PF.in as ConnPFprobe
                connect fromVAn1 "Phase locked loop.Va" as Connection1051
                connect "Power Meter.k_factor" GoToPF as ConnPMPF
                connect A+ IA.p_node as Connection1031
                connect "Phase locked loop.Vb" fromVBn1 as Connection1052
                connect VLn_RMS_calc.C fromVCn2 as ConnVCnRMS
                connect VAn.p_node Junction5 as Connection1032
                connect fromVCn1 "Phase locked loop.Vc" as Connection1053
                connect IA.n_node Junction5 as Connection1034
                connect GoToVAnRMS VLn_RMS_calc.RMSa as ConnVAnRMS1
                connect Junction5 A- as Connection1033
                [
                    breakpoints = 7112, 8160
                ]
                connect "Power Meter.Pdc" GoToP as ConnPMPdc
                connect VLn_RMS_calc.B fromVBn2 as ConnVBnRMS
                connect "Power Meter.Qdc" GoToQ as ConnPMQdc
                connect B- Junction6 as Connection1035
                connect fromVCn3 "Power Meter.vc" as ConnVCPM
                connect fromS4 POWER_S.in as ConnSprobe
                connect IB.n_node Junction6 as Connection1037
                connect fromVLn_RMS4 VLn_RMS.in as ConnVLn_RMSprobe
                connect Junction6 VBn.p_node as Connection1036
                [
                    breakpoints = 7216, 8256
                ]
                connect fromVAn3 "Power Meter.va" as ConnVAPM
                connect IB.p_node B+ as Connection1038
                connect GoToVCn VCn.out as Connection963
                connect fromVAn2 VLn_RMS_calc.A as ConnVAnRMS
                connect "Power Meter.Pac" TRMpac.in as ConnPMPac
                connect VAn.n_node Junction2 as Connection950
                connect sumVLn_RMS.out gainVLn_RMS.in as ConnVLn_RMS1
                connect fromVCnRMS3 sumVLn_RMS.in2 as ConnVCnRMS3
                connect C+ IC.p_node as Connection1039
                connect GoToVAn VAn.out as Connection965
                connect GoToVCnRMS VLn_RMS_calc.RMSc as ConnVCnRMS1
                connect fromVBn3 "Power Meter.vb" as ConnVBPM
                connect C- Junction7 as Connection1040
                connect IC.n_node Junction7 as Connection1042
                connect VBn.n_node Junction4 as Connection956
                connect VLn_RMS_calc.RMSb GoToVBnRMS as ConnVBnRMS1
                connect GoToVBn VBn.out as Connection964
                connect IA.out GoToIA as ConnIASP
                connect Junction2 Junction4 as Connection954
                connect IB.out GoToIB as ConnIBSP
                connect fromFreq4 Freq.in as ConnFreqprobe
                connect IC.out GoToIC as ConnICSP
                connect Ground Junction2 as Connection1026
                [
                    breakpoints = 6696, 8464; 6776, 8464; 6776, 8464; 6872, 8464
                ]
                connect VCn.n_node Junction4 as Connection968
                [
                    breakpoints = 7248, 8464
                ]
                connect GoToVLn_RMS gainVLn_RMS.out as Connection1057
                [
                    breakpoints = 7880, 7864; 7808, 7864
                ]
            }
            [
                position = 8128, 8176
                size = 64, 240
            ]

            port Vb+ {
                position = left:2
                kind = pe
            }
            [
                position = 8008, 8176
            ]

            port ground {
                position = top:1
                kind = pe
            }
            [
                position = 8272, 8384
                scale = -1, 1
            ]

            port Va+ {
                position = left:3
                kind = pe
            }
            [
                position = 8008, 8080
            ]

            port Vc- {
                position = right:1
                kind = pe
            }
            [
                position = 8240, 8256
                scale = -1, 1
            ]

            port Vb- {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8176
                scale = -1, 1
            ]

            port Vc+ {
                position = left:1
                kind = pe
            }
            [
                position = 8008, 8272
            ]

            port Va- {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8080
                scale = -1, 1
            ]

            connect "Three-phase Meter6.A+" Va+ as Connection2
            connect "Three-phase Meter6.C-" Vc- as Connection6
            connect "Three-phase Meter6.C+" Vc+ as Connection4
            connect "Three-phase Meter6.B-" Vb- as Connection7
            connect "Three-phase Meter6.A-" Va- as Connection1
            connect Vb+ "Three-phase Meter6.B+" as Connection3
            connect "Three-phase Meter6.Ground" ground as Connection5
        }
        [
            position = 9952, 7672
            scale = 1, -1
            size = 88, 80
        ]

        component Subsystem L4 {
            layout = dynamic
            component gen_digital_probe gridconnect4 {
            }
            [
                position = 7376, 8128
                scale = 1, -1
            ]

            component gen_terminator Termination2 {
                execution_rate = "Ts"
            }
            [
                position = 7680, 8208
                scale = -1, 1
            ]

            component gen_digital_probe griddisconnect4 {
            }
            [
                position = 7360, 8232
                scale = 1, -1
            ]

            component gen_terminator Termination1 {
                execution_rate = "Ts"
            }
            [
                position = 7680, 8168
                scale = -1, 1
            ]

            component gen_c_function "Load 4" {
                execution_rate = "Ts"
                global_variables = "real time;real var;real time2;"
                in_terminal_dimensions_str = "in inherit;"
                in_terminal_labels = "[]"
                in_terminal_properties = ""
                init_fnc = "/*Begin code section*/
time = 0;
time2 = 0;
var = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1;1"
                out_terminal_dimensions_str = "out 1;status 1"
                out_terminal_labels = "[(\'out\', True), (\'status\', True)]"
                out_terminal_properties = "real out;uint status;"
                output_fnc = "/*Begin code section*/
out = var;
if (out == 0)
{
    status =0;
}
else
    status = 1;
/*End code section*/"
                parameters = "real Ts;real load_time;real load1_delay;real load_interval;real load_change;"
                update_fnc = "/*Begin code section*/
time += Ts;

if ((time>=load1_delay)&&(time<=load1_delay+load_time))
{
    if ((time2==0)||(time2>=load_interval))
    {
        var  += load_change;
        time2 = 0;
    }
    time2 += Ts;
}
/*End code section*/"
            }
            [
                position = 7128, 8016
                size = 88, 48
            ]

            component "core/Three Phase Constant Power Load" "Constant Power L4" {
                I_limit = "1e5"
                ctrl_method = "Signal inputs"
                execution_rate = "Ts"
            }
            [
                position = 7848, 8104
                size = 127, 256
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "0"
            }
            [
                position = 7680, 8032
                hide_name = True
            ]

            component gen_logic_op "Logical operator2" {
                inputs = "4"
                operator = "NOT"
            }
            [
                position = 7320, 8192
                rotation = right
                hide_name = True
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 8840, 8008
                scale = -1, 1
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 8840, 8104
                scale = -1, 1
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 8840, 8200
                scale = -1, 1
            ]

            junction Junction1 sp
            [
                position = 7320, 8136
            ]

            connect "Logical operator2.in" Junction1 as Connection633
            connect griddisconnect4.in "Logical operator2.out" as Connection87
            connect Termination2.in "Constant Power L4.locked" as Connection620
            connect "Constant Power L4.a_node" A as Connection624
            connect Junction1 gridconnect4.in as Connection634
            [
                breakpoints = 7320, 8128
            ]
            connect Constant1.out "Constant Power L4.Qin" as Connection621
            connect B "Constant Power L4.b_node" as Connection625
            connect "Constant Power L4.c_node" C as Connection626
            connect Termination1.in "Constant Power L4.frequency" as Connection619
            connect "Constant Power L4.Pin" "Load 4.out" as Connection632
            connect "Load 4.status" Junction1 as Connection635

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, 'load.svg')
                    mdl.set_color(item_handle, "white")
                    mdl.disp_component_icon_text(item_handle, "6.6 kVA LOAD", size=12, trim_factor=0.5)
                ENDCODE
            }
        }
        [
            position = 8160, 7440
            scale = 1, -1
            size = 256, 48
        ]

        component Subsystem measurement4 {
            layout = dynamic
            component Subsystem "Three-phase Meter4" {
                layout = dynamic
                component Subsystem "Phase locked loop" {
                    layout = dynamic
                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8080, 8192
                        hide_name = True
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 8008, 8160
                        size = 48, 80
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8120, 8128
                        hide_name = True
                    ]

                    component gen_gain Gain4 {
                        gain = "1/(2*np.pi)"
                    }
                    [
                        position = 8352, 8152
                        hide_name = True
                    ]

                    component Subsystem PLL1 {
                        layout = dynamic
                        component gen_c_function "C function1" {
                            global_variables = "real var;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                            parameters = "real Ts;"
                            update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                        }
                        [
                            position = 8304, 8152
                            hide_name = True
                            size = 80, 48
                        ]

                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            int_init_value = "2*np.pi*60"
                            ki = "2"
                            lower_sat_lim = "2*np.pi*57"
                            upper_sat_lim = "2*np.pi*63"
                        }
                        [
                            position = 8192, 8152
                            hide_name = True
                        ]

                        component gen_c_function "confine phase" {
                            global_variables = "real x;real floor_in;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        }
                        [
                            position = 8408, 8152
                            size = 56, 48
                        ]

                        port w {
                            label = "w"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8208
                        ]

                        port wt {
                            label = "wt"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8496, 8152
                        ]

                        port q {
                            label = "q"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8064, 8152
                        ]

                        junction Junction1 sp
                        [
                            position = 8240, 8152
                        ]

                        connect "confine phase.in" "C function1.out" as Connection16
                        connect wt "confine phase.out" as Connection14
                        connect Junction1 "PID controller1.out" as Connection18
                        connect w Junction1 as Connection19
                        connect "C function1.in" Junction1 as Connection17
                        connect q "PID controller1.in" as Connection20
                    }
                    [
                        position = 8216, 8160
                        size = 96, 56
                    ]

                    component tm_delay "Unit Delay1" {
                    }
                    [
                        position = 8320, 8216
                        rotation = right
                        hide_name = True
                    ]

                    port Va {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7912, 8040
                    ]

                    port Vb {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7888, 8104
                    ]

                    port f {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8416, 8152
                    ]

                    port Vc {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8184
                    ]

                    connect Gain4.out f as Connection1054
                    connect "abc to dq1.vb" Vb as Connection1049
                    connect PLL1.w Gain4.in as Connection1053
                    connect "abc to dq1.d_axis" Termination2.in as Connection1048
                    connect "abc to dq1.vc" Vc as Connection1050
                    connect Termination1.in "abc to dq1.zero_axis" as Connection29
                    connect "abc to dq1.va" Va as Connection1052
                    connect "Unit Delay1.out" "abc to dq1.wt" as Connection1055
                    connect PLL1.wt "Unit Delay1.in" as Connection1056
                    connect "abc to dq1.q_axis" PLL1.q as Connection1057
                }
                [
                    position = 6760, 7880
                    size = 96, 168
                ]

                component "core/Voltage Measurement" VBn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7216, 8304
                    rotation = right
                    size = 64, 32
                ]

                component gen_gain Gain2 {
                    gain = "1/1e3"
                }
                [
                    position = 7816, 8456
                    hide_name = True
                ]

                component gen_gain Gain1 {
                    gain = "1/1e3"
                }
                [
                    position = 7816, 8376
                    hide_name = True
                ]

                component "core/Voltage Measurement" VAn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7112, 8208
                    rotation = right
                    size = 64, 32
                ]

                component gen_probe VLn_RMS {
                }
                [
                    position = 7864, 8304
                ]

                component gen_sum sumVLn_RMS {
                    signs = "3"
                }
                [
                    position = 7632, 7864
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6872, 8352
                    size = 64, 32
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6880, 8160
                    size = 64, 32
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6880, 8256
                    size = 64, 32
                ]

                component gen_terminator TRMpac {
                }
                [
                    position = 8560, 7776
                    rotation = left
                ]

                component "core/Three-phase RMS variable frequency" VLn_RMS_calc {
                    Ts = "Ts"
                }
                [
                    position = 7168, 7568
                    size = 144, 184
                ]

                component gen_probe POWER_PF {
                }
                [
                    position = 7864, 8616
                ]

                component gen_probe POWER_S {
                }
                [
                    position = 7864, 8536
                ]

                component gen_probe Freq {
                }
                [
                    position = 7864, 8240
                ]

                component "core/Voltage Measurement" VCn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7320, 8408
                    rotation = right
                    size = 64, 32
                ]

                component gen_terminator TRMqac {
                }
                [
                    position = 8560, 7856
                    rotation = right
                ]

                component gen_PQ_transform "Power Meter" {
                }
                [
                    position = 8368, 7816
                ]

                component gen_probe POWER_Q {
                }
                [
                    position = 7888, 8456
                ]

                component gen_probe POWER_P {
                }
                [
                    position = 7888, 8376
                ]

                component gen_gain gainVLn_RMS {
                    gain = "1/3"
                }
                [
                    position = 7760, 7864
                ]

                port C+ {
                    position = left:3
                    kind = pe
                }
                [
                    position = 6624, 8352
                ]

                port Ground {
                    position = bottom:4
                    kind = pe
                }
                [
                    position = 6624, 8464
                ]

                port A- {
                    position = right:1
                    kind = pe
                }
                [
                    position = 7408, 8160
                    rotation = down
                ]

                port B+ {
                    position = left:2
                    kind = pe
                }
                [
                    position = 6624, 8256
                ]

                port C- {
                    position = right:3
                    kind = pe
                }
                [
                    position = 7408, 8352
                    rotation = down
                ]

                port B- {
                    position = right:2
                    kind = pe
                }
                [
                    position = 7408, 8256
                    rotation = down
                ]

                port A+ {
                    position = left:1
                    kind = pe
                }
                [
                    position = 6624, 8160
                ]

                tag fromVBn2 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7040, 7544
                ]

                tag GoToPF {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8448, 7912
                    rotation = right
                ]

                tag fromVCn2 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7040, 7592
                ]

                tag fromPF4 {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7760, 8616
                    size = 0, 0
                ]

                tag fromQ4 {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7728, 8456
                    size = 0, 0
                ]

                tag fromVBn1 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6608, 7880
                ]

                tag fromIB3 {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 7944
                    rotation = left
                ]

                tag fromP4 {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7728, 8376
                    size = 0, 0
                ]

                tag fromFreq4 {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7752, 8240
                    size = 0, 0
                ]

                tag fromIC3 {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8264, 7904
                    rotation = left
                ]

                tag GoToVAn {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7176, 8208
                    size = 0, 0
                ]

                tag fromVAnRMS3 {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 7816
                ]

                tag GoToVLn_RMS {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 7864
                ]

                tag GoToVCn {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7384, 8408
                    size = 0, 0
                ]

                tag fromVBnRMS3 {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 7864
                ]

                tag fromVLn_RMS4 {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7752, 8304
                    size = 0, 0
                ]

                tag GoToIC {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6936, 8312
                    size = 0, 0
                ]

                tag GoToVBn {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7280, 8304
                    size = 0, 0
                ]

                tag fromVCnRMS3 {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 7912
                ]

                tag fromVAn3 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8264, 7680
                    rotation = right
                ]

                tag GoToFreq {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6912, 7880
                ]

                tag GoToQ {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8472, 7736
                    rotation = left
                ]

                tag fromFreqVLn_RMS {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7040, 7640
                ]

                tag fromS4 {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7760, 8536
                    size = 0, 0
                ]

                tag fromVCn1 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6608, 7944
                ]

                tag GoToS {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8472, 7952
                    rotation = right
                ]

                tag GoToIB {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6936, 8216
                    size = 0, 0
                ]

                tag GoToVAnRMS {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7296, 7520
                ]

                tag fromIA3 {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7984
                    rotation = left
                ]

                tag fromVCn3 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8216, 7760
                    rotation = right
                ]

                tag fromVAn1 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6608, 7816
                ]

                tag GoToVCnRMS {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7296, 7616
                ]

                tag GoToVBnRMS {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7296, 7568
                ]

                tag GoToP {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 8448, 7696
                    rotation = left
                ]

                tag fromVAn2 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7040, 7496
                ]

                tag fromVBn3 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 8240, 7720
                    rotation = right
                ]

                tag GoToIA {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6936, 8120
                    size = 0, 0
                ]

                junction Junction8 pe
                [
                    position = 7320, 8352
                ]

                junction Junction9 pe
                [
                    position = 7216, 8256
                ]

                junction Junction4 pe
                [
                    position = 7216, 8464
                ]

                junction Junction10 pe
                [
                    position = 7112, 8160
                ]

                junction Junction2 pe
                [
                    position = 7112, 8464
                ]

                connect GoToVAn VAn.out as Connection965
                connect fromVBn1 "Phase locked loop.Vb" as Connection1047
                connect GoToVBn VBn.out as Connection964
                connect gainVLn_RMS.out GoToVLn_RMS as ConnVLn_RMS2
                connect VBn.n_node Junction4 as Connection956
                connect fromVCn1 "Phase locked loop.Vc" as Connection1048
                connect "Phase locked loop.f" GoToFreq as Connection1050
                connect fromVLn_RMS4 VLn_RMS.in as ConnVLn_RMSprobe
                connect fromVAn1 "Phase locked loop.Va" as Connection1049
                connect Gain1.out POWER_P.in as Connection1044
                connect VLn_RMS_calc.C fromVCn2 as ConnVCnRMS
                connect Junction2 Junction4 as Connection954
                connect fromQ4 Gain2.in as Connection1045
                connect VCn.n_node Junction4 as Connection968
                [
                    breakpoints = 7248, 8464
                ]
                connect fromVAnRMS3 sumVLn_RMS.in as ConnVAnRMS3
                connect fromFreq4 Freq.in as ConnFreqprobe
                connect fromVAn2 VLn_RMS_calc.A as ConnVAnRMS
                connect Junction2 Ground as Connection1027
                [
                    breakpoints = 7112, 8464; 6872, 8464; 6872, 8464; 6776, 8464; 6696, 8464
                ]
                connect GoToVAnRMS VLn_RMS_calc.RMSa as ConnVAnRMS1
                connect fromFreqVLn_RMS VLn_RMS_calc.Freq as ConnFVLn_RMS
                connect fromVBnRMS3 sumVLn_RMS.in1 as ConnVBnRMS3
                connect "Power Meter.Qac" TRMqac.in as ConnPMQac
                connect IB.out GoToIB as ConnIBSP
                connect fromVCnRMS3 sumVLn_RMS.in2 as ConnVCnRMS3
                connect IA.p_node A+ as Connection1042
                connect VAn.n_node Junction2 as Connection950
                connect VLn_RMS_calc.RMSb GoToVBnRMS as ConnVBnRMS1
                connect GoToVCn VCn.out as Connection963
                connect "Power Meter.Qdc" GoToQ as ConnPMQdc
                connect fromP4 Gain1.in as Connection1043
                connect IA.out GoToIA as ConnIASP
                connect sumVLn_RMS.out gainVLn_RMS.in as ConnVLn_RMS1
                connect Junction9 B- as Connection1035
                [
                    breakpoints = 7216, 8256
                ]
                connect VLn_RMS_calc.B fromVBn2 as ConnVBnRMS
                connect Junction10 A- as Connection1040
                [
                    breakpoints = 7112, 8160
                ]
                connect IC.n_node Junction8 as Connection1031
                connect IB.p_node B+ as Connection1037
                connect Junction8 C- as Connection1030
                [
                    breakpoints = 7320, 8352
                ]
                connect IB.n_node Junction9 as Connection1036
                connect fromIC3 "Power Meter.ic" as ConnICPM
                connect "Power Meter.Pdc" GoToP as ConnPMPdc
                connect fromIA3 "Power Meter.ia" as ConnIAPM
                connect IC.out GoToIC as ConnICSP
                connect GoToVCnRMS VLn_RMS_calc.RMSc as ConnVCnRMS1
                connect VBn.p_node Junction9 as Connection1034
                connect fromPF4 POWER_PF.in as ConnPFprobe
                connect fromS4 POWER_S.in as ConnSprobe
                connect Gain2.out POWER_Q.in as Connection1046
                connect VCn.p_node Junction8 as Connection1029
                connect VAn.p_node Junction10 as Connection1039
                connect fromIB3 "Power Meter.ib" as ConnIBPM
                connect "Power Meter.Pac" TRMpac.in as ConnPMPac
                connect IA.n_node Junction10 as Connection1041
                connect IC.p_node C+ as Connection1032
                connect fromVBn3 "Power Meter.vb" as ConnVBPM
                connect fromVCn3 "Power Meter.vc" as ConnVCPM
                connect "Power Meter.apparent" GoToS as ConnPMS
                connect fromVAn3 "Power Meter.va" as ConnVAPM
                connect "Power Meter.k_factor" GoToPF as ConnPMPF
            }
            [
                position = 8120, 8176
                size = 64, 240
            ]

            port Vb+ {
                position = left:2
                kind = pe
            }
            [
                position = 8008, 8176
            ]

            port Va- {
                position = right:3
                kind = pe
            }
            [
                position = 8248, 8080
                scale = -1, 1
            ]

            port Vc- {
                position = right:1
                kind = pe
            }
            [
                position = 8248, 8272
                scale = -1, 1
            ]

            port Vb- {
                position = right:2
                kind = pe
            }
            [
                position = 8248, 8176
                scale = -1, 1
            ]

            port ground {
                position = top:1
                kind = pe
            }
            [
                position = 8272, 8384
                scale = -1, 1
            ]

            port Va+ {
                position = left:3
                kind = pe
            }
            [
                position = 8008, 8080
            ]

            port Vc+ {
                position = left:1
                kind = pe
            }
            [
                position = 8008, 8272
            ]

            connect "Three-phase Meter4.C-" Vc- as Connection6
            connect Vb- "Three-phase Meter4.B-" as Connection3
            connect Va+ "Three-phase Meter4.A+" as Connection1
            connect Vc+ "Three-phase Meter4.C+" as Connection5
            connect "Three-phase Meter4.Ground" ground as Connection7
            connect "Three-phase Meter4.A-" Va- as Connection2
            connect "Three-phase Meter4.B+" Vb+ as Connection4
        }
        [
            position = 7984, 7632
            scale = 1, -1
            size = 88, 64
        ]

        component Subsystem L6 {
            layout = dynamic
            component gen_digital_probe griddisconnect6 {
            }
            [
                position = 7176, 8184
                scale = 1, -1
            ]

            component gen_terminator Termination2 {
            }
            [
                position = 7496, 8160
                scale = -1, 1
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 7496, 8120
                scale = -1, 1
            ]

            component gen_digital_probe gridconnect6 {
            }
            [
                position = 7192, 8080
                scale = 1, -1
            ]

            component gen_logic_op "Logical operator2" {
                inputs = "4"
                operator = "NOT"
            }
            [
                position = 7136, 8144
                rotation = right
                hide_name = True
            ]

            component gen_c_function "Load 6" {
                execution_rate = "Ts"
                global_variables = "real time;real var;real time2;"
                in_terminal_dimensions_str = "in inherit;"
                in_terminal_labels = "[]"
                in_terminal_properties = ""
                init_fnc = "/*Begin code section*/
time = 0;
time2 = 0;
var = 0;
/*End code section*/"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "1;1"
                out_terminal_dimensions_str = "out 1;status 1"
                out_terminal_labels = "[(\'out\', True), (\'status\', True)]"
                out_terminal_properties = "real out;uint status;"
                output_fnc = "/*Begin code section*/
out = var;
if (out == 0)
{
    status =0;
}
else
    status = 1;
/*End code section*/"
                parameters = "real Ts;real load_time;real load3_delay;real load_interval;real load_change;"
                update_fnc = "/*Begin code section*/
time += Ts;

if ((time>=load3_delay)&&(time<=load3_delay+load_time))
{
    if ((time2==0)||(time2>=load_interval))
    {
        var  += load_change;
        time2 = 0;
    }
    time2 += Ts;
}
/*End code section*/"
            }
            [
                position = 6864, 7968
                size = 88, 48
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "0"
            }
            [
                position = 7496, 7984
                hide_name = True
            ]

            component "core/Three Phase Constant Power Load" "Constant Power L6" {
                I_limit = "1e5"
                ctrl_method = "Signal inputs"
                execution_rate = "Ts"
            }
            [
                position = 7664, 8056
                size = 127, 256
            ]

            port C {
                position = top:3
                kind = pe
            }
            [
                position = 7968, 8152
                scale = -1, 1
            ]

            port A {
                position = top:1
                kind = pe
            }
            [
                position = 7968, 7960
                scale = -1, 1
            ]

            port B {
                position = top:2
                kind = pe
            }
            [
                position = 7968, 8056
                scale = -1, 1
            ]

            junction Junction1 sp
            [
                position = 7136, 8080
            ]

            connect griddisconnect6.in "Logical operator2.out" as Connection87
            connect Termination1.in "Constant Power L6.frequency" as Connection619
            connect "Constant Power L6.b_node" B as Connection632
            connect "Constant Power L6.c_node" C as Connection633
            connect Termination2.in "Constant Power L6.locked" as Connection620
            connect "Constant Power L6.a_node" A as Connection631
            connect gridconnect6.in Junction1 as Connection630
            connect "Load 6.out" "Constant Power L6.Pin" as Connection622
            [
                breakpoints = 6920, 7960; 7584, 7960
            ]
            connect Junction1 "Logical operator2.in" as Connection629
            connect Constant1.out "Constant Power L6.Qin" as Connection621
            connect "Load 6.status" Junction1 as Connection628

            mask {
                description = "<html><head><meta name=\"qrichtext\" content=\"1\"></meta><style type=\"text/css\">p, li { white-space: pre-wrap; }</style></head><body style=\"\"><p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br></br></p></body></html>"

                CODE open
                    from typhoon.apps.schematic_editor.dialogs.component_property_dialogs.general import RegularComponentPropertiesDialog
                
                    dialog = RegularComponentPropertiesDialog(
                        component=component,
                        property_container=component.masks[-1],
                        current_diagram=current_diagram
                    )
                    dialog.exec_()
                    
                ENDCODE

                CODE define_icon
                    mdl.set_component_icon_image(item_handle, 'load.svg')
                    mdl.set_color(item_handle, "white")
                    mdl.disp_component_icon_text(item_handle, "6.6 kVA LOAD", size=12, trim_factor=0.5)
                ENDCODE
            }
        }
        [
            position = 10120, 7760
            rotation = down
            scale = 1, -1
            size = 256, 48
        ]

        component Subsystem measurement5 {
            layout = dynamic
            component Subsystem "Three-phase Meter5" {
                layout = dynamic
                component gen_terminator TRMqac {
                }
                [
                    position = 8000, 7512
                    rotation = right
                ]

                component gen_terminator TRMpac {
                }
                [
                    position = 8000, 7432
                    rotation = left
                ]

                component gen_probe POWER_S {
                }
                [
                    position = 7864, 8536
                ]

                component gen_probe POWER_PF {
                }
                [
                    position = 7864, 8616
                ]

                component "core/Three-phase RMS variable frequency" VLn_RMS_calc {
                    Ts = "Ts"
                }
                [
                    position = 7176, 7528
                    size = 144, 184
                ]

                component gen_gain gainVLn_RMS {
                    gain = "1/3"
                }
                [
                    position = 7760, 7864
                ]

                component "core/Voltage Measurement" VCn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7320, 8408
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IA {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6768, 8160
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VAn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7112, 8208
                    rotation = right
                    size = 64, 32
                ]

                component "core/Current Measurement" IC {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6768, 8352
                    size = 64, 32
                ]

                component gen_PQ_transform "Power Meter" {
                }
                [
                    position = 7808, 7472
                ]

                component gen_probe POWER_P {
                }
                [
                    position = 7888, 8376
                ]

                component gen_probe POWER_Q {
                }
                [
                    position = 7888, 8456
                ]

                component gen_gain Gain2 {
                    gain = "1/1e3"
                }
                [
                    position = 7816, 8456
                    hide_name = True
                ]

                component "core/Current Measurement" IB {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 6768, 8256
                    size = 64, 32
                ]

                component "core/Voltage Measurement" VBn {
                    execution_rate = "Ts"
                    sig_output = "True"
                }
                [
                    position = 7216, 8304
                    rotation = right
                    size = 64, 32
                ]

                component gen_gain Gain1 {
                    gain = "1/1e3"
                }
                [
                    position = 7816, 8376
                    hide_name = True
                ]

                component Subsystem "Phase locked loop" {
                    layout = dynamic
                    component gen_gain Gain4 {
                        gain = "1/(2*np.pi)"
                    }
                    [
                        position = 8312, 8184
                        hide_name = True
                    ]

                    component gen_terminator Termination2 {
                    }
                    [
                        position = 8120, 8128
                        hide_name = True
                    ]

                    component Subsystem PLL1 {
                        layout = dynamic
                        component gen_pid_controller "PID controller1" {
                            controller_type = "PI"
                            enb_anti_windup_out = "True"
                            enb_output_limit_out = "True"
                            int_init_value = "2*np.pi*60"
                            ki = "2"
                            lower_sat_lim = "2*np.pi*57"
                            upper_sat_lim = "2*np.pi*63"
                        }
                        [
                            position = 8192, 8152
                            hide_name = True
                        ]

                        component gen_gain Gain1 {
                            gain = "-1"
                        }
                        [
                            position = 8128, 8152
                            hide_name = True
                        ]

                        component gen_c_function "C function1" {
                            global_variables = "real var;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
var = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
out = var;
/*End code section*/"
                            parameters = "real Ts;"
                            update_fnc = "/*Begin code section*/
var += (Ts*in);
/*End code section*/"
                        }
                        [
                            position = 8304, 8152
                            hide_name = True
                            size = 80, 48
                        ]

                        component gen_c_function "confine phase" {
                            global_variables = "real x;real floor_in;"
                            in_terminal_dimensions = "inherit"
                            in_terminal_dimensions_str = "in inherit"
                            in_terminal_labels = "[(\'in\', True)]"
                            init_fnc = "/*Begin code section*/
floor_in = 0;
/*End code section*/"
                            no_feed_inputs = "[\'\']"
                            no_feed_outputs = "[\'\']"
                            out_terminal_dimensions = "inherit"
                            out_terminal_dimensions_str = "out inherit"
                            out_terminal_labels = "[(\'out\', True)]"
                            output_fnc = "/*Begin code section*/
x = in/6.283185307179586;
floor_in = floor(x);
out = in - (6.283185307179586*floor_in);
/*End code section*/"
                        }
                        [
                            position = 8408, 8152
                            size = 56, 48
                        ]

                        port wt {
                            label = "wt"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8496, 8152
                        ]

                        port q {
                            label = "q"
                            position = left:1
                            kind = sp
                            direction =  out
                            sp_type {
                                default = auto
                                readonly = True
                            }
                        }
                        [
                            position = 8064, 8152
                        ]

                        port w {
                            label = "w"
                            position = right:1
                            kind = sp
                            direction =  in
                            sp_type {
                                default = inherit
                                readonly = True
                            }
                        }
                        [
                            position = 8304, 8208
                        ]

                        junction Junction1 sp
                        [
                            position = 8240, 8152
                        ]

                        connect Gain1.out "PID controller1.in" as Connection9
                        connect Junction1 "PID controller1.out" as Connection18
                        connect wt "confine phase.out" as Connection14
                        connect w Junction1 as Connection19
                        connect "confine phase.in" "C function1.out" as Connection16
                        connect q Gain1.in as Connection8
                        connect "C function1.in" Junction1 as Connection17
                    }
                    [
                        position = 8216, 8160
                        size = 96, 56
                    ]

                    component "core/abc to dq" "abc to dq1" {
                    }
                    [
                        position = 8008, 8160
                        size = 48, 80
                    ]

                    component tm_delay "Unit Delay1" {
                    }
                    [
                        position = 8416, 8192
                        rotation = right
                        hide_name = True
                    ]

                    component gen_terminator Termination1 {
                    }
                    [
                        position = 8080, 8192
                        hide_name = True
                    ]

                    component gen_gain Gain3 {
                        gain = "-1"
                    }
                    [
                        position = 8120, 8160
                        hide_name = True
                    ]

                    port f {
                        position = right:1
                        kind = sp
                        direction =  in
                        sp_type {
                            default = inherit
                            readonly = True
                        }
                    }
                    [
                        position = 8376, 8184
                    ]

                    port Vb {
                        position = left:2
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7888, 8104
                    ]

                    port Va {
                        position = left:1
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7912, 8040
                    ]

                    port Vc {
                        position = left:3
                        kind = sp
                        direction =  out
                        sp_type {
                            default = auto
                            readonly = True
                        }
                    }
                    [
                        position = 7864, 8184
                    ]

                    connect Gain4.out f as Connection1054
                    connect "abc to dq1.vb" Vb as Connection1049
                    connect Termination1.in "abc to dq1.zero_axis" as Connection29
                    connect Gain3.out PLL1.q as Connection181
                    [
                        breakpoints = 8152, 8160
                    ]
                    connect "abc to dq1.vc" Vc as Connection1050
                    connect "abc to dq1.va" Va as Connection1052
                    connect PLL1.w Gain4.in as Connection1053
                    connect Gain3.in "abc to dq1.q_axis" as Connection18
                    connect "abc to dq1.d_axis" Termination2.in as Connection1048
                    connect "Unit Delay1.out" "abc to dq1.wt" as Connection24
                    [
                        breakpoints = 8416, 8224; 8416, 8256; 7968, 8256
                    ]
                    connect "Unit Delay1.in" PLL1.wt as Connection1047
                    [
                        breakpoints = 8416, 8144; 8416, 8136; 8288, 8136
                    ]
                }
                [
                    position = 6736, 7880
                    size = 96, 168
                ]

                component gen_probe Freq {
                }
                [
                    position = 7864, 8240
                ]

                component gen_probe VLn_RMS {
                }
                [
                    position = 7864, 8304
                ]

                component gen_sum sumVLn_RMS {
                    signs = "3"
                }
                [
                    position = 7632, 7864
                ]

                port A+ {
                    position = left:1
                    kind = pe
                }
                [
                    position = 6624, 8160
                ]

                port Ground {
                    position = bottom:4
                    kind = pe
                }
                [
                    position = 6624, 8464
                ]

                port C- {
                    position = right:3
                    kind = pe
                }
                [
                    position = 7408, 8352
                    rotation = down
                ]

                port C+ {
                    position = left:3
                    kind = pe
                }
                [
                    position = 6624, 8352
                ]

                port B- {
                    position = right:2
                    kind = pe
                }
                [
                    position = 7408, 8256
                    rotation = down
                ]

                port A- {
                    position = right:1
                    kind = pe
                }
                [
                    position = 7408, 8160
                    rotation = down
                ]

                port B+ {
                    position = left:2
                    kind = pe
                }
                [
                    position = 6624, 8256
                ]

                tag fromVBn1 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6608, 7880
                ]

                tag GoToVBnRMS {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 7528
                ]

                tag GoToVCn {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7384, 8408
                    size = 0, 0
                ]

                tag GoToVAn {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7176, 8208
                    size = 0, 0
                ]

                tag fromVBn2 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7504
                ]

                tag GoToIA {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6824, 8120
                    size = 0, 0
                ]

                tag GoToVLn_RMS {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 7864
                ]

                tag GoToP {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 7352
                    rotation = left
                ]

                tag GoToQ {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7912, 7392
                    rotation = left
                ]

                tag fromVAnRMS3 {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 7816
                ]

                tag fromIB3 {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7680, 7600
                    rotation = left
                ]

                tag GoToVCnRMS {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 7576
                ]

                tag GoToVBn {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7280, 8304
                    size = 0, 0
                ]

                tag fromIA3 {
                    value = "IA"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7656, 7640
                    rotation = left
                ]

                tag fromVBn3 {
                    value = "VBn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7680, 7376
                    rotation = right
                ]

                tag GoToS {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7912, 7608
                    rotation = right
                ]

                tag fromVAn3 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7704, 7336
                    rotation = right
                ]

                tag fromVCnRMS3 {
                    value = "VCn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 7912
                ]

                tag fromVCn3 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7656, 7416
                    rotation = right
                ]

                tag fromVBnRMS3 {
                    value = "VBn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7504, 7864
                ]

                tag fromS4 {
                    value = "POWER_S"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7760, 8536
                    size = 0, 0
                ]

                tag GoToPF {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7888, 7568
                    rotation = right
                ]

                tag fromVCn2 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7552
                ]

                tag fromVAn1 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6608, 7816
                ]

                tag fromIC3 {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7704, 7560
                    rotation = left
                ]

                tag fromQ4 {
                    value = "POWER_Q"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7728, 8456
                    size = 0, 0
                ]

                tag GoToIB {
                    value = "IB"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6824, 8216
                    size = 0, 0
                ]

                tag fromFreqVLn_RMS {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7600
                ]

                tag fromP4 {
                    value = "POWER_P"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7728, 8376
                    size = 0, 0
                ]

                tag fromFreq4 {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7752, 8240
                    size = 0, 0
                ]

                tag GoToIC {
                    value = "IC"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6832, 8312
                    size = 0, 0
                ]

                tag GoToFreq {
                    value = "Freq"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 6888, 7880
                ]

                tag fromVAn2 {
                    value = "VAn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7048, 7456
                ]

                tag fromVCn1 {
                    value = "VCn"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 6608, 7944
                ]

                tag fromVLn_RMS4 {
                    value = "VLn_RMS"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7752, 8304
                    size = 0, 0
                ]

                tag GoToVAnRMS {
                    value = "VAn_RMS"
                    scope = local
                    kind = sp
                    direction = in
                }
                [
                    position = 7304, 7480
                ]

                tag fromPF4 {
                    value = "POWER_PF"
                    scope = local
                    kind = sp
                    direction = out
                }
                [
                    position = 7760, 8616
                    size = 0, 0
                ]

                junction Junction4 pe
                [
                    position = 7216, 8464
                ]

                junction Junction2 pe
                [
                    position = 7112, 8464
                ]

                junction Junction9 pe
                [
                    position = 7320, 8352
                ]

                junction Junction8 pe
                [
                    position = 7216, 8256
                ]

                junction Junction7 pe
                [
                    position = 7112, 8160
                ]

                connect VCn.n_node Junction4 as Connection968
                [
                    breakpoints = 7248, 8464
                ]
                connect VLn_RMS_calc.B fromVBn2 as ConnVBnRMS
                connect "Phase locked loop.f" GoToFreq as Connection1050
                connect IB.out GoToIB as ConnIBSP
                connect "Power Meter.apparent" GoToS as ConnPMS
                connect fromVAn1 "Phase locked loop.Va" as Connection1051
                connect fromVCnRMS3 sumVLn_RMS.in2 as ConnVCnRMS3
                connect VLn_RMS_calc.C fromVCn2 as ConnVCnRMS
                connect VBn.p_node Junction8 as Connection1035
                connect fromIA3 "Power Meter.ia" as ConnIAPM
                connect GoToVAn VAn.out as Connection965
                connect fromVBn3 "Power Meter.vb" as ConnVBPM
                connect VAn.n_node Junction2 as Connection950
                connect "Power Meter.Qdc" GoToQ as ConnPMQdc
                connect gainVLn_RMS.out GoToVLn_RMS as ConnVLn_RMS2
                connect fromVBnRMS3 sumVLn_RMS.in1 as ConnVBnRMS3
                connect fromVBn1 "Phase locked loop.Vb" as Connection1052
                connect GoToVCnRMS VLn_RMS_calc.RMSc as ConnVCnRMS1
                connect VLn_RMS_calc.RMSb GoToVBnRMS as ConnVBnRMS1
                connect Junction9 C- as Connection1041
                [
                    breakpoints = 7320, 8352
                ]
                connect "Power Meter.Qac" TRMqac.in as ConnPMQac
                connect fromS4 POWER_S.in as ConnSprobe
                connect IC.out GoToIC as ConnICSP
                connect Ground Junction2 as Connection1026
                [
                    breakpoints = 6696, 8464; 6776, 8464; 6776, 8464; 6872, 8464; 6872, 8464
                ]
                connect GoToVAnRMS VLn_RMS_calc.RMSa as ConnVAnRMS1
                connect GoToVBn VBn.out as Connection964
                connect Junction7 A- as Connection1031
                [
                    breakpoints = 7112, 8160
                ]
                connect VAn.p_node Junction7 as Connection1030
                connect Gain1.out POWER_P.in as Connection1044
                connect fromVLn_RMS4 VLn_RMS.in as ConnVLn_RMSprobe
                connect A+ IA.p_node as Connection1029
                connect fromFreqVLn_RMS VLn_RMS_calc.Freq as ConnFVLn_RMS
                connect fromVAnRMS3 sumVLn_RMS.in as ConnVAnRMS3
                connect fromIC3 "Power Meter.ic" as ConnICPM
                connect IC.n_node Junction9 as Connection1042
                connect B+ IB.p_node as Connection1034
                connect fromP4 Gain1.in as Connection1043
                connect VCn.p_node Junction9 as Connection1040
                connect fromVCn3 "Power Meter.vc" as ConnVCPM
                connect "Power Meter.Pdc" GoToP as ConnPMPdc
                connect Junction8 B- as Connection1036
                [
                    breakpoints = 7216, 8256
                ]
                connect fromQ4 Gain2.in as Connection1045
                connect sumVLn_RMS.out gainVLn_RMS.in as ConnVLn_RMS1
                connect IB.n_node Junction8 as Connection1037
                connect Junction2 Junction4 as Connection954
                connect fromIB3 "Power Meter.ib" as ConnIBPM
                connect IA.out GoToIA as ConnIASP
                connect GoToVCn VCn.out as Connection963
                connect Gain2.out POWER_Q.in as Connection1046
                connect C+ IC.p_node as Connection1039
                connect fromFreq4 Freq.in as ConnFreqprobe
                connect IA.n_node Junction7 as Connection1032
                connect "Power Meter.k_factor" GoToPF as ConnPMPF
                connect fromVAn2 VLn_RMS_calc.A as ConnVAnRMS
                connect fromVCn1 "Phase locked loop.Vc" as Connection1053
                connect fromPF4 POWER_PF.in as ConnPFprobe
                connect fromVAn3 "Power Meter.va" as ConnVAPM
                connect VBn.n_node Junction4 as Connection956
                connect "Power Meter.Pac" TRMpac.in as ConnPMPac
            }
            [
                position = 8016, 8080
                size = 64, 240
            ]

            port ground {
                position = top:1
                kind = pe
            }
            [
                position = 8104, 8288
                scale = -1, 1
            ]

            port Va- {
                position = right:3
                kind = pe
            }
            [
                position = 8136, 7984
                scale = -1, 1
            ]

            port Vc- {
                position = right:1
                kind = pe
            }
            [
                position = 8136, 8176
                scale = -1, 1
            ]

            port Vb- {
                position = right:2
                kind = pe
            }
            [
                position = 8136, 8080
                scale = -1, 1
            ]

            port Va+ {
                position = left:3
                kind = pe
            }
            [
                position = 7896, 7984
            ]

            port Vc+ {
                position = left:1
                kind = pe
            }
            [
                position = 7896, 8176
            ]

            port Vb+ {
                position = left:2
                kind = pe
            }
            [
                position = 7896, 8080
            ]

            connect Va+ "Three-phase Meter5.A+" as Connection2
            connect "Three-phase Meter5.C+" Vc+ as Connection7
            connect "Three-phase Meter5.C-" Vc- as Connection5
            connect Vb- "Three-phase Meter5.B-" as Connection4
            connect "Three-phase Meter5.A-" Va- as Connection3
            connect "Three-phase Meter5.B+" Vb+ as Connection1
            connect ground "Three-phase Meter5.Ground" as Connection6
        }
        [
            position = 8200, 7992
            rotation = down
            scale = -1, -1
            size = 80, 64
        ]

        component "core/Four Phase Core Coupling" "Core Coupling 5" {
            R1 = "1e3"
            fixed_snb_i = "true"
            snb_type_i = "R1-C1"
        }
        [
            position = 7880, 8064
            size = 12, 352
        ]

        component Subsystem Modbus2 {
            layout = dynamic
            component "core/ModBus Device" "ModBus Device2 (config2)" {
                configuration = "config2"
                execution_rate = "Ts"
            }
            [
                position = 8192, 7992
                size = 184, 184
            ]

            component src_constant C_u13 {
                execution_rate = "Ts"
                value = "50"
            }
            [
                position = 7920, 7872
            ]

            component gen_probe Probe3 {
            }
            [
                position = 8576, 8392
            ]

            component gen_c_function "C function3" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7888, 8376
                hide_name = True
                size = 80, 48
            ]

            component src_constant Constant3 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7672, 8424
            ]

            component gen_product Product2 {
            }
            [
                position = 8800, 8104
            ]

            component gen_probe Probe1 {
            }
            [
                position = 7936, 8080
            ]

            component gen_product Product3 {
            }
            [
                position = 7776, 8376
            ]

            component gen_product Product1 {
            }
            [
                position = 7768, 8160
            ]

            component gen_c_function "C function1" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7880, 8160
                hide_name = True
                size = 80, 48
            ]

            component src_constant Constant2 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8680, 8128
            ]

            component gen_probe Voltage_diff {
            }
            [
                position = 7896, 8288
            ]

            component gen_c_function "C function2" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8472, 8048
                hide_name = True
                size = 48, 48
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "4"
            }
            [
                position = 8384, 8064
            ]

            component src_constant C_u11 {
                execution_rate = "Ts"
            }
            [
                position = 8008, 7720
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8400, 7920
            ]

            component src_constant C_u12 {
                execution_rate = "Ts"
            }
            [
                position = 7968, 7800
            ]

            component gen_c_function "C function4" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8480, 8288
                hide_name = True
                size = 48, 48
            ]

            component src_constant Constant4 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8688, 8368
            ]

            component gen_probe Probe2 {
            }
            [
                position = 8576, 8152
            ]

            component gen_bus_join "Bus Join2" {
                inputs = "4"
            }
            [
                position = 8016, 8264
            ]

            component gen_product Product4 {
            }
            [
                position = 8800, 8344
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7664, 8208
            ]

            port U-P {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7664, 8112
                rotation = down
                scale = -1, 1
            ]

            port u_P {
                position = top:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8952, 8104
            ]

            port u_Q {
                position = top:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8960, 8344
            ]

            port V_dev {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7672, 8328
                rotation = down
                scale = -1, 1
            ]

            junction Junction6 sp
            [
                position = 7832, 8376
            ]

            junction Junction5 sp
            [
                position = 8520, 8048
            ]

            junction Junction4 sp
            [
                position = 7824, 8160
            ]

            junction Junction7 sp
            [
                position = 8528, 8288
            ]

            connect Junction4 Product1.out as Connection115
            connect "C function3.out" "Bus Join2.in2" as Connection147
            connect "Bus Join2.out" "ModBus Device2 (config2).reg_in" as Connection149
            connect C_u12.out "ModBus Device2 (config2).discrete_in" as Connection121
            [
                breakpoints = 8000, 7968; 8080, 7968
            ]
            connect "C function1.out" "Bus Join2.in" as Connection145
            connect Constant4.out Product4.in1 as Connection151
            connect Junction7 Product4.in as Connection152
            connect "Bus Split1.out1" "C function2.in" as Connection133
            connect "C function3.sign" "Bus Join2.in3" as Connection148
            connect Junction5 Product2.in as Connection136
            connect "ModBus Device2 (config2).holding_out" "Bus Split1.in" as Connection131
            connect U-P Product1.in as Connection83
            connect Termination1.in "ModBus Device2 (config2).coil_out" as Connection127
            connect Constant1.out Product1.in1 as Connection73
            connect Product2.out u_P as Connection96
            connect "C function3.in" Junction6 as Connection142
            connect "C function1.sign" "Bus Join2.in1" as Connection146
            connect Probe2.in Junction5 as Connection137
            connect "C function2.sign" "Bus Split1.out" as Connection132
            connect Voltage_diff.in Junction6 as Connection143
            connect Probe1.in Junction4 as Connection116
            connect "Bus Split1.out2" "C function4.sign" as Connection155
            connect "C function1.in" Junction4 as Connection114
            connect Junction6 Product3.out as Connection144
            connect "C function4.out" Junction7 as Connection150
            connect Constant2.out Product2.in1 as Connection100
            connect Product4.out u_Q as Connection154
            connect Probe3.in Junction7 as Connection153
            connect "C function2.out" Junction5 as Connection135
            connect C_u13.out "ModBus Device2 (config2).holding_in" as Connection120
            [
                breakpoints = 7952, 8016; 8080, 8016
            ]
            connect "Bus Split1.out3" "C function4.in" as Connection156
            [
                breakpoints = 8432, 8088; 8432, 8296
            ]
            connect V_dev Product3.in as Connection140
            connect "ModBus Device2 (config2).coil_in" C_u11.out as Connection139
            connect Constant3.out Product3.in1 as Connection141
        }
        [
            position = 9592, 7224
            rotation = down
            scale = 1, -1
            size = 112, 112
        ]

        component Subsystem Modbus3 {
            layout = dynamic
            component gen_probe Probe3 {
            }
            [
                position = 8576, 8392
            ]

            component gen_bus_join "Bus Join2" {
                inputs = "4"
            }
            [
                position = 8016, 8264
            ]

            component src_constant C_u11 {
                execution_rate = "Ts"
            }
            [
                position = 8008, 7720
            ]

            component gen_bus_split "Bus Split1" {
                outputs = "4"
            }
            [
                position = 8384, 8064
            ]

            component gen_probe Voltage_diff {
            }
            [
                position = 7896, 8288
            ]

            component gen_c_function "C function4" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8480, 8288
                hide_name = True
                size = 48, 48
            ]

            component gen_product Product3 {
            }
            [
                position = 7776, 8376
            ]

            component gen_c_function "C function1" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7880, 8160
                hide_name = True
                size = 80, 48
            ]

            component gen_c_function "C function3" {
                in_terminal_dimensions = "inherit"
                in_terminal_dimensions_str = "in inherit"
                in_terminal_labels = "[(\'in\', True)]"
                in_terminal_properties = "int in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit;inherit"
                out_terminal_dimensions_str = "out inherit;sign inherit"
                out_terminal_labels = "[(\'out\', True), (\'sign\', True)]"
                out_terminal_properties = "int out;int sign;"
                output_fnc = "/*Begin code section*/
if (in >= 0)
{    
    out = in;
    sign=0;
}

else
{
    out = in*-1;
    sign = 1;
}
/*End code section*/"
            }
            [
                position = 7888, 8376
                hide_name = True
                size = 80, 48
            ]

            component src_constant Constant1 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7664, 8208
            ]

            component "core/ModBus Device" "ModBus Device3 (config3)" {
                configuration = "config3"
                execution_rate = "Ts"
            }
            [
                position = 8192, 7992
                size = 184, 184
            ]

            component gen_probe Probe2 {
            }
            [
                position = 8576, 8152
            ]

            component src_constant Constant3 {
                execution_rate = "Ts"
                value = "scale_const"
            }
            [
                position = 7672, 8424
            ]

            component gen_product Product4 {
            }
            [
                position = 8800, 8344
            ]

            component src_constant Constant2 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8680, 8128
            ]

            component gen_c_function "C function2" {
                in_terminal_dimensions = "inherit;inherit"
                in_terminal_dimensions_str = "sign inherit;in inherit"
                in_terminal_labels = "[(\'sign\', True), (\'in\', True)]"
                in_terminal_properties = "inherit sign;inherit in;"
                no_feed_inputs = "[\'\']"
                no_feed_outputs = "[\'\']"
                out_terminal_dimensions = "inherit"
                out_terminal_dimensions_str = "out inherit"
                out_terminal_labels = "[(\'out\', True)]"
                output_fnc = "/*Begin code section*/
out = in*((-2*sign)+1);
/*End code section*/"
            }
            [
                position = 8472, 8048
                hide_name = True
                size = 48, 48
            ]

            component src_constant Constant4 {
                execution_rate = "Ts"
                value = "scale_back_const"
            }
            [
                position = 8688, 8368
            ]

            component gen_product Product2 {
            }
            [
                position = 8800, 8104
            ]

            component src_constant C_u13 {
                execution_rate = "Ts"
                value = "50"
            }
            [
                position = 7920, 7872
            ]

            component gen_probe Probe1 {
            }
            [
                position = 7936, 8080
            ]

            component gen_terminator Termination1 {
            }
            [
                position = 8400, 7920
            ]

            component src_constant C_u12 {
                execution_rate = "Ts"
            }
            [
                position = 7968, 7800
            ]

            component gen_product Product1 {
            }
            [
                position = 7768, 8160
            ]

            port V_dev {
                position = bottom:1
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7672, 8328
                rotation = down
                scale = -1, 1
            ]

            port U-P {
                position = bottom:2
                kind = sp
                direction =  out
                sp_type {
                    default = auto
                    readonly = True
                }
            }
            [
                position = 7664, 8112
                rotation = down
                scale = -1, 1
            ]

            port u_P {
                position = top:2
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8952, 8104
            ]

            port u_Q {
                position = top:1
                kind = sp
                direction =  in
                sp_type {
                    default = inherit
                    readonly = True
                }
            }
            [
                position = 8960, 8344
            ]

            junction Junction6 sp
            [
                position = 7832, 8376
            ]

            junction Junction4 sp
            [
                position = 7824, 8160
            ]

            junction Junction7 sp
            [
                position = 8528, 8288
            ]

            junction Junction5 sp
            [
                position = 8520, 8048
            ]

            connect Probe2.in Junction5 as Connection137
            connect "C function1.in" Junction4 as Connection114
            connect Constant1.out Product1.in1 as Connection73
            connect Product2.out u_P as Connection96
            connect "C function3.in" Junction6 as Connection142
            connect Voltage_diff.in Junction6 as Connection143
            connect Junction4 Product1.out as Connection115
            connect "Bus Join2.out" "ModBus Device3 (config3).reg_in" as Connection149
            connect Termination1.in "ModBus Device3 (config3).coil_out" as Connection127
            connect Constant4.out Product4.in1 as Connection151
            connect Junction7 Product4.in as Connection152
            connect Product4.out u_Q as Connection154
            connect Junction6 Product3.out as Connection144
            connect C_u13.out "ModBus Device3 (config3).holding_in" as Connection120
            [
                breakpoints = 7952, 8016; 8080, 8016
            ]
            connect "Bus Split1.out1" "C function2.in" as Connection133
            connect U-P Product1.in as Connection83
            connect Constant3.out Product3.in1 as Connection141
            connect "C function4.out" Junction7 as Connection150
            connect "C function3.sign" "Bus Join2.in3" as Connection148
            connect Probe1.in Junction4 as Connection116
            connect "C function1.sign" "Bus Join2.in1" as Connection146
            connect "ModBus Device3 (config3).coil_in" C_u11.out as Connection139
            connect "C function2.out" Junction5 as Connection135
            connect "C function2.sign" "Bus Split1.out" as Connection132
            connect Junction5 Product2.in as Connection136
            connect "C function1.out" "Bus Join2.in" as Connection145
            connect "Bus Split1.out3" "C function4.in" as Connection156
            [
                breakpoints = 8432, 8088; 8432, 8296
            ]
            connect Constant2.out Product2.in1 as Connection100
            connect "C function3.out" "Bus Join2.in2" as Connection147
            connect "Bus Split1.out2" "C function4.sign" as Connection155
            connect C_u12.out "ModBus Device3 (config3).discrete_in" as Connection121
            [
                breakpoints = 8000, 7968; 8080, 7968
            ]
            connect V_dev Product3.in as Connection140
            connect "ModBus Device3 (config3).holding_out" "Bus Split1.in" as Connection131
            connect Probe3.in Junction7 as Connection153
        }
        [
            position = 9256, 8656
            rotation = down
            scale = -1, -1
            size = 120, 112
        ]

        tag switch_droop {
            value = "switch_droop"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 6792, 7608
            hide_name = True
        ]

        tag switch_droop1 {
            value = "switch_droop"
            scope = local
            kind = sp
            direction = in
        }
        [
            position = 7032, 7000
            hide_name = True
        ]

        tag switch_droop2 {
            value = "switch_droop"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9040, 7120
            hide_name = True
        ]

        tag switch_droop3 {
            value = "switch_droop"
            scope = local
            kind = sp
            direction = out
        }
        [
            position = 9056, 8544
            hide_name = True
        ]

        junction Junction250 pe
        [
            position = 7208, 7720
        ]

        junction Junction253 pe
        [
            position = 9040, 7720
        ]

        junction Junction254 pe
        [
            position = 8600, 7720
        ]

        junction Junction256 pe
        [
            position = 7368, 7512
        ]

        junction Junction257 pe
        [
            position = 7432, 7544
        ]

        junction Junction258 pe
        [
            position = 7400, 7528
        ]

        junction Junction259 pe
        [
            position = 9288, 7512
        ]

        junction Junction260 pe
        [
            position = 9216, 7528
        ]

        junction Junction261 pe
        [
            position = 9144, 7544
        ]

        junction Junction266 pe
        [
            position = 9040, 7440
        ]

        junction Junction267 pe
        [
            position = 9040, 8216
        ]

        junction Junction268 pe
        [
            position = 7912, 7512
        ]

        junction Junction269 pe
        [
            position = 7896, 7528
        ]

        junction Junction270 pe
        [
            position = 7880, 7544
        ]

        junction Junction280 pe
        [
            position = 7984, 7720
        ]

        junction Junction281 pe
        [
            position = 7456, 7720
        ]

        junction Junction283 pe
        [
            position = 8200, 7920
        ]

        junction Junction284 pe
        [
            position = 8144, 8128
        ]

        junction Junction285 pe
        [
            position = 8128, 8112
        ]

        junction Junction286 pe
        [
            position = 8112, 8096
        ]

        connect Clock1.out Timer.in as Connection1061
        connect measurement1.ground Junction250 as Connection1439
        connect "Core Coupling 1.d_out" Junction254 as Connection1472
        connect Junction254 Junction253 as Connection1473
        connect gnd2.node Junction254 as Connection1474
        connect Constant1.out switch_droop1 as Connection1497
        connect RL_14.P2 Junction256 as Connection1544
        connect Junction256 measurement1.Va- as Connection1545
        [
            breakpoints = 7384, 7512; 7328, 7512
        ]
        connect RL_15.P6 Junction256 as Connection1546
        connect RL_14.P6 Junction257 as Connection1547
        connect Junction257 measurement1.Vc- as Connection1548
        [
            breakpoints = 7376, 7544
        ]
        connect RL_15.P2 Junction257 as Connection1549
        connect RL_14.P4 Junction258 as Connection1550
        connect Junction258 measurement1.Vb- as Connection1551
        [
            breakpoints = 7352, 7528
        ]
        connect RL_15.P4 Junction258 as Connection1552
        connect "Core Coupling 1.b_out" RL_24.P4 as Connection1556
        connect RL_24.P2 "Core Coupling 1.a_out" as Connection1557
        connect RL_24.P6 "Core Coupling 1.c_out" as Connection1558
        connect measurement2.Va- Junction259 as Connection1571
        connect Junction259 RL_24.P1 as Connection1572
        [
            breakpoints = 9288, 7512; 9288, 7512
        ]
        connect RL_26.P2 Junction259 as Connection1573
        connect RL_24.P3 Junction260 as Connection1574
        connect Junction260 measurement2.Vb- as Connection1575
        [
            breakpoints = 9216, 7528
        ]
        connect RL_26.P4 Junction260 as Connection1576
        connect RL_24.P5 Junction261 as Connection1577
        connect Junction261 measurement2.Vc- as Connection1578
        [
            breakpoints = 9144, 7544
        ]
        connect RL_26.P6 Junction261 as Connection1579
        connect "Grid forming inverter (averaged).Vc" measurement1.Vc+ as Connection1623
        connect measurement1.Vb+ "Grid forming inverter (averaged).Vb" as Connection1624
        [
            breakpoints = 7160, 7528
        ]
        connect "Grid forming inverter (averaged).Va" measurement1.Va+ as Connection1625
        connect switch_droop "Grid forming inverter (averaged).Switch droop" as Connection1629
        connect Modbus1.u_P "Grid forming inverter (averaged).setpoint_P" as Connection1630
        [
            breakpoints = 6888, 7192; 6752, 7192; 6752, 7456
        ]
        connect "Grid forming inverter (averaged).activeP_offset" Modbus1.U1-P1 as Connection1631
        connect measurement2.ground Junction266 as Connection1632
        connect Junction266 Junction253 as Connection1633
        [
            breakpoints = 9040, 7440; 9040, 7720; 9040, 7720
        ]
        connect "Grid forming inverter (averaged)2.Ground" Junction266 as Connection1634
        connect switch_droop2 "Grid forming inverter (averaged)2.Switch droop" as Connection1635
        connect "Grid forming inverter (averaged)2.Va" measurement2.Va+ as Connection1638
        connect measurement2.Vb+ "Grid forming inverter (averaged)2.Vb" as Connection1639
        connect "Grid forming inverter (averaged)2.Vc" measurement2.Vc+ as Connection1640
        connect "Grid forming inverter (averaged)3.Vb" measurement3.Vb+ as Connection1641
        connect "Grid forming inverter (averaged)3.Va" measurement3.Va+ as Connection1642
        connect "Grid forming inverter (averaged)3.Vc" measurement3.Vc+ as Connection1643
        connect "Grid forming inverter (averaged)3.Ground" Junction267 as Connection1646
        connect switch_droop3 "Grid forming inverter (averaged)3.Switch droop" as Connection1647
        connect L4.A measurement4.Va- as Connection1481
        connect L6.A measurement6.Va- as Connection1489
        connect L5.B measurement5.Vb- as Connection1485
        connect L6.B measurement6.Vb- as Connection1488
        connect L5.C measurement5.Vc- as Connection1486
        connect L5.A measurement5.Va- as Connection1484
        connect L4.B measurement4.Vb- as Connection1482
        connect L4.C measurement4.Vc- as Connection1483
        connect L6.C measurement6.Vc- as Connection1487
        connect RL_14.P1 Junction268 as Connection1650
        connect Junction268 "Core Coupling 1.a_in" as Connection1651
        [
            breakpoints = 7920, 7512; 8392, 7512
        ]
        connect measurement4.Va+ Junction268 as Connection1652
        [
            breakpoints = 7912, 7616; 7912, 7512
        ]
        connect RL_14.P3 Junction269 as Connection1653
        connect Junction269 "Core Coupling 1.b_in" as Connection1654
        connect measurement4.Vb+ Junction269 as Connection1655
        [
            breakpoints = 7896, 7632; 7896, 7528
        ]
        connect RL_14.P5 Junction270 as Connection1656
        connect Junction270 "Core Coupling 1.c_in" as Connection1657
        connect measurement4.Vc+ Junction270 as Connection1658
        connect "Grid forming inverter (averaged).Ground" Junction250 as Connection1687
        [
            breakpoints = 7208, 7720
        ]
        connect Junction280 "Core Coupling 1.d_in" as Connection1694
        [
            breakpoints = 7992, 7720
        ]
        connect measurement4.ground Junction280 as Connection1695
        connect measurement3.ground Junction267 as Connection1706
        [
            breakpoints = 9040, 8216; 9040, 8216; 9040, 8216; 9040, 8216; 9040, 8216; 9040, 8216; 9040, 8216; 9040, 8216; 9040, 8216
        ]
        connect RL_15.P3 "Core Coupling 5.c_in" as Connection1707
        connect RL_15.P5 "Core Coupling 5.d_in" as Connection1709
        connect RL_15.P1 "Core Coupling 5.b_in" as Connection1712
        connect Junction250 Junction281 as Connection1713
        [
            breakpoints = 7208, 7720; 7208, 7720
        ]
        connect Junction281 Junction280 as Connection1714
        [
            breakpoints = 7968, 7720
        ]
        connect "Core Coupling 5.a_in" Junction281 as Connection1715
        connect "Core Coupling 5.a_out" Junction283 as Connection1719
        connect measurement5.ground Junction283 as Connection1721
        connect measurement5.Va+ Junction284 as Connection1722
        connect Junction284 "Core Coupling 5.d_out" as Connection1723
        [
            breakpoints = 8144, 8128; 7904, 8128; 7904, 8208
        ]
        connect RL_35.P6 Junction284 as Connection1724
        connect "Core Coupling 5.c_out" Junction285 as Connection1725
        connect Junction285 measurement5.Vb+ as Connection1726
        [
            breakpoints = 8128, 8112; 8128, 7992
        ]
        connect RL_35.P4 Junction285 as Connection1727
        connect "Core Coupling 5.b_out" Junction286 as Connection1728
        [
            breakpoints = 7904, 8096; 8112, 8096
        ]
        connect Junction286 measurement5.Vc+ as Connection1729
        [
            breakpoints = 8112, 8088; 8112, 7976
        ]
        connect RL_35.P2 Junction286 as Connection1730
        connect measurement6.ground Junction253 as Connection1733
        [
            breakpoints = 9952, 7720; 9760, 7720; 9760, 7720; 9760, 7720
        ]
        connect RL_26.P5 measurement6.Vc+ as Connection1732
        [
            breakpoints = 9784, 7544; 9784, 7696
        ]
        connect RL_26.P3 measurement6.Vb+ as Connection1735
        [
            breakpoints = 9816, 7680
        ]
        connect RL_35.P3 measurement3.Vb- as Connection1737
        [
            breakpoints = 9224, 8112
        ]
        connect RL_35.P1 measurement3.Vc- as Connection1734
        [
            breakpoints = 9152, 8096; 9152, 8096
        ]
        connect measurement6.Va+ RL_26.P1 as Connection1736
        [
            breakpoints = 9848, 7664; 9848, 7512
        ]
        connect Junction267 Junction283 as Connection1731
        [
            breakpoints = 9040, 8216; 9040, 8056; 9040, 8056; 8544, 8056; 8544, 7920
        ]
        connect RL_35.P5 measurement3.Va- as Connection1738
        [
            breakpoints = 9296, 8128; 9296, 8128
        ]
        connect Modbus1.u_Q "Grid forming inverter (averaged).setpoint_Q" as Connection1739
        [
            breakpoints = 6968, 7152; 6688, 7152; 6688, 7200; 6688, 7336; 6808, 7528
        ]
        connect Modbus2.u_Q "Grid forming inverter (averaged)2.setpoint_Q" as Connection1740
        [
            breakpoints = 9624, 7096; 9216, 7096
        ]
        connect Modbus2.u_P "Grid forming inverter (averaged)2.setpoint_P" as Connection1741
        [
            breakpoints = 9544, 7112; 9288, 7112
        ]
        connect Modbus2.U-P "Grid forming inverter (averaged)2.activeP_offset" as Connection1742
        connect Modbus3.u_Q "Grid forming inverter (averaged)3.setpoint_Q" as Connection1743
        connect Modbus3.u_P "Grid forming inverter (averaged)3.setpoint_P" as Connection1744
        connect Modbus3.U-P "Grid forming inverter (averaged)3.activeP_offset" as Connection1745
        connect measurement2.V_dev Modbus2.V_dev as Connection1746
        connect measurement3.V_dev Modbus3.V_dev as Connection1747
        [
            breakpoints = 9520, 8216; 9520, 8744; 9216, 8744
        ]
        connect measurement1.V_dev Modbus1.V_dev as Connection1748
    }

    default {
        gen_PQ_transform {
            filter_order = "first order"
            filter_cutoff_Hz = "30"
            initial_filter_input = "0"
            initial_filter_output = "0"
            enable_inst_ports = "True"
            enable_zero_ports = "False"
            execution_rate = "inherit"
        }

        gen_abs {
            execution_rate = "inherit"
        }

        gen_bus_join {
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_bus_split {
            outputs = "2"
            execution_rate = "inherit"
        }

        gen_c_function {
            in_terminal_properties = "real in;"
            in_terminal_labels = ""
            out_terminal_properties = "real out;"
            out_terminal_labels = ""
            no_feed_inputs = ""
            no_feed_outputs = ""
            in_terminal_dimensions = ""
            in_terminal_dimensions_str = ""
            out_terminal_dimensions = ""
            out_terminal_dimensions_str = ""
            output_fnc = ""
            update_fnc = ""
            init_fnc = ""
            global_variables = ""
            parameters = ""
            execution_rate = "inherit"
        }

        gen_comparator {
            execution_rate = "inherit"
        }

        gen_digital_probe {
            override_signal_name = "False"
            signal_name = ""
            streaming_en = "False"
            addr = "0"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_gain {
            gain = "1"
            multiplication = "Element-wise(K.*u)"
            execution_rate = "inherit"
        }

        gen_integrator {
            show_reset = "none"
            reset_type = "asynchronous"
            show_init_condition = "internal"
            init_value = "0"
            limit_output = "False"
            limit_upper = "inf"
            limit_lower = "-inf"
            show_state = "False"
            state_port_type = "inherit"
            execution_rate = "inherit"
        }

        gen_limiter {
            upper_limit = "[\'inf\']"
            lower_limit = "[\'-inf\']"
            execution_rate = "inherit"
        }

        gen_logic_op {
            operator = "AND"
            inputs = "2"
            execution_rate = "inherit"
        }

        gen_math_fnc {
            mathematical_fn = "exponential"
            execution_rate = "inherit"
        }

        gen_pid_controller {
            controller_type = "PID"
            kp = "1"
            kp_source = "internal"
            ki = "1"
            ki_source = "internal"
            kd = "0"
            kd_source = "internal"
            filt_coef = "100"
            int_init_value = "0"
            filt_init_value = "0"
            enb_output_limit_out = "False"
            upper_sat_lim = "1"
            lower_sat_lim = "-1"
            enb_anti_windup_out = "False"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        gen_probe {
            addr = "0"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "generic"
            streaming_en = "False"
            streaming_er_idx = "0"
            execution_rate = "inherit"
        }

        gen_product {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_rel_op {
            relational_op = "=="
            execution_rate = "inherit"
        }

        gen_sum {
            signs = "2"
            execution_rate = "inherit"
        }

        gen_terminator {
            execution_rate = "inherit"
        }

        gen_trigonometric {
            trigonometric_fn = "sin"
            execution_rate = "inherit"
        }

        pas_capacitor {
            capacitance = "1e-6"
            initial_voltage = "0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_inductor {
            inductance = "1e-3"
            initial_current = "0.0"
            pole_shift_ignore = "False"
            visible = "True"
        }

        pas_resistor {
            resistance = "1"
        }

        src_clock {
            execution_rate = "100e-6"
        }

        src_constant {
            value = "1"
            signal_type = "real"
            execution_rate = "100e-6"
        }

        src_scada_input {
            addr = "0"
            format = "real"
            override_signal_name = "False"
            signal_name = ""
            signal_type = "real"
            min = "-1e6"
            max = "1e6"
            def_value = "0"
            unit = " "
            execution_rate = "100e-6"
        }

        sys_signal_switch {
            criterion = "ctrl >= threshold"
            threshold = "0"
            execution_rate = "inherit"
        }

        tm_delay {
            init_value = "0"
            signal_out_type = "inherit"
            execution_rate = "inherit"
        }

        "core/Current Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/Four Phase Core Coupling" {
            snb_type_i = "none"
            R1 = "100e3"
            C1 = "1e-06"
            C2 = "1e-06"
            fixed_snb_i = "false"
            snb_type_u = "none"
            R2 = "0.1"
            L1 = "0.1"
            L2 = "0.1"
            fixed_snb_u = "false"
            cpl_connection = "star"
        }

        "core/ModBus Device" {
            hil_id = "0"
            configuration = "config1"
            preview = "Configuration preview"
            ip_address_port = "False"
            request_counter_port = "None"
            network_settings_src = "Configuration dictionary"
            ip_addr = "192.168.0.210"
            netmask = "255.255.255.0"
            port = "502"
            gateway = "192.168.0.210"
            gateway_enable = "False"
            defines = ""
            modbus_sunspec = "False"
            logging = "False"
            execution_rate = "100e-6"
        }

        "core/RL Section" {
            model_def = "R-L"
            unit_sys = "imperial"
            num_of_phases = "3"
            resistance_per_l = "1"
            resistance_per_l_mile = "1"
            inductance_per_l = "1e-3"
            inductance_per_l_mile = "1e-3"
            length = "1.0"
            length_mile = "1.0"
            power = "500.0"
            voltage = "11.0"
            frequency = "50.0"
            R_value = "21.55"
            L_value = "0.00842"
        }

        "core/Signal Controlled Voltage Source" {
            execution_rate = "inherit"
        }

        "core/Three Phase Constant Power Load" {
            ctrl_method = "SCADA inputs"
            execution_rate = "inherit"
            I_limit = "100"
            v_droop_enb = "False"
            v_droop = "[80.0,2.0, 100.0,1.0, 120.0,0.5]"
            preview_v_droop = "Preview"
            f_droop_enb = "False"
            f_droop = "[47.5,1.0, 50.2,1.0, 52.7,0.0]"
            preview_f_droop = "Preview"
            Rsnb = "20e3"
        }

        "core/Three Phase Two Winding Transformer" {
            input = "SC and OC tests"
            core_sat = "False"
            Sn = "160000.0"
            f = "50.0"
            V1 = "10000.0"
            V2 = "400.0"
            usc1 = "4.0"
            Psc1 = "2350.0"
            ioc1 = "0.7"
            Poc1 = "460.0"
            R1 = "4.58984375"
            L1 = ".0370093710364"
            R2 = ".00734375"
            L2 = "5.92149936583e-05"
            Rm = "217391.304348"
            Lm = "311.709196788"
            flux_vals_SI = "[1910.3, 2419.7]"
            current_vals_SI = "[0.66653, 277.72]"
            r1 = ".00734375"
            l1 = ".0186029389059"
            r2 = ".00734375"
            l2 = ".0186029389059"
            rm = "347.826086957"
            lm = "156.68213163"
            flux_vals_pu = "[1.2, 1.52]"
            current_vals_pu = "[0.0024, 1]"
            flux_vals_SCOC = "[1.2, 1.52]"
            current_vals_SCOC = "[0.0024, 1]"
            import_from_SI2SCOC = "Import from SI"
            import_from_pu2SCOC = "Import from PU"
            import_from_SCOC2SI = "Import from SC OC"
            import_from_pu2SI = "Import from PU"
            import_from_SCOC2pu = "Import from SC OC"
            import_from_SI2pu = "Import from SI"
            winding_1_connection = "Y"
            winding_2_connection = "Y"
            clock_number = "0"
            embedded_cpl = "false"
            coupling_type = "core"
            Rshunt = "inf"
        }

        "core/Three-phase RMS variable frequency" {
            internal_sm = "True"
            n_cycles = "1"
            Ts = "100e-6"
        }

        "core/Triple Pole Single Throw Contactor" {
            ctrl_src = "Digital input"
            Sa = "1"
            Sa_logic = "active high"
            enable_fb_out = "False"
            fb_out_type = "real"
            execution_rate = "inherit"
            initial_state = "off"
            on_delay = "0"
            off_delay = "0"
        }

        "core/Voltage Measurement" {
            bw_limit = "False"
            frequency = "10e3"
            comparator_enable = "False"
            operator = "greater"
            threshold = "0"
            cmp_abs_value = "False"
            feed_forward = "false"
            sig_output = "False"
            execution_rate = "100e-6"
            addr = "0"
            nd_msr_estimation = "false"
            dev_cpl_msr = "false"
            host_device = "0"
            output_to_device = "0"
            dev_cpl_index = "0"
            dev_cpl_var_nb = "0"
            visible = "True"
            override_signal_name = "False"
            signal_name = ""
        }

        "core/abc to dq" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            disable_filter = "True"
            initial_filter_output = "0"
            wn_LPFdq = "1000"
            execution_rate = "inherit"
        }

        "core/dq to abc" {
            power_form = "variant - Clarke\'s original"
            alignment = "-pi/2"
            execution_rate = "0"
        }
    }

    CODE model_init
        # Numpy module is imported as 'np'
        # Scipy module is imported as 'sp'
        Ts = 200e-6;
        load1_delay = 100;
        load2_delay = 160;
        load3_delay = 220;
        load_time = 900;
        load_interval = 180;
        load_change = 10000;
        
        #scaling constants to handle floating point values
        scale_const=1e4
        scale_back_const=1e-4
        
        #Modbus configuration
        config1 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.69',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 17,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1,2,3',
                                            'input_register_adresses': '0,1,2,3'
        }
        
        config2 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.70',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 18,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1,2,3',
                                            'input_register_adresses': '0,1,2,3'
        }
        
        config3 = {
                                            'port': 502,
                                            'ip_addr': '192.168.2.71',
                                            'netmask': '255.255.255.0',
                                            'slave_id': 19,
                                            'coil_input_addresses': '',
                                            'coil_output_addresses': '',
                                            'discrete_input_addresses': '',
                                            'holding_register_input_addresses': '',
                                            'holding_register_output_addresses': '0,1,2,3',
                                            'input_register_adresses': '0,1,2,3'
        }
    ENDCODE
}
