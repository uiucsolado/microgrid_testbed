<ui_settings>
    <version>2.5</version>
    <model_locked>False</model_locked>
    <canvas_bg_color>#ffffff</canvas_bg_color>
    <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts.
# NOTE: This code is always executed prior simulation start.

# Variable 'SETTINGS_DIR' holds directory where loaded Panel .cus file is located.
# Also you can call 'get_settings_dir_path()' function in any
# Macro and Expression scripts to get the same directory.
SETTINGS_DIR = get_settings_dir_path()

# The 'add_to_python_path(folder)' function can be used to add custom folder
# with Python files and packages to the PYTHONPATH. After folder is added, all Python 
# files and Python packages from it can be imported into the SCADA Namespace.

# HIL API is imported as 'hil'
# SCADA API is imported as 'panel'
# SCADA API constants are imported as 'api_const'
# Numpy module is imported as 'np'
# Scipy module is imported as 'sp'
# Schematic Editor model namespace is imported as 'scm'
# Function for printing to HIL SCADA Message log is imported as 'printf'.

]]></initialization_code>
    <components>
        <component_data>
                <id>829cb9e4bcfb11ea90a1509a4c4e2fb4</id>
                <name><![CDATA[Capture/Scope]]></name>
                <type>Capture/Scope</type>
                <description><![CDATA[]]></description>
                <hierarchy_position>1</hierarchy_position>
                <working_mode>windowed</working_mode>
                <widget_settings>
                    <x>336</x>
                    <y>272</y>
                    <width>120</width>
                    <height>120</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <state>Scope</state>
                    <layout>None</layout>
                    <presets>
                        <active_capture_preset>Default</active_capture_preset>
                        <active_scope_preset>Default</active_scope_preset>
                        <capture name="Default">
                            <time_interval>1.0</time_interval>
                            <sample_rate>250000.0</sample_rate>
                            <background_color>white</background_color>
                            <layout>Grid</layout>
                            <legend>True</legend>
                            <analog_signals>
                            <analog>
                            <channel>0</channel>
                            <name>Grid feeding inverter (averaged).Ea1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>1</channel>
                            <name>Grid feeding inverter (averaged).Eb1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>2</channel>
                            <name>Grid feeding inverter (averaged).Ec1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            </analog_signals>
                            <digital_signals>
                            </digital_signals>
                            <trigger>
                                <device>0</device>
                                <is_force>True</is_force>
                                <type>Analog</type>
                                <source>Grid feeding inverter (averaged).Ea1</source>
                                <edge>Rising edge</edge>
                                <treshold>0.0</treshold>
                                <offset>50.0</offset>
                                <useFirstTrigger>False</useFirstTrigger>
                            </trigger>
                            <plotting_options in_use="False">
                                <subplots>
                                    </subplots>
                            </plotting_options>
                        </capture>
                        <scope name="Default">
                            <background_color>white</background_color>
                            <layout>Grid</layout>
                            <legend>True</legend>
                            <show_viewports>2</show_viewports>
                            <decimation>1</decimation>
                            <time_base>0.005</time_base>
                            <analog_signals>
                            <analog>
                            <channel>0</channel>
                            <name>Grid feeding inverter (averaged).Ea1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>1</channel>
                            <name>Grid feeding inverter (averaged).Eb1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>2</channel>
                            <name>Grid feeding inverter (averaged).Ec1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>3</channel>
                            <name>Va</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>2</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>4</channel>
                            <name>Vb</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>2</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>5</channel>
                            <name>Vc</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>2</num_viewport>
                                
                           </viewports>
                        </analog>
                            </analog_signals>
                            <digital_signals>
                            </digital_signals>
                            <trigger>
                                <device>0</device>
                                <is_force>False</is_force>
                                <type>Analog</type>
                                <source>Grid feeding inverter (averaged).Ea1</source>
                                <edge>Rising edge</edge>
                                <treshold>0.0</treshold>
                                <offset>50.0</offset>
                                <useFirstTrigger>False</useFirstTrigger>
                            </trigger>
                        </scope>
                        </presets>
                    <capture>
                        <time_interval>1.0</time_interval>
                        <sample_rate>250000.0</sample_rate>
                        <background_color>white</background_color>
                        <layout>Grid</layout>
                        <legend>True</legend>
                        <trigger>
                            <type>Analog</type>
                            <source>Grid feeding inverter (averaged).Ea1</source>
                            <edge>Rising edge</edge>
                            <treshold>0.0</treshold>
                            <offset>50.0</offset>
                            <useFirstTrigger>False</useFirstTrigger>
                        </trigger>

                        <analog_signals>
                            <analog>
                            <channel>0</channel>
                            <name>Grid feeding inverter (averaged).Ea1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>1</channel>
                            <name>Grid feeding inverter (averaged).Eb1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>2</channel>
                            <name>Grid feeding inverter (averaged).Ec1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            </analog_signals>

                         <digital_signals>
                            </digital_signals>

                    </capture>

                    <scope>
                        <time_base>0.005 </time_base>
                        <background_color>white</background_color>
                        <layout>Grid</layout>
                        <legend>True</legend>
                        <trigger>
                            <mode>Auto</mode>
                            <type>Analog</type>
                            <source>Grid feeding inverter (averaged).Ea1</source>
                            <edge>Rising edge</edge>
                            <treshold>0.0</treshold>
                            <offset>50.0</offset>
                        </trigger>

                         <analog_signals>
                            <analog>
                            <channel>0</channel>
                            <name>Grid feeding inverter (averaged).Ea1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>1</channel>
                            <name>Grid feeding inverter (averaged).Eb1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>2</channel>
                            <name>Grid feeding inverter (averaged).Ec1</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>1</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>3</channel>
                            <name>Va</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>2</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>4</channel>
                            <name>Vb</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>2</num_viewport>
                                
                           </viewports>
                        </analog>
                            <analog>
                            <channel>5</channel>
                            <name>Vc</name>
                            <is_locked>False</is_locked>
                            <vertical_scale>Auto</vertical_scale>
                            <vertical_offset>0.0</vertical_offset>
                            <coupling>False</coupling>
                            <viewports>
                                
                                <num_viewport>2</num_viewport>
                                
                           </viewports>
                        </analog>
                            </analog_signals>

                        <digital_signals>
                            </digital_signals>

                    </scope>
                    <plotting_options in_use="False">
                    
                        <subplots>
                            </subplots>
                    </plotting_options>
                </widget_settings>

            </component_data>
        <component_data>
                <id>7d256180bd4411ea9c6a509a4c4e2fb4</id>
                <name><![CDATA[Xi_ERR]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <analog_signals><![CDATA[['Grid feeding inverter (averaged).Controller.Outer Power Loop + Inner Current Loop.inner current control loop.Xi_d_ERR', 'Grid feeding inverter (averaged).Controller.Outer Power Loop + Inner Current Loop.inner current control loop.Xi_q_ERR']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <update_rate>500</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>16.0</x>
                    <y>0.0</y>
                    <width>752</width>
                    <height>280</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>100</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>014ff288bd4511eab154509a4c4e2fb4</id>
                <name><![CDATA[PLL voltage]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <analog_signals><![CDATA[['Grid feeding inverter (averaged).Controller.PLL.E_d']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <update_rate>500</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>8.0</x>
                    <y>392.0</y>
                    <width>400</width>
                    <height>200</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>100</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>11334386de1611ea81a0d89ef3221e8e</id>
                <name><![CDATA[Three-phase Inverter (GFL)]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['11360070de1611eab428d89ef3221e8e', '11360075de1611ea93bdd89ef3221e8e', '113622a6de1611eab1c4d89ef3221e8e', '113622a7de1611eaa0bad89ef3221e8e', '113622a8de1611ea8f1ad89ef3221e8e', '113622a9de1611ea914cd89ef3221e8e']]]></components_ids>
                <hierarchy_position>1</hierarchy_position>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>824.0</x>
                    <y>32.0</y>
                    <width>768</width>
                    <height>704</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                </widget_settings>
            </component_data>
        <component_data>
                <id>11360070de1611eab428d89ef3221e8e</id>
                <name><![CDATA[Inverter Startup Control]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['11360071de1611eaac16d89ef3221e8e', '11360072de1611eab450d89ef3221e8e', '11360073de1611ea8b2bd89ef3221e8e', '11360074de1611eab901d89ef3221e8e']]]></components_ids>
                <hierarchy_position>2</hierarchy_position>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>176.0</x>
                    <y>8.0</y>
                    <width>176</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                </widget_settings>
            </component_data>
        <component_data>
                <id>11360071de1611eaac16d89ef3221e8e</id>
                <name><![CDATA[Connect]]></name>
                <type>Macro</type>
                <description><![CDATA[]]></description>
                <on_click_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on button click.
# HIL API is imported as 'hil'
hil.set_scada_input_value('Grid feeding inverter (averaged).Connect GFL', 1)
]]></on_click_code>
                <on_start_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
hil.set_scada_input_value('Grid feeding inverter (averaged).Connect GFL', 0)
]]></on_start_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on timer event.
# HIL API is imported as 'hil'

]]></on_timer_code>
                <run_each>250</run_each>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
]]></on_stop_code>
                <hierarchy_position>3</hierarchy_position>
                <widget_settings>
                    <x>24.0</x>
                    <y>48.0</y>
                    <width>120</width>
                    <height>40</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>11360072de1611eab450d89ef3221e8e</id>
                <name><![CDATA[]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Grid feeding inverter (averaged).GCB ON]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Green</led_color>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>3</hierarchy_position>
                <widget_settings>
                    <x>48.0</x>
                    <y>8.0</y>
                    <width>32</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>11360073de1611ea8b2bd89ef3221e8e</id>
                <name><![CDATA[Disconnect]]></name>
                <type>Macro</type>
                <description><![CDATA[]]></description>
                <on_click_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed on button click.
# HIL API is imported as 'hil'
hil.set_scada_input_value('Grid feeding inverter (averaged).Connect GFL', 0)
]]></on_click_code>
                <on_start_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on simulation start.
# NOTE: Variables specified here will be available in other handlers.
# HIL API is imported as 'hil'
]]></on_start_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed on timer event.
# HIL API is imported as 'hil'

]]></on_timer_code>
                <run_each>250</run_each>
                <on_stop_code active="True"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'
hil.set_scada_input_value('Grid feeding inverter (averaged).Connect GFL', 0)
]]></on_stop_code>
                <hierarchy_position>3</hierarchy_position>
                <widget_settings>
                    <x>24.0</x>
                    <y>88.0</y>
                    <width>120</width>
                    <height>40</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>11360074de1611eab901d89ef3221e8e</id>
                <name><![CDATA[]]></name>
                <type>LedDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Digital signal</data_type>
                <signal_name><![CDATA[Grid feeding inverter (averaged).GCB OFF]]></signal_name>
                <hil_device>0</hil_device>
                <led_color>Red</led_color>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing LED indicator state
# True -> On, False -> Off
displayValue = False
]]></code>
                <updateRate>500</updateRate>
                <hierarchy_position>3</hierarchy_position>
                <widget_settings>
                    <x>80.0</x>
                    <y>8.0</y>
                    <width>32</width>
                    <height>32</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>11360075de1611ea93bdd89ef3221e8e</id>
                <name><![CDATA[Inverter Power Control]]></name>
                <type>Group</type>
                <description><![CDATA[None]]></description>
                <components_ids><![CDATA[['113622a4de1611eaa894d89ef3221e8e', '113622a5de1611eabc10d89ef3221e8e']]]></components_ids>
                <hierarchy_position>2</hierarchy_position>
                <canvas_bg_color>#ffffff</canvas_bg_color>
                <initialization_code><![CDATA[# NOTE: Variables and functions defined here will be
# available for use in all Macro and Expression scripts of the components owned by this widget.
# This code is always executed prior simulation start.
# HIL API is imported as 'hil'

]]></initialization_code>
                <widget_settings>
                    <x>392.0</x>
                    <y>8.0</y>
                    <width>208</width>
                    <height>160</height>
                    <appearance><![CDATA[Flat]]></appearance>
                    <collapsed>False</collapsed>
                </widget_settings>
            </component_data>
        <component_data>
                <id>113622a4de1611eaa894d89ef3221e8e</id>
                <name><![CDATA[Q reference]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[None]]></description>
                <on_use_code active="True"><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API


# Function for printing text to console (e.g printf("Hello world"))

#------------------------------------------------

# NOTE: entered value is available through variable 'inputValue'
hil.set_scada_input_value('Qref', inputValue)
]]></on_use_code>
                <on_start_code active="True"><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API


# Function for printing text to console (e.g printf("Hello world"))

#------------------------------------------------

# NOTE: entered value is available through variable 'inputValue'
hil.set_scada_input_value('Qref_feed', 0)]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it, widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# NOTE: Only read functions are available from the HIL Control Panel API
# HIL Control Panel API



# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it, widget value won't be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Custom code]]></on_start_code_source>
                <inputValue><![CDATA[0.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[vars]]></unit>
                <hierarchy_position>3</hierarchy_position>
                <widget_settings>
                    <x>16</x>
                    <y>32</y>
                    <width>176</width>
                    <height>32</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>113622a5de1611eabc10d89ef3221e8e</id>
                <name><![CDATA[P reference]]></name>
                <type>TextBoxMacro</type>
                <description><![CDATA[None]]></description>
                <on_use_code active="True"><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API


# Function for printing text to console (e.g printf("Hello world"))

#------------------------------------------------

# NOTE: entered value is available through variable 'inputValue'
hil.set_scada_input_value('Pref', inputValue)
]]></on_use_code>
                <on_start_code active="True"><![CDATA[#------------- MANDATORY IMPORTS ---------------
# HIL Control Panel API


# Function for printing text to console (e.g printf("Hello world"))

#------------------------------------------------

# NOTE: entered value is available through variable 'inputValue'
hil.set_scada_input_value('Pref_feed', 0)]]></on_start_code>
                <on_stop_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed after simulation is stopped.
# HIL API is imported as 'hil'

# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it, widget value won't be changed.
widgetValue = None
]]></on_stop_code>
                <on_timer_code active="False"><![CDATA[# NOTE: The code specified in this handler will be executed periodically each 1000ms.
# NOTE: Only read functions are available from the HIL Control Panel API
# HIL Control Panel API



# Change widget value by setting this variable.
# NOTE: If you not specify 'widgetValue' variable or assign 'None' to it, widget value won't be changed.
widgetValue = None
]]></on_timer_code>
                <on_start_code_source><![CDATA[Custom code]]></on_start_code_source>
                <inputValue><![CDATA[0.0]]></inputValue>
                <inputValueType>float</inputValueType>
                <unit><![CDATA[W]]></unit>
                <hierarchy_position>3</hierarchy_position>
                <widget_settings>
                    <x>16</x>
                    <y>72</y>
                    <width>168</width>
                    <height>32</height>
                    <inputWidgetWidth>80</inputWidgetWidth>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
            </component_data>
        <component_data>
                <id>113622a6de1611eab1c4d89ef3221e8e</id>
                <name><![CDATA[Frequency]]></name>
                <type>Gauge</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Grid feeding inverter (averaged).Controller.f1]]></signal_name>
                <unit><![CDATA[Hz]]></unit>
                <automatic_unit>False</automatic_unit>
                <updateRate>500</updateRate>
                <decimals>2</decimals>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>440.0</x>
                    <y>192.0</y>
                    <width>272</width>
                    <height>184</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>0.0</min>
                    <max>100.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>113622a7de1611eaa0bad89ef3221e8e</id>
                <name><![CDATA[Line-to-Line Voltage]]></name>
                <type>Gauge</type>
                <description><![CDATA[]]></description>
                <data_type>Analog signal</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <signal_name><![CDATA[Grid feeding inverter (averaged).Controller.Outer Power Loop + Inner Current Loop.|E|]]></signal_name>
                <unit><![CDATA[V]]></unit>
                <automatic_unit>False</automatic_unit>
                <updateRate>500</updateRate>
                <decimals>2</decimals>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>64.0</x>
                    <y>192.0</y>
                    <width>280</width>
                    <height>184</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <color_range>False</color_range>
                    <min>100.0</min>
                    <max>1000.0</max>
                    <warning_range>(0, 0, 0, 0)</warning_range>
                    <critical_range>(0, 0, 0, 0)</critical_range>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>113622a8de1611ea8f1ad89ef3221e8e</id>
                <name><![CDATA[GFL Real Power]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing values
# that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],
    
    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],
    
    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],
    
    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['Grid feeding inverter (averaged).Controller.P1']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <update_rate>500</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>0</x>
                    <y>384</y>
                    <width>376</width>
                    <height>288</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>113622a9de1611ea914cd89ef3221e8e</id>
                <name><![CDATA[GFL Reactive Power]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing values
# that will be displayed
# specify data (one pairs of "names" and "values" parts are mandatory)
data = {
    # analog like signals/data names: ["Analog 1 name","Analog 2 name","Analog N name"]
    "analog_names": [],
    
    # analog data values: [aVal1,aVal2,aVal3]
    "analog_values": [],
    
    # digital like signals/data names: ["Digital 1 name","Digital 2 name","Digital 3 name"]
    "digital_names": [],
    
    # digital data values: [dVal1,dVal2,aVal3]
    "digital_values": [],
    }
displayValue = data
]]></code>
                <analog_signals><![CDATA[['Grid feeding inverter (averaged).Controller.Q1']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <update_rate>500</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <hierarchy_position>2</hierarchy_position>
                <widget_settings>
                    <x>368.0</x>
                    <y>384.0</y>
                    <width>376</width>
                    <height>288</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>10</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>9690a046de1811ea800cd89ef3221e8e</id>
                <name><![CDATA[PLL voltage]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <analog_signals><![CDATA[['Grid feeding inverter (averaged).Controller.PLL.E_q']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <update_rate>500</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>400.0</x>
                    <y>392.0</y>
                    <width>400</width>
                    <height>200</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>100</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        <component_data>
                <id>dc74ed8cde1b11eaae47d89ef3221e8e</id>
                <name><![CDATA[Frequency]]></name>
                <type>TraceDisplay</type>
                <description><![CDATA[]]></description>
                <data_type>Signals</data_type>
                <code><![CDATA[# HIL API is imported as 'hil'
# NOTE: Only read functions are available from the HIL API

# mandatory variable used for storing value
# that will be displayed
displayValue = 0.0

]]></code>
                <analog_signals><![CDATA[['Grid feeding inverter (averaged).Controller.f1']]]></analog_signals>
                <digital_signals><![CDATA[[]]]></digital_signals>
                <streaming_analog_signals><![CDATA[[]]]></streaming_analog_signals>
                <streaming_digital_signals><![CDATA[[]]]></streaming_digital_signals>
                <update_rate>500</update_rate>
                <execution_rate>None</execution_rate>
                <background_color>white</background_color>
                <hierarchy_position>1</hierarchy_position>
                <widget_settings>
                    <x>248.0</x>
                    <y>600.0</y>
                    <width>400</width>
                    <height>200</height>
                    <appearance><![CDATA[Flat]]></appearance>
                </widget_settings>
                <advance_widget_settings>
                    <x_title><![CDATA[x axes]]></x_title>
                    <y_title><![CDATA[y axes]]></y_title>
                    <y_range_min>-100.0</y_range_min>
                    <y_range_max>100.0</y_range_max>
                    <time_window>100</time_window>
                    <auto_scale_enabled>True</auto_scale_enabled>
                    <legend_enabled>True</legend_enabled>
                    <x_axis_title_enabled>False</x_axis_title_enabled>
                    <y_axis_title_enabled>False</y_axis_title_enabled>
                    <use_reference_curve>False</use_reference_curve>
                    <reference_curve_code><![CDATA[# NOTE: Global namespace variables are available
# Selected time window is available through variable 'timeWindow'
# Selected update rate is available through variable 'updateRate'

# reference curve data point
curveData = 12.0

# specify curve options ('data' part is mandatory)
refCurveData1 = {
    # reference curve data point
    "data": curveData,

    # curve line style: 'solid', 'dashed', 'dashdot', 'dotted'
    "line_style": "dashed",

    # curve line color: 'red', 'green', 'blue', 'cyan', 'magenta', 'yellow'
    "line_color": 'red',

    # curve line width: float number
    "line_width": 2.0,
    
    # reference curve title
    "title": "Reference curve",

    # show a title in the legend
    "show_in_legend": True
}

# list of reference curves data: [ref1, ref2,...refN]
referenceCurves = [refCurveData1]

]]></reference_curve_code>
                </advance_widget_settings>
            </component_data>
        </components>
</ui_settings>